/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/fixed-data-table-2/dist/es/fixed-data-table-2.js":
/*!***********************************************************************!*\
  !*** ./node_modules/fixed-data-table-2/dist/es/fixed-data-table-2.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cell: () => (/* binding */ FixedDataTableCellDefault$1),\n/* harmony export */   Column: () => (/* binding */ FixedDataTableColumn),\n/* harmony export */   ColumnGroup: () => (/* binding */ FixedDataTableColumnGroup),\n/* harmony export */   Context: () => (/* binding */ FixedDataTableContext),\n/* harmony export */   DataCell: () => (/* binding */ FixedDataTableCellDefault),\n/* harmony export */   Plugins: () => (/* binding */ Plugins),\n/* harmony export */   Table: () => (/* binding */ FixedDataTableContainer$1),\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\n\n\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\n\nfunction _classCallCheck$2(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\n\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\n\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass$2(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\n\nfunction _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\n\nfunction _inherits$2(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && _setPrototypeOf(t, e);\n}\n\nfunction _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\n\nfunction _possibleConstructorReturn$2(t, e) {\n  if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return _assertThisInitialized(t);\n}\n\nfunction _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\n\nfunction _defineProperty$1(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant$1 = function invariant(condition, format, a, b, c, d, e, f) {\n  if (true) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error('Invariant Violation: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n\n    throw error;\n  }\n};\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof self !== 'undefined' ? self : {};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\n\nvar isArray$c = Array.isArray;\n\nvar isArray_1 = isArray$c;\n\n/** Detect free variable `global` from Node.js. */\n\nvar freeGlobal$1 = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;\n\nvar _freeGlobal = freeGlobal$1;\n\nvar freeGlobal = _freeGlobal;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root$8 = freeGlobal || freeSelf || Function('return this')();\n\nvar _root = root$8;\n\nvar root$7 = _root;\n\n/** Built-in value references. */\nvar Symbol$6 = root$7.Symbol;\n\nvar _Symbol = Symbol$6;\n\nvar Symbol$5 = _Symbol;\n\n/** Used for built-in method references. */\nvar objectProto$d = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$b = objectProto$d.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$d.toString;\n\n/** Built-in value references. */\nvar symToStringTag$1 = Symbol$5 ? Symbol$5.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag$1(value) {\n  var isOwn = hasOwnProperty$b.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString$1.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\n\nvar _getRawTag = getRawTag$1;\n\n/** Used for built-in method references. */\n\nvar objectProto$c = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto$c.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString$1(value) {\n  return nativeObjectToString.call(value);\n}\n\nvar _objectToString = objectToString$1;\n\nvar Symbol$4 = _Symbol,\n    getRawTag = _getRawTag,\n    objectToString = _objectToString;\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol$4 ? Symbol$4.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag$7(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nvar _baseGetTag = baseGetTag$7;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\n\nfunction isObjectLike$8(value) {\n  return value != null && typeof value == 'object';\n}\n\nvar isObjectLike_1 = isObjectLike$8;\n\nvar baseGetTag$6 = _baseGetTag,\n    isObjectLike$7 = isObjectLike_1;\n\n/** `Object#toString` result references. */\nvar symbolTag$2 = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol$4(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike$7(value) && baseGetTag$6(value) == symbolTag$2);\n}\n\nvar isSymbol_1 = isSymbol$4;\n\nvar isArray$b = isArray_1,\n    isSymbol$3 = isSymbol_1;\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey$1(value, object) {\n  if (isArray$b(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol$3(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nvar _isKey = isKey$1;\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\n\nfunction isObject$7(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nvar isObject_1 = isObject$7;\n\nvar baseGetTag$5 = _baseGetTag,\n    isObject$6 = isObject_1;\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag$2 = '[object Function]',\n    genTag$1 = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction$2(value) {\n  if (!isObject$6(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag$5(value);\n  return tag == funcTag$2 || tag == genTag$1 || tag == asyncTag || tag == proxyTag;\n}\n\nvar isFunction_1 = isFunction$2;\n\nvar root$6 = _root;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData$1 = root$6['__core-js_shared__'];\n\nvar _coreJsData = coreJsData$1;\n\nvar coreJsData = _coreJsData;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked$1(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nvar _isMasked = isMasked$1;\n\n/** Used for built-in method references. */\n\nvar funcProto$1 = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString$1 = funcProto$1.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource$2(func) {\n  if (func != null) {\n    try {\n      return funcToString$1.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nvar _toSource = toSource$2;\n\nvar isFunction$1 = isFunction_1,\n    isMasked = _isMasked,\n    isObject$5 = isObject_1,\n    toSource$1 = _toSource;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto$b = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$a = objectProto$b.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty$a).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative$1(value) {\n  if (!isObject$5(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction$1(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource$1(value));\n}\n\nvar _baseIsNative = baseIsNative$1;\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\n\nfunction getValue$1(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nvar _getValue = getValue$1;\n\nvar baseIsNative = _baseIsNative,\n    getValue = _getValue;\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative$7(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nvar _getNative = getNative$7;\n\nvar getNative$6 = _getNative;\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate$4 = getNative$6(Object, 'create');\n\nvar _nativeCreate = nativeCreate$4;\n\nvar nativeCreate$3 = _nativeCreate;\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear$1() {\n  this.__data__ = nativeCreate$3 ? nativeCreate$3(null) : {};\n  this.size = 0;\n}\n\nvar _hashClear = hashClear$1;\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction hashDelete$1(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nvar _hashDelete = hashDelete$1;\n\nvar nativeCreate$2 = _nativeCreate;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED$1 = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto$a = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$9 = objectProto$a.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet$1(key) {\n  var data = this.__data__;\n  if (nativeCreate$2) {\n    var result = data[key];\n    return result === HASH_UNDEFINED$1 ? undefined : result;\n  }\n  return hasOwnProperty$9.call(data, key) ? data[key] : undefined;\n}\n\nvar _hashGet = hashGet$1;\n\nvar nativeCreate$1 = _nativeCreate;\n\n/** Used for built-in method references. */\nvar objectProto$9 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$8 = objectProto$9.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas$1(key) {\n  var data = this.__data__;\n  return nativeCreate$1 ? (data[key] !== undefined) : hasOwnProperty$8.call(data, key);\n}\n\nvar _hashHas = hashHas$1;\n\nvar nativeCreate = _nativeCreate;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet$1(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nvar _hashSet = hashSet$1;\n\nvar hashClear = _hashClear,\n    hashDelete = _hashDelete,\n    hashGet = _hashGet,\n    hashHas = _hashHas,\n    hashSet = _hashSet;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash$1(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash$1.prototype.clear = hashClear;\nHash$1.prototype['delete'] = hashDelete;\nHash$1.prototype.get = hashGet;\nHash$1.prototype.has = hashHas;\nHash$1.prototype.set = hashSet;\n\nvar _Hash = Hash$1;\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\n\nfunction listCacheClear$1() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nvar _listCacheClear = listCacheClear$1;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\n\nfunction eq$2(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nvar eq_1 = eq$2;\n\nvar eq$1 = eq_1;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf$4(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq$1(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nvar _assocIndexOf = assocIndexOf$4;\n\nvar assocIndexOf$3 = _assocIndexOf;\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete$1(key) {\n  var data = this.__data__,\n      index = assocIndexOf$3(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nvar _listCacheDelete = listCacheDelete$1;\n\nvar assocIndexOf$2 = _assocIndexOf;\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet$1(key) {\n  var data = this.__data__,\n      index = assocIndexOf$2(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nvar _listCacheGet = listCacheGet$1;\n\nvar assocIndexOf$1 = _assocIndexOf;\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas$1(key) {\n  return assocIndexOf$1(this.__data__, key) > -1;\n}\n\nvar _listCacheHas = listCacheHas$1;\n\nvar assocIndexOf = _assocIndexOf;\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet$1(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nvar _listCacheSet = listCacheSet$1;\n\nvar listCacheClear = _listCacheClear,\n    listCacheDelete = _listCacheDelete,\n    listCacheGet = _listCacheGet,\n    listCacheHas = _listCacheHas,\n    listCacheSet = _listCacheSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache$4(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache$4.prototype.clear = listCacheClear;\nListCache$4.prototype['delete'] = listCacheDelete;\nListCache$4.prototype.get = listCacheGet;\nListCache$4.prototype.has = listCacheHas;\nListCache$4.prototype.set = listCacheSet;\n\nvar _ListCache = ListCache$4;\n\nvar getNative$5 = _getNative,\n    root$5 = _root;\n\n/* Built-in method references that are verified to be native. */\nvar Map$4 = getNative$5(root$5, 'Map');\n\nvar _Map = Map$4;\n\nvar Hash = _Hash,\n    ListCache$3 = _ListCache,\n    Map$3 = _Map;\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear$1() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map$3 || ListCache$3),\n    'string': new Hash\n  };\n}\n\nvar _mapCacheClear = mapCacheClear$1;\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\n\nfunction isKeyable$1(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nvar _isKeyable = isKeyable$1;\n\nvar isKeyable = _isKeyable;\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData$4(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nvar _getMapData = getMapData$4;\n\nvar getMapData$3 = _getMapData;\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete$1(key) {\n  var result = getMapData$3(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nvar _mapCacheDelete = mapCacheDelete$1;\n\nvar getMapData$2 = _getMapData;\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet$1(key) {\n  return getMapData$2(this, key).get(key);\n}\n\nvar _mapCacheGet = mapCacheGet$1;\n\nvar getMapData$1 = _getMapData;\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas$1(key) {\n  return getMapData$1(this, key).has(key);\n}\n\nvar _mapCacheHas = mapCacheHas$1;\n\nvar getMapData = _getMapData;\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet$1(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nvar _mapCacheSet = mapCacheSet$1;\n\nvar mapCacheClear = _mapCacheClear,\n    mapCacheDelete = _mapCacheDelete,\n    mapCacheGet = _mapCacheGet,\n    mapCacheHas = _mapCacheHas,\n    mapCacheSet = _mapCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache$2(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache$2.prototype.clear = mapCacheClear;\nMapCache$2.prototype['delete'] = mapCacheDelete;\nMapCache$2.prototype.get = mapCacheGet;\nMapCache$2.prototype.has = mapCacheHas;\nMapCache$2.prototype.set = mapCacheSet;\n\nvar _MapCache = MapCache$2;\n\nvar MapCache$1 = _MapCache;\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize$1(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize$1.Cache || MapCache$1);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize$1.Cache = MapCache$1;\n\nvar memoize_1 = memoize$1;\n\nvar memoize = memoize_1;\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped$1(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nvar _memoizeCapped = memoizeCapped$1;\n\nvar memoizeCapped = _memoizeCapped;\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath$1 = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nvar _stringToPath = stringToPath$1;\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\n\nfunction arrayMap$1(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nvar _arrayMap = arrayMap$1;\n\nvar Symbol$3 = _Symbol,\n    arrayMap = _arrayMap,\n    isArray$a = isArray_1,\n    isSymbol$2 = isSymbol_1;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY$2 = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto$1 = Symbol$3 ? Symbol$3.prototype : undefined,\n    symbolToString = symbolProto$1 ? symbolProto$1.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString$1(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray$a(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString$1) + '';\n  }\n  if (isSymbol$2(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY$2) ? '-0' : result;\n}\n\nvar _baseToString = baseToString$1;\n\nvar baseToString = _baseToString;\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString$1(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nvar toString_1 = toString$1;\n\nvar isArray$9 = isArray_1,\n    isKey = _isKey,\n    stringToPath = _stringToPath,\n    toString = toString_1;\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath$4(value, object) {\n  if (isArray$9(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nvar _castPath = castPath$4;\n\nvar isSymbol$1 = isSymbol_1;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY$1 = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey$3(value) {\n  if (typeof value == 'string' || isSymbol$1(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY$1) ? '-0' : result;\n}\n\nvar _toKey = toKey$3;\n\nvar castPath$3 = _castPath,\n    toKey$2 = _toKey;\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet$2(object, path) {\n  path = castPath$3(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey$2(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nvar _baseGet = baseGet$2;\n\nvar getNative$4 = _getNative;\n\nvar defineProperty$2 = (function() {\n  try {\n    var func = getNative$4(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nvar _defineProperty = defineProperty$2;\n\nvar defineProperty$1 = _defineProperty;\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue$2(object, key, value) {\n  if (key == '__proto__' && defineProperty$1) {\n    defineProperty$1(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nvar _baseAssignValue = baseAssignValue$2;\n\nvar baseAssignValue$1 = _baseAssignValue,\n    eq = eq_1;\n\n/** Used for built-in method references. */\nvar objectProto$8 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$7 = objectProto$8.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue$3(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty$7.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue$1(object, key, value);\n  }\n}\n\nvar _assignValue = assignValue$3;\n\n/** Used as references for various `Number` constants. */\n\nvar MAX_SAFE_INTEGER$1 = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex$3(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER$1 : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nvar _isIndex = isIndex$3;\n\nvar assignValue$2 = _assignValue,\n    castPath$2 = _castPath,\n    isIndex$2 = _isIndex,\n    isObject$4 = isObject_1,\n    toKey$1 = _toKey;\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet$1(object, path, value, customizer) {\n  if (!isObject$4(object)) {\n    return object;\n  }\n  path = castPath$2(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey$1(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject$4(objValue)\n          ? objValue\n          : (isIndex$2(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue$2(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nvar _baseSet = baseSet$1;\n\nvar baseGet$1 = _baseGet,\n    baseSet = _baseSet,\n    castPath$1 = _castPath;\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy$1(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet$1(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath$1(path, object), value);\n    }\n  }\n  return result;\n}\n\nvar _basePickBy = basePickBy$1;\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\n\nfunction baseHasIn$1(object, key) {\n  return object != null && key in Object(object);\n}\n\nvar _baseHasIn = baseHasIn$1;\n\nvar baseGetTag$4 = _baseGetTag,\n    isObjectLike$6 = isObjectLike_1;\n\n/** `Object#toString` result references. */\nvar argsTag$2 = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments$1(value) {\n  return isObjectLike$6(value) && baseGetTag$4(value) == argsTag$2;\n}\n\nvar _baseIsArguments = baseIsArguments$1;\n\nvar baseIsArguments = _baseIsArguments,\n    isObjectLike$5 = isObjectLike_1;\n\n/** Used for built-in method references. */\nvar objectProto$7 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$6 = objectProto$7.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable$1 = objectProto$7.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments$4 = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike$5(value) && hasOwnProperty$6.call(value, 'callee') &&\n    !propertyIsEnumerable$1.call(value, 'callee');\n};\n\nvar isArguments_1 = isArguments$4;\n\n/** Used as references for various `Number` constants. */\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength$3(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nvar isLength_1 = isLength$3;\n\nvar castPath = _castPath,\n    isArguments$3 = isArguments_1,\n    isArray$8 = isArray_1,\n    isIndex$1 = _isIndex,\n    isLength$2 = isLength_1,\n    toKey = _toKey;\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath$1(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength$2(length) && isIndex$1(key, length) &&\n    (isArray$8(object) || isArguments$3(object));\n}\n\nvar _hasPath = hasPath$1;\n\nvar baseHasIn = _baseHasIn,\n    hasPath = _hasPath;\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn$1(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nvar hasIn_1 = hasIn$1;\n\nvar basePickBy = _basePickBy,\n    hasIn = hasIn_1;\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick$1(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nvar _basePick = basePick$1;\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\n\nfunction arrayPush$4(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nvar _arrayPush = arrayPush$4;\n\nvar Symbol$2 = _Symbol,\n    isArguments$2 = isArguments_1,\n    isArray$7 = isArray_1;\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol$2 ? Symbol$2.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable$1(value) {\n  return isArray$7(value) || isArguments$2(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nvar _isFlattenable = isFlattenable$1;\n\nvar arrayPush$3 = _arrayPush,\n    isFlattenable = _isFlattenable;\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten$2(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten$2(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush$3(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nvar _baseFlatten = baseFlatten$2;\n\nvar baseFlatten$1 = _baseFlatten;\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten$1(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten$1(array, 1) : [];\n}\n\nvar flatten_1 = flatten$1;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\n\nfunction apply$1(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nvar _apply = apply$1;\n\nvar apply = _apply;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax$1 = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest$1(func, start, transform) {\n  start = nativeMax$1(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax$1(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nvar _overRest = overRest$1;\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\n\nfunction constant$1(value) {\n  return function() {\n    return value;\n  };\n}\n\nvar constant_1 = constant$1;\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\n\nfunction identity$2(value) {\n  return value;\n}\n\nvar identity_1 = identity$2;\n\nvar constant = constant_1,\n    defineProperty = _defineProperty,\n    identity$1 = identity_1;\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString$1 = !defineProperty ? identity$1 : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nvar _baseSetToString = baseSetToString$1;\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\n\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut$1(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nvar _shortOut = shortOut$1;\n\nvar baseSetToString = _baseSetToString,\n    shortOut = _shortOut;\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString$1 = shortOut(baseSetToString);\n\nvar _setToString = setToString$1;\n\nvar flatten = flatten_1,\n    overRest = _overRest,\n    setToString = _setToString;\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest$1(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nvar _flatRest = flatRest$1;\n\nvar basePick = _basePick,\n    flatRest = _flatRest;\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nvar pick_1 = pick;\n\nfunction ownKeys$6(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys$6(Object(t), !0).forEach(function (r) {\n      _defineProperty$1(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$6(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject$1(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (true) {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error( false ? 0 : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error( false ? 0 : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error( false ? 0 : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error( false ? 0 : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error( false ? 0 : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error( false ? 0 : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error( false ? 0 : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject$1(action)) {\n      throw new Error( false ? 0 : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error( false ? 0 : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error( false ? 0 : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error( false ? 0 : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error( false ? 0 : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject$1(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error( false ? 0 : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error( false ? 0 : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (true) {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (true) {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (true) {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error( false ? 0 : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error( false ? 0 : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error( false ? 0 : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2(_objectSpread2({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif ( true && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nvar ListCache$2 = _ListCache;\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear$1() {\n  this.__data__ = new ListCache$2;\n  this.size = 0;\n}\n\nvar _stackClear = stackClear$1;\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction stackDelete$1(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nvar _stackDelete = stackDelete$1;\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction stackGet$1(key) {\n  return this.__data__.get(key);\n}\n\nvar _stackGet = stackGet$1;\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction stackHas$1(key) {\n  return this.__data__.has(key);\n}\n\nvar _stackHas = stackHas$1;\n\nvar ListCache$1 = _ListCache,\n    Map$2 = _Map,\n    MapCache = _MapCache;\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet$1(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache$1) {\n    var pairs = data.__data__;\n    if (!Map$2 || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nvar _stackSet = stackSet$1;\n\nvar ListCache = _ListCache,\n    stackClear = _stackClear,\n    stackDelete = _stackDelete,\n    stackGet = _stackGet,\n    stackHas = _stackHas,\n    stackSet = _stackSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack$1(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack$1.prototype.clear = stackClear;\nStack$1.prototype['delete'] = stackDelete;\nStack$1.prototype.get = stackGet;\nStack$1.prototype.has = stackHas;\nStack$1.prototype.set = stackSet;\n\nvar _Stack = Stack$1;\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\n\nfunction arrayEach$2(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nvar _arrayEach = arrayEach$2;\n\nvar assignValue$1 = _assignValue,\n    baseAssignValue = _baseAssignValue;\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject$4(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue$1(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nvar _copyObject = copyObject$4;\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\n\nfunction baseTimes$1(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nvar _baseTimes = baseTimes$1;\n\nvar isBuffer$3 = {exports: {}};\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\n\nfunction stubFalse() {\n  return false;\n}\n\nvar stubFalse_1 = stubFalse;\n\n(function (module, exports) {\nvar root = _root,\n    stubFalse = stubFalse_1;\n\n/** Detect free variable `exports`. */\nvar freeExports = exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n}(isBuffer$3, isBuffer$3.exports));\n\nvar baseGetTag$3 = _baseGetTag,\n    isLength$1 = isLength_1,\n    isObjectLike$4 = isObjectLike_1;\n\n/** `Object#toString` result references. */\nvar argsTag$1 = '[object Arguments]',\n    arrayTag$1 = '[object Array]',\n    boolTag$2 = '[object Boolean]',\n    dateTag$2 = '[object Date]',\n    errorTag$1 = '[object Error]',\n    funcTag$1 = '[object Function]',\n    mapTag$6 = '[object Map]',\n    numberTag$3 = '[object Number]',\n    objectTag$2 = '[object Object]',\n    regexpTag$2 = '[object RegExp]',\n    setTag$6 = '[object Set]',\n    stringTag$3 = '[object String]',\n    weakMapTag$2 = '[object WeakMap]';\n\nvar arrayBufferTag$2 = '[object ArrayBuffer]',\n    dataViewTag$3 = '[object DataView]',\n    float32Tag$2 = '[object Float32Array]',\n    float64Tag$2 = '[object Float64Array]',\n    int8Tag$2 = '[object Int8Array]',\n    int16Tag$2 = '[object Int16Array]',\n    int32Tag$2 = '[object Int32Array]',\n    uint8Tag$2 = '[object Uint8Array]',\n    uint8ClampedTag$2 = '[object Uint8ClampedArray]',\n    uint16Tag$2 = '[object Uint16Array]',\n    uint32Tag$2 = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag$2] = typedArrayTags[float64Tag$2] =\ntypedArrayTags[int8Tag$2] = typedArrayTags[int16Tag$2] =\ntypedArrayTags[int32Tag$2] = typedArrayTags[uint8Tag$2] =\ntypedArrayTags[uint8ClampedTag$2] = typedArrayTags[uint16Tag$2] =\ntypedArrayTags[uint32Tag$2] = true;\ntypedArrayTags[argsTag$1] = typedArrayTags[arrayTag$1] =\ntypedArrayTags[arrayBufferTag$2] = typedArrayTags[boolTag$2] =\ntypedArrayTags[dataViewTag$3] = typedArrayTags[dateTag$2] =\ntypedArrayTags[errorTag$1] = typedArrayTags[funcTag$1] =\ntypedArrayTags[mapTag$6] = typedArrayTags[numberTag$3] =\ntypedArrayTags[objectTag$2] = typedArrayTags[regexpTag$2] =\ntypedArrayTags[setTag$6] = typedArrayTags[stringTag$3] =\ntypedArrayTags[weakMapTag$2] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray$1(value) {\n  return isObjectLike$4(value) &&\n    isLength$1(value.length) && !!typedArrayTags[baseGetTag$3(value)];\n}\n\nvar _baseIsTypedArray = baseIsTypedArray$1;\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\n\nfunction baseUnary$3(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nvar _baseUnary = baseUnary$3;\n\nvar _nodeUtil = {exports: {}};\n\n(function (module, exports) {\nvar freeGlobal = _freeGlobal;\n\n/** Detect free variable `exports`. */\nvar freeExports = exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n}(_nodeUtil, _nodeUtil.exports));\n\nvar baseIsTypedArray = _baseIsTypedArray,\n    baseUnary$2 = _baseUnary,\n    nodeUtil$2 = _nodeUtil.exports;\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil$2 && nodeUtil$2.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray$2 = nodeIsTypedArray ? baseUnary$2(nodeIsTypedArray) : baseIsTypedArray;\n\nvar isTypedArray_1 = isTypedArray$2;\n\nvar baseTimes = _baseTimes,\n    isArguments$1 = isArguments_1,\n    isArray$6 = isArray_1,\n    isBuffer$2 = isBuffer$3.exports,\n    isIndex = _isIndex,\n    isTypedArray$1 = isTypedArray_1;\n\n/** Used for built-in method references. */\nvar objectProto$6 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$5 = objectProto$6.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys$2(value, inherited) {\n  var isArr = isArray$6(value),\n      isArg = !isArr && isArguments$1(value),\n      isBuff = !isArr && !isArg && isBuffer$2(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray$1(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty$5.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nvar _arrayLikeKeys = arrayLikeKeys$2;\n\n/** Used for built-in method references. */\n\nvar objectProto$5 = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype$4(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;\n\n  return value === proto;\n}\n\nvar _isPrototype = isPrototype$4;\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\n\nfunction overArg$2(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nvar _overArg = overArg$2;\n\nvar overArg$1 = _overArg;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys$1 = overArg$1(Object.keys, Object);\n\nvar _nativeKeys = nativeKeys$1;\n\nvar isPrototype$3 = _isPrototype,\n    nativeKeys = _nativeKeys;\n\n/** Used for built-in method references. */\nvar objectProto$4 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$4 = objectProto$4.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys$3(object) {\n  if (!isPrototype$3(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty$4.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nvar _baseKeys = baseKeys$3;\n\nvar isFunction = isFunction_1,\n    isLength = isLength_1;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike$5(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nvar isArrayLike_1 = isArrayLike$5;\n\nvar arrayLikeKeys$1 = _arrayLikeKeys,\n    baseKeys$2 = _baseKeys,\n    isArrayLike$4 = isArrayLike_1;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys$4(object) {\n  return isArrayLike$4(object) ? arrayLikeKeys$1(object) : baseKeys$2(object);\n}\n\nvar keys_1 = keys$4;\n\nvar copyObject$3 = _copyObject,\n    keys$3 = keys_1;\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign$1(object, source) {\n  return object && copyObject$3(source, keys$3(source), object);\n}\n\nvar _baseAssign = baseAssign$1;\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction nativeKeysIn$1(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nvar _nativeKeysIn = nativeKeysIn$1;\n\nvar isObject$3 = isObject_1,\n    isPrototype$2 = _isPrototype,\n    nativeKeysIn = _nativeKeysIn;\n\n/** Used for built-in method references. */\nvar objectProto$3 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$3 = objectProto$3.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn$1(object) {\n  if (!isObject$3(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype$2(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty$3.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nvar _baseKeysIn = baseKeysIn$1;\n\nvar arrayLikeKeys = _arrayLikeKeys,\n    baseKeysIn = _baseKeysIn,\n    isArrayLike$3 = isArrayLike_1;\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn$3(object) {\n  return isArrayLike$3(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nvar keysIn_1 = keysIn$3;\n\nvar copyObject$2 = _copyObject,\n    keysIn$2 = keysIn_1;\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn$1(object, source) {\n  return object && copyObject$2(source, keysIn$2(source), object);\n}\n\nvar _baseAssignIn = baseAssignIn$1;\n\nvar _cloneBuffer = {exports: {}};\n\n(function (module, exports) {\nvar root = _root;\n\n/** Detect free variable `exports`. */\nvar freeExports = exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n}(_cloneBuffer, _cloneBuffer.exports));\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\n\nfunction copyArray$2(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nvar _copyArray = copyArray$2;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\n\nfunction arrayFilter$1(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nvar _arrayFilter = arrayFilter$1;\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\n\nfunction stubArray$2() {\n  return [];\n}\n\nvar stubArray_1 = stubArray$2;\n\nvar arrayFilter = _arrayFilter,\n    stubArray$1 = stubArray_1;\n\n/** Used for built-in method references. */\nvar objectProto$2 = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto$2.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols$1 = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols$3 = !nativeGetSymbols$1 ? stubArray$1 : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols$1(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nvar _getSymbols = getSymbols$3;\n\nvar copyObject$1 = _copyObject,\n    getSymbols$2 = _getSymbols;\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols$1(source, object) {\n  return copyObject$1(source, getSymbols$2(source), object);\n}\n\nvar _copySymbols = copySymbols$1;\n\nvar overArg = _overArg;\n\n/** Built-in value references. */\nvar getPrototype$2 = overArg(Object.getPrototypeOf, Object);\n\nvar _getPrototype = getPrototype$2;\n\nvar arrayPush$2 = _arrayPush,\n    getPrototype$1 = _getPrototype,\n    getSymbols$1 = _getSymbols,\n    stubArray = stubArray_1;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn$2 = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush$2(result, getSymbols$1(object));\n    object = getPrototype$1(object);\n  }\n  return result;\n};\n\nvar _getSymbolsIn = getSymbolsIn$2;\n\nvar copyObject = _copyObject,\n    getSymbolsIn$1 = _getSymbolsIn;\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn$1(source, object) {\n  return copyObject(source, getSymbolsIn$1(source), object);\n}\n\nvar _copySymbolsIn = copySymbolsIn$1;\n\nvar arrayPush$1 = _arrayPush,\n    isArray$5 = isArray_1;\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys$2(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray$5(object) ? result : arrayPush$1(result, symbolsFunc(object));\n}\n\nvar _baseGetAllKeys = baseGetAllKeys$2;\n\nvar baseGetAllKeys$1 = _baseGetAllKeys,\n    getSymbols = _getSymbols,\n    keys$2 = keys_1;\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys$1(object) {\n  return baseGetAllKeys$1(object, keys$2, getSymbols);\n}\n\nvar _getAllKeys = getAllKeys$1;\n\nvar baseGetAllKeys = _baseGetAllKeys,\n    getSymbolsIn = _getSymbolsIn,\n    keysIn$1 = keysIn_1;\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn$1(object) {\n  return baseGetAllKeys(object, keysIn$1, getSymbolsIn);\n}\n\nvar _getAllKeysIn = getAllKeysIn$1;\n\nvar getNative$3 = _getNative,\n    root$4 = _root;\n\n/* Built-in method references that are verified to be native. */\nvar DataView$1 = getNative$3(root$4, 'DataView');\n\nvar _DataView = DataView$1;\n\nvar getNative$2 = _getNative,\n    root$3 = _root;\n\n/* Built-in method references that are verified to be native. */\nvar Promise$2 = getNative$2(root$3, 'Promise');\n\nvar _Promise = Promise$2;\n\nvar getNative$1 = _getNative,\n    root$2 = _root;\n\n/* Built-in method references that are verified to be native. */\nvar Set$2 = getNative$1(root$2, 'Set');\n\nvar _Set = Set$2;\n\nvar getNative = _getNative,\n    root$1 = _root;\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap$1 = getNative(root$1, 'WeakMap');\n\nvar _WeakMap = WeakMap$1;\n\nvar DataView = _DataView,\n    Map$1 = _Map,\n    Promise$1 = _Promise,\n    Set$1 = _Set,\n    WeakMap = _WeakMap,\n    baseGetTag$2 = _baseGetTag,\n    toSource = _toSource;\n\n/** `Object#toString` result references. */\nvar mapTag$5 = '[object Map]',\n    objectTag$1 = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag$5 = '[object Set]',\n    weakMapTag$1 = '[object WeakMap]';\n\nvar dataViewTag$2 = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map$1),\n    promiseCtorString = toSource(Promise$1),\n    setCtorString = toSource(Set$1),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag$5 = baseGetTag$2;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag$5(new DataView(new ArrayBuffer(1))) != dataViewTag$2) ||\n    (Map$1 && getTag$5(new Map$1) != mapTag$5) ||\n    (Promise$1 && getTag$5(Promise$1.resolve()) != promiseTag) ||\n    (Set$1 && getTag$5(new Set$1) != setTag$5) ||\n    (WeakMap && getTag$5(new WeakMap) != weakMapTag$1)) {\n  getTag$5 = function(value) {\n    var result = baseGetTag$2(value),\n        Ctor = result == objectTag$1 ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag$2;\n        case mapCtorString: return mapTag$5;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag$5;\n        case weakMapCtorString: return weakMapTag$1;\n      }\n    }\n    return result;\n  };\n}\n\nvar _getTag = getTag$5;\n\n/** Used for built-in method references. */\n\nvar objectProto$1 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$2 = objectProto$1.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray$1(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty$2.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nvar _initCloneArray = initCloneArray$1;\n\nvar root = _root;\n\n/** Built-in value references. */\nvar Uint8Array$1 = root.Uint8Array;\n\nvar _Uint8Array = Uint8Array$1;\n\nvar Uint8Array = _Uint8Array;\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer$3(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nvar _cloneArrayBuffer = cloneArrayBuffer$3;\n\nvar cloneArrayBuffer$2 = _cloneArrayBuffer;\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView$1(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer$2(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nvar _cloneDataView = cloneDataView$1;\n\n/** Used to match `RegExp` flags from their coerced string values. */\n\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp$1(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nvar _cloneRegExp = cloneRegExp$1;\n\nvar Symbol$1 = _Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol$1 ? Symbol$1.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol$1(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nvar _cloneSymbol = cloneSymbol$1;\n\nvar cloneArrayBuffer$1 = _cloneArrayBuffer;\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray$1(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer$1(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nvar _cloneTypedArray = cloneTypedArray$1;\n\nvar cloneArrayBuffer = _cloneArrayBuffer,\n    cloneDataView = _cloneDataView,\n    cloneRegExp = _cloneRegExp,\n    cloneSymbol = _cloneSymbol,\n    cloneTypedArray = _cloneTypedArray;\n\n/** `Object#toString` result references. */\nvar boolTag$1 = '[object Boolean]',\n    dateTag$1 = '[object Date]',\n    mapTag$4 = '[object Map]',\n    numberTag$2 = '[object Number]',\n    regexpTag$1 = '[object RegExp]',\n    setTag$4 = '[object Set]',\n    stringTag$2 = '[object String]',\n    symbolTag$1 = '[object Symbol]';\n\nvar arrayBufferTag$1 = '[object ArrayBuffer]',\n    dataViewTag$1 = '[object DataView]',\n    float32Tag$1 = '[object Float32Array]',\n    float64Tag$1 = '[object Float64Array]',\n    int8Tag$1 = '[object Int8Array]',\n    int16Tag$1 = '[object Int16Array]',\n    int32Tag$1 = '[object Int32Array]',\n    uint8Tag$1 = '[object Uint8Array]',\n    uint8ClampedTag$1 = '[object Uint8ClampedArray]',\n    uint16Tag$1 = '[object Uint16Array]',\n    uint32Tag$1 = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag$1(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag$1:\n      return cloneArrayBuffer(object);\n\n    case boolTag$1:\n    case dateTag$1:\n      return new Ctor(+object);\n\n    case dataViewTag$1:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag$1: case float64Tag$1:\n    case int8Tag$1: case int16Tag$1: case int32Tag$1:\n    case uint8Tag$1: case uint8ClampedTag$1: case uint16Tag$1: case uint32Tag$1:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag$4:\n      return new Ctor;\n\n    case numberTag$2:\n    case stringTag$2:\n      return new Ctor(object);\n\n    case regexpTag$1:\n      return cloneRegExp(object);\n\n    case setTag$4:\n      return new Ctor;\n\n    case symbolTag$1:\n      return cloneSymbol(object);\n  }\n}\n\nvar _initCloneByTag = initCloneByTag$1;\n\nvar isObject$2 = isObject_1;\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate$1 = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject$2(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nvar _baseCreate = baseCreate$1;\n\nvar baseCreate = _baseCreate,\n    getPrototype = _getPrototype,\n    isPrototype$1 = _isPrototype;\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject$1(object) {\n  return (typeof object.constructor == 'function' && !isPrototype$1(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nvar _initCloneObject = initCloneObject$1;\n\nvar getTag$4 = _getTag,\n    isObjectLike$3 = isObjectLike_1;\n\n/** `Object#toString` result references. */\nvar mapTag$3 = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap$1(value) {\n  return isObjectLike$3(value) && getTag$4(value) == mapTag$3;\n}\n\nvar _baseIsMap = baseIsMap$1;\n\nvar baseIsMap = _baseIsMap,\n    baseUnary$1 = _baseUnary,\n    nodeUtil$1 = _nodeUtil.exports;\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil$1 && nodeUtil$1.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap$1 = nodeIsMap ? baseUnary$1(nodeIsMap) : baseIsMap;\n\nvar isMap_1 = isMap$1;\n\nvar getTag$3 = _getTag,\n    isObjectLike$2 = isObjectLike_1;\n\n/** `Object#toString` result references. */\nvar setTag$3 = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet$1(value) {\n  return isObjectLike$2(value) && getTag$3(value) == setTag$3;\n}\n\nvar _baseIsSet = baseIsSet$1;\n\nvar baseIsSet = _baseIsSet,\n    baseUnary = _baseUnary,\n    nodeUtil = _nodeUtil.exports;\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet$1 = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nvar isSet_1 = isSet$1;\n\nvar Stack = _Stack,\n    arrayEach$1 = _arrayEach,\n    assignValue = _assignValue,\n    baseAssign = _baseAssign,\n    baseAssignIn = _baseAssignIn,\n    cloneBuffer = _cloneBuffer.exports,\n    copyArray$1 = _copyArray,\n    copySymbols = _copySymbols,\n    copySymbolsIn = _copySymbolsIn,\n    getAllKeys = _getAllKeys,\n    getAllKeysIn = _getAllKeysIn,\n    getTag$2 = _getTag,\n    initCloneArray = _initCloneArray,\n    initCloneByTag = _initCloneByTag,\n    initCloneObject = _initCloneObject,\n    isArray$4 = isArray_1,\n    isBuffer$1 = isBuffer$3.exports,\n    isMap = isMap_1,\n    isObject$1 = isObject_1,\n    isSet = isSet_1,\n    keys$1 = keys_1,\n    keysIn = keysIn_1;\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG$1 = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag$2 = '[object Map]',\n    numberTag$1 = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag$2 = '[object Set]',\n    stringTag$1 = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag$2] =\ncloneableTags[numberTag$1] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag$2] =\ncloneableTags[stringTag$1] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone$1(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG$1;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject$1(value)) {\n    return value;\n  }\n  var isArr = isArray$4(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray$1(value, result);\n    }\n  } else {\n    var tag = getTag$2(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer$1(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone$1(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone$1(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys$1);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach$1(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone$1(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nvar _baseClone = baseClone$1;\n\nvar baseClone = _baseClone;\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nvar clone_1 = clone;\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Heap\n * @typechecks\n * @preventMunge\n */\n\nfunction defaultComparator(a, b) {\n  return a < b;\n}\n\nvar Heap = /*#__PURE__*/function () {\n  function Heap(items, comparator) {\n    _classCallCheck$2(this, Heap);\n\n    this._items = items || [];\n    this._size = this._items.length;\n    this._comparator = comparator || defaultComparator;\n\n    this._heapify();\n  }\n  /*\n   * @return {boolean}\n   */\n\n\n  _createClass$2(Heap, [{\n    key: \"empty\",\n    value: function empty() {\n      return this._size === 0;\n    }\n    /*\n     * @return {*}\n     */\n\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      if (this._size === 0) {\n        return;\n      }\n\n      var elt = this._items[0];\n\n      var lastElt = this._items.pop();\n\n      this._size--;\n\n      if (this._size > 0) {\n        this._items[0] = lastElt;\n\n        this._sinkDown(0);\n      }\n\n      return elt;\n    }\n    /*\n     * @param {*} item\n     */\n\n  }, {\n    key: \"push\",\n    value: function push(item) {\n      this._items[this._size++] = item;\n\n      this._bubbleUp(this._size - 1);\n    }\n    /*\n     * @return {number}\n     */\n\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this._size;\n    }\n    /*\n     * @return {*}\n     */\n\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      if (this._size === 0) {\n        return;\n      }\n\n      return this._items[0];\n    }\n  }, {\n    key: \"_heapify\",\n    value: function _heapify() {\n      for (var index = Math.floor((this._size + 1) / 2); index >= 0; index--) {\n        this._sinkDown(index);\n      }\n    }\n    /*\n     * @parent {number} index\n     */\n\n  }, {\n    key: \"_bubbleUp\",\n    value: function _bubbleUp(index) {\n      var elt = this._items[index];\n\n      while (index > 0) {\n        var parentIndex = Math.floor((index + 1) / 2) - 1;\n        var parentElt = this._items[parentIndex]; // if parentElt < elt, stop\n\n        if (this._comparator(parentElt, elt)) {\n          return;\n        } // swap\n\n\n        this._items[parentIndex] = elt;\n        this._items[index] = parentElt;\n        index = parentIndex;\n      }\n    }\n    /*\n     * @parent {number} index\n     */\n\n  }, {\n    key: \"_sinkDown\",\n    value: function _sinkDown(index) {\n      var elt = this._items[index];\n\n      while (true) {\n        var leftChildIndex = 2 * (index + 1) - 1;\n        var rightChildIndex = 2 * (index + 1);\n        var swapIndex = -1;\n\n        if (leftChildIndex < this._size) {\n          var leftChild = this._items[leftChildIndex];\n\n          if (this._comparator(leftChild, elt)) {\n            swapIndex = leftChildIndex;\n          }\n        }\n\n        if (rightChildIndex < this._size) {\n          var rightChild = this._items[rightChildIndex];\n\n          if (this._comparator(rightChild, elt)) {\n            if (swapIndex === -1 || this._comparator(rightChild, this._items[swapIndex])) {\n              swapIndex = rightChildIndex;\n            }\n          }\n        } // if we don't have a swap, stop\n\n\n        if (swapIndex === -1) {\n          return;\n        }\n\n        this._items[index] = this._items[swapIndex];\n        this._items[swapIndex] = elt;\n        index = swapIndex;\n      }\n    }\n  }]);\n\n  return Heap;\n}();\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule IntegerBufferSet\n * @typechecks\n */\n// in a way to minimize changing positions of stored values when new ones are\n// added or when some values are replaced. Stored elements are alwasy assigned\n// a consecutive set of positoins startin from 0 up to count of elements less 1\n// Following actions can be executed\n// * get position assigned to given value (null if value is not stored)\n// * create new entry for new value and get assigned position back\n// * replace value that is furthest from specified value range with new value\n//   and get it's position back\n// All operations take amortized log(n) time where n is number of elements in\n// the set.\n\nvar IntegerBufferSet = /*#__PURE__*/function () {\n  function IntegerBufferSet() {\n    _classCallCheck$2(this, IntegerBufferSet);\n\n    this._valueToPositionMap = {};\n    this._size = 0;\n    this._smallValues = new Heap([], // Initial data in the heap\n    this._smallerComparator);\n    this._largeValues = new Heap([], // Initial data in the heap\n    this._greaterComparator);\n    this.getNewPositionForValue = this.getNewPositionForValue.bind(this);\n    this.getValuePosition = this.getValuePosition.bind(this);\n    this.getSize = this.getSize.bind(this);\n    this.replaceFurthestValuePosition = this.replaceFurthestValuePosition.bind(this);\n  }\n\n  _createClass$2(IntegerBufferSet, [{\n    key: \"getSize\",\n    value: function getSize()\n    /*number*/\n    {\n      return this._size;\n    }\n  }, {\n    key: \"getValuePosition\",\n    value: function getValuePosition(\n    /*number*/\n    value)\n    /*?number*/\n    {\n      if (this._valueToPositionMap[value] === undefined) {\n        return null;\n      }\n\n      return this._valueToPositionMap[value];\n    }\n  }, {\n    key: \"getNewPositionForValue\",\n    value: function getNewPositionForValue(\n    /*number*/\n    value)\n    /*number*/\n    {\n      invariant$1(this._valueToPositionMap[value] === undefined, \"Shouldn't try to find new position for value already stored in BufferSet\");\n      var newPosition = this._size;\n      this._size++;\n\n      this._pushToHeaps(newPosition, value);\n\n      this._valueToPositionMap[value] = newPosition;\n      return newPosition;\n    }\n  }, {\n    key: \"replaceFurthestValuePosition\",\n    value: function replaceFurthestValuePosition(\n    /*number*/\n    lowValue,\n    /*number*/\n    highValue,\n    /*number*/\n    newValue)\n    /*?number*/\n    {\n      invariant$1(this._valueToPositionMap[newValue] === undefined, \"Shouldn't try to replace values with value already stored value in \" + 'BufferSet');\n\n      this._cleanHeaps();\n\n      if (this._smallValues.empty() || this._largeValues.empty()) {\n        // Threre are currently no values stored. We will have to create new\n        // position for this value.\n        return null;\n      }\n\n      var minValue = this._smallValues.peek().value;\n\n      var maxValue = this._largeValues.peek().value;\n\n      if (minValue >= lowValue && maxValue <= highValue) {\n        // All values currently stored are necessary, we can't reuse any of them.\n        return null;\n      }\n\n      var valueToReplace;\n\n      if (lowValue - minValue > maxValue - highValue) {\n        // minValue is further from provided range. We will reuse it's position.\n        valueToReplace = minValue;\n\n        this._smallValues.pop();\n      } else {\n        valueToReplace = maxValue;\n\n        this._largeValues.pop();\n      }\n\n      var position = this._valueToPositionMap[valueToReplace];\n      delete this._valueToPositionMap[valueToReplace];\n      this._valueToPositionMap[newValue] = position;\n\n      this._pushToHeaps(position, newValue);\n\n      return position;\n    }\n  }, {\n    key: \"_pushToHeaps\",\n    value: function _pushToHeaps(\n    /*number*/\n    position,\n    /*number*/\n    value) {\n      var element = {\n        position: position,\n        value: value\n      }; // We can reuse the same object in both heaps, because we don't mutate them\n\n      this._smallValues.push(element);\n\n      this._largeValues.push(element);\n    }\n  }, {\n    key: \"_cleanHeaps\",\n    value: function _cleanHeaps() {\n      // We not usually only remove object from one heap while moving value.\n      // Here we make sure that there is no stale data on top of heaps.\n      this._cleanHeap(this._smallValues);\n\n      this._cleanHeap(this._largeValues);\n\n      var minHeapSize = Math.min(this._smallValues.size(), this._largeValues.size());\n      var maxHeapSize = Math.max(this._smallValues.size(), this._largeValues.size());\n\n      if (maxHeapSize > 10 * minHeapSize) {\n        // There are many old values in one of heaps. We nned to get rid of them\n        // to not use too avoid memory leaks\n        this._recreateHeaps();\n      }\n    }\n  }, {\n    key: \"_recreateHeaps\",\n    value: function _recreateHeaps() {\n      var sourceHeap = this._smallValues.size() < this._largeValues.size() ? this._smallValues : this._largeValues;\n      var newSmallValues = new Heap([], // Initial data in the heap\n      this._smallerComparator);\n      var newLargeValues = new Heap([], // Initial datat in the heap\n      this._greaterComparator);\n\n      while (!sourceHeap.empty()) {\n        var element = sourceHeap.pop(); // Push all stil valid elements to new heaps\n\n        if (this._valueToPositionMap[element.value] !== undefined) {\n          newSmallValues.push(element);\n          newLargeValues.push(element);\n        }\n      }\n\n      this._smallValues = newSmallValues;\n      this._largeValues = newLargeValues;\n    }\n  }, {\n    key: \"_cleanHeap\",\n    value: function _cleanHeap(\n    /*object*/\n    heap) {\n      while (!heap.empty() && this._valueToPositionMap[heap.peek().value] === undefined) {\n        heap.pop();\n      }\n    }\n  }, {\n    key: \"_smallerComparator\",\n    value: function _smallerComparator(\n    /*object*/\n    lhs,\n    /*object*/\n    rhs)\n    /*boolean*/\n    {\n      return lhs.value < rhs.value;\n    }\n  }, {\n    key: \"_greaterComparator\",\n    value: function _greaterComparator(\n    /*object*/\n    lhs,\n    /*object*/\n    rhs)\n    /*boolean*/\n    {\n      return lhs.value > rhs.value;\n    }\n  }]);\n\n  return IntegerBufferSet;\n}();\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule globalThisPolyfill\n */\nvar globalThisPolyfill = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof self !== 'undefined' ? self : {};\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule PrefixIntervalTree\n * \n * @typechecks\n */\n\nvar parent = function parent(node) {\n  return Math.floor(node / 2);\n};\n\nvar Int32Array = globalThisPolyfill.Int32Array || function (size) {\n  var xs = [];\n\n  for (var i = size - 1; i >= 0; --i) {\n    xs[i] = 0;\n  }\n\n  return xs;\n};\n/**\n * Computes the next power of 2 after or equal to x.\n */\n\n\nfunction ceilLog2(x) {\n  var y = 1;\n\n  while (y < x) {\n    y *= 2;\n  }\n\n  return y;\n}\n/**\n * A prefix interval tree stores an numeric array and the partial sums of that\n * array. It is optimized for updating the values of the array without\n * recomputing all of the partial sums.\n *\n *   - O(ln n) update\n *   - O(1) lookup\n *   - O(ln n) compute a partial sum\n *   - O(n) space\n *\n * Note that the sequence of partial sums is one longer than the array, so that\n * the first partial sum is always 0, and the last partial sum is the sum of the\n * entire array.\n */\n\n\nvar PrefixIntervalTree = /*#__PURE__*/function () {\n  function PrefixIntervalTree(xs) {\n    _classCallCheck$2(this, PrefixIntervalTree);\n\n    /**\n     * Number of elements in the array\n     *\n     * @type {number}\n     * @private\n     */\n    this._size = xs.length;\n    /**\n     * Half the size of the heap. It is also the number of non-leaf nodes, and the\n     * index of the first element in the heap. Always a power of 2.\n     *\n     * @type {number}\n     * @private\n     */\n\n    this._half = ceilLog2(this._size);\n    /**\n     * Binary heap\n     *\n     * @type {!Array.<number>}\n     * @const\n     * @private\n     */\n\n    this._heap = new Int32Array(2 * this._half);\n    var i;\n\n    for (i = 0; i < this._size; ++i) {\n      this._heap[this._half + i] = xs[i];\n    }\n\n    for (i = this._half - 1; i > 0; --i) {\n      this._heap[i] = this._heap[2 * i] + this._heap[2 * i + 1];\n    }\n  }\n\n  _createClass$2(PrefixIntervalTree, [{\n    key: \"set\",\n    value: function set(index, value) {\n      invariant$1(0 <= index && index < this._size, 'Index out of range %s', index);\n      var node = this._half + index;\n      this._heap[node] = value;\n      node = parent(node);\n\n      for (; node !== 0; node = parent(node)) {\n        this._heap[node] = this._heap[2 * node] + this._heap[2 * node + 1];\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get(index) {\n      invariant$1(0 <= index && index < this._size, 'Index out of range %s', index);\n      var node = this._half + index;\n      return this._heap[node];\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      return this._size;\n    }\n    /**\n     * Returns the sum get(0) + get(1) + ... + get(end - 1).\n     */\n\n  }, {\n    key: \"sumUntil\",\n    value: function sumUntil(end) {\n      invariant$1(0 <= end && end < this._size + 1, 'Index out of range %s', end);\n\n      if (end === 0) {\n        return 0;\n      }\n\n      var node = this._half + end - 1;\n      var sum = this._heap[node];\n\n      for (; node !== 1; node = parent(node)) {\n        if (node % 2 === 1) {\n          sum += this._heap[node - 1];\n        }\n      }\n\n      return sum;\n    }\n    /**\n     * Returns the sum get(0) + get(1) + ... + get(inclusiveEnd).\n     */\n\n  }, {\n    key: \"sumTo\",\n    value: function sumTo(inclusiveEnd) {\n      invariant$1(0 <= inclusiveEnd && inclusiveEnd < this._size, 'Index out of range %s', inclusiveEnd);\n      return this.sumUntil(inclusiveEnd + 1);\n    }\n    /**\n     * Returns the sum get(begin) + get(begin + 1) + ... + get(end - 1).\n     */\n\n  }, {\n    key: \"sum\",\n    value: function sum(begin, end) {\n      invariant$1(begin <= end, 'Begin must precede end');\n      return this.sumUntil(end) - this.sumUntil(begin);\n    }\n    /**\n     * Returns the smallest i such that 0 <= i <= size and sumUntil(i) <= t, or\n     * -1 if no such i exists.\n     */\n\n  }, {\n    key: \"greatestLowerBound\",\n    value: function greatestLowerBound(t) {\n      if (t < 0) {\n        return -1;\n      }\n\n      var node = 1;\n\n      if (this._heap[node] <= t) {\n        return this._size;\n      }\n\n      while (node < this._half) {\n        var leftSum = this._heap[2 * node];\n\n        if (t < leftSum) {\n          node = 2 * node;\n        } else {\n          node = 2 * node + 1;\n          t -= leftSum;\n        }\n      }\n\n      return node - this._half;\n    }\n    /**\n     * Returns the smallest i such that 0 <= i <= size and sumUntil(i) < t, or\n     * -1 if no such i exists.\n     */\n\n  }, {\n    key: \"greatestStrictLowerBound\",\n    value: function greatestStrictLowerBound(t) {\n      if (t <= 0) {\n        return -1;\n      }\n\n      var node = 1;\n\n      if (this._heap[node] < t) {\n        return this._size;\n      }\n\n      while (node < this._half) {\n        var leftSum = this._heap[2 * node];\n\n        if (t <= leftSum) {\n          node = 2 * node;\n        } else {\n          node = 2 * node + 1;\n          t -= leftSum;\n        }\n      }\n\n      return node - this._half;\n    }\n    /**\n     * Returns the smallest i such that 0 <= i <= size and t <= sumUntil(i), or\n     * size + 1 if no such i exists.\n     */\n\n  }, {\n    key: \"leastUpperBound\",\n    value: function leastUpperBound(t) {\n      return this.greatestStrictLowerBound(t) + 1;\n    }\n    /**\n     * Returns the smallest i such that 0 <= i <= size and t < sumUntil(i), or\n     * size + 1 if no such i exists.\n     */\n\n  }, {\n    key: \"leastStrictUpperBound\",\n    value: function leastStrictUpperBound(t) {\n      return this.greatestLowerBound(t) + 1;\n    }\n  }], [{\n    key: \"uniform\",\n    value: function uniform(size, initialValue) {\n      var xs = [];\n\n      for (var i = size - 1; i >= 0; --i) {\n        xs[i] = initialValue;\n      }\n\n      return new PrefixIntervalTree(xs);\n    }\n  }, {\n    key: \"empty\",\n    value: function empty(size) {\n      return PrefixIntervalTree.uniform(size, 0);\n    }\n  }]);\n\n  return PrefixIntervalTree;\n}();\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shallowEqual\n * @typechecks\n * \n */\n\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (_typeof(objA) !== 'object' || objA === null || _typeof(objB) !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CellGroup\n * @typechecks\n */\n\n/**\n * This determines how the cell group is fixed/non-fixed to the table.\n *\n * eg: All fixed columns/cells will be part of the 'fixed' cell group.\n * Similarly, all scrollable columns/cells in the grid will be part of the 'scrollable' cell group.\n *\n * @enum {string}\n */\nvar CellGroupType = {\n  FIXED: 'fixed',\n  FIXED_RIGHT: 'fixedRight',\n  SCROLLABLE: 'scrollable'\n};\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule convertColumnElementsToData\n */\n\nfunction _createForOfIteratorHelper$2(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$2(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray$2(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$2(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen); }\n\nfunction _arrayLikeToArray$2(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n// However, _.pick is much slower than the hand written version here.\n\nfunction _extractProps(column) {\n  var _column$props = column.props,\n      align = _column$props.align,\n      allowCellsRecycling = _column$props.allowCellsRecycling,\n      cellClassName = _column$props.cellClassName,\n      columnKey = _column$props.columnKey,\n      flexGrow = _column$props.flexGrow,\n      fixed = _column$props.fixed,\n      fixedRight = _column$props.fixedRight,\n      maxWidth = _column$props.maxWidth,\n      minWidth = _column$props.minWidth,\n      isReorderable = _column$props.isReorderable,\n      isResizable = _column$props.isResizable,\n      pureRendering = _column$props.pureRendering,\n      width = _column$props.width;\n  return {\n    align: align,\n    allowCellsRecycling: allowCellsRecycling,\n    cellClassName: cellClassName,\n    columnKey: columnKey,\n    flexGrow: flexGrow,\n    fixed: fixed,\n    fixedRight: fixedRight,\n    maxWidth: maxWidth,\n    minWidth: minWidth,\n    isReorderable: isReorderable,\n    isResizable: isResizable,\n    pureRendering: pureRendering,\n    width: width\n  };\n}\n\nfunction _extractTemplates(elementTemplates, columnElement) {\n  elementTemplates.cell.push(columnElement.props.cell);\n  elementTemplates.footer.push(columnElement.props.footer);\n  elementTemplates.header.push(columnElement.props.header);\n}\n\nfunction getCellGroupType(element) {\n  var _element$props, _element$props2;\n\n  if (element !== null && element !== void 0 && (_element$props = element.props) !== null && _element$props !== void 0 && _element$props.fixed) {\n    return CellGroupType.FIXED;\n  } else if (element !== null && element !== void 0 && (_element$props2 = element.props) !== null && _element$props2 !== void 0 && _element$props2.fixedRight) {\n    return CellGroupType.FIXED_RIGHT;\n  } else {\n    return CellGroupType.SCROLLABLE;\n  }\n}\n\nfunction getEmptyElementsContainer() {\n  var _ref;\n\n  return _ref = {}, _defineProperty$1(_ref, CellGroupType.FIXED, []), _defineProperty$1(_ref, CellGroupType.SCROLLABLE, []), _defineProperty$1(_ref, CellGroupType.FIXED_RIGHT, []), _ref;\n}\n\nfunction getEmptyTemplatesContainer() {\n  return {\n    groupHeader: [],\n    header: [],\n    cell: [],\n    footer: []\n  };\n}\n\nfunction _sortByCellGroupType(reactElements) {\n  var container = getEmptyElementsContainer();\n\n  var _iterator = _createForOfIteratorHelper$2(reactElements),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var element = _step.value;\n      var cellGroupType = getCellGroupType(element);\n      container[cellGroupType].push(element);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var result = [];\n  result.push.apply(result, container[CellGroupType.FIXED]);\n  result.push.apply(result, container[CellGroupType.SCROLLABLE]);\n  result.push.apply(result, container[CellGroupType.FIXED_RIGHT]);\n  return result;\n}\n\nfunction _getElementIndex(elementsContainer, cellGroupType) {\n  if (cellGroupType === CellGroupType.FIXED) {\n    return elementsContainer[CellGroupType.FIXED].length;\n  } else if (cellGroupType === CellGroupType.SCROLLABLE) {\n    return elementsContainer[CellGroupType.FIXED].length + elementsContainer[CellGroupType.SCROLLABLE].length;\n  } else {\n    return elementsContainer[CellGroupType.FIXED].length + elementsContainer[CellGroupType.SCROLLABLE].length + elementsContainer[CellGroupType.FIXED_RIGHT].length;\n  }\n}\n/**\n * Converts React column / column group elements into props and cell rendering templates\n */\n\n\nfunction convertColumnElementsToData(childComponents) {\n  var _children$0$type$__Ta, _children$;\n\n  var children = [];\n  react__WEBPACK_IMPORTED_MODULE_0___default().Children.forEach(childComponents, function (child, index) {\n    if (child == null) {\n      return;\n    }\n\n    invariant$1(child.type.__TableColumnGroup__ || child.type.__TableColumn__, 'child type should be <FixedDataTableColumn /> or <FixedDataTableColumnGroup />');\n    children.push(child);\n  });\n  var columnElements = getEmptyElementsContainer();\n  var columnGroupElements = getEmptyElementsContainer();\n  var elementTemplates = getEmptyTemplatesContainer();\n  var useGroupHeader = (_children$0$type$__Ta = (_children$ = children[0]) === null || _children$ === void 0 ? void 0 : _children$.type.__TableColumnGroup__) !== null && _children$0$type$__Ta !== void 0 ? _children$0$type$__Ta : false;\n\n  if (useGroupHeader) {\n    (function () {\n      var columnIndex = 0;\n\n      var _iterator2 = _createForOfIteratorHelper$2(_sortByCellGroupType(children)),\n          _step2;\n\n      try {\n        var _loop = function _loop() {\n          var columnGroupReactElement = _step2.value;\n          var cellGroupType = getCellGroupType(columnGroupReactElement);\n\n          var columnGroupProps = _extractProps(columnGroupReactElement);\n\n          columnGroupProps.index = _getElementIndex(columnGroupElements, cellGroupType);\n          columnGroupElements[cellGroupType].push(columnGroupProps);\n          elementTemplates.groupHeader.push(columnGroupReactElement.props.header);\n          react__WEBPACK_IMPORTED_MODULE_0___default().Children.forEach(columnGroupReactElement.props.children, function (columnReactElement) {\n            var columnProps = _extractProps(columnReactElement);\n\n            columnProps.index = columnIndex++;\n            columnProps.groupIdx = columnGroupProps.index;\n            columnElements[cellGroupType].push(columnProps);\n\n            _extractTemplates(elementTemplates, columnReactElement);\n          });\n        };\n\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    })();\n  } else {\n    var _iterator3 = _createForOfIteratorHelper$2(_sortByCellGroupType(children)),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var columnReactElement = _step3.value;\n        var cellGroupType = getCellGroupType(columnReactElement);\n\n        var columnProps = _extractProps(columnReactElement);\n\n        columnProps.index = _getElementIndex(columnElements, cellGroupType);\n        columnElements[cellGroupType].push(columnProps);\n\n        _extractTemplates(elementTemplates, columnReactElement);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n\n  return {\n    columnGroupElements: columnGroupElements,\n    columnElements: columnElements,\n    elementTemplates: elementTemplates,\n    useGroupHeader: useGroupHeader\n  };\n}\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule clamp\n * @typechecks\n */\n\n/**\n * Clamps (or clips or confines) the value to be between min and max.\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nfunction clamp$1(value, min, max) {\n  if (value < min) {\n    return min;\n  }\n\n  if (value > max) {\n    return max;\n  }\n\n  return value;\n}\n\n// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nvar defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nfunction createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nfunction defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nvar createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shallowEqualSelector\n */\nvar shallowEqualSelector = createSelector;\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule widthHelper\n * @typechecks\n */\n\nfunction _createForOfIteratorHelper$1(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray$1(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$1(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen); }\n\nfunction _arrayLikeToArray$1(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar emptyArray = [];\nvar emptyObject = {};\nvar cacheOptions = {\n  memoizeOptions: {\n    maxSize: 12 // 3 cell group types * 4 template types\n\n  }\n};\nvar sumPropWidths = createSelector(function (columns) {\n  return columns || emptyArray;\n}, function (columns) {\n  return columns.reduce(function (accum, column) {\n    return accum + column.props.width;\n  }, 0);\n}, cacheOptions);\nvar getTotalWidth = createSelector(function (columns) {\n  return columns || emptyArray;\n}, function (columns) {\n  return columns.reduce(function (accum, column) {\n    return accum + column.width;\n  }, 0);\n}, cacheOptions);\nfunction getTotalWidthContainer(container) {\n  return getTotalWidth(container.fixed) + getTotalWidth(container.fixedRight) + getTotalWidth(container.scrollable);\n}\nvar getTotalFlexGrow = createSelector(function (container) {\n  return container || emptyObject;\n}, function (container) {\n  var columns = Array.prototype.concat.call(container.fixed, container.scrollable, container.fixedRight);\n  var flexGrow = 0;\n\n  var _iterator = _createForOfIteratorHelper$1(columns),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var column = _step.value;\n      flexGrow += column.flexGrow || 0;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return flexGrow;\n}, cacheOptions);\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule roughHeights\n */\nvar BORDER_HEIGHT = 1;\nvar MIN_BUFFER_ROWS = 3;\nvar MAX_BUFFER_ROWS = 6;\nvar ScrollbarState = {\n  HIDDEN: 'hidden',\n  JOINT_SCROLLBARS: 'JOINT_SCROLLBARS',\n  VISIBLE: 'visible'\n};\n/**\n * Calculate the available height for the viewport.\n * Since we aren't 100% sure of whether scrollbars are visible\n * at this point, we compute a max & min viewport height.\n *\n * maxAvailableHeight is the largest it could be, while\n * minAvailableHeight is the smallest.\n * We also compute how large it is based on\n * the current scrollContentHeight in scrollbarsVisible.\n *\n * bufferRowCount is the number of rows to buffer both ahead and behind the viewport.\n * In total we will buffer twice this number of rows (half ahead, and half behind).\n *\n * reservedHeight is the height reserved for headers and footers.\n *\n * scrollStateX is the state of the horizontal scrollbar.\n * HIDDEN & VISIBLE are self explanatory, but\n * JOINT_SCROLLBARS mean the horizontal scroll will be shown if and\n * only if the vertical scrollbar is shown.\n *\n * @param {!Array.<{\n *   width: number,\n * }>} columnProps\n * @param {{\n *   cellGroupWrapperHeight: number,\n *   footerHeight: number,\n *   groupHeaderHeight: number,\n *   headerHeight: number,\n * }} elementHeights\n * @param {{\n *   bufferRowCount: ?number,\n *   rowHeight: number,\n *   subRowHeight: number,\n * }} rowSettings\n * @param {{\n *   overflowX: string,\n *   showScrollbarX: boolean,\n * }} scrollFlags\n * @param {{\n *   height: ?number,\n *   maxHeight: ?number,\n *   useMaxHeight: boolean,\n *   width: number,\n * }} tableSize\n * @return {{\n *   bufferRowsCount: number,\n *   minAvailableHeight: number,\n *   maxAvailableHeight: number,\n *   reservedHeight: number,\n *   scrollStateX: ScrollbarState,\n * }}\n */\n\nfunction roughHeights(columnElements, elementHeights, rowSettings, scrollFlags, tableSize, scrollbarXHeight, scrollbarYWidth) {\n  var cellGroupWrapperHeight = elementHeights.cellGroupWrapperHeight,\n      footerHeight = elementHeights.footerHeight,\n      headerHeight = elementHeights.headerHeight,\n      groupHeaderHeight = elementHeights.groupHeaderHeight; // we don't need border height to be added to the table if we are using cellGroupWrapperHeight\n\n  var borderHeight = cellGroupWrapperHeight ? 0 : 2 * BORDER_HEIGHT;\n  var reservedHeight = footerHeight + headerHeight + groupHeaderHeight + borderHeight;\n  var height = tableSize.height,\n      maxHeight = tableSize.maxHeight,\n      useMaxHeight = tableSize.useMaxHeight,\n      width = tableSize.width;\n  var maxComponentHeight = Math.round(useMaxHeight ? maxHeight : height);\n  var roughAvailableHeight = maxComponentHeight - reservedHeight;\n  var scrollStateX = getScrollStateX(columnElements, scrollFlags, width, scrollbarYWidth);\n  /*\n   * Early estimates of how much height we have to show rows.\n   * We won't know which one is real until we know about horizontal scrollbar which\n   * requires knowing about vertical scrollbar as well and that\n   * requires scrollContentHeight which\n   * requires us to have handled scrollTo / scrollToRow...\n   */\n\n  var minAvailableHeight = roughAvailableHeight;\n  var maxAvailableHeight = roughAvailableHeight;\n\n  switch (scrollStateX) {\n    case ScrollbarState.VISIBLE:\n      {\n        minAvailableHeight -= scrollbarXHeight;\n        maxAvailableHeight -= scrollbarXHeight;\n        break;\n      }\n\n    case ScrollbarState.JOINT_SCROLLBARS:\n      {\n        minAvailableHeight -= scrollbarXHeight;\n        break;\n      }\n  }\n\n  return {\n    bufferRowCount: getBufferRowCount(maxAvailableHeight, rowSettings),\n    minAvailableHeight: Math.max(minAvailableHeight, 0),\n    maxAvailableHeight: Math.max(maxAvailableHeight, 0),\n    reservedHeight: reservedHeight,\n    scrollStateX: scrollStateX\n  };\n}\n/**\n * @param {!Array.<{\n *   width: number,\n * }>} columnProps\n * @param {{\n *   overflowX: string,\n *   showScrollbarX: boolean,\n * }} scrollFlags\n * @param {number} width\n * @return {ScrollbarState}\n */\n\n\nfunction getScrollStateX(columnElements, scrollFlags, width, scrollbarYWidth) {\n  var overflowX = scrollFlags.overflowX,\n      showScrollbarX = scrollFlags.showScrollbarX;\n  var minColWidth = getTotalWidthContainer(columnElements);\n\n  if (overflowX === 'hidden' || showScrollbarX === false) {\n    return ScrollbarState.HIDDEN;\n  } else if (minColWidth > width) {\n    return ScrollbarState.VISIBLE;\n  }\n\n  if (minColWidth > width - scrollbarYWidth) {\n    return ScrollbarState.JOINT_SCROLLBARS;\n  }\n\n  return ScrollbarState.HIDDEN;\n}\n/**\n * @param {number} maxAvailableHeight\n * @param {{\n *   bufferRowCount: ?number,\n *   rowHeight: number,\n *   subRowHeight: number,\n * }} rowSettings\n * @return {number}\n */\n\n\nfunction getBufferRowCount(maxAvailableHeight, rowSettings) {\n  var bufferRowCount = rowSettings.bufferRowCount,\n      rowHeight = rowSettings.rowHeight,\n      subRowHeight = rowSettings.subRowHeight;\n\n  if (bufferRowCount !== undefined) {\n    return bufferRowCount;\n  }\n\n  var fullRowHeight = rowHeight + subRowHeight;\n  var avgVisibleRowCount = Math.ceil(maxAvailableHeight / fullRowHeight) + 1;\n  return clamp$1(Math.floor(avgVisibleRowCount / 2), MIN_BUFFER_ROWS, MAX_BUFFER_ROWS);\n}\n\nvar roughHeightsSelector = shallowEqualSelector([function (state) {\n  return state.columnElements;\n}, function (state) {\n  return state.elementHeights;\n}, function (state) {\n  return state.rowSettings;\n}, function (state) {\n  return state.scrollFlags;\n}, function (state) {\n  return state.tableSize;\n}, function (state) {\n  return state.scrollbarXHeight;\n}, function (state) {\n  return state.scrollbarYWidth;\n}], roughHeights);\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule scrollbarsVisible\n */\n/**\n * State regarding which scrollbars will be shown.\n * Also includes the actual availableHeight which depends on the scrollbars.\n *\n * @param {{\n *   minAvailableHeight: number,\n *   maxAvailableHeight: number,\n *   scrollStateX: ScrollbarState,\n * }} roughHeights\n * @param {number} scrollContentHeight,\n * @param {{\n *   overflowY: string,\n *   showScrollbarY: boolean,\n * }} scrollFlags\n * @return {{\n *   availableHeight: number,\n *   scrollEnabledX: boolean,\n *   scrollEnabledY: boolean,\n * }}\n */\n\nfunction scrollbarsVisible(roughHeights, scrollContentHeight, scrollFlags) {\n  var overflowY = scrollFlags.overflowY,\n      showScrollbarY = scrollFlags.showScrollbarY;\n  var allowScrollbarY = overflowY !== 'hidden' && showScrollbarY !== false;\n  var minAvailableHeight = roughHeights.minAvailableHeight,\n      maxAvailableHeight = roughHeights.maxAvailableHeight,\n      scrollStateX = roughHeights.scrollStateX;\n  var scrollEnabledY = false;\n  var scrollEnabledX = false;\n\n  if (scrollStateX === ScrollbarState.VISIBLE) {\n    scrollEnabledX = true;\n  }\n\n  if (allowScrollbarY && scrollContentHeight > maxAvailableHeight) {\n    scrollEnabledY = true;\n  } // Handle case where vertical scrollbar makes horizontal scrollbar necessary\n\n\n  if (scrollEnabledY && scrollStateX === ScrollbarState.JOINT_SCROLLBARS) {\n    scrollEnabledX = true;\n  }\n\n  var availableHeight = maxAvailableHeight;\n\n  if (scrollEnabledX) {\n    availableHeight = minAvailableHeight;\n  }\n\n  return {\n    availableHeight: availableHeight,\n    scrollEnabledX: scrollEnabledX,\n    scrollEnabledY: scrollEnabledY\n  };\n}\n\nvar scrollbarsVisible$1 = shallowEqualSelector([roughHeightsSelector, function (state) {\n  return state.scrollContentHeight;\n}, function (state) {\n  return state.scrollFlags;\n}], scrollbarsVisible);\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule updateRowHeight\n */\n/**\n * Update our cached row height for a specific index\n * based on the value from rowHeightGetter\n *\n * @param {!Object} state\n * @param {number} rowIdx\n * @return {number} The new row height\n */\n\nfunction updateRowHeight(state, rowIdx) {\n  var rowSettings = state.rowSettings;\n\n  var _state$getInternal = state.getInternal(),\n      storedHeights = _state$getInternal.storedHeights,\n      rowOffsetIntervalTree = _state$getInternal.rowOffsetIntervalTree;\n\n  var rowHeightGetter = rowSettings.rowHeightGetter,\n      subRowHeightGetter = rowSettings.subRowHeightGetter;\n  var newHeight = rowHeightGetter(rowIdx) + subRowHeightGetter(rowIdx);\n  var oldHeight = storedHeights[rowIdx];\n\n  if (newHeight !== oldHeight) {\n    rowOffsetIntervalTree.set(rowIdx, newHeight);\n    storedHeights[rowIdx] = newHeight;\n    state.scrollContentHeight += newHeight - oldHeight;\n  }\n\n  return storedHeights[rowIdx];\n}\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule scrollAnchor\n */\n/**\n * Get the anchor for scrolling.\n * This will either be the first row's index and an offset, or the last row's index.\n * We also pass a flag indicating if the anchor has changed from the state\n *\n * @param {!Object} state\n * @param {!Object} newProps\n * @param {!Object} [oldProps]\n * @return {{\n *   firstIndex: number,\n *   firstOffset: number,\n *   lastIndex: number,\n *   changed: boolean,\n * }}\n */\n\nfunction getScrollAnchor(state, newProps, oldProps) {\n  if (newProps.scrollToRow !== undefined && newProps.scrollToRow !== null && (!oldProps || newProps.scrollToRow !== oldProps.scrollToRow)) {\n    return scrollToRow(state, newProps.scrollToRow);\n  }\n\n  if (newProps.scrollTop !== undefined && newProps.scrollTop !== null && (!oldProps || newProps.scrollTop !== oldProps.scrollTop)) {\n    return scrollTo$1(state, newProps.scrollTop);\n  }\n\n  return {\n    firstIndex: state.firstRowIndex,\n    firstOffset: state.firstRowOffset,\n    lastIndex: undefined,\n    changed: false\n  };\n}\n/**\n * Scroll to a specific position in the grid\n *\n * @param {!Object} state\n * @param {number} scrollY\n * @return {{\n *   firstIndex: number,\n *   firstOffset: number,\n *   lastIndex: number,\n *   changed: boolean,\n * }}\n */\n\nfunction scrollTo$1(state, scrollY) {\n  var _scrollbarsVisibleSel = scrollbarsVisible$1(state),\n      availableHeight = _scrollbarsVisibleSel.availableHeight;\n\n  var rowSettings = state.rowSettings,\n      scrollContentHeight = state.scrollContentHeight;\n\n  var _state$getInternal = state.getInternal(),\n      rowOffsetIntervalTree = _state$getInternal.rowOffsetIntervalTree;\n\n  var rowsCount = rowSettings.rowsCount;\n\n  if (state.rowSettings.rowHeightGetter != undefined && state.isVerticalScrollExact) {\n    // In case of variable row height, ask for the actual heights of the rows before the scroll position.\n    // Only for the ones that were not asked before\n    var _state$getInternal2 = state.getInternal(),\n        rowUntilOffsetsAreExact = _state$getInternal2.rowUntilOffsetsAreExact;\n\n    while (rowUntilOffsetsAreExact < rowsCount) {\n      updateRowHeight(state, rowUntilOffsetsAreExact++);\n    }\n\n    state.getInternal().rowUntilOffsetsAreExact = rowsCount;\n  }\n\n  if (rowsCount === 0) {\n    return {\n      firstIndex: 0,\n      firstOffset: 0,\n      lastIndex: undefined,\n      changed: state.firstRowIndex !== 0 || state.firstRowOffset !== 0\n    };\n  }\n\n  var firstIndex = 0;\n  var firstOffset = 0;\n  var lastIndex = undefined;\n\n  if (scrollY <= 0) ; else if (scrollY >= scrollContentHeight - availableHeight) {\n    // Scroll to the last row\n    firstIndex = undefined;\n    lastIndex = rowsCount - 1;\n  } else {\n    // Mark the row which will appear first in the viewport\n    // We use this as our \"marker\" when scrolling even if updating rowOffsets\n    // leads to it not being different from the scrollY specified\n    var newRowIdx = rowOffsetIntervalTree.greatestLowerBound(scrollY);\n    firstIndex = clamp$1(newRowIdx, 0, Math.max(rowsCount - 1, 0)); // Record how far into the first row we should scroll\n    // firstOffset is a negative value representing how much larger scrollY is\n    // than the scroll position of the first row in the viewport\n\n    var firstRowPosition = rowOffsetIntervalTree.sumUntil(firstIndex);\n    firstOffset = firstRowPosition - scrollY;\n  }\n\n  return {\n    firstIndex: firstIndex,\n    firstOffset: firstOffset,\n    lastIndex: lastIndex,\n    // NOTE (jordan) This changed heuristic may give false positives,\n    // but that's fine since it's used as a filter to computeRenderedRows\n    changed: true\n  };\n}\n/**\n * Scroll a specified row into the viewport\n * If the row is before the viewport, it will become the first row in the viewport\n * If the row is after the viewport, it will become the last row in the viewport\n * If the row is in the viewport, do nothing\n *\n * @param {!Object} state\n * @param {number} rowIndex\n * @return {{\n *   firstIndex: number,\n *   firstOffset: number,\n *   lastIndex: number,\n *   changed: boolean,\n * }}\n * @private\n */\n\nfunction scrollToRow(state, rowIndex) {\n  var _scrollbarsVisibleSel2 = scrollbarsVisible$1(state),\n      availableHeight = _scrollbarsVisibleSel2.availableHeight;\n\n  var rowSettings = state.rowSettings,\n      scrollY = state.scrollY;\n\n  var _state$getInternal3 = state.getInternal(),\n      rowOffsetIntervalTree = _state$getInternal3.rowOffsetIntervalTree,\n      storedHeights = _state$getInternal3.storedHeights;\n\n  var rowsCount = rowSettings.rowsCount;\n\n  if (rowsCount === 0) {\n    return {\n      firstIndex: 0,\n      firstOffset: 0,\n      lastIndex: undefined,\n      changed: state.firstRowIndex !== 0 || state.firstRowOffset !== 0\n    };\n  }\n\n  rowIndex = clamp$1(rowIndex, 0, Math.max(rowsCount - 1, 0));\n  updateRowHeight(state, rowIndex);\n  var rowBegin = rowOffsetIntervalTree.sumUntil(rowIndex);\n  var rowEnd = rowBegin + storedHeights[rowIndex];\n  var firstIndex = rowIndex;\n  var lastIndex = undefined;\n\n  if (rowBegin < scrollY) ; else if (scrollY + availableHeight < rowEnd) {\n    // If after the viewport, set as the last row in the viewport\n    firstIndex = undefined;\n    lastIndex = rowIndex;\n  } else {\n    // If already in the viewport, do nothing.\n    return {\n      firstIndex: state.firstRowIndex,\n      firstOffset: state.firstRowOffset,\n      lastIndex: undefined,\n      changed: false\n    };\n  }\n\n  return {\n    firstIndex: firstIndex,\n    firstOffset: 0,\n    lastIndex: lastIndex,\n    changed: true\n  };\n}\n\n/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\n\nfunction isNil(value) {\n  return value == null;\n}\n\nvar isNil_1 = isNil;\n\n/**\n * The base implementation of `_.clamp` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\n\nfunction baseClamp$1(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n  return number;\n}\n\nvar _baseClamp = baseClamp$1;\n\n/** Used to match a single whitespace character. */\n\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex$1(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nvar _trimmedEndIndex = trimmedEndIndex$1;\n\nvar trimmedEndIndex = _trimmedEndIndex;\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim$1(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nvar _baseTrim = baseTrim$1;\n\nvar baseTrim = _baseTrim,\n    isObject = isObject_1,\n    isSymbol = isSymbol_1;\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber$3(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nvar toNumber_1 = toNumber$3;\n\nvar baseClamp = _baseClamp,\n    toNumber$2 = toNumber_1;\n\n/**\n * Clamps `number` within the inclusive `lower` and `upper` bounds.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Number\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n * @example\n *\n * _.clamp(-10, -5, 5);\n * // => -5\n *\n * _.clamp(10, -5, 5);\n * // => 5\n */\nfunction clamp(number, lower, upper) {\n  if (upper === undefined) {\n    upper = lower;\n    lower = undefined;\n  }\n  if (upper !== undefined) {\n    upper = toNumber$2(upper);\n    upper = upper === upper ? upper : 0;\n  }\n  if (lower !== undefined) {\n    lower = toNumber$2(lower);\n    lower = lower === lower ? lower : 0;\n  }\n  return baseClamp(toNumber$2(number), lower, upper);\n}\n\nvar clamp_1 = clamp;\n\nvar arrayPush = _arrayPush,\n    baseFlatten = _baseFlatten,\n    copyArray = _copyArray,\n    isArray$3 = isArray_1;\n\n/**\n * Creates a new array concatenating `array` with any additional arrays\n * and/or values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to concatenate.\n * @param {...*} [values] The values to concatenate.\n * @returns {Array} Returns the new concatenated array.\n * @example\n *\n * var array = [1];\n * var other = _.concat(array, 2, [3], [[4]]);\n *\n * console.log(other);\n * // => [1, 2, 3, [4]]\n *\n * console.log(array);\n * // => [1]\n */\nfunction concat() {\n  var length = arguments.length;\n  if (!length) {\n    return [];\n  }\n  var args = Array(length - 1),\n      array = arguments[0],\n      index = length;\n\n  while (index--) {\n    args[index - 1] = arguments[index];\n  }\n  return arrayPush(isArray$3(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n}\n\nvar concat_1 = concat;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n/**\n * @typedef {{\n *   fixed: boolean,\n *   fixedRight: boolean,\n *   flexGrow: number,\n *   width: number,\n *   groupIdx?: number\n * }} columnDefinition\n */\n\n/**\n * @param {!Array.<columnDefinition>} columnGroupProps\n * @param {!Array.<columnDefinition>} columnProps\n * @param {boolean} scrollEnabledY\n * @param {number} width\n * @return {{\n *   columnGroupProps: !Array.<columnDefinition>,\n *   columnProps: !Array.<columnDefinition>,\n *   availableScrollWidth: number,\n *   fixedColumns: !Array.<columnDefinition>,\n *   fixedColumnGroups: !Array.<columnDefinition>,\n *   fixedRightColumns: !Array.<columnDefinition>,\n *   fixedRightColumnGroups: !Array.<columnDefinition>,\n *   scrollableColumns: !Array.<columnDefinition>,\n *   scrollableColumnGroups: !Array.<columnDefinition>,\n *   maxScrollX: number,\n * }} The total width of all columns.\n */\n\nfunction columnWidths(columnGroupElements, columnElements, scrollEnabledY, width, scrollbarYWidth) {\n  var scrollbarSpace = scrollEnabledY ? scrollbarYWidth : 0;\n  var viewportWidth = width - scrollbarSpace;\n\n  var _flexWidths = flexWidths(columnGroupElements, columnElements, viewportWidth),\n      columnGroupElementsWithFlex = _flexWidths.columnGroupElements,\n      columnElementsWithFlex = _flexWidths.columnElements;\n\n  var _groupElementsByCellG = groupElementsByCellGroup(columnElementsWithFlex),\n      fixedColumns = _groupElementsByCellG.fixed,\n      fixedRightColumns = _groupElementsByCellG.fixedRight,\n      scrollableColumns = _groupElementsByCellG.scrollable;\n\n  var _groupElementsByCellG2 = groupElementsByCellGroup(columnGroupElementsWithFlex),\n      fixedColumnGroups = _groupElementsByCellG2.fixed,\n      fixedRightColumnGroups = _groupElementsByCellG2.fixedRight,\n      scrollableColumnGroups = _groupElementsByCellG2.scrollable;\n\n  var fixedColumnsTotalWidth = getTotalWidth(fixedColumns);\n  var fixedRightColumnsTotalWidth = getTotalWidth(fixedRightColumns);\n  var scrollableColumnsTotalWidth = getTotalWidth(scrollableColumns);\n  var availableScrollWidth = viewportWidth - fixedColumnsTotalWidth - fixedRightColumnsTotalWidth;\n  var maxScrollX = Math.max(0, fixedColumnsTotalWidth + fixedRightColumnsTotalWidth + scrollableColumnsTotalWidth - viewportWidth);\n  return {\n    columnGroupProps: concat_1(fixedColumnGroups, scrollableColumnGroups, fixedRightColumnGroups),\n    columnProps: concat_1(fixedColumns, scrollableColumns, fixedRightColumns),\n    availableScrollWidth: availableScrollWidth,\n    fixedColumns: fixedColumns,\n    fixedRightColumns: fixedRightColumns,\n    scrollableColumns: scrollableColumns,\n    fixedColumnGroups: fixedColumnGroups,\n    fixedRightColumnGroups: fixedRightColumnGroups,\n    scrollableColumnGroups: scrollableColumnGroups,\n    maxScrollX: maxScrollX\n  };\n}\n/**\n * @param {!Array.<columnDefinition>} columnGroupProps\n * @param {!Array.<columnDefinition>} columnProps\n * @param {number} viewportWidth\n * @return {{\n *   columnGroupProps: !Array.<columnDefinition>,\n *   columnProps: !Array.<columnDefinition>\n * }}\n */\n\n\nfunction flexWidths(columnGroupElements, columnElements, viewportWidth) {\n  var columnGroupElementsWithFlex = getEmptyElementsContainer();\n  var columnElementsWithFlex = getEmptyElementsContainer();\n  var columnsWidth = getTotalWidthContainer(columnElements);\n  var remainingFlexGrow = getTotalFlexGrow(columnElements);\n  var remainingFlexWidth = Math.max(viewportWidth - columnsWidth, 0);\n  var columnGroupWidths = []; // calculate widths and offsets for each column based on flex\n\n  for (var cellGroupType in columnElements) {\n    var columnProps = columnElements[cellGroupType];\n    var offset = 0;\n    var columnIndex = 0;\n\n    var _iterator = _createForOfIteratorHelper(columnProps),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var column = _step.value;\n        var flexGrow = column.flexGrow || 0;\n        var flexWidth = 0;\n\n        if (flexGrow) {\n          flexWidth = Math.floor(flexGrow * remainingFlexWidth / remainingFlexGrow);\n        }\n\n        var width = column.width + flexWidth;\n        remainingFlexGrow -= flexGrow;\n        remainingFlexWidth -= flexWidth;\n\n        var newColumn = _extends({}, column, {\n          width: width,\n          offset: offset\n        });\n\n        offset += width;\n        columnGroupWidths[column.groupIdx] = width + (columnGroupWidths[column.groupIdx] || 0);\n        columnElementsWithFlex[cellGroupType][columnIndex] = newColumn;\n        columnIndex++;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } // calculate widths and offsets for each column group\n\n\n  for (var _cellGroupType in columnGroupElements) {\n    var columnGroupProps = columnGroupElements[_cellGroupType];\n    var _offset = 0;\n    var index = 0;\n\n    var _iterator2 = _createForOfIteratorHelper(columnGroupProps),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var columnGroup = _step2.value;\n        var _width = columnGroupWidths[columnGroup.index];\n\n        var newColumnGroup = _extends({}, columnGroup, {\n          width: _width,\n          offset: _offset\n        });\n\n        _offset += _width;\n        columnGroupElementsWithFlex[_cellGroupType][index] = newColumnGroup;\n        index++;\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  return {\n    columnGroupElements: columnGroupElementsWithFlex,\n    columnElements: columnElementsWithFlex\n  };\n}\n/**\n * @param {!Array.<columnDefinition>} elements\n * @return {{\n *   fixedColumns: !Array.<columnDefinition>,\n *   fixedRightColumns: !Array.<columnDefinition>,\n *   scrollableColumns: !Array.<columnDefinition>\n * }}\n */\n\n\nfunction groupElementsByCellGroup(elements) {\n  return {\n    fixed: elements.fixed,\n    fixedRight: elements.fixedRight,\n    scrollable: elements.scrollable\n  };\n}\n\nvar columnWidths$1 = shallowEqualSelector([function (state) {\n  return state.columnGroupElements;\n}, function (state) {\n  return state.columnElements;\n}, function (state) {\n  return scrollbarsVisible$1(state).scrollEnabledY;\n}, function (state) {\n  return state.tableSize.width;\n}, function (state) {\n  return state.scrollbarYWidth;\n}], columnWidths);\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule columnStateHelper\n */\n/**\n * Initialize scrollX state\n *\n * @param {!Object} state\n * @param {!Object} props\n * @param {Object} oldProps\n * @return {!Object}\n */\n\nfunction initialize$1(state, props, oldProps) {\n  var scrollLeft = props.scrollLeft;\n      props.scrollToColumn;\n  var scrollX = state.scrollX;\n\n  if (scrollLeft !== undefined && (!oldProps || scrollLeft !== oldProps.scrollLeft)) {\n    scrollX = scrollLeft;\n  }\n\n  scrollX = scrollTo(state, props, oldProps.scrollToColumn, scrollX);\n\n  var _columnWidths = columnWidths$1(state),\n      maxScrollX = _columnWidths.maxScrollX;\n\n  scrollX = clamp_1(scrollX, 0, maxScrollX);\n\n  _extends(state, {\n    maxScrollX: maxScrollX,\n    scrollX: scrollX\n  });\n}\n/**\n * @param {!Object} state\n * @param {{\n *   scrollToColumn: number,\n *   width: number,\n * }} props\n * @param {number} oldScrollToColumn\n * @param {number} scrollX\n * @return {number} The new scrollX\n */\n\n\nfunction scrollTo(state, props, oldScrollToColumn, scrollX) {\n  var scrollToColumn = props.scrollToColumn;\n\n  if (isNil_1(scrollToColumn)) {\n    return scrollX;\n  }\n\n  var _columnWidths2 = columnWidths$1(state),\n      availableScrollWidth = _columnWidths2.availableScrollWidth,\n      fixedColumns = _columnWidths2.fixedColumns,\n      scrollableColumns = _columnWidths2.scrollableColumns;\n\n  var fixedColumnsCount = fixedColumns.length;\n  var scrollableColumnsCount = scrollableColumns.length;\n  var noScrollableColumns = scrollableColumnsCount === 0;\n  var scrollToUnchanged = scrollToColumn === oldScrollToColumn;\n  var selectedColumnFixed = scrollToColumn < fixedColumnsCount;\n  var selectedColumnFixedRight = scrollToColumn >= fixedColumnsCount + scrollableColumnsCount;\n\n  if (scrollToUnchanged || selectedColumnFixed || selectedColumnFixedRight || noScrollableColumns) {\n    return scrollX;\n  } // Convert column index (0 indexed) to scrollable index (0 indexed)\n  // and clamp to max scrollable index\n\n\n  var clampedColumnIndex = Math.min(scrollToColumn - fixedColumnsCount, scrollableColumns.length - 1); // Compute the width of all columns to the left of the column\n\n  var previousWidth = 0;\n\n  for (var columnIdx = 0; columnIdx < clampedColumnIndex; ++columnIdx) {\n    previousWidth += scrollableColumns[columnIdx].width;\n  } // Get width of specified column\n\n\n  var selectedColumnWidth = scrollableColumns[clampedColumnIndex].width; // Compute the scroll position which sets the column on the right of the viewport\n  // Must scroll at least far enough for end of column (previousWidth + selectedColumnWidth)\n  // to be in viewport.\n\n  var minScrollPosition = previousWidth + selectedColumnWidth - availableScrollWidth; // Handle offscreen to the left\n  // If scrolled less than minimum amount, scroll to minimum amount\n  // so column on right of viewport\n\n  if (scrollX < minScrollPosition) {\n    return minScrollPosition;\n  } // Handle offscreen to the right\n  // If scrolled more than previous columns, at least part of column will be offscreen to left\n  // Scroll so column is flush with left edge of viewport\n\n\n  if (scrollX > previousWidth) {\n    return previousWidth;\n  }\n\n  return scrollX;\n}\n\nvar columnStateHelper = {\n  initialize: initialize$1\n};\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule tableHeights\n */\n/**\n * Compute the necessary heights for rendering parts of the table\n *\n * @param {{\n *   footerHeight: number,\n *   groupHeaderHeight: number,\n *   headerHeight: number,\n * }} elementHeights\n * @param {number|undefined} ownerHeight\n * @param {number} reservedHeight\n * @param {number} scrollContentHeight\n * @param {{\n *   availableHeight: number,\n *   scrollEnabledX: boolean,\n * }} scrollbarsVisible\n * @param {boolean} useMaxHeight\n * @return {{\n *   bodyHeight: number,\n *   bodyOffsetTop: number,\n *   componentHeight: number,\n *   contentHeight: number,\n *   footOffsetTop: number,\n *   scrollbarXOffsetTop: number,\n *   scrollbarYHeight: number,\n *   visibleRowsHeight: number,\n * }}\n */\n\nfunction tableHeights(elementHeights, ownerHeight, reservedHeight, scrollContentHeight, scrollbarsVisible, useMaxHeight, scrollbarXHeight) {\n  var availableHeight = scrollbarsVisible.availableHeight,\n      scrollEnabledX = scrollbarsVisible.scrollEnabledX;\n  var reservedWithScrollbar = reservedHeight;\n\n  if (scrollEnabledX) {\n    reservedWithScrollbar += scrollbarXHeight;\n  } // If less content than space for rows (bodyHeight), then\n  // we should shrink the space for rows to fit our row content (scrollContentHeight).\n\n\n  var bodyHeight = Math.min(availableHeight, scrollContentHeight); // If using max height, component should only be sized to content.\n  // Otherwise use all available height.\n\n  var rowContainerHeight = useMaxHeight ? bodyHeight : availableHeight;\n  var componentHeight = rowContainerHeight + reservedWithScrollbar; // If we have an owner height and it's less than the component height,\n  // adjust visible height so we show footer and scrollbar position at the bottom of owner.\n\n  var visibleRowsHeight = rowContainerHeight;\n\n  if (ownerHeight < componentHeight) {\n    visibleRowsHeight = ownerHeight - reservedWithScrollbar;\n  } // If using max height, virtual row container is scrollContentHeight, otherwise\n  // it is the larger of that or the available height.\n\n\n  var virtualRowContainerHeight = useMaxHeight ? scrollContentHeight : Math.max(scrollContentHeight, availableHeight); // contentHeight is the virtual rows height and reserved height,\n  // or ownerHeight if that's larger\n\n  var contentHeight = virtualRowContainerHeight + reservedWithScrollbar;\n\n  if (ownerHeight) {\n    contentHeight = Math.max(ownerHeight, contentHeight);\n  } // Determine component offsets\n\n\n  var footerHeight = elementHeights.footerHeight,\n      groupHeaderHeight = elementHeights.groupHeaderHeight,\n      headerHeight = elementHeights.headerHeight;\n  var bodyOffsetTop = groupHeaderHeight + headerHeight;\n  var footOffsetTop = bodyOffsetTop + visibleRowsHeight;\n  var scrollbarXOffsetTop = footOffsetTop + footerHeight;\n  var scrollbarYHeight = Math.max(0, footOffsetTop - bodyOffsetTop);\n  return {\n    bodyHeight: bodyHeight,\n    bodyOffsetTop: bodyOffsetTop,\n    componentHeight: componentHeight,\n    contentHeight: contentHeight,\n    footOffsetTop: footOffsetTop,\n    scrollbarXOffsetTop: scrollbarXOffsetTop,\n    scrollbarYHeight: scrollbarYHeight,\n    visibleRowsHeight: visibleRowsHeight\n  };\n}\n\nvar tableHeightsSelector = shallowEqualSelector([function (state) {\n  return state.elementHeights;\n}, function (state) {\n  return state.tableSize.ownerHeight;\n}, function (state) {\n  return roughHeightsSelector(state).reservedHeight;\n}, function (state) {\n  return state.scrollContentHeight;\n}, scrollbarsVisible$1, function (state) {\n  return state.tableSize.useMaxHeight;\n}, function (state) {\n  return state.scrollbarXHeight;\n}], tableHeights);\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule computeRenderedRows\n */\n/**\n * Returns data about the rows to render\n * rows is a map of rowIndexes to render to their heights\n * firstRowIndex & firstRowOffset are calculated based on the lastIndex if\n * specified in scrollAnchor.\n * Otherwise, they are unchanged from the firstIndex & firstOffset scrollAnchor values.\n *\n * @param {!Object} state\n * @param {{\n *   firstIndex: number,\n *   firstOffset: number,\n *   lastIndex: number,\n * }} scrollAnchor\n * @return {!Object} The updated state object\n */\n\nfunction computeRenderedRows(state, scrollAnchor) {\n  var rowRange = calculateRenderedRowRange(state, scrollAnchor);\n  var rowSettings = state.rowSettings,\n      scrollContentHeight = state.scrollContentHeight;\n  var rowsCount = rowSettings.rowsCount;\n\n  var _tableHeightsSelector = tableHeightsSelector(state),\n      bodyHeight = _tableHeightsSelector.bodyHeight;\n\n  var maxScrollY = scrollContentHeight - bodyHeight;\n  var firstRowOffset; // NOTE (jordan) This handles #115 where resizing the viewport may\n  // leave only a subset of rows shown, but no scrollbar to scroll up to the first rows.\n\n  if (maxScrollY === 0) {\n    if (rowRange.firstViewportIdx > 0) {\n      rowRange = calculateRenderedRowRange(state, {\n        firstOffset: 0,\n        lastIndex: rowsCount - 1\n      });\n    }\n\n    firstRowOffset = 0;\n  } else {\n    firstRowOffset = rowRange.firstOffset;\n  }\n\n  var firstRowIndex = rowRange.firstViewportIdx;\n  var endRowIndex = rowRange.endViewportIdx;\n  computeRenderedRowOffsets(state, rowRange, state.scrolling);\n  var scrollY = 0;\n\n  if (rowsCount > 0) {\n    scrollY = state.rowOffsets[rowRange.firstViewportIdx] - firstRowOffset;\n  }\n\n  scrollY = clamp_1(scrollY, 0, maxScrollY);\n\n  _extends(state, {\n    firstRowIndex: firstRowIndex,\n    firstRowOffset: firstRowOffset,\n    endRowIndex: endRowIndex,\n    maxScrollY: maxScrollY,\n    scrollY: scrollY\n  });\n}\n/**\n * Determine the range of rows to render (buffer and viewport)\n * The leading and trailing buffer is based on a fixed count,\n * while the viewport rows are based on their height and the viewport height\n * We use the scrollAnchor to determine what either the first or last row\n * will be, as well as the offset.\n *\n * @param {!Object} state\n * @param {{\n *   firstIndex?: number,\n *   firstOffset: number,\n *   lastIndex: number,\n * }} scrollAnchor\n * @return {{\n *   endBufferIdx: number,\n *   endViewportIdx: number,\n *   firstBufferIdx: number,\n *   firstOffset: number,\n *   firstViewportIdx: number,\n * }}\n * @private\n */\n\nfunction calculateRenderedRowRange(state, scrollAnchor) {\n  var _roughHeightsSelector = roughHeightsSelector(state),\n      bufferRowCount = _roughHeightsSelector.bufferRowCount,\n      maxAvailableHeight = _roughHeightsSelector.maxAvailableHeight;\n\n  var rowsCount = state.rowSettings.rowsCount;\n\n  if (rowsCount === 0) {\n    return {\n      endBufferIdx: 0,\n      endViewportIdx: 0,\n      firstBufferIdx: 0,\n      firstOffset: 0,\n      firstViewportIdx: 0\n    };\n  } // If our first or last index is greater than our rowsCount,\n  // treat it as if the last row is at the bottom of the viewport\n\n\n  var firstIndex = scrollAnchor.firstIndex,\n      firstOffset = scrollAnchor.firstOffset,\n      lastIndex = scrollAnchor.lastIndex;\n\n  if (firstIndex >= rowsCount || lastIndex >= rowsCount) {\n    lastIndex = rowsCount - 1;\n  } // Walk the viewport until filled with rows\n  // If lastIndex is set, walk backward so that row is the last in the viewport\n\n\n  var step = 1;\n  var startIdx = firstIndex;\n  var totalHeight = firstOffset;\n\n  if (lastIndex !== undefined) {\n    step = -1;\n    startIdx = lastIndex;\n    totalHeight = 0;\n  } // Loop to walk the viewport until we've touched enough rows to fill its height\n\n\n  var rowIdx = startIdx;\n  var endIdx = rowIdx;\n\n  while (rowIdx < rowsCount && rowIdx >= 0 && totalHeight < maxAvailableHeight) {\n    totalHeight += updateRowHeight(state, rowIdx);\n    endIdx = rowIdx;\n    rowIdx += step;\n  }\n  /* Handle the case where rows have shrunk and there's not enough content\n     between the start scroll anchor and the end of the table to fill the available space.\n     In this case process earlier rows as needed and act as if we've scrolled to the last row.\n   */\n\n\n  var forceScrollToLastRow = false;\n\n  if (totalHeight < maxAvailableHeight && rowIdx === rowsCount && lastIndex === undefined) {\n    forceScrollToLastRow = true;\n    rowIdx = firstIndex - 1;\n\n    while (rowIdx >= 0 && totalHeight < maxAvailableHeight) {\n      totalHeight += updateRowHeight(state, rowIdx);\n      startIdx = rowIdx;\n      --rowIdx;\n    }\n  } // Loop to walk the leading buffer\n\n\n  var firstViewportIdx = Math.min(startIdx, endIdx);\n  var firstBufferIdx = Math.max(firstViewportIdx - bufferRowCount, 0);\n\n  for (rowIdx = firstBufferIdx; rowIdx < firstViewportIdx; rowIdx++) {\n    updateRowHeight(state, rowIdx);\n  } // Loop to walk the trailing buffer\n\n\n  var endViewportIdx = Math.max(startIdx, endIdx) + 1;\n  var endBufferIdx = Math.min(endViewportIdx + bufferRowCount, rowsCount);\n\n  for (rowIdx = endViewportIdx; rowIdx < endBufferIdx; rowIdx++) {\n    updateRowHeight(state, rowIdx);\n  }\n\n  var _scrollbarsVisibleSel = scrollbarsVisible$1(state),\n      availableHeight = _scrollbarsVisibleSel.availableHeight;\n\n  if (lastIndex !== undefined || forceScrollToLastRow) {\n    // Calculate offset needed to position last row at bottom of viewport\n    // This should be negative and represent how far the first row needs to be offscreen\n    // NOTE (jordan): The first offset should always be 0 when lastIndex is defined\n    // since we don't currently support scrolling the last row into view with an offset.\n    firstOffset = firstOffset + Math.min(availableHeight - totalHeight, 0); // Handle a case where the offset puts the first row fully offscreen\n    // This can happen if availableHeight & maxAvailableHeight are different\n\n    var _state$getInternal = state.getInternal(),\n        storedHeights = _state$getInternal.storedHeights;\n\n    if (-1 * firstOffset >= storedHeights[firstViewportIdx]) {\n      firstViewportIdx += 1;\n      firstOffset += storedHeights[firstViewportIdx];\n    }\n  }\n\n  return {\n    endBufferIdx: endBufferIdx,\n    endViewportIdx: endViewportIdx,\n    firstBufferIdx: firstBufferIdx,\n    firstOffset: firstOffset,\n    firstViewportIdx: firstViewportIdx\n  };\n}\n/**\n * Walk the rows to render and compute the height offsets and\n * positions in the row buffer.\n *\n * @param {!Object} state\n * @param {{\n *   endBufferIdx: number,\n *   endViewportIdx: number,\n *   firstBufferIdx: number,\n *   firstViewportIdx: number,\n * }} rowRange\n * @param {boolean} viewportOnly\n * @private\n */\n\n\nfunction computeRenderedRowOffsets(state, rowRange, viewportOnly) {\n  var _state$getInternal2 = state.getInternal(),\n      rowBufferSet = _state$getInternal2.rowBufferSet,\n      rowOffsetIntervalTree = _state$getInternal2.rowOffsetIntervalTree,\n      storedHeights = _state$getInternal2.storedHeights;\n\n  var endBufferIdx = rowRange.endBufferIdx,\n      endViewportIdx = rowRange.endViewportIdx,\n      firstBufferIdx = rowRange.firstBufferIdx,\n      firstViewportIdx = rowRange.firstViewportIdx;\n  var renderedRowsCount = endBufferIdx - firstBufferIdx;\n\n  if (renderedRowsCount === 0) {\n    state.rowOffsets = {};\n    state.rows = [];\n    return;\n  }\n\n  var startIdx = viewportOnly ? firstViewportIdx : firstBufferIdx;\n  var endIdx = viewportOnly ? endViewportIdx : endBufferIdx; // output for this function\n\n  var rows = []; // state.rows\n\n  var rowOffsets = {}; // state.rowOffsets\n  // incremental way for calculating rowOffset\n\n  var runningOffset = rowOffsetIntervalTree.sumUntil(startIdx); // compute row index and offsets for every rows inside the buffer\n\n  for (var rowIdx = startIdx; rowIdx < endIdx; rowIdx++) {\n    // Update the offset for rendering the row\n    rowOffsets[rowIdx] = runningOffset;\n    runningOffset += storedHeights[rowIdx]; // Get position for the viewport row\n\n    var rowPosition = addRowToBuffer(rowIdx, rowBufferSet, startIdx, endIdx, renderedRowsCount);\n    rows[rowPosition] = rowIdx;\n  } // now we modify the state with the newly calculated rows and offsets\n\n\n  state.rows = rows;\n  state.rowOffsets = rowOffsets;\n}\n/**\n * Add the row to the buffer set if it doesn't exist.\n * If addition isn't possible due to max buffer size, it'll replace an existing element outside the given range.\n *\n * @param {!number} rowIdx\n * @param {!number} rowBufferSet\n * @param {!number} startRange\n * @param {!number} endRange\n * @param {!number} maxBufferSize\n *\n * @return {?number} the position of the row after being added to the buffer set\n * @private\n */\n\n\nfunction addRowToBuffer(rowIdx, rowBufferSet, startRange, endRange, maxBufferSize) {\n  // Check if row already has a position in the buffer\n  var rowPosition = rowBufferSet.getValuePosition(rowIdx); // Request a position in the buffer through eviction of another row\n\n  if (rowPosition === null && rowBufferSet.getSize() >= maxBufferSize) {\n    rowPosition = rowBufferSet.replaceFurthestValuePosition(startRange, endRange - 1, // replaceFurthestValuePosition uses closed interval from startRange to endRange\n    rowIdx);\n  }\n\n  if (rowPosition === null) {\n    rowPosition = rowBufferSet.getNewPositionForValue(rowIdx);\n  }\n\n  return rowPosition;\n}\n\nvar propTypes = {exports: {}};\n\nvar reactIs = {exports: {}};\n\nvar reactIs_production_min = {};\n\n/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar b$1=\"function\"===typeof Symbol&&Symbol.for,c$1=b$1?Symbol.for(\"react.element\"):60103,d$1=b$1?Symbol.for(\"react.portal\"):60106,e$1=b$1?Symbol.for(\"react.fragment\"):60107,f$1=b$1?Symbol.for(\"react.strict_mode\"):60108,g$1=b$1?Symbol.for(\"react.profiler\"):60114,h$1=b$1?Symbol.for(\"react.provider\"):60109,k$1=b$1?Symbol.for(\"react.context\"):60110,l$1=b$1?Symbol.for(\"react.async_mode\"):60111,m$1=b$1?Symbol.for(\"react.concurrent_mode\"):60111,n$1=b$1?Symbol.for(\"react.forward_ref\"):60112,p$1=b$1?Symbol.for(\"react.suspense\"):60113,q$1=b$1?\nSymbol.for(\"react.suspense_list\"):60120,r$1=b$1?Symbol.for(\"react.memo\"):60115,t$1=b$1?Symbol.for(\"react.lazy\"):60116,v$1=b$1?Symbol.for(\"react.block\"):60121,w$1=b$1?Symbol.for(\"react.fundamental\"):60117,x$1=b$1?Symbol.for(\"react.responder\"):60118,y$1=b$1?Symbol.for(\"react.scope\"):60119;\nfunction z$1(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c$1:switch(a=a.type,a){case l$1:case m$1:case e$1:case g$1:case f$1:case p$1:return a;default:switch(a=a&&a.$$typeof,a){case k$1:case n$1:case t$1:case r$1:case h$1:return a;default:return u}}case d$1:return u}}}function A$1(a){return z$1(a)===m$1}reactIs_production_min.AsyncMode=l$1;reactIs_production_min.ConcurrentMode=m$1;reactIs_production_min.ContextConsumer=k$1;reactIs_production_min.ContextProvider=h$1;reactIs_production_min.Element=c$1;reactIs_production_min.ForwardRef=n$1;reactIs_production_min.Fragment=e$1;reactIs_production_min.Lazy=t$1;reactIs_production_min.Memo=r$1;reactIs_production_min.Portal=d$1;\nreactIs_production_min.Profiler=g$1;reactIs_production_min.StrictMode=f$1;reactIs_production_min.Suspense=p$1;reactIs_production_min.isAsyncMode=function(a){return A$1(a)||z$1(a)===l$1};reactIs_production_min.isConcurrentMode=A$1;reactIs_production_min.isContextConsumer=function(a){return z$1(a)===k$1};reactIs_production_min.isContextProvider=function(a){return z$1(a)===h$1};reactIs_production_min.isElement=function(a){return \"object\"===typeof a&&null!==a&&a.$$typeof===c$1};reactIs_production_min.isForwardRef=function(a){return z$1(a)===n$1};reactIs_production_min.isFragment=function(a){return z$1(a)===e$1};reactIs_production_min.isLazy=function(a){return z$1(a)===t$1};\nreactIs_production_min.isMemo=function(a){return z$1(a)===r$1};reactIs_production_min.isPortal=function(a){return z$1(a)===d$1};reactIs_production_min.isProfiler=function(a){return z$1(a)===g$1};reactIs_production_min.isStrictMode=function(a){return z$1(a)===f$1};reactIs_production_min.isSuspense=function(a){return z$1(a)===p$1};\nreactIs_production_min.isValidElementType=function(a){return \"string\"===typeof a||\"function\"===typeof a||a===e$1||a===m$1||a===g$1||a===f$1||a===p$1||a===q$1||\"object\"===typeof a&&null!==a&&(a.$$typeof===t$1||a.$$typeof===r$1||a.$$typeof===h$1||a.$$typeof===k$1||a.$$typeof===n$1||a.$$typeof===w$1||a.$$typeof===x$1||a.$$typeof===y$1||a.$$typeof===v$1)};reactIs_production_min.typeOf=z$1;\n\nvar reactIs_development = {};\n\n/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nreactIs_development.AsyncMode = AsyncMode;\nreactIs_development.ConcurrentMode = ConcurrentMode;\nreactIs_development.ContextConsumer = ContextConsumer;\nreactIs_development.ContextProvider = ContextProvider;\nreactIs_development.Element = Element;\nreactIs_development.ForwardRef = ForwardRef;\nreactIs_development.Fragment = Fragment;\nreactIs_development.Lazy = Lazy;\nreactIs_development.Memo = Memo;\nreactIs_development.Portal = Portal;\nreactIs_development.Profiler = Profiler;\nreactIs_development.StrictMode = StrictMode;\nreactIs_development.Suspense = Suspense;\nreactIs_development.isAsyncMode = isAsyncMode;\nreactIs_development.isConcurrentMode = isConcurrentMode;\nreactIs_development.isContextConsumer = isContextConsumer;\nreactIs_development.isContextProvider = isContextProvider;\nreactIs_development.isElement = isElement;\nreactIs_development.isForwardRef = isForwardRef;\nreactIs_development.isFragment = isFragment;\nreactIs_development.isLazy = isLazy;\nreactIs_development.isMemo = isMemo;\nreactIs_development.isPortal = isPortal;\nreactIs_development.isProfiler = isProfiler;\nreactIs_development.isStrictMode = isStrictMode;\nreactIs_development.isSuspense = isSuspense;\nreactIs_development.isValidElementType = isValidElementType;\nreactIs_development.typeOf = typeOf;\n  })();\n}\n\nif (false) // removed by dead control flow\n{} else {\n  reactIs.exports = reactIs_development;\n}\n\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty$1 = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nvar objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty$1.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar ReactPropTypesSecret$3 = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nvar ReactPropTypesSecret_1 = ReactPropTypesSecret$3;\n\nvar has$2 = Function.call.bind(Object.prototype.hasOwnProperty);\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar printWarning$1 = function() {};\n\nif (true) {\n  var ReactPropTypesSecret$2 = ReactPropTypesSecret_1;\n  var loggedTypeFailures = {};\n  var has$1 = has$2;\n\n  printWarning$1 = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) { /**/ }\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes$1(typeSpecs, values, location, componentName, getStack) {\n  if (true) {\n    for (var typeSpecName in typeSpecs) {\n      if (has$1(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$2);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning$1(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning$1(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes$1.resetWarningCache = function() {\n  if (true) {\n    loggedTypeFailures = {};\n  }\n};\n\nvar checkPropTypes_1 = checkPropTypes$1;\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar ReactIs$1 = reactIs.exports;\nvar assign = objectAssign;\n\nvar ReactPropTypesSecret$1 = ReactPropTypesSecret_1;\nvar has = has$2;\nvar checkPropTypes = checkPropTypes_1;\n\nvar printWarning = function() {};\n\nif (true) {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nvar factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bigint: createPrimitiveTypeChecker('bigint'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message, data) {\n    this.message = message;\n    this.data = data && typeof data === 'object' ? data: {};\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (true) {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret$1) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if ( true && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError(\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\n          {expectedType: expectedType}\n        );\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret$1);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs$1.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (true) {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$1);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var expectedTypes = [];\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret$1);\n        if (checkerResult == null) {\n          return null;\n        }\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n          expectedTypes.push(checkerResult.data.expectedType);\n        }\n      }\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\n    return new PropTypeError(\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\n    );\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$1);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$1);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar ReactPropTypesSecret = ReactPropTypesSecret_1;\n\nfunction emptyFunction$1() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction$1;\n\nvar factoryWithThrowingShims = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  }  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  }  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction$1\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (true) {\n  var ReactIs = reactIs.exports;\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  propTypes.exports = factoryWithTypeCheckers(ReactIs.isElement, throwOnDirectAccess);\n} else // removed by dead control flow\n{}\n\nvar PropTypes = propTypes.exports;\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule cx\n */\nvar slashReplaceRegex = /\\//g;\nvar cache = {};\n\nfunction getClassName(className) {\n  if (cache[className]) {\n    return cache[className];\n  }\n\n  cache[className] = className.replace(slashReplaceRegex, '_');\n  return cache[className];\n}\n/**\n * This function is used to mark string literals representing CSS class names\n * so that they can be transformed statically. This allows for modularization\n * and minification of CSS class names.\n *\n * In static_upstream, this function is actually implemented, but it should\n * eventually be replaced with something more descriptive, and the transform\n * that is used in the main stack should be ported for use elsewhere.\n *\n * @param string|object className to modularize, or an object of key/values.\n *                      In the object case, the values are conditions that\n *                      determine if the className keys should be included.\n * @param [string ...]  Variable list of classNames in the string case.\n * @return string       Renderable space-separated CSS className.\n */\n\n\nfunction cx(classNames) {\n  var classNamesArray;\n\n  if (_typeof(classNames) == 'object') {\n    classNamesArray = Object.keys(classNames).filter(function (className) {\n      return classNames[className];\n    });\n  } else {\n    classNamesArray = Array.prototype.slice.call(arguments);\n  }\n\n  return classNamesArray.map(getClassName).join(' ');\n}\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyFunction\n */\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\n\n\nfunction emptyFunction() {}\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\n\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Keys\n */\nvar Keys = {\n  BACKSPACE: 8,\n  TAB: 9,\n  RETURN: 13,\n  ALT: 18,\n  ESC: 27,\n  SPACE: 32,\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  END: 35,\n  HOME: 36,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n  DELETE: 46,\n  COMMA: 188,\n  PERIOD: 190,\n  A: 65,\n  Z: 90,\n  ZERO: 48,\n  NUMPAD_0: 96,\n  NUMPAD_9: 105\n};\n\n/**\n * Copyright Schrodinger, LLC\n *\n * @providesModule UserAgent_DEPRECATED\n */\n\n/**\n *  Provides entirely client-side User Agent and OS detection. You should prefer\n *  the non-deprecated UserAgent module when possible, which exposes our\n *  authoritative server-side PHP-based detection to the client.\n *\n *  Usage is straightforward:\n *\n *    if (UserAgent_DEPRECATED.ie()) {\n *      //  IE\n *    }\n *\n *  You can also do version checks:\n *\n *    if (UserAgent_DEPRECATED.ie() >= 7) {\n *      //  IE7 or better\n *    }\n *\n *  The browser functions will return NaN if the browser does not match, so\n *  you can also do version compares the other way:\n *\n *    if (UserAgent_DEPRECATED.ie() < 7) {\n *      //  IE6 or worse\n *    }\n *\n *  Note that the version is a float and may include a minor version number,\n *  so you should always use range operators to perform comparisons, not\n *  strict equality.\n *\n *  **Note:** You should **strongly** prefer capability detection to browser\n *  version detection where it's reasonable:\n *\n *    http://www.quirksmode.org/js/support.html\n *\n *  Further, we have a large number of mature wrapper functions and classes\n *  which abstract away many browser irregularities. Check the documentation,\n *  grep for things, or ask on javascript@lists.facebook.com before writing yet\n *  another copy of \"event || window.event\".\n *\n */\nvar _populated = false; // Browsers\n\nvar _ie, _firefox, _opera, _webkit, _chrome; // Actual IE browser for compatibility mode\n\n\nvar _ie_real_version; // Platforms\n\n\nvar _osx, _windows, _linux, _android; // Architectures\n\n\nvar _win64; // Devices\n\n\nvar _iphone, _ipad, _native;\n\nvar _mobile;\n\nfunction _populate() {\n  if (_populated) {\n    return;\n  }\n\n  _populated = true; // To work around buggy JS libraries that can't handle multi-digit\n  // version numbers, Opera 10's user agent string claims it's Opera\n  // 9, then later includes a Version/X.Y field:\n  //\n  // Opera/9.80 (foo) Presto/2.2.15 Version/10.10\n\n  var uas = navigator.userAgent;\n  var agent = /(?:MSIE.(\\d+\\.\\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\\d+\\.\\d+))|(?:Opera(?:.+Version.|.)(\\d+\\.\\d+))|(?:AppleWebKit.(\\d+(?:\\.\\d+)?))|(?:Trident\\/\\d+\\.\\d+.*rv:(\\d+\\.\\d+))/.exec(uas);\n  var os = /(Mac OS X)|(Windows)|(Linux)/.exec(uas);\n  _iphone = /\\b(iPhone|iP[ao]d)/.exec(uas);\n  _ipad = /\\b(iP[ao]d)/.exec(uas);\n  _android = /Android/i.exec(uas);\n  _native = /FBAN\\/\\w+;/i.exec(uas);\n  _mobile = /Mobile/i.exec(uas); // Note that the IE team blog would have you believe you should be checking\n  // for 'Win64; x64'.  But MSDN then reveals that you can actually be coming\n  // from either x64 or ia64;  so ultimately, you should just check for Win64\n  // as in indicator of whether you're in 64-bit IE.  32-bit IE on 64-bit\n  // Windows will send 'WOW64' instead.\n\n  _win64 = !!/Win64/.exec(uas);\n\n  if (agent) {\n    _ie = agent[1] ? parseFloat(agent[1]) : agent[5] ? parseFloat(agent[5]) : NaN; // IE compatibility mode\n\n    if (_ie && document && document.documentMode) {\n      _ie = document.documentMode;\n    } // grab the \"true\" ie version from the trident token if available\n\n\n    var trident = /(?:Trident\\/(\\d+.\\d+))/.exec(uas);\n    _ie_real_version = trident ? parseFloat(trident[1]) + 4 : _ie;\n    _firefox = agent[2] ? parseFloat(agent[2]) : NaN;\n    _opera = agent[3] ? parseFloat(agent[3]) : NaN;\n    _webkit = agent[4] ? parseFloat(agent[4]) : NaN;\n\n    if (_webkit) {\n      // We do not add the regexp to the above test, because it will always\n      // match 'safari' only since 'AppleWebKit' appears before 'Chrome' in\n      // the userAgent string.\n      agent = /(?:Chrome\\/(\\d+\\.\\d+))/.exec(uas);\n      _chrome = agent && agent[1] ? parseFloat(agent[1]) : NaN;\n    } else {\n      _chrome = NaN;\n    }\n  } else {\n    _ie = _firefox = _opera = _chrome = _webkit = NaN;\n  }\n\n  if (os) {\n    if (os[1]) {\n      // Detect OS X version.  If no version number matches, set _osx to true.\n      // Version examples:  10, 10_6_1, 10.7\n      // Parses version number as a float, taking only first two sets of\n      // digits.  If only one set of digits is found, returns just the major\n      // version number.\n      var ver = /(?:Mac OS X (\\d+(?:[._]\\d+)?))/.exec(uas);\n      _osx = ver ? parseFloat(ver[1].replace('_', '.')) : true;\n    } else {\n      _osx = false;\n    }\n\n    _windows = !!os[2];\n    _linux = !!os[3];\n  } else {\n    _osx = _windows = _linux = false;\n  }\n}\n\nvar UserAgent_DEPRECATED = {\n  /**\n   *  Check if the UA is Internet Explorer.\n   *\n   *\n   *  @return float|NaN Version number (if match) or NaN.\n   */\n  ie: function ie() {\n    return _populate() || _ie;\n  },\n\n  /**\n   * Check if we're in Internet Explorer compatibility mode.\n   *\n   * @return bool true if in compatibility mode, false if\n   * not compatibility mode or not ie\n   */\n  ieCompatibilityMode: function ieCompatibilityMode() {\n    return _populate() || _ie_real_version > _ie;\n  },\n\n  /**\n   * Whether the browser is 64-bit IE.  Really, this is kind of weak sauce;  we\n   * only need this because Skype can't handle 64-bit IE yet.  We need to remove\n   * this when we don't need it -- tracked by #601957.\n   */\n  ie64: function ie64() {\n    return UserAgent_DEPRECATED.ie() && _win64;\n  },\n\n  /**\n   *  Check if the UA is Firefox.\n   *\n   *\n   *  @return float|NaN Version number (if match) or NaN.\n   */\n  firefox: function firefox() {\n    return _populate() || _firefox;\n  },\n\n  /**\n   *  Check if the UA is Opera.\n   *\n   *\n   *  @return float|NaN Version number (if match) or NaN.\n   */\n  opera: function opera() {\n    return _populate() || _opera;\n  },\n\n  /**\n   *  Check if the UA is WebKit.\n   *\n   *\n   *  @return float|NaN Version number (if match) or NaN.\n   */\n  webkit: function webkit() {\n    return _populate() || _webkit;\n  },\n\n  /**\n   *  For Push\n   *  WILL BE REMOVED VERY SOON. Use UserAgent_DEPRECATED.webkit\n   */\n  safari: function safari() {\n    return UserAgent_DEPRECATED.webkit();\n  },\n\n  /**\n   *  Check if the UA is a Chrome browser.\n   *\n   *\n   *  @return float|NaN Version number (if match) or NaN.\n   */\n  chrome: function chrome() {\n    return _populate() || _chrome;\n  },\n\n  /**\n   *  Check if the user is running Windows.\n   *\n   *  @return bool `true' if the user's OS is Windows.\n   */\n  windows: function windows() {\n    return _populate() || _windows;\n  },\n\n  /**\n   *  Check if the user is running Mac OS X.\n   *\n   *  @return float|bool   Returns a float if a version number is detected,\n   *                       otherwise true/false.\n   */\n  osx: function osx() {\n    return _populate() || _osx;\n  },\n\n  /**\n   * Check if the user is running Linux.\n   *\n   * @return bool `true' if the user's OS is some flavor of Linux.\n   */\n  linux: function linux() {\n    return _populate() || _linux;\n  },\n\n  /**\n   * Check if the user is running on an iPhone or iPod platform.\n   *\n   * @return bool `true' if the user is running some flavor of the\n   *    iPhone OS.\n   */\n  iphone: function iphone() {\n    return _populate() || _iphone;\n  },\n  mobile: function mobile() {\n    return _populate() || _iphone || _ipad || _android || _mobile;\n  },\n  nativeApp: function nativeApp() {\n    // webviews inside of the native apps\n    return _populate() || _native;\n  },\n  android: function android() {\n    return _populate() || _android;\n  },\n  ipad: function ipad() {\n    return _populate() || _ipad;\n  }\n};\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ExecutionEnvironment\n */\n\nvar canUseDOM$1 = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\n\nvar ExecutionEnvironment = {\n  canUseDOM: canUseDOM$1,\n  canUseWorkers: typeof Worker !== 'undefined',\n  canUseEventListeners: canUseDOM$1 && !!(window.addEventListener || window.attachEvent),\n  canUseViewport: canUseDOM$1 && !!window.screen,\n  isInWorker: !canUseDOM$1 // For now, this is true - might change in the future.\n\n};\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isEventSupported\n */\nvar useHasFeature;\n\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature = document.implementation && document.implementation.hasFeature && // always returns true in newer browsers as per the standard.\n  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n  document.implementation.hasFeature('', '') !== true;\n}\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\n\n\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = (eventName in document);\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule normalizeWheel\n * @typechecks\n */\n\nvar PIXEL_STEP = 10;\nvar LINE_HEIGHT = 40;\nvar PAGE_HEIGHT = 800;\n/**\n * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n * complicated, thus this doc is long and (hopefully) detailed enough to answer\n * your questions.\n *\n * If you need to react to the mouse wheel in a predictable way, this code is\n * like your bestest friend. * hugs *\n *\n * As of today, there are 4 DOM event types you can listen to:\n *\n *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n *\n * So what to do?  The is the best:\n *\n *   normalizeWheel.getEventType();\n *\n * In your event callback, use this code to get sane interpretation of the\n * deltas.  This code will return an object with properties:\n *\n *   spinX   -- normalized spin speed (use for zoom) - x plane\n *   spinY   -- \" - y plane\n *   pixelX  -- normalized distance (to pixels) - x plane\n *   pixelY  -- \" - y plane\n *\n * Wheel values are provided by the browser assuming you are using the wheel to\n * scroll a web page by a number of lines or pixels (or pages).  Values can vary\n * significantly on different platforms and browsers, forgetting that you can\n * scroll at different speeds.  Some devices (like trackpads) emit more events\n * at smaller increments with fine granularity, and some emit massive jumps with\n * linear speed or acceleration.\n *\n * This code does its best to normalize the deltas for you:\n *\n *   - spin is trying to normalize how far the wheel was spun (or trackpad\n *     dragged).  This is super useful for zoom support where you want to\n *     throw away the chunky scroll steps on the PC and make those equal to\n *     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n *     resolve a single slow step on a wheel to 1.\n *\n *   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n *     get the crazy differences between browsers, but at least it'll be in\n *     pixels!\n *\n *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n *     should translate to positive value zooming IN, negative zooming OUT.\n *     This matches the newer 'wheel' event.\n *\n * Why are there spinX, spinY (or pixels)?\n *\n *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n *     with a mouse.  It results in side-scrolling in the browser by default.\n *\n *   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n *\n *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n *     probably is by browsers in conjunction with fancy 3D controllers .. but\n *     you know.\n *\n * Implementation info:\n *\n * Examples of 'wheel' event if you scroll slowly (down) by one step with an\n * average mouse:\n *\n *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n *\n * On the trackpad:\n *\n *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n *\n * On other/older browsers.. it's more complicated as there can be multiple and\n * also missing delta values.\n *\n * The 'wheel' event is more standard:\n *\n * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n *\n * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n * backward compatibility with older events.  Those other values help us\n * better normalize spin speed.  Example of what the browsers provide:\n *\n *                          | event.wheelDelta | event.detail\n *        ------------------+------------------+--------------\n *          Safari v5/OS X  |       -120       |       0\n *          Safari v5/Win7  |       -120       |       0\n *         Chrome v17/OS X  |       -120       |       0\n *         Chrome v17/Win7  |       -120       |       0\n *                IE9/Win7  |       -120       |   undefined\n *         Firefox v4/OS X  |     undefined    |       1\n *         Firefox v4/Win7  |     undefined    |       3\n *\n */\n\nfunction normalizeWheel(\n/*object*/\nevent)\n/*object*/\n{\n  var sX = 0,\n      // spinX, spinY\n  sY = 0,\n      pX = 0,\n      pY = 0; // pixelX, pixelY\n  // Legacy\n\n  if ('detail' in event) {\n    sY = event.detail;\n  }\n\n  if ('wheelDelta' in event) {\n    sY = -event.wheelDelta / 120;\n  }\n\n  if ('wheelDeltaY' in event) {\n    sY = -event.wheelDeltaY / 120;\n  }\n\n  if ('wheelDeltaX' in event) {\n    sX = -event.wheelDeltaX / 120;\n  } // side scrolling on FF with DOMMouseScroll\n\n\n  if ('axis' in event && event.axis === event.HORIZONTAL_AXIS) {\n    sX = sY;\n    sY = 0;\n  }\n\n  pX = sX * PIXEL_STEP;\n  pY = sY * PIXEL_STEP;\n\n  if ('deltaY' in event) {\n    pY = event.deltaY;\n  }\n\n  if ('deltaX' in event) {\n    pX = event.deltaX;\n  }\n\n  if ((pX || pY) && event.deltaMode) {\n    if (event.deltaMode == 1) {\n      // delta in LINE units\n      pX *= LINE_HEIGHT;\n      pY *= LINE_HEIGHT;\n    } else {\n      // delta in PAGE units\n      pX *= PAGE_HEIGHT;\n      pY *= PAGE_HEIGHT;\n    }\n  } // Fall-back if spin cannot be determined\n\n\n  if (pX && !sX) {\n    sX = pX < 1 ? -1 : 1;\n  }\n\n  if (pY && !sY) {\n    sY = pY < 1 ? -1 : 1;\n  }\n\n  return {\n    spinX: sX,\n    spinY: sY,\n    pixelX: pX,\n    pixelY: pY\n  };\n}\n/**\n * The best combination if you prefer spinX + spinY normalization.  It favors\n * the older DOMMouseScroll for Firefox, as FF does not include wheelDelta with\n * 'wheel' event, making spin speed determination impossible.\n */\n\n\nnormalizeWheel.getEventType = function ()\n/*string*/\n{\n  return UserAgent_DEPRECATED.firefox() ? 'DOMMouseScroll' : isEventSupported('wheel') ? 'wheel' : 'mousewheel';\n};\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule nativeRequestAnimationFrame\n */\nvar nativeRequestAnimationFrame = globalThisPolyfill.requestAnimationFrame || globalThisPolyfill.webkitRequestAnimationFrame || globalThisPolyfill.mozRequestAnimationFrame || globalThisPolyfill.oRequestAnimationFrame || globalThisPolyfill.msRequestAnimationFrame;\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule requestAnimationFramePolyfill\n */\nvar lastTime = 0;\n/**\n * Here is the native and polyfill version of requestAnimationFrame.\n * Please don't use it directly and use requestAnimationFrame module instead.\n */\n\nvar requestAnimationFrame = nativeRequestAnimationFrame || function (callback) {\n  var currTime = Date.now();\n  var timeDelay = Math.max(0, 16 - (currTime - lastTime));\n  lastTime = currTime + timeDelay;\n  return globalThisPolyfill.setTimeout(function () {\n    callback(Date.now());\n  }, timeDelay);\n}; // Works around a rare bug in Safari 6 where the first request is never invoked.\n\n\nrequestAnimationFrame(emptyFunction);\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * This is utility that handles onWheel events and calls provided wheel\n * callback with correct frame rate.\n *\n * @providesModule ReactWheelHandler\n * @typechecks\n */\n\nvar ReactWheelHandler = /*#__PURE__*/function () {\n  /**\n   * onWheel is the callback that will be called with right frame rate if\n   * any wheel events happened\n   * onWheel should is to be called with two arguments: deltaX and deltaY in\n   * this order\n   */\n  function ReactWheelHandler(\n  /*function*/\n  onWheel,\n  /*boolean|function*/\n  handleScrollX,\n  /*boolean|function*/\n  handleScrollY,\n  /*?boolean*/\n  isRTL,\n  /*?boolean*/\n  preventDefault,\n  /*?boolean*/\n  stopPropagation) {\n    _classCallCheck$2(this, ReactWheelHandler);\n\n    this._animationFrameID = null;\n    this._deltaX = 0;\n    this._deltaY = 0;\n    this._didWheel = this._didWheel.bind(this);\n    this._rootRef = null;\n\n    if (typeof handleScrollX !== 'function') {\n      handleScrollX = handleScrollX ? emptyFunction.thatReturnsTrue : emptyFunction.thatReturnsFalse;\n    }\n\n    if (typeof handleScrollY !== 'function') {\n      handleScrollY = handleScrollY ? emptyFunction.thatReturnsTrue : emptyFunction.thatReturnsFalse;\n    }\n\n    this._handleScrollX = handleScrollX;\n    this._handleScrollY = handleScrollY;\n    this._preventDefault = preventDefault;\n    this._stopPropagation = stopPropagation;\n    this._onWheelCallback = onWheel;\n    this.onWheel = this.onWheel.bind(this);\n    this._isRTL = isRTL;\n  }\n\n  _createClass$2(ReactWheelHandler, [{\n    key: \"onWheel\",\n    value: function onWheel(\n    /*object*/\n    event) {\n      if (this._preventDefault) {\n        event.preventDefault();\n      }\n\n      var normalizedEvent = normalizeWheel(event); // if shift is held, swap the axis of scrolling.\n\n      if (event.shiftKey && ReactWheelHandler._allowInternalAxesSwap()) {\n        normalizedEvent = ReactWheelHandler._swapNormalizedWheelAxis(normalizedEvent);\n      } else if (!event.shiftKey) {\n        normalizedEvent.pixelX *= this._isRTL ? -1 : 1;\n      }\n\n      var deltaX = this._deltaX + normalizedEvent.pixelX;\n      var deltaY = this._deltaY + normalizedEvent.pixelY;\n\n      var handleScrollX = this._handleScrollX(deltaX, deltaY);\n\n      var handleScrollY = this._handleScrollY(deltaY, deltaX);\n\n      if (!handleScrollX && !handleScrollY) {\n        return;\n      }\n\n      if (this._rootRef && !this._contains(event.target)) {\n        return;\n      }\n\n      this._deltaX += handleScrollX ? normalizedEvent.pixelX : 0;\n      this._deltaY += handleScrollY ? normalizedEvent.pixelY : 0; // This will result in a scroll to the table, so there's no need to let the parent containers scroll\n\n      if (!event.defaultPrevented) {\n        event.preventDefault();\n      }\n\n      var changed;\n\n      if (this._deltaX !== 0 || this._deltaY !== 0) {\n        if (this._stopPropagation) {\n          event.stopPropagation();\n        }\n\n        changed = true;\n      }\n\n      if (changed === true && this._animationFrameID === null) {\n        this._animationFrameID = requestAnimationFrame(this._didWheel);\n      }\n    }\n  }, {\n    key: \"setRoot\",\n    value: function setRoot(rootRef) {\n      this._rootRef = rootRef;\n    }\n  }, {\n    key: \"_didWheel\",\n    value: function _didWheel() {\n      this._animationFrameID = null;\n\n      this._onWheelCallback(this._deltaX, this._deltaY);\n\n      this._deltaX = 0;\n      this._deltaY = 0;\n    }\n  }, {\n    key: \"_contains\",\n    value: function _contains(target) {\n      var parent = target;\n\n      while (parent != document.body) {\n        if (parent === this._rootRef) {\n          return true;\n        }\n\n        parent = parent.parentNode;\n      }\n\n      return false;\n    }\n  }], [{\n    key: \"_swapNormalizedWheelAxis\",\n    value: function _swapNormalizedWheelAxis(\n    /*object*/\n    normalizedEvent)\n    /*object*/\n    {\n      return {\n        spinX: normalizedEvent.spinY,\n        spinY: normalizedEvent.spinX,\n        pixelX: normalizedEvent.pixelY,\n        pixelY: normalizedEvent.pixelX\n      };\n    }\n  }, {\n    key: \"_allowInternalAxesSwap\",\n    value: function _allowInternalAxesSwap()\n    /*boolean*/\n    {\n      return navigator.platform !== 'MacIntel';\n    }\n  }]);\n\n  return ReactWheelHandler;\n}();\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventListener\n * @typechecks\n */\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\n\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @param {object} options Extra options to customize the listener\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, options || false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, options || false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (true) {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n  registerDefault: function registerDefault() {}\n};\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule cancelAnimationFramePolyfill\n */\n/**\n * Here is the native and polyfill version of cancelAnimationFrame.\n * Please don't use it directly and use cancelAnimationFrame module instead.\n */\n\nvar cancelAnimationFrame = globalThisPolyfill.cancelAnimationFrame || globalThisPolyfill.webkitCancelAnimationFrame || globalThisPolyfill.mozCancelAnimationFrame || globalThisPolyfill.oCancelAnimationFrame || globalThisPolyfill.msCancelAnimationFrame || globalThisPolyfill.clearTimeout;\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FixedDataTableEventHelper\n * @typechecks\n */\n/**\n * Gets the horizontal and vertical coordinates from a mouse or touch event.\n */\n\nfunction getCoordinatesFromEvent(\n/*object*/\nevent)\n/*object*/\n{\n  var x = 0;\n  var y = 0;\n\n  if (!event.clientX || !event.clientY) {\n    if (event.touches && event.touches.length > 0) {\n      var touch = event.touches[0];\n      x = touch.clientX;\n      y = touch.clientY;\n    }\n  } else {\n    x = event.clientX;\n    y = event.clientY;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n\nvar FixedDataTableEventHelper = {\n  getCoordinatesFromEvent: getCoordinatesFromEvent\n};\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * This class listens to events on the document and then updates a react\n * component through callbacks.\n * Please note that captureMouseMove must be called in\n * order to initialize listeners on mousemove and mouseup.\n * releaseMouseMove must be called to remove them. It is important to\n * call releaseMouseMoves since mousemove is expensive to listen to.\n *\n * @providesModule DOMMouseMoveTracker\n * @typechecks\n */\n\nvar DOMMouseMoveTracker = /*#__PURE__*/function () {\n  /**\n   * onMove is the callback that will be called on every mouse move.\n   * onMoveEnd is called on mouse up when movement has ended.\n   */\n  function DOMMouseMoveTracker(\n  /*function*/\n  onMove,\n  /*function*/\n  onMoveEnd,\n  /*DOMElement*/\n  domNode,\n  /*boolean*/\n  touchEnabled) {\n    _classCallCheck$2(this, DOMMouseMoveTracker);\n\n    this._isDragging = false;\n    this._isTouchEnabled = touchEnabled;\n    this._animationFrameID = null;\n    this._domNode = domNode;\n    this._onMove = onMove;\n    this._onMoveEnd = onMoveEnd;\n    this._onMouseEnd = this._onMouseEnd.bind(this);\n    this._onMouseMove = this._onMouseMove.bind(this);\n    this._onMouseUp = this._onMouseUp.bind(this);\n    this._didMouseMove = this._didMouseMove.bind(this);\n  }\n  /**\n   * This is to set up the listeners for listening to mouse move\n   * and mouse up signaling the movement has ended. Please note that these\n   * listeners are added at the document.body level. It takes in an event\n   * in order to grab inital state.\n   */\n\n\n  _createClass$2(DOMMouseMoveTracker, [{\n    key: \"captureMouseMoves\",\n    value: function captureMouseMoves(\n    /*object*/\n    event) {\n      if (!this._eventMoveToken && !this._eventUpToken && !this._eventLeaveToken) {\n        this._eventMoveToken = EventListener.listen(this._domNode, 'mousemove', this._onMouseMove);\n        this._eventUpToken = EventListener.listen(this._domNode, 'mouseup', this._onMouseUp);\n        this._eventLeaveToken = EventListener.listen(this._domNode, 'mouseleave', this._onMouseEnd);\n      }\n\n      if (this._isTouchEnabled && !this._eventTouchStartToken && !this._eventTouchMoveToken && !this._eventTouchEndToken) {\n        this._eventTouchStartToken = EventListener.listen(this._domNode, 'touchstart', this._onMouseMove, {\n          passive: false\n        });\n        this._eventTouchMoveToken = EventListener.listen(event.target, 'touchmove', this._onMouseMove, {\n          passive: false\n        });\n        this._eventTouchEndToken = EventListener.listen(event.target, 'touchend', this._onMouseUp, {\n          passive: false\n        });\n      }\n\n      if (!this._isDragging) {\n        this._deltaX = 0;\n        this._deltaY = 0;\n        this._isDragging = true;\n        var coordinates = FixedDataTableEventHelper.getCoordinatesFromEvent(event);\n        var x = coordinates.x;\n        var y = coordinates.y;\n        this._x = x;\n        this._y = y;\n      }\n\n      event.preventDefault();\n    }\n    /**\n     * This releases all of the listeners on document.body.\n     */\n\n  }, {\n    key: \"releaseMouseMoves\",\n    value: function releaseMouseMoves() {\n      if (this._eventMoveToken && this._eventUpToken && this._eventLeaveToken) {\n        this._eventMoveToken.remove();\n\n        this._eventMoveToken = null;\n\n        this._eventUpToken.remove();\n\n        this._eventUpToken = null;\n\n        this._eventLeaveToken.remove();\n\n        this._eventLeaveToken = null;\n      }\n\n      if (this._isTouchEnabled && this._eventTouchStartToken && this._eventTouchMoveToken && this._eventTouchEndToken) {\n        this._eventTouchStartToken.remove();\n\n        this._eventTouchStartToken = null;\n\n        this._eventTouchMoveToken.remove();\n\n        this._eventTouchMoveToken = null;\n\n        this._eventTouchEndToken.remove();\n\n        this._eventTouchEndToken = null;\n      }\n\n      if (this._animationFrameID !== null) {\n        cancelAnimationFrame(this._animationFrameID);\n        this._animationFrameID = null;\n      }\n\n      if (this._isDragging) {\n        this._isDragging = false;\n        this._x = null;\n        this._y = null;\n      }\n    }\n    /**\n     * Returns whether or not if the mouse movement is being tracked.\n     */\n\n  }, {\n    key: \"isDragging\",\n    value: function isDragging()\n    /*boolean*/\n    {\n      return this._isDragging;\n    }\n    /**\n     * Calls onMove passed into constructor and updates internal state.\n     */\n\n  }, {\n    key: \"_onMouseMove\",\n    value: function _onMouseMove(\n    /*object*/\n    event) {\n      var coordinates = FixedDataTableEventHelper.getCoordinatesFromEvent(event);\n      var x = coordinates.x;\n      var y = coordinates.y;\n      this._deltaX += x - this._x;\n      this._deltaY += y - this._y;\n\n      if (this._animationFrameID === null) {\n        // The mouse may move faster then the animation frame does.\n        // Use `requestAnimationFramePolyfill` to avoid over-updating.\n        this._animationFrameID = requestAnimationFrame(this._didMouseMove);\n      }\n\n      this._x = x;\n      this._y = y;\n      event.preventDefault();\n    }\n  }, {\n    key: \"_didMouseMove\",\n    value: function _didMouseMove() {\n      this._animationFrameID = null;\n\n      this._onMove(this._deltaX, this._deltaY);\n\n      this._deltaX = 0;\n      this._deltaY = 0;\n    }\n    /**\n     * Calls onMoveEnd passed into constructor and updates internal state.\n     */\n\n  }, {\n    key: \"_onMouseUp\",\n    value: function _onMouseUp() {\n      if (this._animationFrameID) {\n        this._didMouseMove();\n      }\n\n      this._onMoveEnd(false);\n    }\n    /**\n     * Calls onMoveEnd passed into the constructor, updates internal state, and cancels the move.\n     */\n\n  }, {\n    key: \"_onMouseEnd\",\n    value: function _onMouseEnd() {\n      this._onMoveEnd(true);\n    }\n  }]);\n\n  return DOMMouseMoveTracker;\n}();\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule cssVar\n * @typechecks\n */\n\nvar CSS_VARS = {\n  '--scrollbar-face-active-color': '#7d7d7d',\n  '--scrollbar-face-color': '#c2c2c2',\n  '--scrollbar-face-margin': '4px',\n  '--scrollbar-face-radius': '6px',\n  '--scrollbar-size': '15px',\n  '--scrollbar-track-color': '#fff',\n  '--border-color': '#d3d3d3',\n  '--fbui-white': '#fff',\n  '--fbui-desktop-background-light': '#f6f7f8'\n};\n/**\n * @param {string} name\n */\n\nfunction cssVar(name) {\n  if (CSS_VARS.hasOwnProperty(name)) {\n    return CSS_VARS[name];\n  }\n\n  throw new Error('cssVar' + '(\"' + name + '\"): Unexpected class transformation.');\n}\n\ncssVar.CSS_VARS = CSS_VARS;\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule camelize\n * @typechecks\n */\nvar _hyphenPattern = /-(.)/g;\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\n\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function (_, character) {\n    return character.toUpperCase();\n  });\n}\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getVendorPrefixedName\n * @typechecks\n */\nvar memoized = {};\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\nvar prefixRegex = new RegExp('^(' + prefixes.join('|') + ')');\nvar testStyle = ExecutionEnvironment.canUseDOM ? document.createElement('div').style : {};\n\nfunction getWithPrefix(name) {\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixedName = prefixes[i] + name;\n\n    if (prefixedName in testStyle) {\n      return prefixedName;\n    }\n  }\n\n  return null;\n}\n/**\n * @param {string} property Name of a css property to check for.\n * @return {?string} property name supported in the browser, or null if not\n * supported.\n */\n\n\nfunction getVendorPrefixedName(property) {\n  var name = camelize(property);\n\n  if (memoized[name] === undefined) {\n    var capitalizedName = name.charAt(0).toUpperCase() + name.slice(1);\n\n    if (prefixRegex.test(capitalizedName)) {\n      invariant$1(false, 'getVendorPrefixedName must only be called with unprefixed' + 'CSS property names. It was called with %s', property);\n    }\n\n    memoized[name] = name in testStyle ? name : getWithPrefix(capitalizedName);\n  }\n\n  return memoized[name];\n}\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule BrowserSupportCore\n */\nvar BrowserSupportCore = {\n  /**\n   * @return {bool} True if browser supports css animations.\n   */\n  hasCSSAnimations: function hasCSSAnimations() {\n    return !!getVendorPrefixedName('animationName');\n  },\n\n  /**\n   * @return {bool} True if browser supports css transforms.\n   */\n  hasCSSTransforms: function hasCSSTransforms() {\n    return !!getVendorPrefixedName('transform');\n  },\n\n  /**\n   * @return {bool} True if browser supports css 3d transforms.\n   */\n  hasCSS3DTransforms: function hasCSS3DTransforms() {\n    return !!getVendorPrefixedName('perspective');\n  },\n\n  /**\n   * @return {bool} True if browser supports css transitions.\n   */\n  hasCSSTransitions: function hasCSSTransitions() {\n    return !!getVendorPrefixedName('transition');\n  }\n};\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule translateDOMPositionXY\n * @typechecks\n */\nvar TRANSFORM = getVendorPrefixedName('transform');\ngetVendorPrefixedName('backfaceVisibility');\n\nvar translateDOMPositionXY = function () {\n  if (BrowserSupportCore.hasCSSTransforms()) {\n    var ua = globalThisPolyfill.window ? globalThisPolyfill.window.navigator.userAgent : 'UNKNOWN';\n    var isSafari = /Safari\\//.test(ua) && !/Chrome\\//.test(ua); // It appears that Safari messes up the composition order\n    // of GPU-accelerated layers\n    // (see bug https://bugs.webkit.org/show_bug.cgi?id=61824).\n    // Use 2D translation instead.\n\n    if (!isSafari && BrowserSupportCore.hasCSS3DTransforms()) {\n      return function (\n      /*object*/\n      style,\n      /*number*/\n      x,\n      /*number*/\n      y) {\n        style[TRANSFORM] = 'translate3d(' + x + 'px,' + y + 'px,0)';\n      };\n    } else {\n      return function (\n      /*object*/\n      style,\n      /*number*/\n      x,\n      /*number*/\n      y) {\n        style[TRANSFORM] = 'translate(' + x + 'px,' + y + 'px)';\n      };\n    }\n  } else {\n    return function (\n    /*object*/\n    style,\n    /*number*/\n    x,\n    /*number*/\n    y) {\n      style.left = x + 'px';\n      style.top = y + 'px';\n    };\n  }\n}();\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FixedDataTableTranslateDOMPosition\n * @typechecks\n */\n\nfunction FixedDataTableTranslateDOMPosition(\n/*object*/\nstyle,\n/*number*/\nx,\n/*number*/\ny) {\n  var initialRender = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var isRTL = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  if (style.display === 'none') {\n    return;\n  }\n\n  if (initialRender) {\n    style.left = x + 'px';\n    style.top = y + 'px';\n  } else {\n    if (BrowserSupportCore.hasCSSTransforms()) {\n      x *= isRTL ? -1 : 1;\n    }\n\n    style.left = 0;\n    translateDOMPositionXY(style, x, y);\n  }\n\n  if (isRTL) {\n    style.right = style.left;\n    style.left = 'auto';\n  }\n}\n\nfunction _createSuper$g(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$g(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct$g() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar UNSCROLLABLE_STATE = {\n  position: 0,\n  scrollable: false\n};\nvar FACE_MARGIN = parseInt(cssVar('--scrollbar-face-margin'), 10);\nvar FACE_MARGIN_2 = FACE_MARGIN * 2;\nvar FACE_SIZE_MIN = 30;\nvar KEYBOARD_SCROLL_AMOUNT = 40;\n\nvar Scrollbar = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits$2(Scrollbar, _React$PureComponent);\n\n  var _super = _createSuper$g(Scrollbar);\n\n  function Scrollbar(_props)\n  /*object*/\n  {\n    var _this;\n\n    _classCallCheck$2(this, Scrollbar);\n\n    _this = _super.call(this, _props);\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onRefFace\", function (ref) {\n      return _this._faceRef = ref;\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onRefRoot\", function (ref) {\n      return _this._rootRef = ref;\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"scrollBy\", function (\n    /*number*/\n    delta) {\n      _this._onWheel(delta);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_shouldHandleX\", function\n      /*boolean*/\n    (\n    /*number*/\n    delta) {\n      return _this.props.orientation === 'horizontal' ? _this._shouldHandleChange(delta) : false;\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_shouldHandleY\", function\n      /*boolean*/\n    (\n    /*number*/\n    delta) {\n      return _this.props.orientation !== 'horizontal' ? _this._shouldHandleChange(delta) : false;\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_shouldHandleChange\", function\n      /*boolean*/\n    (\n    /*number*/\n    delta) {\n      var nextState = _this._calculateState(_this.state.position + delta, _this.props.size, _this.props.contentSize, _this.props.orientation);\n\n      return nextState.position !== _this.state.position;\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_calculateState\", function\n      /*object*/\n    (\n    /*number*/\n    position,\n    /*number*/\n    size,\n    /*number*/\n    contentSize,\n    /*string*/\n    orientation) {\n      var clampedSize = Math.max(1, size);\n\n      if (contentSize <= clampedSize) {\n        return UNSCROLLABLE_STATE;\n      }\n\n      var stateKey = \"\".concat(position, \"_\").concat(clampedSize, \"_\").concat(contentSize, \"_\").concat(orientation);\n\n      if (_this._stateKey === stateKey) {\n        return _this._stateForKey;\n      } // There are two types of positions here.\n      // 1) Phisical position: changed by mouse / keyboard\n      // 2) Logical position: changed by props.\n      // The logical position will be kept as as internal state and the `render()`\n      // function will translate it into physical position to render.\n\n\n      var isHorizontal = orientation === 'horizontal';\n      var scale = clampedSize / contentSize;\n      var faceSize = clampedSize * scale;\n\n      if (faceSize < FACE_SIZE_MIN) {\n        scale = (clampedSize - FACE_SIZE_MIN) / (contentSize - clampedSize);\n        faceSize = FACE_SIZE_MIN;\n      }\n\n      var scrollable = true;\n      var maxPosition = contentSize - clampedSize;\n\n      if (position < 0) {\n        position = 0;\n      } else if (position > maxPosition) {\n        position = maxPosition;\n      } // This function should only return flat values that can be compared quiclky\n      // by `ReactComponentWithPureRenderMixin`.\n\n\n      var state = {\n        faceSize: faceSize,\n        isHorizontal: isHorizontal,\n        position: position,\n        scale: scale,\n        scrollable: scrollable\n      }; // cache the state for later use.\n\n      _this._stateKey = stateKey;\n      _this._stateForKey = state;\n      return state;\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onWheelY\", function (\n    /*number*/\n    deltaX,\n    /*number*/\n    deltaY) {\n      _this._onWheel(deltaY);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onWheelX\", function (\n    /*number*/\n    deltaX,\n    /*number*/\n    deltaY) {\n      _this._onWheel(deltaX);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onWheel\", function (\n    /*number*/\n    delta) {\n      var props = _this.props; // The mouse may move faster then the animation frame does.\n      // Use `requestAnimationFrame` to avoid over-updating.\n\n      _this._setNextState(_this._calculateState(_this.state.position + delta, props.size, props.contentSize, props.orientation));\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onMouseDown\", function (\n    /*object*/\n    event) {\n      _this.setState({\n        isDragging: true\n      });\n      /** @type {object} */\n\n\n      var nextState;\n\n      if (event.target !== _this._faceRef) {\n        var _ref, _nativeEvent$offsetX, _ref2, _nativeEvent$offsetY;\n\n        // Both `offsetX` and `layerX` are non-standard DOM property but they are\n        // magically available for browsers somehow.\n        var nativeEvent = event.nativeEvent;\n        var position = _this.state.isHorizontal ? (_ref = (_nativeEvent$offsetX = nativeEvent.offsetX) !== null && _nativeEvent$offsetX !== void 0 ? _nativeEvent$offsetX : nativeEvent.layerX) !== null && _ref !== void 0 ? _ref : _this.getTouchX(nativeEvent) : (_ref2 = (_nativeEvent$offsetY = nativeEvent.offsetY) !== null && _nativeEvent$offsetY !== void 0 ? _nativeEvent$offsetY : nativeEvent.layerY) !== null && _ref2 !== void 0 ? _ref2 : _this.getTouchY(nativeEvent); // MouseDown on the scroll-track directly, move the center of the\n        // scroll-face to the mouse position.\n\n        var props = _this.props;\n        position /= _this.state.scale;\n        nextState = _this._calculateState(position - _this.state.faceSize * 0.5 / _this.state.scale, props.size, props.contentSize, props.orientation);\n      } else {\n        nextState = {};\n      }\n\n      _this._setNextState(nextState);\n\n      _this._mouseMoveTracker.captureMouseMoves(event); // Focus the node so it may receive keyboard event.\n\n\n      _this._rootRef.focus();\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onTouchCancel\", function (\n    /*object*/\n    event) {\n      event.stopPropagation();\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onTouchEnd\", function (\n    /*object*/\n    event) {\n      event.stopPropagation();\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onTouchMove\", function (\n    /*object*/\n    event) {\n      event.stopPropagation();\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onTouchStart\", function (\n    /*object*/\n    event) {\n      event.stopPropagation();\n\n      _this._onMouseDown(event);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onMouseMove\", function (\n    /*number*/\n    deltaX,\n    /*number*/\n    deltaY) {\n      var props = _this.props;\n      var delta = _this.state.isHorizontal ? deltaX * (_this.props.isRTL ? -1 : 1) : deltaY;\n      delta /= _this.state.scale;\n      /**\n       * NOTE (pradeep): Starting from React 18, React batches multiple state updates together for improving performance.\n       *\n       * While this is generally good, the legacy code here (for whatever reason) expects state updates to be\n       * unbatched.\n       * This leads to https://github.com/schrodinger/fixed-data-table-2/issues/668, where the scrollbar doesn't\n       * move as fast as the user's cursor when they drag the scrollbar thumb.\n       * This causes the cursor and the scrollbar to go out of sync, which is a bit frustrating.\n       *\n       * I'm fixing this by using ReactDOM's flushSync API to make sure that the state update is flushed immediately.\n       *\n       * TODO (pradeep): While the fix works, we should really be relying on automatic batching for performance.\n       *\n       * (Read more on automatic batching by React here: https://github.com/reactwg/react-18/discussions/21)\n       */\n\n      var flushSync = react_dom__WEBPACK_IMPORTED_MODULE_1__.flushSync || function (fn) {\n        return fn();\n      }; // ReactDOM.flushSync doesn't exist in older versions of React\n\n\n      flushSync(function () {\n        return _this._setNextState(_this._calculateState(_this.state.position + delta, props.size, props.contentSize, props.orientation));\n      });\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onMouseMoveEnd\", function () {\n      _this._nextState = null;\n\n      _this._mouseMoveTracker.releaseMouseMoves();\n\n      _this.setState({\n        isDragging: false\n      });\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onKeyDown\", function (\n    /*object*/\n    event) {\n      var keyCode = event.keyCode;\n\n      if (keyCode === Keys.TAB) {\n        // Let focus move off the scrollbar.\n        return;\n      }\n\n      var distance = KEYBOARD_SCROLL_AMOUNT;\n      var direction = 0;\n\n      if (_this.state.isHorizontal) {\n        switch (keyCode) {\n          case Keys.HOME:\n            direction = -1;\n            distance = _this.props.contentSize;\n            break;\n\n          case Keys.LEFT:\n            direction = -1;\n            break;\n\n          case Keys.RIGHT:\n            direction = 1;\n            break;\n\n          default:\n            return;\n        }\n      }\n\n      if (!_this.state.isHorizontal) {\n        switch (keyCode) {\n          case Keys.SPACE:\n            if (event.shiftKey) {\n              direction = -1;\n            } else {\n              direction = 1;\n            }\n\n            break;\n\n          case Keys.HOME:\n            direction = -1;\n            distance = _this.props.contentSize;\n            break;\n\n          case Keys.UP:\n            direction = -1;\n            break;\n\n          case Keys.DOWN:\n            direction = 1;\n            break;\n\n          case Keys.PAGE_UP:\n            direction = -1;\n            distance = _this.props.size;\n            break;\n\n          case Keys.PAGE_DOWN:\n            direction = 1;\n            distance = _this.props.size;\n            break;\n\n          default:\n            return;\n        }\n      }\n\n      event.preventDefault();\n      var props = _this.props;\n\n      _this._setNextState(_this._calculateState(_this.state.position + distance * direction, props.size, props.contentSize, props.orientation));\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"getTouchX\", function (\n    /*object*/\n    e) {\n      return Math.round(e.targetTouches[0].clientX - e.target.getBoundingClientRect().x);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"getTouchY\", function (\n    /*object*/\n    e) {\n      return Math.round(e.targetTouches[0].clientY - e.target.getBoundingClientRect().y);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_setNextState\", function (\n    /*object*/\n    nextState,\n    /*?object*/\n    props) {\n      props = props || _this.props;\n      var controlledPosition = props.position;\n      var willScroll = _this.state.position !== nextState.position;\n\n      if (controlledPosition === undefined) {\n        var callback = willScroll ? _this._didScroll : undefined;\n\n        _this.setState(nextState, callback);\n      } else if (controlledPosition === nextState.position) {\n        _this.setState(nextState);\n      } else {\n        // Scrolling is controlled. Don't update the state and let the owner\n        // to update the scrollbar instead.\n        if (nextState.position !== undefined && nextState.position !== _this.state.position) {\n          _this.props.onScroll(nextState.position);\n        }\n\n        return;\n      }\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_didScroll\", function () {\n      _this.props.onScroll(_this.state.position);\n    });\n\n    _this.state = _this._calculateState(_props.position || _props.defaultPosition || 0, _props.size, _props.contentSize, _props.orientation);\n    _this._initialRender = true;\n    return _this;\n  }\n\n  _createClass$2(Scrollbar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var controlledPosition = this.props.position;\n\n      if (controlledPosition === undefined) {\n        this._setNextState(this._calculateState(this.state.position, this.props.size, this.props.contentSize, this.props.orientation));\n      } else {\n        this._setNextState(this._calculateState(controlledPosition, this.props.size, this.props.contentSize, this.props.orientation), this.props);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render()\n    /*?object*/\n    {\n      if (!this.state.scrollable) {\n        return null;\n      }\n\n      var size = this.props.size;\n      /** @type {React.CSSProperties} */\n\n      var mainStyle;\n      /** @type {React.CSSProperties} */\n\n      var faceStyle;\n      var isHorizontal = this.state.isHorizontal;\n      var isVertical = !isHorizontal;\n      var isActive = this.state.isDragging;\n      var faceSize = this.state.faceSize;\n      var isOpaque = this.props.isOpaque;\n      var verticalTop = this.props.verticalTop || 0;\n      var mainClassName = cx({\n        'ScrollbarLayout/main': true,\n        'ScrollbarLayout/mainVertical': isVertical,\n        'ScrollbarLayout/mainHorizontal': isHorizontal,\n        'public/Scrollbar/main': true,\n        'public/Scrollbar/mainOpaque': isOpaque,\n        'public/Scrollbar/mainActive': isActive\n      });\n      var faceClassName = cx({\n        'ScrollbarLayout/face': true,\n        'ScrollbarLayout/faceHorizontal': isHorizontal,\n        'ScrollbarLayout/faceVertical': isVertical,\n        'public/Scrollbar/faceActive': isActive,\n        'public/Scrollbar/face': true\n      });\n      var position = this.state.position * this.state.scale + FACE_MARGIN;\n\n      if (isHorizontal) {\n        mainStyle = {\n          width: size\n        };\n        faceStyle = {\n          width: faceSize - FACE_MARGIN_2,\n          top: 0,\n          bottom: 0\n        };\n        FixedDataTableTranslateDOMPosition(faceStyle, position, 0, this._initialRender, this.props.isRTL);\n      } else {\n        mainStyle = {\n          top: verticalTop,\n          height: size\n        };\n\n        if (this.props.isRTL) {\n          mainStyle.left = mainStyle.right || 0;\n          mainStyle.right = 'auto';\n        }\n\n        faceStyle = {\n          height: faceSize - FACE_MARGIN_2\n        };\n        FixedDataTableTranslateDOMPosition(faceStyle, 0, position, this._initialRender, this.props.isRTL);\n        faceStyle.left = 0;\n        faceStyle.right = 0;\n      }\n\n      mainStyle.touchAction = 'none';\n      mainStyle.zIndex = this.props.zIndex;\n\n      if (this.props.trackColor === 'gray') {\n        mainStyle.backgroundColor = cssVar('--fbui-desktop-background-light');\n      }\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        onKeyDown: this._onKeyDown,\n        onMouseDown: this._onMouseDown,\n        onTouchCancel: this._onTouchCancel,\n        onTouchEnd: this._onTouchEnd,\n        onTouchMove: this._onTouchMove,\n        onTouchStart: this._onTouchStart,\n        className: mainClassName,\n        style: mainStyle,\n        ref: this._onRefRoot\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        ref: this._onRefFace,\n        className: faceClassName,\n        style: faceStyle\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var isHorizontal = this.props.orientation === 'horizontal';\n      var onWheel = isHorizontal ? this._onWheelX : this._onWheelY;\n      this._wheelHandler = new ReactWheelHandler(onWheel, this._shouldHandleX, // Should handle horizontal scroll\n      this._shouldHandleY, // Should handle vertical scroll\n      this.props.isRTL);\n      this._rootRef && this._rootRef.addEventListener('wheel', this._wheelHandler.onWheel, {\n        passive: false\n      });\n      this._mouseMoveTracker = new DOMMouseMoveTracker(this._onMouseMove, this._onMouseMoveEnd, document.documentElement, this.props.touchEnabled);\n\n      if (this.props.position !== undefined && this.state.position !== this.props.position) {\n        this._didScroll();\n      }\n\n      this._initialRender = false;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._rootRef && this._rootRef.removeEventListener('wheel', this._wheelHandler.onWheel, {\n        passive: false\n      });\n      this._nextState = null;\n\n      if (this._mouseMoveTracker) {\n        this._mouseMoveTracker.releaseMouseMoves();\n\n        this._mouseMoveTracker = null;\n      }\n    }\n  }]);\n\n  return Scrollbar;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().PureComponent));\n\n_defineProperty$1(Scrollbar, \"propTypes\", {\n  contentSize: PropTypes.number.isRequired,\n  defaultPosition: PropTypes.number,\n  isOpaque: PropTypes.bool,\n  orientation: PropTypes.oneOf(['vertical', 'horizontal']),\n  onScroll: PropTypes.func,\n  position: PropTypes.number,\n  size: PropTypes.number.isRequired,\n  trackColor: PropTypes.oneOf(['gray']),\n  touchEnabled: PropTypes.bool,\n  zIndex: PropTypes.number,\n  verticalTop: PropTypes.number,\n  isRTL: PropTypes.bool\n});\n\n_defineProperty$1(Scrollbar, \"defaultProps\",\n/*object*/\n{\n  defaultPosition: 0,\n  isOpaque: false,\n  onScroll: emptyFunction,\n  orientation: 'vertical',\n  zIndex: 99\n});\n\nScrollbar.KEYBOARD_SCROLL_AMOUNT = KEYBOARD_SCROLL_AMOUNT;\nScrollbar.SIZE = parseInt(cssVar('--scrollbar-size'), 10);\nScrollbar.OFFSET = 1;\n\nfunction n(n){for(var r=arguments.length,t=Array(r>1?r-1:0),e=1;e<r;e++)t[e-1]=arguments[e];if(true){var i=Y[n],o=i?\"function\"==typeof i?i.apply(null,t):i:\"unknown error nr: \"+n;throw Error(\"[Immer] \"+o)}// removed by dead control flow\n{}}function r(n){return !!n&&!!n[Q]}function t(n){return !!n&&(function(n){if(!n||\"object\"!=typeof n)return !1;var r=Object.getPrototypeOf(n);if(null===r)return !0;var t=Object.hasOwnProperty.call(r,\"constructor\")&&r.constructor;return t===Object||\"function\"==typeof t&&Function.toString.call(t)===Z}(n)||Array.isArray(n)||!!n[L]||!!n.constructor[L]||s(n)||v(n))}function e(t){return r(t)||n(23,t),t[Q].t}function i(n,r,t){void 0===t&&(t=!1),0===o(n)?(t?Object.keys:nn)(n).forEach((function(e){t&&\"symbol\"==typeof e||r(e,n[e],n);})):n.forEach((function(t,e){return r(e,t,n)}));}function o(n){var r=n[Q];return r?r.i>3?r.i-4:r.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0}function u(n,r){return 2===o(n)?n.has(r):Object.prototype.hasOwnProperty.call(n,r)}function a(n,r){return 2===o(n)?n.get(r):n[r]}function f(n,r,t){var e=o(n);2===e?n.set(r,t):3===e?(n.delete(r),n.add(t)):n[r]=t;}function c(n,r){return n===r?0!==n||1/n==1/r:n!=n&&r!=r}function s(n){return X&&n instanceof Map}function v(n){return q&&n instanceof Set}function p(n){return n.o||n.t}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var r=rn(n);delete r[Q];for(var t=nn(r),e=0;e<t.length;e++){var i=t[e],o=r[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(r[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]});}return Object.create(Object.getPrototypeOf(n),r)}function d(n,e){return void 0===e&&(e=!1),y(n)||r(n)||!t(n)?n:(o(n)>1&&(n.set=n.add=n.clear=n.delete=h),Object.freeze(n),e&&i(n,(function(n,r){return d(r,!0)}),!0),n)}function h(){n(2);}function y(n){return null==n||\"object\"!=typeof n||Object.isFrozen(n)}function b(r){var t=tn[r];return t||n(18,r),t}function m(n,r){tn[n]||(tn[n]=r);}function _(){return  false||U||n(0),U}function j(n,r){r&&(b(\"Patches\"),n.u=[],n.s=[],n.v=r);}function O(n){g(n),n.p.forEach(S),n.p=null;}function g(n){n===U&&(U=n.l);}function w(n){return U={p:[],l:U,h:n,m:!0,_:0}}function S(n){var r=n[Q];0===r.i||1===r.i?r.j():r.O=!0;}function P(r,e){e._=e.p.length;var i=e.p[0],o=void 0!==r&&r!==i;return e.h.g||b(\"ES5\").S(e,r,o),o?(i[Q].P&&(O(e),n(4)),t(r)&&(r=M(e,r),e.l||x(e,r)),e.u&&b(\"Patches\").M(i[Q].t,r,e.u,e.s)):r=M(e,i,[]),O(e),e.u&&e.v(e.u,e.s),r!==H?r:void 0}function M(n,r,t){if(y(r))return r;var e=r[Q];if(!e)return i(r,(function(i,o){return A(n,e,r,i,o,t)}),!0),r;if(e.A!==n)return r;if(!e.P)return x(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o;i(3===e.i?new Set(o):o,(function(r,i){return A(n,e,o,r,i,t)})),x(n,o,!1),t&&n.u&&b(\"Patches\").R(e,t,n.u,n.s);}return e.o}function A(e,i,o,a,c,s){if( true&&c===o&&n(5),r(c)){var v=M(e,c,s&&i&&3!==i.i&&!u(i.D,a)?s.concat(a):void 0);if(f(o,a,v),!r(v))return;e.m=!1;}if(t(c)&&!y(c)){if(!e.h.F&&e._<1)return;M(e,c),i&&i.A.l||x(e,c);}}function x(n,r,t){void 0===t&&(t=!1),n.h.F&&n.m&&d(r,t);}function z(n,r){var t=n[Q];return (t?p(t):n)[r]}function I(n,r){if(r in n)for(var t=Object.getPrototypeOf(n);t;){var e=Object.getOwnPropertyDescriptor(t,r);if(e)return e;t=Object.getPrototypeOf(t);}}function k(n){n.P||(n.P=!0,n.l&&k(n.l));}function E(n){n.o||(n.o=l(n.t));}function R(n,r,t){var e=s(r)?b(\"MapSet\").N(r,t):v(r)?b(\"MapSet\").T(r,t):n.g?function(n,r){var t=Array.isArray(n),e={i:t?1:0,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;t&&(i=[e],o=on);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(r,t):b(\"ES5\").J(r,t);return (t?t.A:_()).p.push(e),e}function D(e){return r(e)||n(22,e),function n(r){if(!t(r))return r;var e,u=r[Q],c=o(r);if(u){if(!u.P&&(u.i<4||!b(\"ES5\").K(u)))return u.t;u.I=!0,e=F(r,c),u.I=!1;}else e=F(r,c);return i(e,(function(r,t){u&&a(u.t,r)===t||f(e,r,n(t));})),3===c?new Set(e):e}(e)}function F(n,r){switch(r){case 2:return new Map(n);case 3:return Array.from(n)}return l(n)}function N(){function t(n,r){var t=s[n];return t?t.enumerable=r:s[n]=t={configurable:!0,enumerable:r,get:function(){var r=this[Q];return  true&&f(r),en.get(r,n)},set:function(r){var t=this[Q]; true&&f(t),en.set(t,n,r);}},t}function e(n){for(var r=n.length-1;r>=0;r--){var t=n[r][Q];if(!t.P)switch(t.i){case 5:a(t)&&k(t);break;case 4:o(t)&&k(t);}}}function o(n){for(var r=n.t,t=n.k,e=nn(t),i=e.length-1;i>=0;i--){var o=e[i];if(o!==Q){var a=r[o];if(void 0===a&&!u(r,o))return !0;var f=t[o],s=f&&f[Q];if(s?s.t!==a:!c(f,a))return !0}}var v=!!r[Q];return e.length!==nn(r).length+(v?0:1)}function a(n){var r=n.k;if(r.length!==n.t.length)return !0;var t=Object.getOwnPropertyDescriptor(r,r.length-1);if(t&&!t.get)return !0;for(var e=0;e<r.length;e++)if(!r.hasOwnProperty(e))return !0;return !1}function f(r){r.O&&n(3,JSON.stringify(p(r)));}var s={};m(\"ES5\",{J:function(n,r){var e=Array.isArray(n),i=function(n,r){if(n){for(var e=Array(r.length),i=0;i<r.length;i++)Object.defineProperty(e,\"\"+i,t(i,!0));return e}var o=rn(r);delete o[Q];for(var u=nn(o),a=0;a<u.length;a++){var f=u[a];o[f]=t(f,n||!!o[f].enumerable);}return Object.create(Object.getPrototypeOf(r),o)}(e,n),o={i:e?5:4,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:i,o:null,O:!1,C:!1};return Object.defineProperty(i,Q,{value:o,writable:!0}),i},S:function(n,t,o){o?r(t)&&t[Q].A===n&&e(n.p):(n.u&&function n(r){if(r&&\"object\"==typeof r){var t=r[Q];if(t){var e=t.t,o=t.k,f=t.D,c=t.i;if(4===c)i(o,(function(r){r!==Q&&(void 0!==e[r]||u(e,r)?f[r]||n(o[r]):(f[r]=!0,k(t)));})),i(e,(function(n){void 0!==o[n]||u(o,n)||(f[n]=!1,k(t));}));else if(5===c){if(a(t)&&(k(t),f.length=!0),o.length<e.length)for(var s=o.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<o.length;v++)f[v]=!0;for(var p=Math.min(o.length,e.length),l=0;l<p;l++)o.hasOwnProperty(l)||(f[l]=!0),void 0===f[l]&&n(o[l]);}}}}(n.p[0]),e(n.p));},K:function(n){return 4===n.i?o(n):a(n)}});}var G,U,W=\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol(\"x\"),X=\"undefined\"!=typeof Map,q=\"undefined\"!=typeof Set,B=\"undefined\"!=typeof Proxy&&void 0!==Proxy.revocable&&\"undefined\"!=typeof Reflect,H=W?Symbol.for(\"immer-nothing\"):((G={})[\"immer-nothing\"]=!0,G),L=W?Symbol.for(\"immer-draftable\"):\"__$immer_draftable\",Q=W?Symbol.for(\"immer-state\"):\"__$immer_state\",Y={0:\"Illegal state\",1:\"Immer drafts cannot have computed properties\",2:\"This object has been frozen and should not be mutated\",3:function(n){return \"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \"+n},4:\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",5:\"Immer forbids circular references\",6:\"The first or second argument to `produce` must be a function\",7:\"The third argument to `produce` must be a function or undefined\",8:\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",9:\"First argument to `finishDraft` must be a draft returned by `createDraft`\",10:\"The given draft is already finalized\",11:\"Object.defineProperty() cannot be used on an Immer draft\",12:\"Object.setPrototypeOf() cannot be used on an Immer draft\",13:\"Immer only supports deleting array indices\",14:\"Immer only supports setting array indices and the 'length' property\",15:function(n){return \"Cannot apply patch, path doesn't resolve: \"+n},16:'Sets cannot have \"replace\" patches.',17:function(n){return \"Unsupported patch operation: \"+n},18:function(n){return \"The plugin for '\"+n+\"' has not been loaded into Immer. To enable the plugin, import and call `enable\"+n+\"()` when initializing your application.\"},20:\"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",21:function(n){return \"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '\"+n+\"'\"},22:function(n){return \"'current' expects a draft, got: \"+n},23:function(n){return \"'original' expects a draft, got: \"+n},24:\"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"},Z=\"\"+Object.prototype.constructor,nn=\"undefined\"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,rn=Object.getOwnPropertyDescriptors||function(n){var r={};return nn(n).forEach((function(t){r[t]=Object.getOwnPropertyDescriptor(n,t);})),r},tn={},en={get:function(n,r){if(r===Q)return n;var e=p(n);if(!u(e,r))return function(n,r,t){var e,i=I(r,t);return i?\"value\"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,r);var i=e[r];return n.I||!t(i)?i:i===z(n.t,r)?(E(n),n.o[r]=R(n.A.h,i,n)):i},has:function(n,r){return r in p(n)},ownKeys:function(n){return Reflect.ownKeys(p(n))},set:function(n,r,t){var e=I(p(n),r);if(null==e?void 0:e.set)return e.set.call(n.k,t),!0;if(!n.P){var i=z(p(n),r),o=null==i?void 0:i[Q];if(o&&o.t===t)return n.o[r]=t,n.D[r]=!1,!0;if(c(t,i)&&(void 0!==t||u(n.t,r)))return !0;E(n),k(n);}return n.o[r]===t&&\"number\"!=typeof t&&(void 0!==t||r in n.o)||(n.o[r]=t,n.D[r]=!0,!0)},deleteProperty:function(n,r){return void 0!==z(n.t,r)||r in n.t?(n.D[r]=!1,E(n),k(n)):delete n.D[r],n.o&&delete n.o[r],!0},getOwnPropertyDescriptor:function(n,r){var t=p(n),e=Reflect.getOwnPropertyDescriptor(t,r);return e?{writable:!0,configurable:1!==n.i||\"length\"!==r,enumerable:e.enumerable,value:t[r]}:e},defineProperty:function(){n(11);},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12);}},on={};i(en,(function(n,r){on[n]=function(){return arguments[0]=arguments[0][0],r.apply(this,arguments)};})),on.deleteProperty=function(r,t){return  true&&isNaN(parseInt(t))&&n(13),on.set.call(this,r,t,void 0)},on.set=function(r,t,e){return  true&&\"length\"!==t&&isNaN(parseInt(t))&&n(14),en.set.call(this,r[0],t,e,r[0])};var un=function(){function e(r){var e=this;this.g=B,this.F=!0,this.produce=function(r,i,o){if(\"function\"==typeof r&&\"function\"!=typeof i){var u=i;i=r;var a=e;return function(n){var r=this;void 0===n&&(n=u);for(var t=arguments.length,e=Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var t;return (t=i).call.apply(t,[r,n].concat(e))}))}}var f;if(\"function\"!=typeof i&&n(6),void 0!==o&&\"function\"!=typeof o&&n(7),t(r)){var c=w(e),s=R(e,r,void 0),v=!0;try{f=i(s),v=!1;}finally{v?O(c):g(c);}return \"undefined\"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j(c,o),P(n,c)}),(function(n){throw O(c),n})):(j(c,o),P(f,c))}if(!r||\"object\"!=typeof r){if(void 0===(f=i(r))&&(f=r),f===H&&(f=void 0),e.F&&d(f,!0),o){var p=[],l=[];b(\"Patches\").M(r,f,p,l),o(p,l);}return f}n(21,r);},this.produceWithPatches=function(n,r){if(\"function\"==typeof n)return function(r){for(var t=arguments.length,i=Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];return e.produceWithPatches(r,(function(r){return n.apply(void 0,[r].concat(i))}))};var t,i,o=e.produce(n,r,(function(n,r){t=n,i=r;}));return \"undefined\"!=typeof Promise&&o instanceof Promise?o.then((function(n){return [n,t,i]})):[o,t,i]},\"boolean\"==typeof(null==r?void 0:r.useProxies)&&this.setUseProxies(r.useProxies),\"boolean\"==typeof(null==r?void 0:r.autoFreeze)&&this.setAutoFreeze(r.autoFreeze);}var i=e.prototype;return i.createDraft=function(e){t(e)||n(8),r(e)&&(e=D(e));var i=w(this),o=R(this,e,void 0);return o[Q].C=!0,g(i),o},i.finishDraft=function(r,t){var e=r&&r[Q]; true&&(e&&e.C||n(9),e.I&&n(10));var i=e.A;return j(i,t),P(void 0,i)},i.setAutoFreeze=function(n){this.F=n;},i.setUseProxies=function(r){r&&!B&&n(20),this.g=r;},i.applyPatches=function(n,t){var e;for(e=t.length-1;e>=0;e--){var i=t[e];if(0===i.path.length&&\"replace\"===i.op){n=i.value;break}}e>-1&&(t=t.slice(e+1));var o=b(\"Patches\").$;return r(n)?o(n,t):this.produce(n,(function(n){return o(n,t)}))},e}(),an=new un,fn=an.produce;an.produceWithPatches.bind(an);an.setAutoFreeze.bind(an);an.setUseProxies.bind(an);an.applyPatches.bind(an);an.createDraft.bind(an);an.finishDraft.bind(an);var createNextState2 = fn;\n\n/** A function that accepts a potential \"extra argument\" value to be injected later,\r\n * and returns an instance of the thunk middleware that uses that value\r\n */\nfunction createThunkMiddleware(extraArgument) {\n  // Standard Redux middleware definition pattern:\n  // See: https://redux.js.org/tutorials/fundamentals/part-4-store#writing-custom-middleware\n  var middleware = function middleware(_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        // The thunk middleware looks for any functions that were passed to `store.dispatch`.\n        // If this \"action\" is really a function, call it and return the result.\n        if (typeof action === 'function') {\n          // Inject the store's `dispatch` and `getState` methods, as well as any \"extra arg\"\n          return action(dispatch, getState, extraArgument);\n        } // Otherwise, pass the action down the middleware chain as usual\n\n\n        return next(action);\n      };\n    };\n  };\n\n  return middleware;\n}\n\nvar thunk = createThunkMiddleware(); // Attach the factory function so users can create a customized version\n// with whatever \"extra arg\" they want to inject into their thunks\n\nthunk.withExtraArgument = createThunkMiddleware;\nvar thunkMiddleware = thunk;\n\nvar __extends = ( false) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n( false) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __spreadArray = ( false) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp = function (obj, key, value) { return key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value: value }) : obj[key] = value; };\r\nvar __spreadValues = function (a, b) {\r\n    for (var prop in b || (b = {}))\r\n        if (__hasOwnProp.call(b, prop))\r\n            __defNormalProp(a, prop, b[prop]);\r\n    if (__getOwnPropSymbols)\r\n        for (var _i = 0, _c = __getOwnPropSymbols(b); _i < _c.length; _i++) {\r\n            var prop = _c[_i];\r\n            if (__propIsEnum.call(b, prop))\r\n                __defNormalProp(a, prop, b[prop]);\r\n        }\r\n    return a;\r\n};\r\nvar composeWithDevTools = typeof window !== \"undefined\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : function () {\r\n    if (arguments.length === 0)\r\n        return void 0;\r\n    if (typeof arguments[0] === \"object\")\r\n        return compose;\r\n    return compose.apply(null, arguments);\r\n};\r\n// src/isPlainObject.ts\r\nfunction isPlainObject(value) {\r\n    if (typeof value !== \"object\" || value === null)\r\n        return false;\r\n    var proto = Object.getPrototypeOf(value);\r\n    if (proto === null)\r\n        return true;\r\n    var baseProto = proto;\r\n    while (Object.getPrototypeOf(baseProto) !== null) {\r\n        baseProto = Object.getPrototypeOf(baseProto);\r\n    }\r\n    return proto === baseProto;\r\n}\r\n// src/utils.ts\r\nfunction getTimeMeasureUtils(maxDelay, fnName) {\r\n    var elapsed = 0;\r\n    return {\r\n        measureTime: function (fn) {\r\n            var started = Date.now();\r\n            try {\r\n                return fn();\r\n            }\r\n            finally {\r\n                var finished = Date.now();\r\n                elapsed += finished - started;\r\n            }\r\n        },\r\n        warnIfExceeded: function () {\r\n            if (elapsed > maxDelay) {\r\n                console.warn(fnName + \" took \" + elapsed + \"ms, which is more than the warning threshold of \" + maxDelay + \"ms. \\nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\\nIt is disabled in production builds, so you don't need to worry about that.\");\r\n            }\r\n        }\r\n    };\r\n}\r\nvar MiddlewareArray = /** @class */ (function (_super) {\r\n    __extends(MiddlewareArray, _super);\r\n    function MiddlewareArray() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var _this = _super.apply(this, args) || this;\r\n        Object.setPrototypeOf(_this, MiddlewareArray.prototype);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(MiddlewareArray, Symbol.species, {\r\n        get: function () {\r\n            return MiddlewareArray;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    MiddlewareArray.prototype.concat = function () {\r\n        var arr = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            arr[_i] = arguments[_i];\r\n        }\r\n        return _super.prototype.concat.apply(this, arr);\r\n    };\r\n    MiddlewareArray.prototype.prepend = function () {\r\n        var arr = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            arr[_i] = arguments[_i];\r\n        }\r\n        if (arr.length === 1 && Array.isArray(arr[0])) {\r\n            return new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], arr[0].concat(this))))();\r\n        }\r\n        return new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], arr.concat(this))))();\r\n    };\r\n    return MiddlewareArray;\r\n}(Array));\r\n// src/immutableStateInvariantMiddleware.ts\r\nvar isProduction = \"development\" === \"production\";\r\nvar prefix = \"Invariant failed\";\r\nfunction invariant(condition, message) {\r\n    if (condition) {\r\n        return;\r\n    }\r\n    if (isProduction) {\r\n        throw new Error(prefix);\r\n    }\r\n    throw new Error(prefix + \": \" + (message || \"\"));\r\n}\r\nfunction stringify(obj, serializer, indent, decycler) {\r\n    return JSON.stringify(obj, getSerialize(serializer, decycler), indent);\r\n}\r\nfunction getSerialize(serializer, decycler) {\r\n    var stack = [], keys = [];\r\n    if (!decycler)\r\n        decycler = function (_, value) {\r\n            if (stack[0] === value)\r\n                return \"[Circular ~]\";\r\n            return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\";\r\n        };\r\n    return function (key, value) {\r\n        if (stack.length > 0) {\r\n            var thisPos = stack.indexOf(this);\r\n            ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);\r\n            ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);\r\n            if (~stack.indexOf(value))\r\n                value = decycler.call(this, key, value);\r\n        }\r\n        else\r\n            stack.push(value);\r\n        return serializer == null ? value : serializer.call(this, key, value);\r\n    };\r\n}\r\nfunction isImmutableDefault(value) {\r\n    return typeof value !== \"object\" || value === null || typeof value === \"undefined\" || Object.isFrozen(value);\r\n}\r\nfunction trackForMutations(isImmutable, ignorePaths, obj) {\r\n    var trackedProperties = trackProperties(isImmutable, ignorePaths, obj);\r\n    return {\r\n        detectMutations: function () {\r\n            return detectMutations(isImmutable, ignorePaths, trackedProperties, obj);\r\n        }\r\n    };\r\n}\r\nfunction trackProperties(isImmutable, ignorePaths, obj, path) {\r\n    if (ignorePaths === void 0) { ignorePaths = []; }\r\n    if (path === void 0) { path = \"\"; }\r\n    var tracked = { value: obj };\r\n    if (!isImmutable(obj)) {\r\n        tracked.children = {};\r\n        for (var key in obj) {\r\n            var childPath = path ? path + \".\" + key : key;\r\n            if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {\r\n                continue;\r\n            }\r\n            tracked.children[key] = trackProperties(isImmutable, ignorePaths, obj[key], childPath);\r\n        }\r\n    }\r\n    return tracked;\r\n}\r\nfunction detectMutations(isImmutable, ignorePaths, trackedProperty, obj, sameParentRef, path) {\r\n    if (ignorePaths === void 0) { ignorePaths = []; }\r\n    if (sameParentRef === void 0) { sameParentRef = false; }\r\n    if (path === void 0) { path = \"\"; }\r\n    var prevObj = trackedProperty ? trackedProperty.value : void 0;\r\n    var sameRef = prevObj === obj;\r\n    if (sameParentRef && !sameRef && !Number.isNaN(obj)) {\r\n        return { wasMutated: true, path: path };\r\n    }\r\n    if (isImmutable(prevObj) || isImmutable(obj)) {\r\n        return { wasMutated: false };\r\n    }\r\n    var keysToDetect = {};\r\n    for (var key in trackedProperty.children) {\r\n        keysToDetect[key] = true;\r\n    }\r\n    for (var key in obj) {\r\n        keysToDetect[key] = true;\r\n    }\r\n    for (var key in keysToDetect) {\r\n        var childPath = path ? path + \".\" + key : key;\r\n        if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {\r\n            continue;\r\n        }\r\n        var result = detectMutations(isImmutable, ignorePaths, trackedProperty.children[key], obj[key], sameRef, childPath);\r\n        if (result.wasMutated) {\r\n            return result;\r\n        }\r\n    }\r\n    return { wasMutated: false };\r\n}\r\nfunction createImmutableStateInvariantMiddleware(options) {\r\n    if (options === void 0) { options = {}; }\r\n    if (false) // removed by dead control flow\n{}\r\n    var _c = options.isImmutable, isImmutable = _c === void 0 ? isImmutableDefault : _c, ignoredPaths = options.ignoredPaths, _d = options.warnAfter, warnAfter = _d === void 0 ? 32 : _d, ignore = options.ignore;\r\n    ignoredPaths = ignoredPaths || ignore;\r\n    var track = trackForMutations.bind(null, isImmutable, ignoredPaths);\r\n    return function (_c) {\r\n        var getState = _c.getState;\r\n        var state = getState();\r\n        var tracker = track(state);\r\n        var result;\r\n        return function (next) { return function (action) {\r\n            var measureUtils = getTimeMeasureUtils(warnAfter, \"ImmutableStateInvariantMiddleware\");\r\n            measureUtils.measureTime(function () {\r\n                state = getState();\r\n                result = tracker.detectMutations();\r\n                tracker = track(state);\r\n                invariant(!result.wasMutated, \"A state mutation was detected between dispatches, in the path '\" + (result.path || \"\") + \"'.  This may cause incorrect behavior. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)\");\r\n            });\r\n            var dispatchedAction = next(action);\r\n            measureUtils.measureTime(function () {\r\n                state = getState();\r\n                result = tracker.detectMutations();\r\n                tracker = track(state);\r\n                result.wasMutated && invariant(!result.wasMutated, \"A state mutation was detected inside a dispatch, in the path: \" + (result.path || \"\") + \". Take a look at the reducer(s) handling the action \" + stringify(action) + \". (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)\");\r\n            });\r\n            measureUtils.warnIfExceeded();\r\n            return dispatchedAction;\r\n        }; };\r\n    };\r\n}\r\n// src/serializableStateInvariantMiddleware.ts\r\nfunction isPlain(val) {\r\n    var type = typeof val;\r\n    return type === \"undefined\" || val === null || type === \"string\" || type === \"boolean\" || type === \"number\" || Array.isArray(val) || isPlainObject(val);\r\n}\r\nfunction findNonSerializableValue(value, path, isSerializable, getEntries, ignoredPaths) {\r\n    if (path === void 0) { path = \"\"; }\r\n    if (isSerializable === void 0) { isSerializable = isPlain; }\r\n    if (ignoredPaths === void 0) { ignoredPaths = []; }\r\n    var foundNestedSerializable;\r\n    if (!isSerializable(value)) {\r\n        return {\r\n            keyPath: path || \"<root>\",\r\n            value: value\r\n        };\r\n    }\r\n    if (typeof value !== \"object\" || value === null) {\r\n        return false;\r\n    }\r\n    var entries = getEntries != null ? getEntries(value) : Object.entries(value);\r\n    var hasIgnoredPaths = ignoredPaths.length > 0;\r\n    for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\r\n        var _c = entries_1[_i], key = _c[0], nestedValue = _c[1];\r\n        var nestedPath = path ? path + \".\" + key : key;\r\n        if (hasIgnoredPaths && ignoredPaths.indexOf(nestedPath) >= 0) {\r\n            continue;\r\n        }\r\n        if (!isSerializable(nestedValue)) {\r\n            return {\r\n                keyPath: nestedPath,\r\n                value: nestedValue\r\n            };\r\n        }\r\n        if (typeof nestedValue === \"object\") {\r\n            foundNestedSerializable = findNonSerializableValue(nestedValue, nestedPath, isSerializable, getEntries, ignoredPaths);\r\n            if (foundNestedSerializable) {\r\n                return foundNestedSerializable;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction createSerializableStateInvariantMiddleware(options) {\r\n    if (options === void 0) { options = {}; }\r\n    if (false) // removed by dead control flow\n{}\r\n    var _c = options.isSerializable, isSerializable = _c === void 0 ? isPlain : _c, getEntries = options.getEntries, _d = options.ignoredActions, ignoredActions = _d === void 0 ? [] : _d, _e = options.ignoredActionPaths, ignoredActionPaths = _e === void 0 ? [\"meta.arg\", \"meta.baseQueryMeta\"] : _e, _f = options.ignoredPaths, ignoredPaths = _f === void 0 ? [] : _f, _g = options.warnAfter, warnAfter = _g === void 0 ? 32 : _g, _h = options.ignoreState, ignoreState = _h === void 0 ? false : _h, _j = options.ignoreActions, ignoreActions = _j === void 0 ? false : _j;\r\n    return function (storeAPI) { return function (next) { return function (action) {\r\n        var result = next(action);\r\n        var measureUtils = getTimeMeasureUtils(warnAfter, \"SerializableStateInvariantMiddleware\");\r\n        if (!ignoreActions && !(ignoredActions.length && ignoredActions.indexOf(action.type) !== -1)) {\r\n            measureUtils.measureTime(function () {\r\n                var foundActionNonSerializableValue = findNonSerializableValue(action, \"\", isSerializable, getEntries, ignoredActionPaths);\r\n                if (foundActionNonSerializableValue) {\r\n                    var keyPath = foundActionNonSerializableValue.keyPath, value = foundActionNonSerializableValue.value;\r\n                    console.error(\"A non-serializable value was detected in an action, in the path: `\" + keyPath + \"`. Value:\", value, \"\\nTake a look at the logic that dispatched this action: \", action, \"\\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)\", \"\\n(To allow non-serializable values see: https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data)\");\r\n                }\r\n            });\r\n        }\r\n        if (!ignoreState) {\r\n            measureUtils.measureTime(function () {\r\n                var state = storeAPI.getState();\r\n                var foundStateNonSerializableValue = findNonSerializableValue(state, \"\", isSerializable, getEntries, ignoredPaths);\r\n                if (foundStateNonSerializableValue) {\r\n                    var keyPath = foundStateNonSerializableValue.keyPath, value = foundStateNonSerializableValue.value;\r\n                    console.error(\"A non-serializable value was detected in the state, in the path: `\" + keyPath + \"`. Value:\", value, \"\\nTake a look at the reducer(s) handling this action type: \" + action.type + \".\\n(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)\");\r\n                }\r\n            });\r\n            measureUtils.warnIfExceeded();\r\n        }\r\n        return result;\r\n    }; }; };\r\n}\r\n// src/getDefaultMiddleware.ts\r\nfunction isBoolean(x) {\r\n    return typeof x === \"boolean\";\r\n}\r\nfunction curryGetDefaultMiddleware() {\r\n    return function curriedGetDefaultMiddleware(options) {\r\n        return getDefaultMiddleware(options);\r\n    };\r\n}\r\nfunction getDefaultMiddleware(options) {\r\n    if (options === void 0) { options = {}; }\r\n    var _c = options.thunk, thunk = _c === void 0 ? true : _c, _d = options.immutableCheck, immutableCheck = _d === void 0 ? true : _d, _e = options.serializableCheck, serializableCheck = _e === void 0 ? true : _e;\r\n    var middlewareArray = new MiddlewareArray();\r\n    if (thunk) {\r\n        if (isBoolean(thunk)) {\r\n            middlewareArray.push(thunkMiddleware);\r\n        }\r\n        else {\r\n            middlewareArray.push(thunkMiddleware.withExtraArgument(thunk.extraArgument));\r\n        }\r\n    }\r\n    if (true) {\r\n        if (immutableCheck) {\r\n            var immutableOptions = {};\r\n            if (!isBoolean(immutableCheck)) {\r\n                immutableOptions = immutableCheck;\r\n            }\r\n            middlewareArray.unshift(createImmutableStateInvariantMiddleware(immutableOptions));\r\n        }\r\n        if (serializableCheck) {\r\n            var serializableOptions = {};\r\n            if (!isBoolean(serializableCheck)) {\r\n                serializableOptions = serializableCheck;\r\n            }\r\n            middlewareArray.push(createSerializableStateInvariantMiddleware(serializableOptions));\r\n        }\r\n    }\r\n    return middlewareArray;\r\n}\r\n// src/configureStore.ts\r\nvar IS_PRODUCTION = \"development\" === \"production\";\r\nfunction configureStore(options) {\r\n    var curriedGetDefaultMiddleware = curryGetDefaultMiddleware();\r\n    var _c = options || {}, _d = _c.reducer, reducer = _d === void 0 ? void 0 : _d, _e = _c.middleware, middleware = _e === void 0 ? curriedGetDefaultMiddleware() : _e, _f = _c.devTools, devTools = _f === void 0 ? true : _f, _g = _c.preloadedState, preloadedState = _g === void 0 ? void 0 : _g, _h = _c.enhancers, enhancers = _h === void 0 ? void 0 : _h;\r\n    var rootReducer;\r\n    if (typeof reducer === \"function\") {\r\n        rootReducer = reducer;\r\n    }\r\n    else if (isPlainObject(reducer)) {\r\n        rootReducer = combineReducers(reducer);\r\n    }\r\n    else {\r\n        throw new Error('\"reducer\" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');\r\n    }\r\n    var finalMiddleware = middleware;\r\n    if (typeof finalMiddleware === \"function\") {\r\n        finalMiddleware = finalMiddleware(curriedGetDefaultMiddleware);\r\n        if (!IS_PRODUCTION && !Array.isArray(finalMiddleware)) {\r\n            throw new Error(\"when using a middleware builder function, an array of middleware must be returned\");\r\n        }\r\n    }\r\n    if (!IS_PRODUCTION && finalMiddleware.some(function (item) { return typeof item !== \"function\"; })) {\r\n        throw new Error(\"each middleware provided to configureStore must be a function\");\r\n    }\r\n    var middlewareEnhancer = applyMiddleware.apply(void 0, finalMiddleware);\r\n    var finalCompose = compose;\r\n    if (devTools) {\r\n        finalCompose = composeWithDevTools(__spreadValues({\r\n            trace: !IS_PRODUCTION\r\n        }, typeof devTools === \"object\" && devTools));\r\n    }\r\n    var storeEnhancers = [middlewareEnhancer];\r\n    if (Array.isArray(enhancers)) {\r\n        storeEnhancers = __spreadArray([middlewareEnhancer], enhancers);\r\n    }\r\n    else if (typeof enhancers === \"function\") {\r\n        storeEnhancers = enhancers(storeEnhancers);\r\n    }\r\n    var composedEnhancer = finalCompose.apply(void 0, storeEnhancers);\r\n    return createStore(rootReducer, preloadedState, composedEnhancer);\r\n}\r\n// src/createAction.ts\r\nfunction createAction(type, prepareAction) {\r\n    function actionCreator() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (prepareAction) {\r\n            var prepared = prepareAction.apply(void 0, args);\r\n            if (!prepared) {\r\n                throw new Error(\"prepareAction did not return an object\");\r\n            }\r\n            return __spreadValues(__spreadValues({\r\n                type: type,\r\n                payload: prepared.payload\r\n            }, \"meta\" in prepared && { meta: prepared.meta }), \"error\" in prepared && { error: prepared.error });\r\n        }\r\n        return { type: type, payload: args[0] };\r\n    }\r\n    actionCreator.toString = function () { return \"\" + type; };\r\n    actionCreator.type = type;\r\n    actionCreator.match = function (action) { return action.type === type; };\r\n    return actionCreator;\r\n}\r\n// src/mapBuilders.ts\r\nfunction executeReducerBuilderCallback(builderCallback) {\r\n    var actionsMap = {};\r\n    var actionMatchers = [];\r\n    var defaultCaseReducer;\r\n    var builder = {\r\n        addCase: function (typeOrActionCreator, reducer) {\r\n            if (true) {\r\n                if (actionMatchers.length > 0) {\r\n                    throw new Error(\"`builder.addCase` should only be called before calling `builder.addMatcher`\");\r\n                }\r\n                if (defaultCaseReducer) {\r\n                    throw new Error(\"`builder.addCase` should only be called before calling `builder.addDefaultCase`\");\r\n                }\r\n            }\r\n            var type = typeof typeOrActionCreator === \"string\" ? typeOrActionCreator : typeOrActionCreator.type;\r\n            if (type in actionsMap) {\r\n                throw new Error(\"addCase cannot be called with two reducers for the same action type\");\r\n            }\r\n            actionsMap[type] = reducer;\r\n            return builder;\r\n        },\r\n        addMatcher: function (matcher, reducer) {\r\n            if (true) {\r\n                if (defaultCaseReducer) {\r\n                    throw new Error(\"`builder.addMatcher` should only be called before calling `builder.addDefaultCase`\");\r\n                }\r\n            }\r\n            actionMatchers.push({ matcher: matcher, reducer: reducer });\r\n            return builder;\r\n        },\r\n        addDefaultCase: function (reducer) {\r\n            if (true) {\r\n                if (defaultCaseReducer) {\r\n                    throw new Error(\"`builder.addDefaultCase` can only be called once\");\r\n                }\r\n            }\r\n            defaultCaseReducer = reducer;\r\n            return builder;\r\n        }\r\n    };\r\n    builderCallback(builder);\r\n    return [actionsMap, actionMatchers, defaultCaseReducer];\r\n}\r\n// src/createReducer.ts\r\nfunction isStateFunction(x) {\r\n    return typeof x === \"function\";\r\n}\r\nfunction createReducer(initialState, mapOrBuilderCallback, actionMatchers, defaultCaseReducer) {\r\n    if (actionMatchers === void 0) { actionMatchers = []; }\r\n    var _c = typeof mapOrBuilderCallback === \"function\" ? executeReducerBuilderCallback(mapOrBuilderCallback) : [mapOrBuilderCallback, actionMatchers, defaultCaseReducer], actionsMap = _c[0], finalActionMatchers = _c[1], finalDefaultCaseReducer = _c[2];\r\n    var getInitialState;\r\n    if (isStateFunction(initialState)) {\r\n        getInitialState = function () { return createNextState2(initialState(), function () {\r\n        }); };\r\n    }\r\n    else {\r\n        var frozenInitialState_1 = createNextState2(initialState, function () {\r\n        });\r\n        getInitialState = function () { return frozenInitialState_1; };\r\n    }\r\n    function reducer(state, action) {\r\n        if (state === void 0) { state = getInitialState(); }\r\n        var caseReducers = __spreadArray([\r\n            actionsMap[action.type]\r\n        ], finalActionMatchers.filter(function (_c) {\r\n            var matcher = _c.matcher;\r\n            return matcher(action);\r\n        }).map(function (_c) {\r\n            var reducer2 = _c.reducer;\r\n            return reducer2;\r\n        }));\r\n        if (caseReducers.filter(function (cr) { return !!cr; }).length === 0) {\r\n            caseReducers = [finalDefaultCaseReducer];\r\n        }\r\n        return caseReducers.reduce(function (previousState, caseReducer) {\r\n            if (caseReducer) {\r\n                if (r(previousState)) {\r\n                    var draft = previousState;\r\n                    var result = caseReducer(draft, action);\r\n                    if (typeof result === \"undefined\") {\r\n                        return previousState;\r\n                    }\r\n                    return result;\r\n                }\r\n                else if (!t(previousState)) {\r\n                    var result = caseReducer(previousState, action);\r\n                    if (typeof result === \"undefined\") {\r\n                        if (previousState === null) {\r\n                            return previousState;\r\n                        }\r\n                        throw Error(\"A case reducer on a non-draftable value must not return undefined\");\r\n                    }\r\n                    return result;\r\n                }\r\n                else {\r\n                    return createNextState2(previousState, function (draft) {\r\n                        return caseReducer(draft, action);\r\n                    });\r\n                }\r\n            }\r\n            return previousState;\r\n        }, state);\r\n    }\r\n    reducer.getInitialState = getInitialState;\r\n    return reducer;\r\n}\r\n// src/createSlice.ts\r\nfunction getType2(slice, actionKey) {\r\n    return slice + \"/\" + actionKey;\r\n}\r\nfunction createSlice(options) {\r\n    var name = options.name;\r\n    if (!name) {\r\n        throw new Error(\"`name` is a required option for createSlice\");\r\n    }\r\n    var initialState = typeof options.initialState == \"function\" ? options.initialState : createNextState2(options.initialState, function () {\r\n    });\r\n    var reducers = options.reducers || {};\r\n    var reducerNames = Object.keys(reducers);\r\n    var sliceCaseReducersByName = {};\r\n    var sliceCaseReducersByType = {};\r\n    var actionCreators = {};\r\n    reducerNames.forEach(function (reducerName) {\r\n        var maybeReducerWithPrepare = reducers[reducerName];\r\n        var type = getType2(name, reducerName);\r\n        var caseReducer;\r\n        var prepareCallback;\r\n        if (\"reducer\" in maybeReducerWithPrepare) {\r\n            caseReducer = maybeReducerWithPrepare.reducer;\r\n            prepareCallback = maybeReducerWithPrepare.prepare;\r\n        }\r\n        else {\r\n            caseReducer = maybeReducerWithPrepare;\r\n        }\r\n        sliceCaseReducersByName[reducerName] = caseReducer;\r\n        sliceCaseReducersByType[type] = caseReducer;\r\n        actionCreators[reducerName] = prepareCallback ? createAction(type, prepareCallback) : createAction(type);\r\n    });\r\n    function buildReducer() {\r\n        var _c = typeof options.extraReducers === \"function\" ? executeReducerBuilderCallback(options.extraReducers) : [options.extraReducers], _d = _c[0], extraReducers = _d === void 0 ? {} : _d, _e = _c[1], actionMatchers = _e === void 0 ? [] : _e, _f = _c[2], defaultCaseReducer = _f === void 0 ? void 0 : _f;\r\n        var finalCaseReducers = __spreadValues(__spreadValues({}, extraReducers), sliceCaseReducersByType);\r\n        return createReducer(initialState, finalCaseReducers, actionMatchers, defaultCaseReducer);\r\n    }\r\n    var _reducer;\r\n    return {\r\n        name: name,\r\n        reducer: function (state, action) {\r\n            if (!_reducer)\r\n                _reducer = buildReducer();\r\n            return _reducer(state, action);\r\n        },\r\n        actions: actionCreators,\r\n        caseReducers: sliceCaseReducersByName,\r\n        getInitialState: function () {\r\n            if (!_reducer)\r\n                _reducer = buildReducer();\r\n            return _reducer.getInitialState();\r\n        }\r\n    };\r\n}\r\nvar alm = \"listenerMiddleware\";\r\ncreateAction(alm + \"/add\");\r\ncreateAction(alm + \"/removeAll\");\r\ncreateAction(alm + \"/remove\");\r\n// src/index.ts\r\nN();\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule reducers\n */\n/**\n * Returns the default initial state for the redux store.\n * This must be a brand new, independent object for each table instance\n * or issues may occur due to multiple tables sharing data.\n *\n * @return {!Object}\n */\n\nfunction getInitialState() {\n  var internalState = createInternalState();\n  return {\n    /*\n     * Input state set from props\n     */\n    columnElements: [],\n    columnGroupElements: [],\n    elementTemplates: {\n      cell: [],\n      footer: [],\n      groupHeader: [],\n      header: []\n    },\n    elementHeights: {\n      footerHeight: 0,\n      groupHeaderHeight: 0,\n      headerHeight: 0\n    },\n    propsRevision: null,\n    rowSettings: {\n      bufferRowCount: undefined,\n      rowAttributesGetter: undefined,\n      rowHeight: 0,\n      rowHeightGetter: function rowHeightGetter() {\n        return 0;\n      },\n      rowsCount: 0,\n      subRowHeight: 0,\n      subRowHeightGetter: function subRowHeightGetter() {\n        return 0;\n      }\n    },\n    scrollFlags: {\n      overflowX: 'auto',\n      overflowY: 'auto',\n      showScrollbarX: true,\n      showScrollbarY: true\n    },\n    tableSize: {\n      height: undefined,\n      maxHeight: 0,\n      ownerHeight: undefined,\n      useMaxHeight: false,\n      width: 0\n    },\n\n    /*\n     * Output state passed as props to the the rendered FixedDataTable\n     * NOTE (jordan) rows may contain undefineds if we don't need all the buffer positions\n     */\n    firstRowIndex: 0,\n    firstRowOffset: 0,\n    maxScrollX: 0,\n    maxScrollY: 0,\n    rowOffsets: {},\n    rows: [],\n    // rowsToRender\n    scrollContentHeight: 0,\n    scrollX: 0,\n    scrollbarXHeight: Scrollbar.SIZE,\n    scrollY: 0,\n    scrollbarYWidth: Scrollbar.SIZE,\n    scrolling: false,\n\n    /**\n     * Internal state is only used by reducers.\n     * NOTE (jordan, pradeep): Internal state is altered in place, so don't trust it for redux history or immutabability checks.\n     * We also purposefully avoid keeping the raw internal state as part of the redux store.\n     * Instead a getter can be used to retrieve the internal state.\n     *\n     * 1. Large data structures in internal state like `rowHeights` are mutated by reducers.\n     *    Since we don't care about immutability, we avoid overheads seen in a typical immutable data structure.\n     *\n     * 2. Immer internally uses proxies on the entire redux store state inorder to detect state mutations in reducers,\n     *    but watching large data structures is inefficient and slows down reducers.\n     *    Internal state isn't a direct part of the redux store state because we separated it through a getter.\n     *    This means there's no proxies watching over the internal state, and hence mutating it has no overheads.\n     *\n     * @type {!Function}\n     */\n    getInternal: function getInternal() {\n      return internalState;\n    }\n  };\n}\n/** @returns {!InternalState} */\n\n\nfunction createInternalState() {\n  return {\n    rowBufferSet: new IntegerBufferSet(),\n    rowOffsetIntervalTree: null,\n    // PrefixIntervalTree\n    storedHeights: [],\n    rowUntilOffsetsAreExact: 0\n  };\n}\n\nvar slice = createSlice({\n  name: 'FDT',\n\n  /*\n   * NOTE (pradeep, wcjordan): The initial state will be populated through the `initialize` reducer.\n   * We can't preset the state using the `initialState` field because we need a brand new, independent object\n   * for each table instance, or issues may occur due to multiple tables sharing data (see #369 for an example)\n   */\n  initialState: {},\n  reducers: {\n    initialize: function initialize(state, action) {\n      var props = action.payload;\n\n      _extends(state, getInitialState());\n\n      setStateFromProps(state, props);\n      initializeRowHeightsAndOffsets(state);\n      var scrollAnchor = getScrollAnchor(state, props);\n      computeRenderedRows(state, scrollAnchor);\n      columnStateHelper.initialize(state, props, {});\n    },\n    propChange: function propChange(state, action) {\n      var _action$payload = action.payload,\n          newProps = _action$payload.newProps,\n          oldProps = _action$payload.oldProps;\n      var oldState = clone_1(e(state));\n      setStateFromProps(state, newProps);\n\n      if (oldProps.rowsCount !== newProps.rowsCount || oldProps.rowHeight !== newProps.rowHeight || oldProps.subRowHeight !== newProps.subRowHeight) {\n        initializeRowHeightsAndOffsets(state);\n      }\n\n      if (oldProps.rowsCount !== newProps.rowsCount) {\n        state.getInternal().rowBufferSet = new IntegerBufferSet();\n      }\n\n      var scrollAnchor = getScrollAnchor(state, newProps, oldProps); // If anything has changed in state, update our rendered rows\n\n      if (!shallowEqual(state, oldState) || scrollAnchor.changed) {\n        computeRenderedRows(state, scrollAnchor);\n      }\n\n      columnStateHelper.initialize(state, newProps, oldProps); // if scroll values have changed, then we're scrolling!\n\n      if (state.scrollX !== oldState.scrollX || state.scrollY !== oldState.scrollY) {\n        state.scrolling = state.scrolling || true;\n      } // TODO REDUX_MIGRATION solve w/ evil-diff\n      // TODO (jordan) check if relevant props unchanged and\n      // children column widths and flex widths are unchanged\n      // alternatively shallow diff and reconcile props\n\n    },\n    scrollEnd: function scrollEnd(state) {\n      state.scrolling = false;\n      var previousScrollAnchor = {\n        firstIndex: state.firstRowIndex,\n        firstOffset: state.firstRowOffset,\n        lastIndex: state.lastIndex\n      };\n      computeRenderedRows(state, previousScrollAnchor);\n    },\n    scrollToY: function scrollToY(state, action) {\n      var scrollY = action.payload;\n      state.scrolling = true;\n      var scrollAnchor = scrollTo$1(state, scrollY);\n      computeRenderedRows(state, scrollAnchor);\n    },\n    scrollToX: function scrollToX(state, action) {\n      var scrollX = action.payload;\n      state.scrolling = true;\n      state.scrollX = scrollX;\n    },\n    updateRowHeights: function updateRowHeights(state, action) {\n      var firstUpdatedRowIndex = action.payload || 0;\n\n      if (firstUpdatedRowIndex >= state.rowSettings.rowsCount) {\n        return;\n      } // Recompute all the updated rows heights\n\n\n      while (firstUpdatedRowIndex < state.rowSettings.rowsCount) {\n        updateRowHeight(state, firstUpdatedRowIndex++);\n      } // Refresh the current scroll position according to the new row heights\n\n\n      var currentScrollY = state.getInternal().rowOffsetIntervalTree.sumUntil(state.firstRowIndex) - state.firstRowOffset;\n      var scrollAnchor = scrollTo$1(state, currentScrollY);\n      computeRenderedRows(state, scrollAnchor);\n    }\n  }\n});\n/**\n * Initialize row heights (storedHeights) & offsets based on the default rowHeight\n *\n * @param {!Object} state\n * @private\n */\n\nfunction initializeRowHeightsAndOffsets(state) {\n  var _state$rowSettings = state.rowSettings,\n      rowHeight = _state$rowSettings.rowHeight,\n      rowsCount = _state$rowSettings.rowsCount,\n      subRowHeight = _state$rowSettings.subRowHeight,\n      rowHeightGetter = _state$rowSettings.rowHeightGetter,\n      subRowHeightGetter = _state$rowSettings.subRowHeightGetter;\n  var defaultFullRowHeight = rowHeight + subRowHeight;\n  var scrollContentHeight = 0;\n  var storedHeights = new Array(rowsCount);\n\n  for (var idx = 0; idx < rowsCount; idx++) {\n    if (state.isVerticalScrollExact) {\n      storedHeights[idx] = rowHeightGetter(idx) + subRowHeightGetter(idx);\n    } else {\n      storedHeights[idx] = defaultFullRowHeight;\n    }\n\n    scrollContentHeight += storedHeights[idx];\n  }\n\n  var rowOffsetIntervalTree = new PrefixIntervalTree(storedHeights);\n  state.scrollContentHeight = scrollContentHeight;\n\n  _extends(state.getInternal(), {\n    rowOffsetIntervalTree: rowOffsetIntervalTree,\n    storedHeights: storedHeights\n  });\n}\n/**\n * @param {!Object} state\n * @param {!Object} props\n * @return {!Object}\n * @private\n */\n\nfunction setStateFromProps(state, props) {\n  var _convertColumnElement = convertColumnElementsToData(props.children),\n      columnGroupElements = _convertColumnElement.columnGroupElements,\n      columnElements = _convertColumnElement.columnElements,\n      elementTemplates = _convertColumnElement.elementTemplates,\n      useGroupHeader = _convertColumnElement.useGroupHeader;\n\n  _extends(state, {\n    columnGroupElements: columnGroupElements,\n    columnElements: columnElements,\n    elementTemplates: elementTemplates,\n    propsRevision: state.propsRevision + 1,\n    isVerticalScrollExact: props.isVerticalScrollExact\n  }); // NOTE (pradeep): We pre-freeze these large collections to avoid\n  // performance bottle necks\n  //\n  // From Immer's docs:\n  //     Immer freezes everything recursively. For large data objects\n  //     that won't be changed in the future this might be over-kill,\n  //     in that case it can be more efficient to shallowly\n  //     pre-freeze data using the freeze utility.\n\n\n  Object.freeze(state.columnElements);\n  Object.freeze(state.columnGroupElements);\n  Object.freeze(state.elementTemplates);\n  state.elementHeights = _extends({}, state.elementHeights, pick_1(props, ['cellGroupWrapperHeight', 'footerHeight', 'groupHeaderHeight', 'headerHeight']));\n\n  if (!useGroupHeader) {\n    state.elementHeights.groupHeaderHeight = 0;\n  }\n\n  state.rowSettings = _extends({}, state.rowSettings, pick_1(props, ['bufferRowCount', 'rowHeight', 'rowsCount', 'subRowHeight']));\n  var _state$rowSettings2 = state.rowSettings,\n      rowHeight = _state$rowSettings2.rowHeight,\n      subRowHeight = _state$rowSettings2.subRowHeight;\n\n  state.rowSettings.rowHeightGetter = props.rowHeightGetter || function () {\n    return rowHeight;\n  };\n\n  state.rowSettings.subRowHeightGetter = props.subRowHeightGetter || function () {\n    return subRowHeight || 0;\n  };\n\n  state.rowSettings.rowAttributesGetter = props.rowAttributesGetter;\n  state.scrollFlags = _extends({}, state.scrollFlags, pick_1(props, ['overflowX', 'overflowY', 'showScrollbarX', 'showScrollbarY']));\n  state.tableSize = _extends({}, state.tableSize, pick_1(props, ['height', 'maxHeight', 'ownerHeight', 'width']));\n  state.tableSize.useMaxHeight = state.tableSize.height === undefined;\n  state.scrollbarXHeight = props.scrollbarXHeight;\n  state.scrollbarYWidth = props.scrollbarYWidth;\n}\n\nvar reducer = slice.reducer,\n    actions = slice.actions;\nvar initialize = actions.initialize,\n    propChange = actions.propChange,\n    scrollEnd = actions.scrollEnd,\n    scrollToX = actions.scrollToX,\n    scrollToY = actions.scrollToY,\n    updateRowHeights = actions.updateRowHeights;\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * @providesModule scrollActions\n */\n\nvar getScrollActions = function getScrollActions(store, getProps) {\n  var scrollActions = bindActionCreators({\n    scrollToX: scrollToX,\n    scrollToY: scrollToY,\n    scrollEnd: scrollEnd\n  }, store.dispatch);\n  /**\n   * Scrolls the table horizontally to position\n   *\n   * @param {number} scrollX\n   */\n\n  var smartScrollToX = function smartScrollToX(scrollPos) {\n    var _store$getState = store.getState(),\n        scrollX = _store$getState.scrollX;\n        _store$getState.scrolling;\n\n    if (scrollPos === scrollX) {\n      return;\n    } // This is a workaround to prevent content blurring. This happens when translate3d\n    // is applied with non-rounded values to elements having text.\n\n\n    var roundedScrollPos = Math.round(scrollPos);\n\n    var _getProps = getProps(),\n        onHorizontalScroll = _getProps.onHorizontalScroll;\n\n    if (onHorizontalScroll ? onHorizontalScroll(roundedScrollPos) : true) {\n      scrollActions.scrollToX(roundedScrollPos);\n    }\n  };\n  /**\n   * Scrolls the table vertically to position\n   *\n   * @param {number} scrollY\n   */\n\n\n  var smartScrollToY = function smartScrollToY(scrollPos) {\n    var _store$getState2 = store.getState(),\n        scrollY = _store$getState2.scrollY;\n\n    if (scrollPos === scrollY) {\n      return;\n    }\n\n    var _getProps2 = getProps(),\n        onVerticalScroll = _getProps2.onVerticalScroll;\n\n    if (onVerticalScroll ? onVerticalScroll(scrollPos) : true) {\n      scrollActions.scrollToY(scrollPos);\n    }\n  };\n\n  return {\n    scrollToX: smartScrollToX,\n    scrollToY: smartScrollToY,\n    stopScroll: scrollActions.scrollEnd\n  };\n};\n\nvar baseGetTag$1 = _baseGetTag,\n    isObjectLike$1 = isObjectLike_1;\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber$1(value) {\n  return typeof value == 'number' ||\n    (isObjectLike$1(value) && baseGetTag$1(value) == numberTag);\n}\n\nvar isNumber_1 = isNumber$1;\n\nvar isNumber = isNumber_1;\n\n/**\n * Checks if `value` is `NaN`.\n *\n * **Note:** This method is based on\n * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n * `undefined` and other non-number values.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n * @example\n *\n * _.isNaN(NaN);\n * // => true\n *\n * _.isNaN(new Number(NaN));\n * // => true\n *\n * isNaN(undefined);\n * // => true\n *\n * _.isNaN(undefined);\n * // => false\n */\nfunction isNaN$1(value) {\n  // An `NaN` primitive is the only value that is not equal to itself.\n  // Perform the `toStringTag` check first to avoid errors with some\n  // ActiveX objects in IE.\n  return isNumber(value) && value != +value;\n}\n\nvar _isNaN = isNaN$1;\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule debounceCore\n * @typechecks\n */\n\n/**\n * Invokes the given callback after a specified number of milliseconds have\n * elapsed, ignoring subsequent calls.\n *\n * For example, if you wanted to update a preview after the user stops typing\n * you could do the following:\n *\n *   elem.addEventListener('keyup', debounce(this.updatePreview, 250), false);\n *\n * The returned function has a reset method which can be called to cancel a\n * pending invocation.\n *\n *   var debouncedUpdatePreview = debounce(this.updatePreview, 250);\n *   elem.addEventListener('keyup', debouncedUpdatePreview, false);\n *\n *   // later, to cancel pending calls\n *   debouncedUpdatePreview.reset();\n *\n * @param {function} func - the function to debounce\n * @param {number} wait - how long to wait in milliseconds\n * @param {*} context - optional context to invoke the function in\n * @param {function} [setTimeoutFunc] - an implementation of setTimeout\n *  if nothing is passed in the default setTimeout function is used\n * @param {function} [clearTimeoutFunc] - an implementation of clearTimeout\n *  if nothing is passed in the default clearTimeout function is used\n */\nfunction debounce(func, wait, context, setTimeoutFunc, clearTimeoutFunc) {\n  setTimeoutFunc = setTimeoutFunc || setTimeout;\n  clearTimeoutFunc = clearTimeoutFunc || clearTimeout;\n  var timeout;\n\n  function debouncer() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    debouncer.reset();\n\n    var callback = function callback() {\n      func.apply(context, args);\n    };\n\n    callback.__SMmeta = func.__SMmeta;\n    timeout = setTimeoutFunc(callback, wait);\n  }\n\n  debouncer.reset = function () {\n    clearTimeoutFunc(timeout);\n  };\n\n  return debouncer;\n}\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule joinClasses\n * @typechecks static-only\n */\n/**\n * Combines multiple className strings into one.\n * http://jsperf.com/joinclasses-args-vs-array\n *\n * @param {...?string} className\n * @return {string}\n */\n\nfunction joinClasses(className\n/*, ... */\n) {\n  if (!className) {\n    className = '';\n  }\n\n  var nextClass;\n  var argLength = arguments.length;\n\n  if (argLength > 1) {\n    for (var ii = 1; ii < argLength; ii++) {\n      nextClass = arguments[ii];\n\n      if (nextClass) {\n        className = (className ? className + ' ' : '') + nextClass;\n      }\n    }\n  }\n\n  return className;\n}\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ariaAttributes\n */\n/**\n * Calculate the aria attributes for the rows and the grid.\n *\n * @param {number} rowsCount\n * @param {boolean} useGroupHeader\n * @param {boolean} useFooter\n * @return {{\n *   ariaGroupHeaderIndex: number,\n *   ariaHeaderIndex: number,\n *   ariaFooterIndex: number,\n *   ariaRowCount: number,\n *   ariaRowIndexOffset: number\n * }}\n */\n\nfunction calculateAriaAttributes(rowsCount, useGroupHeader, useFooter) {\n  // first we calculate the default attribute values (without assuming group header or footer exists)\n  var ariaGroupHeaderIndex = 1;\n  var ariaHeaderIndex = 1;\n  var ariaFooterIndex = rowsCount + 2;\n  var ariaRowCount = rowsCount + 1; // offset to add to aria-rowindex (note that aria-rowindex is 1-indexed based, and since\n  // we also need to add 1 for the header, the base offset will be 2)\n\n  var ariaRowIndexOffset = 2; // if group header exists, then increase the indices and offsets by 1\n\n  if (useGroupHeader) {\n    ariaHeaderIndex++;\n    ariaRowCount++;\n    ariaFooterIndex++;\n    ariaRowIndexOffset++;\n  } // if footer exists, then row count increases by 1\n\n\n  if (useFooter) {\n    ariaRowCount++;\n  }\n\n  return {\n    ariaGroupHeaderIndex: ariaGroupHeaderIndex,\n    ariaHeaderIndex: ariaHeaderIndex,\n    ariaFooterIndex: ariaFooterIndex,\n    ariaRowCount: ariaRowCount,\n    ariaRowIndexOffset: ariaRowIndexOffset\n  };\n}\n\nvar ariaAttributesSelector = shallowEqualSelector([function (state) {\n  return state.rowsCount;\n}, function (state) {\n  return state.groupHeaderHeight > 0;\n}, function (state) {\n  return state.footerHeight > 0;\n}], calculateAriaAttributes);\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\nfunction createBaseFor$1(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nvar _createBaseFor = createBaseFor$1;\n\nvar createBaseFor = _createBaseFor;\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor$1 = createBaseFor();\n\nvar _baseFor = baseFor$1;\n\nvar baseFor = _baseFor,\n    keys = keys_1;\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn$1(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nvar _baseForOwn = baseForOwn$1;\n\nvar isArrayLike$2 = isArrayLike_1;\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach$1(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike$2(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nvar _createBaseEach = createBaseEach$1;\n\nvar baseForOwn = _baseForOwn,\n    createBaseEach = _createBaseEach;\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach$1 = createBaseEach(baseForOwn);\n\nvar _baseEach = baseEach$1;\n\nvar identity = identity_1;\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction$1(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nvar _castFunction = castFunction$1;\n\nvar arrayEach = _arrayEach,\n    baseEach = _baseEach,\n    castFunction = _castFunction,\n    isArray$2 = isArray_1;\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray$2(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nvar forEach_1 = forEach;\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule columnTemplates\n */\n/**\n * Lists of cell templates & component props for\n * the fixed and scrollable columns and column groups\n *\n * @param {{\n *   columnGroupProps: !Array.<!Object>,\n *   columnProps: !Array.<!Object>,\n * }} columnWidths\n * @param {{\n *   cell: !Array.<React.ReactElement>,\n *   footer: !Array.<React.ReactElement>,\n *   groupHeader: !Array.<React.ReactElement>,\n *   header: !Array.<React.ReactElement>,\n * }} elementTemplates\n * @return {{\n *   fixedColumnGroups: !Array.<cellDetails>,\n *   fixedRightColumnGroups: !Array.<cellDetails>,\n *   scrollableColumnGroups: !Array.<cellDetails>,\n *   fixedColumns: !Array.<columnDetails>,\n *   fixedRightColumns: !Array.<columnDetails>,\n *   scrollableColumns: !Array.<columnDetails>,\n * }}\n */\n\nfunction columnTemplates(columnWidths, elementTemplates) {\n  var columnGroupProps = columnWidths.columnGroupProps,\n      columnProps = columnWidths.columnProps; // Ugly transforms to extract data into a row consumable format.\n  // TODO (jordan) figure out if this can efficiently be merged with\n  // the result of convertColumnElementsToData.\n\n  var fixedColumnGroups = [];\n  var fixedRightColumnGroups = [];\n  var scrollableColumnGroups = [];\n  forEach_1(columnGroupProps, function (columnGroup, index) {\n    var groupData = {\n      props: columnGroup,\n      template: elementTemplates.groupHeader[index]\n    };\n\n    if (columnGroup.fixed) {\n      fixedColumnGroups.push(groupData);\n    } else if (columnGroup.fixedRight) {\n      fixedRightColumnGroups.push(groupData);\n    } else {\n      scrollableColumnGroups.push(groupData);\n    }\n  });\n  var fixedColumns = {\n    cell: [],\n    header: [],\n    footer: []\n  };\n  var fixedRightColumns = {\n    cell: [],\n    header: [],\n    footer: []\n  };\n  var scrollableColumns = {\n    cell: [],\n    header: [],\n    footer: []\n  };\n  forEach_1(columnProps, function (column, index) {\n    var columnContainer = scrollableColumns;\n\n    if (column.fixed) {\n      columnContainer = fixedColumns;\n    } else if (column.fixedRight) {\n      columnContainer = fixedRightColumns;\n    }\n\n    columnContainer.cell.push({\n      props: column,\n      template: elementTemplates.cell[index]\n    });\n    columnContainer.header.push({\n      props: column,\n      template: elementTemplates.header[index]\n    });\n    columnContainer.footer.push({\n      props: column,\n      template: elementTemplates.footer[index]\n    });\n  });\n  return {\n    fixedColumnGroups: fixedColumnGroups,\n    fixedColumns: fixedColumns,\n    fixedRightColumnGroups: fixedRightColumnGroups,\n    fixedRightColumns: fixedRightColumns,\n    scrollableColumnGroups: scrollableColumnGroups,\n    scrollableColumns: scrollableColumns\n  };\n}\n\nvar columnTemplatesSelector = shallowEqualSelector([function (state) {\n  return columnWidths$1(state);\n}, function (state) {\n  return state.elementTemplates;\n}], columnTemplates);\n\n/**\n * Checks `value` to determine whether a default value should be returned in\n * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n * or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.14.0\n * @category Util\n * @param {*} value The value to check.\n * @param {*} defaultValue The default value.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * _.defaultTo(1, 10);\n * // => 1\n *\n * _.defaultTo(undefined, 10);\n * // => 10\n */\n\nfunction defaultTo(value, defaultValue) {\n  return (value == null || value !== value) ? defaultValue : value;\n}\n\nvar defaultTo_1 = defaultTo;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * The base implementation of `_.inRange` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to check.\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n */\nfunction baseInRange$1(number, start, end) {\n  return number >= nativeMin(start, end) && number < nativeMax(start, end);\n}\n\nvar _baseInRange = baseInRange$1;\n\nvar toNumber$1 = toNumber_1;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite$1(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber$1(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nvar toFinite_1 = toFinite$1;\n\nvar baseInRange = _baseInRange,\n    toFinite = toFinite_1,\n    toNumber = toNumber_1;\n\n/**\n * Checks if `n` is between `start` and up to, but not including, `end`. If\n * `end` is not specified, it's set to `start` with `start` then set to `0`.\n * If `start` is greater than `end` the params are swapped to support\n * negative ranges.\n *\n * @static\n * @memberOf _\n * @since 3.3.0\n * @category Number\n * @param {number} number The number to check.\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n * @see _.range, _.rangeRight\n * @example\n *\n * _.inRange(3, 2, 4);\n * // => true\n *\n * _.inRange(4, 8);\n * // => true\n *\n * _.inRange(4, 2);\n * // => false\n *\n * _.inRange(2, 2);\n * // => false\n *\n * _.inRange(1.2, 2);\n * // => true\n *\n * _.inRange(5.2, 4);\n * // => false\n *\n * _.inRange(-3, -2, -6);\n * // => true\n */\nfunction inRange(number, start, end) {\n  start = toFinite(start);\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  } else {\n    end = toFinite(end);\n  }\n  number = toNumber(number);\n  return baseInRange(number, start, end);\n}\n\nvar inRange_1 = inRange;\n\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\n\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = _objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\n\nvar _excluded$6 = [\"height\", \"width\", \"isVisible\", \"style\", \"className\", \"children\", \"columnKey\", \"columnIndex\", \"rowIndex\", \"left\", \"cellGroupType\", \"isHeader\", \"isGroupHeader\", \"maxWidth\", \"minWidth\", \"touchEnabled\"];\n\nfunction ownKeys$5(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$5(Object(source), !0).forEach(function (key) { _defineProperty$1(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$5(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper$f(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$f(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct$f() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n/**\n * NOTE (pradeep): This component is deprecated since it uses a lot of wrapper DIV nodes for styling/layout.\n * The replacement is src/FixedDataTableCell.js which uses a single wrapper to achieve the same table cell layout.\n *\n * Component that handles default cell layout and styling.\n *\n * All props unless specified below will be set onto the top level `div`\n * rendered by the cell.\n *\n * Example usage via from a `Column`:\n * ```\n * const MyColumn = (\n *   <Column\n *     cell={({rowIndex, width, height}) => (\n *       <Cell\n *         width={width}\n *         height={height}\n *         className=\"my-class\">\n *         Cell number: <span>{rowIndex}</span>\n *        </Cell>\n *     )}\n *     width={100}\n *   />\n * );\n * ```\n *\n * @deprecated\n */\n\nvar FixedDataTableCellDefault$1 = /*#__PURE__*/function (_React$Component) {\n  _inherits$2(FixedDataTableCellDefault, _React$Component);\n\n  var _super = _createSuper$f(FixedDataTableCellDefault);\n\n  function FixedDataTableCellDefault() {\n    _classCallCheck$2(this, FixedDataTableCellDefault);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass$2(FixedDataTableCellDefault, [{\n    key: \"render\",\n    value: function render() {\n      //Remove some props like columnKey and rowIndex so we don't pass it into the div\n      var _this$props = this.props,\n          height = _this$props.height,\n          width = _this$props.width;\n          _this$props.isVisible;\n          var style = _this$props.style,\n          className = _this$props.className,\n          children = _this$props.children;\n          _this$props.columnKey;\n          _this$props.columnIndex;\n          _this$props.rowIndex;\n          _this$props.left;\n          _this$props.cellGroupType;\n          _this$props.isHeader;\n          _this$props.isGroupHeader;\n          _this$props.maxWidth;\n          _this$props.minWidth;\n          _this$props.touchEnabled;\n          var props = _objectWithoutProperties(_this$props, _excluded$6);\n\n      var innerStyle = _objectSpread$5({\n        height: height,\n        width: width\n      }, style);\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", _extends({}, props, {\n        className: joinClasses(cx('fixedDataTableCellLayout/wrap1'), cx('public/fixedDataTableCell/wrap1'), className),\n        style: innerStyle\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: joinClasses(cx('fixedDataTableCellLayout/wrap2'), cx('public/fixedDataTableCell/wrap2'))\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: joinClasses(cx('fixedDataTableCellLayout/wrap3'), cx('public/fixedDataTableCell/wrap3'))\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: cx('public/fixedDataTableCell/cellContent')\n      }, children))));\n    }\n  }]);\n\n  return FixedDataTableCellDefault;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n\n_defineProperty$1(FixedDataTableCellDefault$1, \"propTypes\", {\n  /**\n   * Outer height of the cell.\n   */\n  height: PropTypes.number,\n\n  /**\n   * Outer width of the cell.\n   */\n  width: PropTypes.number,\n\n  /**\n   * Optional prop that if specified on the `Column` will be passed to the\n   * cell. It can be used to uniquely identify which column is the cell is in.\n   */\n  columnKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Optional prop that represents the rows index in the table.\n   * For the 'cell' prop of a Column, this parameter will exist for any\n   * cell in a row with a positive index.\n   *\n   * Below that entry point the user is welcome to consume or\n   * pass the prop through at their discretion.\n   */\n  rowIndex: PropTypes.number,\n\n  /**\n   * Whether this cell is currently within the viewport.\n   */\n  isVisible: PropTypes.bool\n});\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nvar _excluded$5 = [\"height\", \"width\", \"isVisible\", \"style\", \"className\", \"children\", \"columnKey\", \"columnIndex\", \"rowIndex\", \"left\", \"cellGroupType\", \"isHeader\", \"isGroupHeader\", \"maxWidth\", \"minWidth\", \"touchEnabled\"];\n\nfunction ownKeys$4(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$4(Object(source), !0).forEach(function (key) { _defineProperty$1(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$4(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n/**\n * Component that handles default cell layout and styling.\n *\n * All props unless specified below will be set onto the top level `div`\n * rendered by the cell.\n *\n * Example usage via from a `Column`:\n * ```\n * const MyColumn = (\n *   <Column\n *     cell={({rowIndex, width, height}) => (\n *       <Cell\n *         width={width}\n *         height={height}\n *         className=\"my-class\">\n *         Cell number: <span>{rowIndex}</span>\n *        </Cell>\n *     )}\n *     width={100}\n *   />\n * );\n * ```\n */\n\nvar FixedDataTableCellDefault = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(function FixedDataTableCellDefault(props, ref) {\n  //Remove some props which we don't pass into div\n  var height = props.height,\n      width = props.width;\n      props.isVisible;\n      var style = props.style,\n      className = props.className,\n      children = props.children;\n      props.columnKey;\n      props.columnIndex;\n      props.rowIndex;\n      props.left;\n      props.cellGroupType;\n      props.isHeader;\n      props.isGroupHeader;\n      props.maxWidth;\n      props.minWidth;\n      props.touchEnabled;\n      var cellProps = _objectWithoutProperties(props, _excluded$5);\n\n  var innerStyle = _objectSpread$4({\n    height: height,\n    width: width\n  }, style);\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", _extends({}, cellProps, {\n    className: joinClasses(cx('fixedDataTableCellLayout/wrap'), cx('public/fixedDataTableCell/wrap'), cx('public/fixedDataTableCell/cellContent'), className),\n    style: innerStyle,\n    ref: ref\n  }), children);\n});\nFixedDataTableCellDefault.propTypes = {\n  /**\n   * Outer height of the cell.\n   */\n  height: PropTypes.number,\n\n  /**\n   * Outer width of the cell.\n   */\n  width: PropTypes.number,\n\n  /**\n   * Optional prop that if specified on the `Column` will be passed to the\n   * cell. It can be used to uniquely identify which column is the cell is in.\n   */\n  columnKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Optional prop that represents the rows index in the table.\n   * For the 'cell' prop of a Column, this parameter will exist for any\n   * cell in a row with a positive index.\n   *\n   * Below that entry point the user is welcome to consume or\n   * pass the prop through at their discretion.\n   */\n  rowIndex: PropTypes.number,\n\n  /**\n   * Whether this cell is currently within the viewport.\n   */\n  isVisible: PropTypes.bool\n};\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\nvar FixedDataTableContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createContext({});\n\nvar baseGet = _baseGet;\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nvar get_1 = get;\n\nfunction _createSuper$e(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$e(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct$e() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar DRAG_SCROLL_SPEED = 15;\nvar DRAG_SCROLL_BUFFER = 100;\n\nvar DragProxy = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits$2(DragProxy, _React$PureComponent);\n\n  var _super = _createSuper$e(DragProxy);\n\n  function DragProxy() {\n    var _this;\n\n    _classCallCheck$2(this, DragProxy);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty$1(_assertThisInitialized(_this), \"state\", {\n      displacement: 0\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"containerRef\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createRef());\n\n    _defineProperty$1(_assertThisInitialized(_this), \"onTouchEnd\", function (ev) {\n      if (_this.props.touchEnabled) ev.stopPropagation();\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"onTouchMove\", function (ev) {\n      if (_this.props.touchEnabled) ev.stopPropagation();\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"onMouseMove\", function (deltaX) {\n      _this.cursorDeltaX += deltaX * (_this.context.isRTL ? -1 : 1);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"onMouseUp\", function () {\n      cancelAnimationFrame(_this.frameId);\n\n      _this.setState({\n        displacement: 0,\n        isReordering: false\n      });\n\n      _this.updateColumnOrder();\n\n      _this.frameId = null;\n      _this.cursorDeltaX = 0;\n\n      _this.mouseMoveTracker.releaseMouseMoves();\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"initializeDOMMouseMoveTracker\", function (event) {\n      _this.mouseMoveTracker = new DOMMouseMoveTracker(_this.onMouseMove, _this.onMouseUp, document.body, _this.props.touchEnabled);\n\n      _this.mouseMoveTracker.captureMouseMoves(event);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"updateDisplacementPeriodically\", function () {\n      /**\n       * NOTE (pradeep): We use requestAnimationFrame to update the dragged displacement periodically.\n       * This occurs when the user drags the cell near the edges of the viewport.\n       * We cannot rely on just `onMouseMove` alone because the user might simply keep the cursor\n       * stationary at the edges of the table, which doesn't trigger an `onMouseMove` event.\n       */\n      _this.frameId = requestAnimationFrame(_this.updateDisplacementPeriodically);\n\n      _this.updateDisplacementWithScroll();\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"getBoundedDeltaX\", function (deltaX) {\n      var groupWidth = 0;\n      var groupStart = 0;\n      var cellGroupType = _this.props.cellGroupType;\n      var groupHeaderExists = _this.context.groupHeaderHeight > 0;\n\n      if (groupHeaderExists && !_this.props.isGroupHeader) {\n        // this is a normal header cell within a column group\n        var group = _this.context.getColumnGroupByChild(_this.props.columnIndex);\n\n        groupWidth = group.width;\n        groupStart = group.offset;\n      } else {\n        // This is either a normal header cell that's not within a column group, or this is a column group header cell.\n        // In either case, the bounds will be within the cell group.\n        groupWidth = _this.context.getCellGroupWidth(cellGroupType);\n      } // subtract current cell width to make sure the right edge doesn't go past the bounds\n\n\n      var maxReachableDisplacement = groupWidth - _this.props.width;\n      return clamp_1(deltaX, -_this.originalLeft + groupStart, -_this.originalLeft + maxReachableDisplacement + groupStart);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"updateDisplacementWithScroll\", function () {\n      var scrollStart = _this.scrollStart;\n      var cellGroupType = _this.props.cellGroupType;\n      var _this$context = _this.context,\n          scrollX = _this$context.scrollX,\n          maxScrollX = _this$context.maxScrollX,\n          availableScrollWidth = _this$context.availableScrollWidth;\n      var deltaX = _this.cursorDeltaX; // we scroll the table if the dragged cell is part of a scrollable column and is dragged near the edges of the viewport\n\n      if (cellGroupType === CellGroupType.SCROLLABLE) {\n        // Relative dragX position on scroll\n        var dragX = _this.originalLeft - scrollStart + deltaX;\n        deltaX += scrollX - scrollStart; // Scroll the table left or right if we drag near the edges of the table\n\n        if (dragX > availableScrollWidth - DRAG_SCROLL_BUFFER) {\n          scrollX = Math.min(scrollX + DRAG_SCROLL_SPEED, maxScrollX);\n        } else if (dragX <= DRAG_SCROLL_BUFFER) {\n          scrollX = Math.max(scrollX - DRAG_SCROLL_SPEED, 0);\n        }\n\n        _this.context.scrollToX(scrollX);\n      }\n\n      deltaX = _this.getBoundedDeltaX(deltaX);\n\n      _this.setState({\n        displacement: deltaX\n      });\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"isColumnMovedToRight\", function (deltaX) {\n      return deltaX > 0;\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"isColumnMovedToLeft\", function (deltaX) {\n      return deltaX < 0;\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"updateColumnOrder\", function () {\n      var cellGroupType = _this.props.cellGroupType;\n\n      var localOffset = _this.getBoundedDeltaX(_this.cursorDeltaX + _this.context.scrollX - _this.scrollStart); // if we're reordering to the right, then the target point is at the right edge of the cell\n      // otherwise the target point is at the left edge of the cell\n\n\n      var offset = localOffset >= 0 ? _this.props.width + localOffset + _this.props.left : localOffset + _this.props.left;\n      var target;\n      var targetColumnOffset;\n\n      if (_this.props.isGroupHeader) {\n        var _this$context$getColu = _this.context.getColumnGroupAtOffset(offset, cellGroupType),\n            columnGroup = _this$context$getColu.columnGroup,\n            columnGroupOffset = _this$context$getColu.distanceFromOffset;\n\n        target = columnGroup;\n        targetColumnOffset = columnGroupOffset;\n      } else {\n        var _this$context$getColu2 = _this.context.getColumnAtOffset(offset, cellGroupType),\n            column = _this$context$getColu2.column,\n            columnOffset = _this$context$getColu2.distanceFromOffset;\n\n        target = column;\n        targetColumnOffset = columnOffset;\n      }\n\n      var columnBeforeIndex = null;\n      var columnAfterIndex = null; // If we're reordering to the left, the dragged cell will be dropped to the left side of the target\n      // only if it goes behind the center of the target column.\n\n      if (target.index < _this.props.columnIndex) {\n        if (targetColumnOffset <= target.width / 2) {\n          columnBeforeIndex = target.index - 1;\n          columnAfterIndex = target.index;\n        } else {\n          columnBeforeIndex = target.index;\n          columnAfterIndex = target.index + 1;\n        }\n      } else {\n        // If we're reordering to the right, the dragged cell will be dropped to the right side of the target\n        // only if it goes beyond the center of the target column.\n        if (targetColumnOffset >= target.width / 2) {\n          columnBeforeIndex = target.index;\n          columnAfterIndex = target.index + 1;\n        } else {\n          columnBeforeIndex = target.index - 1;\n          columnAfterIndex = target.index;\n        }\n      } // increase/decrease offset to get the column after/before the dragged cell\n\n\n      if (columnBeforeIndex === _this.props.columnIndex) {\n        --columnBeforeIndex;\n      }\n\n      if (columnAfterIndex === _this.props.columnIndex) {\n        ++columnAfterIndex;\n      }\n\n      var columnCount = _this.props.isGroupHeader ? _this.context.getColumnGroupCount() : _this.context.getColumnCount();\n      var columnBefore;\n      var columnAfter; // figure out what column lies at columnBeforeIndex and columnAfterIndex\n\n      if (inRange_1(columnBeforeIndex, 0, columnCount)) {\n        columnBefore = _this.props.isGroupHeader ? _this.context.getColumnGroup(columnBeforeIndex) : _this.context.getColumn(columnBeforeIndex);\n      }\n\n      if (inRange_1(columnAfterIndex, 0, columnCount)) {\n        columnAfter = _this.props.isGroupHeader ? _this.context.getColumnGroup(columnAfterIndex) : _this.context.getColumn(columnAfterIndex);\n      } // let the user know that reordering has ended and supply the column before/after keys\n\n\n      _this.props.onColumnReorderEnd({\n        columnBefore: get_1(columnBefore, 'columnKey'),\n        columnAfter: get_1(columnAfter, 'columnKey'),\n        reorderColumn: _this.props.columnKey\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass$2(DragProxy, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // the first param to cloneNode is `true` to indicate a deep clone\n      var draggedContents = this.props.contents.parentNode.cloneNode(true);\n      draggedContents.firstChild.classList.add(cx('public/fixedDataTableCell/reordering'));\n      this.containerRef.current.appendChild(draggedContents);\n      this.startDrag();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.context.isRTL ? -1 : 1;\n      var style = {\n        position: 'absolute'\n      };\n      FixedDataTableTranslateDOMPosition(style, this.state.displacement, 0, true, this.context.isRTL); // render an empty placeholder which later gets injected with the dragged contents\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        style: style,\n        ref: this.containerRef\n      });\n    }\n  }, {\n    key: \"startDrag\",\n    value: function startDrag() {\n      this.cursorDeltaX = 0;\n      this.scrollStart = this.context.scrollX;\n      this.originalLeft = this.props.left;\n      this.initializeDOMMouseMoveTracker(this.props.reorderStartEvent);\n      this.setState({\n        displacement: 0,\n        isReordering: true\n      });\n      this.frameId = requestAnimationFrame(this.updateDisplacementPeriodically);\n    }\n    /**\n     * @param {number} deltaX\n     */\n\n    /**\n     * @param {MouseEvent} event\n     */\n\n    /**\n     * This returns the displacement bounded between the cell group, preventing the dragged contents\n     * to not go past the cell group.\n     * If the dragged cell is a normal header inside a column group, then the bounds will also be within the column group.\n     *\n     * @param {number} deltaX\n     * @return {number} deltaX bounded between cell group\n     */\n\n    /**\n     * Returns true if column moved to right\n     * @param {number} deltaX\n     * @returns {boolean}\n     */\n\n    /**\n     * Returns true if column moved to left\n     * @param {number} deltaX\n     * @returns {boolean}\n     */\n\n  }]);\n\n  return DragProxy;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().PureComponent));\n\nDragProxy.contextType = FixedDataTableContext;\nDragProxy.propTypes = {\n  columnIndex: PropTypes.number.isRequired,\n  columnKey: PropTypes.string.isRequired,\n  contents: PropTypes.object.isRequired,\n  cellGroupType: PropTypes.string,\n  isGroupHeader: PropTypes.bool,\n  isRTL: PropTypes.bool,\n  left: PropTypes.number.isRequired,\n  onColumnReorderStart: PropTypes.func.isRequired,\n  reorderStartEvent: PropTypes.object.isRequired,\n  touchEnabled: PropTypes.bool,\n  width: PropTypes.number.isRequired\n};\n\nfunction _createSuper$d(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$d(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct$d() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n// This internally doesn't use React's Context.Consumer API, but instead uses FixedDataTableContext's subscriber API to listen to changes.\n// The subscription API ensures that even if the component is rendered in an external VDOM which is not under the FDT instance, it can still detect context value changes.\n\nvar ExternalContextProvider = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits$2(ExternalContextProvider, _React$PureComponent);\n\n  var _super = _createSuper$d(ExternalContextProvider);\n\n  function ExternalContextProvider(props) {\n    var _this;\n\n    _classCallCheck$2(this, ExternalContextProvider);\n\n    _this = _super.call(this, props);\n    var FixedDataTableContextValue = props.value;\n    _this.unsubscribe = FixedDataTableContextValue.subscribe(function (contextValue) {\n      _this.setState({\n        FixedDataTableContextValue: contextValue\n      });\n    });\n    _this.state = {\n      FixedDataTableContextValue: FixedDataTableContextValue\n    };\n    return _this;\n  }\n\n  _createClass$2(ExternalContextProvider, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // make sure we cleanup our subscription to FDT's context\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var FixedDataTableContextValue = this.state.FixedDataTableContextValue;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableContext.Provider, {\n        value: FixedDataTableContextValue\n      }, this.props.children);\n    }\n  }]);\n\n  return ExternalContextProvider;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().PureComponent));\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\n\nfunction noop() {\n  // No operation performed.\n}\n\nvar noop_1 = noop;\n\nvar _excluded$4 = [\"onColumnReorderStart\", \"onColumnReorderEnd\", \"reorderStartEvent\", \"children\"];\n\nfunction _createSuper$c(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$c(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct$c() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar BORDER_WIDTH$1 = 1;\n/**\n * ![Reorder Cell](../images/ReorderCell.png \"Reorder Cell\")\n *\n * Cell HOC that enables reordering functionality by rendering a handle, which can be used to drag the cell around.\n *\n * Example usage:\n * ```\n * <Column\n *   columnKey=\"firstName\"\n *   header={\n *     <Plugins.ReorderCell\n *       onColumnReorderStart={(columnKey) => {\n *         console.log(\"Starting reordering:\", columnKey);\n *       }}\n *       onColumnReorderEnd={(columnBeforeKey, columnAfterKey, reorderColumnKey) => {\n *         console.log(columnBeforeKey, \" comes before \", reorderColumnKey);\n *         console.log(columnAfterKey, \" comes after \", reorderColumnKey);\n *       }}\n *     >\n *       First Name\n *     </Plugins.ReorderCell>\n *   }\n *   cell={<DataCell>Name</DataCell>}\n *   width={200}\n * />\n * ```\n *\n * Live example at https://schrodinger.github.io/fixed-data-table-2/example-reorder.html\n */\n\nvar ReorderCell = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits$2(ReorderCell, _React$PureComponent);\n\n  var _super = _createSuper$c(ReorderCell);\n\n  function ReorderCell() {\n    var _this;\n\n    _classCallCheck$2(this, ReorderCell);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty$1(_assertThisInitialized(_this), \"state\", {\n      isReordering: false\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"dragContainer\", null);\n\n    _defineProperty$1(_assertThisInitialized(_this), \"cellRef\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createRef());\n\n    _defineProperty$1(_assertThisInitialized(_this), \"isMounted\", false);\n\n    _defineProperty$1(_assertThisInitialized(_this), \"setReorderHandle\", function (element) {\n      if (element) {\n        element.addEventListener('mousedown', _this.onMouseDown, {\n          passive: false\n        });\n        element.addEventListener('touchstart', _this.onTouchStart, {\n          passive: false\n        });\n      }\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"onTouchStart\", function (ev) {\n      if (!_this.props.touchEnabled) {\n        return;\n      }\n\n      _this.onMouseDown(ev);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"onMouseDown\", function (event) {\n      _this.onDragStart(event);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"onDragStart\", function (event) {\n      _this.createDragContainer();\n\n      _this.renderDragProxy(event);\n\n      _this.props.onColumnReorderStart(_this.props.columnKey);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"onColumnReorderEnd\", function (ev) {\n      if (_this.isMounted) {\n        _this.setState({\n          isReordering: false\n        });\n      }\n\n      _this.removeDragContainer();\n\n      _this.props.onColumnReorderEnd(ev);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"createDragContainer\", function () {\n      // create a container for the drag proxy\n      _this.dragContainer = document.createElement('div'); // store the column key in the DOM to easily identify what column is being dragged around\n\n      _this.dragContainer.dataset.columnKey = _this.props.columnKey; // Place the container inside the parent cell group so that our dragged cell ends up in the correct heirarchy.\n      // This is important for correct styling and layout calculations.\n\n      var cellGroup = _this.cellRef.current.closest('.fixedDataTableCellGroupLayout_cellGroup');\n\n      cellGroup.appendChild(_this.dragContainer);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"getDragContainer\", function () {\n      if (_this.dragContainer) {\n        return _this.dragContainer;\n      } // get the cell group containing our cell\n\n\n      var cellGroup = _this.cellRef.current.closest('.fixedDataTableCellGroupLayout_cellGroup'); // find the drag container within the cell group\n\n\n      _this.dragContainer = cellGroup.querySelector(\"[data-column-key=\\\"\".concat(_this.props.columnKey, \"\\\"]\"));\n      return _this.dragContainer;\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"removeDragContainer\", function () {\n      // since the drag container is going to be removed, also unmount the drag proxy\n      if (_this.props.__react19RootCreator) {\n        _this.dragContainer.root.unmount();\n      } else {\n        react_dom__WEBPACK_IMPORTED_MODULE_1__.unmountComponentAtNode(_this.dragContainer);\n      }\n\n      _this.dragContainer.remove();\n\n      _this.dragContainer = null;\n    });\n\n    return _this;\n  }\n  /**\n   * The container for dragged cell.\n   *\n   * While dragging takes place, ReorderCell renders a proxy component into a seperate React root, referred here as the \"Drag Proxy\".\n   * ReorderCell then hides itself, while the Drag Proxy becomes visible and is what the user actually sees and drags around.\n   *\n   * This ensures that even if ReorderCell unmounts (which can happen when the table scrolls far away), the Drag Proxy\n   * which is rendered in a separate React root is still alive, and hence doesn't break dragging functionality.\n   *\n   * Once dragging ends, the proxy is destroyed, and the original ReorderCell becomes visible again.\n   */\n\n\n  _createClass$2(ReorderCell, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.isMounted = true;\n      /**\n       * NOTE (pradeep): Important! Check if this cell was \"already\" being dragged by the user.\n       * This is a slightly rare case, and happens under the following steps:\n       *   1. User starts reordering on cell \"A\", which creates the draggable proxy cell \"B\".\n       *   2. If cell B is dragged far away such that the column associated with the cell goes outside the viewport, this effectively unmounts all cells in that column, including cell \"A\".\n       *   2. Now if the user drags cell \"B\" back such that the column associated with the cell becomes visible, then another instance of cell \"A\" will be mounted.\n       *   3. The new instance of cell \"A\" now needs to figure out that the dragged proxy cell \"B\" already exists, and if so it should be in a reordering state.\n       */\n\n      var draggedCellColumnKey = get_1(this.getDragContainer(), 'dataset.columnKey');\n      var isReordering = toString_1(this.props.columnKey) === draggedCellColumnKey;\n\n      if (isReordering) {\n        // NOTE (pradeep): rerender the drag proxy to alert it that this instance is the new parent\n        this.renderDragProxy({});\n        this.setState({\n          isReordering: true\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isReordering) {\n        // If we're in the middle of reordering then return null here.\n        // The rendering responsibility will instead be taken care of by the drag proxy instead.\n        return null;\n      }\n\n      var _this$props = this.props;\n          _this$props.onColumnReorderStart;\n          _this$props.onColumnReorderEnd;\n          _this$props.reorderStartEvent;\n          var children = _this$props.children,\n          props = _objectWithoutProperties(_this$props, _excluded$4);\n\n      var className = joinClasses(cx({\n        'public/fixedDataTableCell/resizeReorderCellContainer': true\n      }), props.className);\n      var reorderClasses = joinClasses(className, cx({\n        'public/fixedDataTableCell/hasReorderHandle': true\n      }));\n      var style = {\n        height: props.height,\n        width: props.width - BORDER_WIDTH$1\n      };\n      var content;\n\n      if ( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(children)) {\n        content = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(children, props);\n      } else if (typeof children === 'function') {\n        content = children(props);\n      } else {\n        content = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableCellDefault, props, children);\n      }\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: reorderClasses,\n        style: style,\n        ref: this.cellRef\n      }, this.renderReorderHandle(), content);\n    }\n  }, {\n    key: \"renderReorderHandle\",\n    value: function renderReorderHandle() {\n      var style = {\n        height: this.props.height\n      };\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        ref: this.setReorderHandle,\n        className: cx({\n          'fixedDataTableCellLayout/columnReorderContainer': true,\n          'fixedDataTableCellLayout/columnReorderContainer/active': false\n        }),\n        style: style\n      });\n    }\n    /**\n     *\n     * @param {MouseEvent} event\n     */\n\n    /**\n     * @param {string} columnKey\n     */\n\n    /**\n     * @param ev\n     * @param {string} ev.columnBefore\n     * @param {string} ev.columnAfter\n     * @param {string} ev.reorderColumn\n     */\n\n  }, {\n    key: \"renderDragProxy\",\n    value:\n    /**\n     * Render a proxy version of our cell that can be dragged around without repercussions to component unmounts.\n     */\n    function renderDragProxy(reorderStartEvent) {\n      var _this2 = this;\n\n      var additionalProps = {\n        isDragProxy: true,\n        reorderStartEvent: reorderStartEvent,\n        onColumnReorderEnd: this.onColumnReorderEnd,\n        contents: this.cellRef.current\n      }; // Since we're effectively rendering the proxy in a separate VDOM root, we cannot directly pass in our context.\n      // To solve this, we use ExternalContextProvider to pass down the context value.\n      // ExternalContextProvider also ensures that even if our cell gets unmounted, the dragged cell still receives updates from context.\n\n      var proxy = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ExternalContextProvider, {\n        value: this.context\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DragProxy, _extends({}, this.props, additionalProps)));\n\n      if (this.props.__react19RootCreator) {\n        var flushSync = react_dom__WEBPACK_IMPORTED_MODULE_1__.flushSync || function (fn) {\n          return fn();\n        }; // ReactDOM.flushSync doesn't exist in older versions of React\n        // flushSync is required to ensure that the drag proxy gets mounted synchronously in newer version of React\n\n\n        flushSync(function () {\n          var root = _this2.props.__react19RootCreator(_this2.getDragContainer());\n\n          _this2.dragContainer.root = root;\n          root.render(proxy);\n        }); // we consider our cell to be in a reordering state as soon as the drag proxy gets mounted\n\n        this.setState({\n          isReordering: true\n        });\n        return;\n      }\n\n      react_dom__WEBPACK_IMPORTED_MODULE_1__.render(proxy, this.getDragContainer(), // we consider our cell in a reordering state as soon as the drag proxy gets mounted\n      function () {\n        return _this2.setState({\n          isReordering: true\n        });\n      });\n    }\n  }]);\n\n  return ReorderCell;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().PureComponent));\n\nReorderCell.contextType = FixedDataTableContext;\nReorderCell.defaultProps = {\n  onColumnReorderStart: noop_1\n};\nReorderCell.propTypes = {\n  /**\n   * Outer height of the cell.\n   */\n  height: PropTypes.number,\n\n  /**\n   * Outer width of the cell.\n   */\n  width: PropTypes.number,\n\n  /**\n   * Optional prop that if specified on the `Column` will be passed to the\n   * cell. It can be used to uniquely identify which column is the cell is in.\n   */\n  columnKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Optional prop that represents the rows index in the table.\n   * For the 'cell' prop of a Column, this parameter will exist for any\n   * cell in a row with a positive index.\n   *\n   * Below that entry point the user is welcome to consume or\n   * pass the prop through at their discretion.\n   */\n  rowIndex: PropTypes.number,\n\n  /**\n   * The left offset in pixels of the cell.\n   * Space between cell's left edge and left edge of table\n   */\n  left: PropTypes.number,\n\n  /**\n   * Whether touch is enabled or not.\n   */\n  touchEnabled: PropTypes.bool,\n\n  /**\n   * The minimum width of the column.\n   */\n  minWidth: PropTypes.number,\n\n  /**\n   * The maximum width of the column.\n   */\n  maxWidth: PropTypes.number,\n\n  /**\n   * Callback function which is called when reordering starts\n   * ```\n   * function(columnKey: string)\n   * ```\n   */\n  onColumnReorderStart: PropTypes.func,\n\n  /**\n   * Callback function which is called when reordering ends\n   * ```\n   * function({columnBefore: string, columnAfter: string, reorderColumn: string})\n   * ```\n   */\n  onColumnReorderEnd: PropTypes.func.isRequired,\n\n  /**\n   * HACK to make this plugin work in a React v19 environment by letting the client pass the `createRoot` function from `react-dom/client`.\n   *\n   * Example usage:\n   * ```\n   * import { createRoot } from 'react-dom/client';\n   *\n   * const reorderCell = (\n   *  <ReorderCell\n   *   __react19RootCreator={createRoot}\n   * />\n   * ```\n   *\n   * See https://github.com/schrodinger/fixed-data-table-2/issues/743) for more information.\n   *\n   * @deprecated This'll be removed in future major version updates of FDT.\n   */\n  __react19RootCreator: PropTypes.func\n};\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nvar _createClass$1 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck$1(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn$1(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits$1(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Portal$3 = function (_React$Component) {\n  _inherits$1(Portal, _React$Component);\n\n  function Portal() {\n    _classCallCheck$1(this, Portal);\n\n    return _possibleConstructorReturn$1(this, (Portal.__proto__ || Object.getPrototypeOf(Portal)).apply(this, arguments));\n  }\n\n  _createClass$1(Portal, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.defaultNode) {\n        document.body.removeChild(this.defaultNode);\n      }\n      this.defaultNode = null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      if (!canUseDOM) {\n        return null;\n      }\n      if (!this.props.node && !this.defaultNode) {\n        this.defaultNode = document.createElement('div');\n        document.body.appendChild(this.defaultNode);\n      }\n      return react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal(this.props.children, this.props.node || this.defaultNode);\n    }\n  }]);\n\n  return Portal;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n\nPortal$3.propTypes = {\n  children: PropTypes.node.isRequired,\n  node: PropTypes.any\n};\n\nvar Portalv4 = Portal$3;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Portal$2 = function (_React$Component) {\n  _inherits(Portal, _React$Component);\n\n  function Portal() {\n    _classCallCheck(this, Portal);\n\n    return _possibleConstructorReturn(this, (Portal.__proto__ || Object.getPrototypeOf(Portal)).apply(this, arguments));\n  }\n\n  _createClass(Portal, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.renderPortal();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(props) {\n      this.renderPortal();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      react_dom__WEBPACK_IMPORTED_MODULE_1__.unmountComponentAtNode(this.defaultNode || this.props.node);\n      if (this.defaultNode) {\n        document.body.removeChild(this.defaultNode);\n      }\n      this.defaultNode = null;\n      this.portal = null;\n    }\n  }, {\n    key: 'renderPortal',\n    value: function renderPortal(props) {\n      if (!this.props.node && !this.defaultNode) {\n        this.defaultNode = document.createElement('div');\n        document.body.appendChild(this.defaultNode);\n      }\n\n      var children = this.props.children;\n      // https://gist.github.com/jimfb/d99e0678e9da715ccf6454961ef04d1b\n      if (typeof this.props.children.type === 'function') {\n        children = react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(this.props.children);\n      }\n\n      this.portal = react_dom__WEBPACK_IMPORTED_MODULE_1__.unstable_renderSubtreeIntoContainer(this, children, this.props.node || this.defaultNode);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return Portal;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n\nvar LegacyPortal = Portal$2;\n\n\nPortal$2.propTypes = {\n  children: PropTypes.node.isRequired,\n  node: PropTypes.any\n};\n\nvar Portal = void 0;\n\nif (react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal) {\n  Portal = Portalv4;\n} else {\n  Portal = LegacyPortal;\n}\n\nvar Portal$1 = Portal;\n\nfunction _createSuper$b(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$b(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct$b() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ResizerLine = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits$2(ResizerLine, _React$PureComponent);\n\n  var _super = _createSuper$b(ResizerLine);\n\n  function ResizerLine() {\n    _classCallCheck$2(this, ResizerLine);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass$2(ResizerLine, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.visible) {\n        return null;\n      }\n\n      var tableRef = this.getTableRef();\n\n      if (!tableRef) {\n        return null;\n      }\n\n      var style = {\n        height: this.props.height,\n        top: 0,\n        left: this.props.left\n      };\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Portal$1, {\n        node: tableRef\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: joinClasses(cx('fixedDataTableColumnResizerLineLayout/main'), cx('public/fixedDataTableColumnResizerLine/main')),\n        style: style\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: cx('fixedDataTableColumnResizerLineLayout/mouseArea'),\n        style: {\n          height: this.props.height\n        }\n      })));\n    }\n  }, {\n    key: \"getTableRef\",\n    value: function getTableRef() {\n      var parentRef = this.props.parentRef;\n\n      if (!parentRef) {\n        return null;\n      }\n\n      return parentRef.closest(cx('.fixedDataTableLayout/main'));\n    }\n  }]);\n\n  return ResizerLine;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().PureComponent));\n\n_defineProperty$1(ResizerLine, \"propTypes\", {\n  /**\n   *  It is true if columnResizing is true in ResizerKnob due to mouse down event\n   */\n  visible: PropTypes.bool.isRequired,\n\n  /**\n   * This is the height of the line\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Left position of ResizerLine\n   */\n  left: PropTypes.number.isRequired,\n\n  /**\n   * The parent HTML Element.\n   */\n  parentRef: PropTypes.object\n});\n\nfunction ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { _defineProperty$1(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper$a(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$a(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct$a() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ResizerKnob = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits$2(ResizerKnob, _React$PureComponent);\n\n  var _super = _createSuper$a(ResizerKnob);\n\n  /**\n   * Ref to ResizerKnob\n   * @type {HTMLDivElement}\n   */\n\n  /**\n   *\n   * @type {DOMMouseMoveTracker}\n   */\n  function ResizerKnob(props) {\n    var _this;\n\n    _classCallCheck$2(this, ResizerKnob);\n\n    _this = _super.call(this, props);\n\n    _defineProperty$1(_assertThisInitialized(_this), \"initialState\", {\n      /**\n       * @type {boolean} Set true when column resizing starts. It is used to make ResizerLine visible.\n       */\n      isColumnResizing: false,\n\n      /**\n       * @type {number} X coordinate of ResizerLine during resizing. It is passed do to ResizerLine to render at appropriate position.\n       */\n      currentMouseXCoordinate: 0,\n\n      /**\n       * @type {number} Total displacement of mouse calculated from initial position when resizing started\n       */\n      totalDisplacement: 0\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"state\", _objectSpread$3({}, _this.initialState));\n\n    _defineProperty$1(_assertThisInitialized(_this), \"resizerKnobRef\", null);\n\n    _defineProperty$1(_assertThisInitialized(_this), \"mouseMoveTracker\", null);\n\n    _defineProperty$1(_assertThisInitialized(_this), \"setResizerKnobRef\", function (element) {\n      _this.resizerKnobRef = element;\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"initializeDOMMouseMoveTracker\", function (event) {\n      _this.mouseMoveTracker = new DOMMouseMoveTracker(_this.onMouseMove, _this.onMouseUp, document.body, _this.props.touchEnabled);\n\n      _this.mouseMoveTracker.captureMouseMoves(event);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"onTouchStart\", function (event) {\n      if (_this.props.touchEnabled) {\n        _this.onMouseDown(event);\n      }\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"onMouseDown\", function (ev) {\n      _this.initializeDOMMouseMoveTracker(ev);\n\n      var initialMouseXCoordinate = FixedDataTableEventHelper.getCoordinatesFromEvent(ev).x - ev.currentTarget.closest(cx('.fixedDataTableLayout/main')).getBoundingClientRect().left;\n\n      _this.setState({\n        initialMouseXCoordinate: initialMouseXCoordinate,\n        isColumnResizing: true,\n        totalDisplacement: 0,\n        currentMouseXCoordinate: initialMouseXCoordinate\n      });\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"onMouseUp\", function () {\n      var _this$getMinMaxWidth = _this.getMinMaxWidth(),\n          minWidth = _this$getMinMaxWidth.minWidth,\n          maxWidth = _this$getMinMaxWidth.maxWidth;\n\n      var newWidth = clamp$1(_this.props.width + _this.state.totalDisplacement * (_this.props.isRTL ? -1 : 1), minWidth, maxWidth);\n\n      _this.mouseMoveTracker.releaseMouseMoves();\n\n      _this.setState({\n        isColumnResizing: false,\n        totalDisplacement: 0\n      }, function () {\n        _this.props.onColumnResizeEnd(newWidth, _this.props.columnKey);\n      });\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"onMouseMove\", function (displacementX) {\n      var _this$props = _this.props,\n          isRTL = _this$props.isRTL,\n          width = _this$props.width;\n      var _this$state = _this.state,\n          initialMouseXCoordinate = _this$state.initialMouseXCoordinate,\n          previousTotalDisplacement = _this$state.totalDisplacement; // displacementX is negative if movement is in left direction\n\n      var newTotalDisplacement = previousTotalDisplacement + displacementX;\n      var newResizerLineXCoordinate = initialMouseXCoordinate + newTotalDisplacement;\n\n      var _this$getMinMaxWidth2 = _this.getMinMaxWidth(),\n          minWidth = _this$getMinMaxWidth2.minWidth,\n          maxWidth = _this$getMinMaxWidth2.maxWidth;\n\n      var currentWidth = width + newTotalDisplacement * (isRTL ? -1 : 1); // Limit the resizer line to not move ahead or back of maxWidth and minWidth respectively\n\n      if (currentWidth < minWidth || currentWidth > maxWidth) {\n        // If new position is going out of bounds, instead of updating,  use the previous value\n        newResizerLineXCoordinate = _this.state.currentMouseXCoordinate;\n      }\n\n      _this.setState({\n        totalDisplacement: newTotalDisplacement,\n        currentMouseXCoordinate: newResizerLineXCoordinate\n      });\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"getMinMaxWidth\", function () {\n      return {\n        minWidth: _this.props.minWidth || 0,\n        maxWidth: _this.props.maxWidth || Number.MAX_SAFE_INTEGER\n      };\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"suppressEventIfInTouchMode\", function (event) {\n      if (!_this.props.touchEnabled) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n    });\n\n    return _this;\n  }\n\n  _createClass$2(ResizerKnob, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setupHandlers();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cleanupHandlers();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resizerKnobStyle = {\n        height: this.props.height\n      };\n      var resizerLine = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ResizerLine, {\n        height: this.props.resizerLineHeight,\n        visible: !!this.state.isColumnResizing,\n        left: this.state.currentMouseXCoordinate,\n        parentRef: this.resizerKnobRef\n      });\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: cx('fixedDataTableCellLayout/columnResizerContainer'),\n        ref: this.setResizerKnobRef,\n        style: resizerKnobStyle\n      }, resizerLine);\n    }\n  }, {\n    key: \"setupHandlers\",\n    value: function setupHandlers() {\n      // TODO (pradeep): Remove these and pass to our knob component directly after React\n      // provides an API where event handlers can be specified to be non-passive (facebook/react#6436).\n      this.resizerKnobRef.addEventListener('mousedown', this.onMouseDown, {\n        passive: false\n      });\n      this.resizerKnobRef.addEventListener('touchstart', this.onTouchStart, {\n        passive: false\n      });\n      this.resizerKnobRef.addEventListener('touchmove', this.suppressEventIfInTouchMode, {\n        passive: false\n      });\n      this.resizerKnobRef.addEventListener('touchend', this.suppressEventIfInTouchMode, {\n        passive: false\n      });\n    }\n  }, {\n    key: \"cleanupHandlers\",\n    value: function cleanupHandlers() {\n      this.resizerKnobRef.removeEventListener('mousedown', this.onMouseDown, {\n        passive: false\n      });\n      this.resizerKnobRef.removeEventListener('touchstart', this.onTouchStart, {\n        passive: false\n      });\n      this.resizerKnobRef.removeEventListener('touchmove', this.suppressEventIfInTouchMode, {\n        passive: false\n      });\n      this.resizerKnobRef.removeEventListener('touchend', this.suppressEventIfInTouchMode, {\n        passive: false\n      });\n    }\n    /**\n     * Registers event listeners for mouse tracking\n     * @param {MouseEvent} event\n     */\n\n    /**\n     * @param {TouchEvent} event The touch start event\n     */\n\n    /**\n     * @param {MouseEvent} ev Mouse down event\n     */\n\n    /**\n     *\n     * @param {number} displacementX Displacement of mouse along x-direction\n     */\n\n    /**\n     * If minWidth and Width not given, mapping them to a valid range i.e. 0 to Number.MAX_SAFE_INTEGER\n     * @returns {{minWidth: number, maxWidth: number}}\n     */\n\n    /**\n     * @param {Object} event\n     */\n\n  }]);\n\n  return ResizerKnob;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().PureComponent));\n\nResizerKnob.propTypes = {\n  /**\n   * Optional prop that if specified on the `Column` will be passed to the\n   * cell. It can be used to uniquely identify which column is the cell is in.\n   */\n  columnKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n\n  /**\n   * The minimum width of the column.\n   */\n  minWidth: PropTypes.number,\n\n  /**\n   * The maximum width of the column.\n   */\n  maxWidth: PropTypes.number,\n\n  /**\n   * Outer width of the cell.\n   */\n  width: PropTypes.number.isRequired,\n\n  /**\n   * Line of resizing line\n   */\n  resizerLineHeight: PropTypes.number.isRequired,\n\n  /**\n   * Whether touch is enabled or not.\n   */\n  touchEnabled: PropTypes.bool,\n\n  /**\n   * True if FDT has right to left orientation\n   */\n  isRTL: PropTypes.bool,\n\n  /**\n   * Callback function which is called when reordering ends\n   */\n  onColumnResizeEnd: PropTypes.func.isRequired,\n\n  /**\n   * Outer height of the cell.\n   */\n  height: PropTypes.number.isRequired\n};\n\nvar _excluded$3 = [\"children\", \"minWidth\", \"maxWidth\", \"onColumnResizeEnd\", \"onColumnReorderEnd\", \"rowIndex\", \"left\", \"touchEnabled\", \"cellGroupType\", \"onColumnReorderStart\"];\n\nfunction _createSuper$9(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$9(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct$9() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar BORDER_WIDTH = 1;\n/**\n * ![Resize Cell](../images/ResizeCell.png \"Resize Cell\")\n *\n * Cell HOC that enables resizing functionality by rendering a draggable handle.\n *\n * Example usage:\n * ```\n * <Column\n *   columnKey=\"firstName\"\n *   header={\n *     <ResizeCell\n *       onColumnResizeEnd={(newWidth, columnKey) => {\n *         console.log(\"New width: \", newWidth);\n *       }}\n *       minWidth={50}\n *       maxWidth={300}\n *     >\n *       First Name\n *     </ResizeCell>\n *   }\n *   cell={<DataCell>Name</DataCell>}\n *   width={150}\n * />\n * ```\n *\n * Live example at https://schrodinger.github.io/fixed-data-table-2/example-resize.html\n */\n\nvar ResizeCell = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits$2(ResizeCell, _React$PureComponent);\n\n  var _super = _createSuper$9(ResizeCell);\n\n  function ResizeCell() {\n    _classCallCheck$2(this, ResizeCell);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass$2(ResizeCell, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children;\n          _this$props.minWidth;\n          _this$props.maxWidth;\n          _this$props.onColumnResizeEnd;\n          _this$props.onColumnReorderEnd;\n          _this$props.rowIndex;\n          _this$props.left;\n          _this$props.touchEnabled;\n          _this$props.cellGroupType;\n          _this$props.onColumnReorderStart;\n          var props = _objectWithoutProperties(_this$props, _excluded$3);\n\n      ({\n        height: props.height,\n        width: props.width - BORDER_WIDTH\n      });\n\n      if (this.context.isRTL) ;\n\n      var content;\n\n      if ( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(children)) {\n        content = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(children, props);\n      } else if (typeof children === 'function') {\n        content = children(props);\n      } else {\n        content = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableCellDefault, props, children);\n      }\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ResizerKnob, {\n        height: this.props.height,\n        resizerLineHeight: this.context.tableHeight,\n        onColumnResizeEnd: this.props.onColumnResizeEnd,\n        width: this.props.width,\n        minWidth: this.props.minWidth,\n        maxWidth: this.props.maxWidth,\n        columnKey: this.props.columnKey,\n        touchEnabled: this.props.touchEnabled,\n        isRTL: this.context.isRTL\n      }), content);\n    }\n  }]);\n\n  return ResizeCell;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().PureComponent));\n\nResizeCell.contextType = FixedDataTableContext;\nResizeCell.propTypes = {\n  /**\n   * Optional prop that if specified on the `Column` will be passed to the\n   * cell. It can be used to uniquely identify which column is the cell is in.\n   */\n  columnKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * The minimum width of the column.\n   */\n  minWidth: PropTypes.number,\n\n  /**\n   * The maximum width of the column.\n   */\n  maxWidth: PropTypes.number,\n\n  /**\n   * Outer width of the cell.\n   */\n  width: PropTypes.number,\n\n  /**\n   * Whether touch is enabled or not.\n   */\n  touchEnabled: PropTypes.bool,\n\n  /**\n   * True if FDT has right to left orientation\n   */\n  isRTL: PropTypes.bool,\n\n  /**\n   * Callback function which is called when reordering ends\n   *\n   * ```\n   * function(newWidth: number, columnKey: string)\n   * ```\n   */\n  onColumnResizeEnd: PropTypes.func.isRequired,\n\n  /**\n   * Outer height of the cell.\n   */\n  height: PropTypes.number\n};\n\nvar _excluded$2 = [\"cell\"],\n    _excluded2 = [\"cell\"],\n    _excluded3 = [\"height\", \"width\", \"columnIndex\", \"isVisible\", \"columnKey\", \"isHeaderOrFooter\", \"touchEnabled\"];\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty$1(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper$8(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$8(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct$8() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar FixedDataTableCell = /*#__PURE__*/function (_React$Component) {\n  _inherits$2(FixedDataTableCell, _React$Component);\n\n  var _super = _createSuper$8(FixedDataTableCell);\n\n  function FixedDataTableCell() {\n    _classCallCheck$2(this, FixedDataTableCell);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass$2(FixedDataTableCell, [{\n    key: \"shouldComponentUpdate\",\n    value:\n    /**\n     * PropTypes are disabled in this component, because having them on slows\n     * down the FixedDataTable hugely in DEV mode. You can enable them back for\n     * development, but please don't commit this component with enabled propTypes.\n     */\n    function shouldComponentUpdate(nextProps) {\n      if (nextProps.isScrolling && this.props.rowIndex === nextProps.rowIndex && this.props.isVisible === nextProps.isVisible) {\n        return false;\n      } //Performance check not enabled\n\n\n      if (!nextProps.pureRendering) {\n        return true;\n      }\n\n      var _this$props = this.props,\n          oldCell = _this$props.cell,\n          oldProps = _objectWithoutProperties(_this$props, _excluded$2);\n\n      var newCell = nextProps.cell,\n          newProps = _objectWithoutProperties(nextProps, _excluded2);\n\n      if (!shallowEqual(oldProps, newProps)) {\n        return true;\n      }\n\n      if (!oldCell || !newCell || oldCell.type !== newCell.type) {\n        return true;\n      }\n\n      if (!shallowEqual(oldCell.props, newCell.props)) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render()\n    /*object*/\n    {\n      var _this$props2 = this.props,\n          height = _this$props2.height,\n          width = _this$props2.width;\n          _this$props2.columnIndex;\n          var isVisible = _this$props2.isVisible;\n          _this$props2.columnKey;\n          var isHeaderOrFooter = _this$props2.isHeaderOrFooter,\n          touchEnabled = _this$props2.touchEnabled,\n          props = _objectWithoutProperties(_this$props2, _excluded3);\n\n      var style = {\n        height: height,\n        width: width\n      };\n\n      if (this.props.isRTL) {\n        style.right = props.left;\n      } else {\n        style.left = props.left;\n      }\n\n      var className = joinClasses(cx({\n        'fixedDataTableCellLayout/main': true,\n        'fixedDataTableCellLayout/lastChild': props.lastChild,\n        'fixedDataTableCellLayout/alignRight': props.align === 'right',\n        'fixedDataTableCellLayout/alignCenter': props.align === 'center',\n        'public/fixedDataTableCell/alignRight': props.align === 'right',\n        'public/fixedDataTableCell/highlighted': props.highlighted,\n        'public/fixedDataTableCell/main': true\n      }), props.className);\n      var cellProps = {\n        touchEnabled: touchEnabled,\n        isVisible: isVisible,\n        isHeader: this.props.isHeader,\n        isGroupHeader: this.props.isGroupHeader,\n        cellGroupType: this.props.cellGroupType,\n        columnIndex: this.props.columnIndex,\n        columnKey: this.props.columnKey,\n        height: this.props.height,\n        width: this.props.width,\n        left: this.props.left\n      };\n\n      if (props.rowIndex >= 0) {\n        cellProps.rowIndex = props.rowIndex;\n      }\n\n      var content;\n\n      if (this.props.isHeader && (this.props.onColumnResizeEnd || this.props.onColumnReorderEnd)) {\n        // NOTE: Use plugins manually for backward compatibility. Will be removed in future release.\n        if (this.props.onColumnResizeEnd && this.props.onColumnReorderEnd) {\n          cellProps = _objectSpread$2(_objectSpread$2({}, cellProps), {}, {\n            minWidth: this.props.minWidth,\n            maxWidth: this.props.maxWidth\n          });\n          content = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ReorderCell, _extends({}, cellProps, {\n            onColumnReorderEnd: this.props.onColumnReorderEnd\n          }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ResizeCell, {\n            onColumnResizeEnd: this.props.onColumnResizeEnd\n          }, props.cell));\n        } else if (this.props.onColumnReorderEnd) {\n          content = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ReorderCell, _extends({}, cellProps, {\n            onColumnReorderEnd: this.props.onColumnReorderEnd\n          }), props.cell);\n        } else {\n          cellProps = _objectSpread$2(_objectSpread$2({}, cellProps), {}, {\n            minWidth: this.props.minWidth,\n            maxWidth: this.props.maxWidth\n          });\n          content = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ResizeCell, _extends({}, cellProps, {\n            onColumnResizeEnd: this.props.onColumnResizeEnd\n          }), props.cell);\n        }\n      } else if ( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(props.cell)) {\n        content = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(props.cell, cellProps);\n      } else if (typeof props.cell === 'function') {\n        content = props.cell(cellProps);\n      } else {\n        content = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableCellDefault$1, cellProps, props.cell);\n      }\n\n      var role = isHeaderOrFooter ? 'columnheader' : 'gridcell';\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: className,\n        style: style,\n        role: role\n      }, content);\n    }\n  }]);\n\n  return FixedDataTableCell;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n\n_defineProperty$1(FixedDataTableCell, \"propTypes_DISABLED_FOR_PERFORMANCE\", {\n  isScrolling: PropTypes.bool,\n  align: PropTypes.oneOf(['left', 'center', 'right']),\n  className: PropTypes.string,\n  highlighted: PropTypes.bool,\n  width: PropTypes.number.isRequired,\n  minWidth: PropTypes.number,\n  maxWidth: PropTypes.number,\n  height: PropTypes.number.isRequired,\n  cell: PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.func]),\n  columnKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * The row index that will be passed to `cellRenderer` to render.\n   */\n  rowIndex: PropTypes.number.isRequired,\n\n  /**\n   * The left offset in pixels of the cell.\n   */\n  left: PropTypes.number,\n\n  /**\n   * Flag for enhanced performance check\n   */\n  pureRendering: PropTypes.bool,\n\n  /**\n   * Whether touch is enabled or not.\n   */\n  touchEnabled: PropTypes.bool,\n\n  /**\n   * Whether the cell group is part of the header or footer\n   */\n  isHeaderOrFooter: PropTypes.bool,\n\n  /**\n   * If the component should render for RTL direction\n   */\n  isRTL: PropTypes.bool,\n\n  /**\n   * Whether this cell is visible (i.e, inside the viewport) or not.\n   */\n  isVisible: PropTypes.bool.isRequired,\n\n  /**\n   * @deprecated\n   *\n   * Callback that is called when resizer has been released\n   * and column needs to be updated.\n   *\n   * Only for backward compatibility.\n   *\n   * Required if the isResizable property is true on any column.\n   *\n   * ```\n   * function(\n   *   newColumnWidth: number,\n   *   columnKey: string,\n   * )\n   * ```\n   */\n  onColumnResizeEnd: PropTypes.func,\n\n  /**\n   * @deprecated\n   *\n   * Callback that is called when reordering has been completed\n   * and columns need to be updated.\n   *\n   * ```\n   * function(\n   *   event {\n   *     columnBefore: string|undefined, // the column before the new location of this one\n   *     columnAfter: string|undefined,  // the column after the new location of this one\n   *     reorderColumn: string,          // the column key that was just reordered\n   *   }\n   * )\n   * ```\n   */\n  onColumnReorderEnd: PropTypes.func,\n\n  /**\n   * Whether these cells belong to the header/group-header\n   */\n  isHeader: PropTypes.bool,\n\n  /**\n   * Whether the cells belongs to the fixed group\n   */\n  cellGroupType: PropTypes.oneOf([CellGroupType.FIXED, CellGroupType.FIXED_RIGHT, CellGroupType.SCROLLABLE])\n});\n\n_defineProperty$1(FixedDataTableCell, \"defaultProps\",\n/*object*/\n{\n  align: 'left',\n  highlighted: false\n});\n\nvar FixedDataTableCell$1 = polyfill(FixedDataTableCell);\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FixedDataTableCellGroup\n * @typechecks\n */\nvar _excluded$1 = [\"offsetLeft\"];\n\nfunction _createSuper$7(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$7(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct$7() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar FixedDataTableCellGroupImpl = /*#__PURE__*/function (_React$Component) {\n  _inherits$2(FixedDataTableCellGroupImpl, _React$Component);\n\n  var _super = _createSuper$7(FixedDataTableCellGroupImpl);\n\n  /**\n   * PropTypes are disabled in this component, because having them on slows\n   * down the FixedDataTable hugely in DEV mode. You can enable them back for\n   * development, but please don't commit this component with enabled propTypes.\n   */\n  function FixedDataTableCellGroupImpl(props) {\n    var _this;\n\n    _classCallCheck$2(this, FixedDataTableCellGroupImpl);\n\n    _this = _super.call(this, props);\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_renderCell\", function\n      /*object*/\n    (\n    /*number*/\n    rowIndex,\n    /*number*/\n    height,\n    /*object*/\n    columnProps,\n    /*object*/\n    cellTemplate,\n    /*number*/\n    left,\n    /*string*/\n    key,\n    /*boolean*/\n    isHorizontallyVisible) {\n      var className = columnProps.cellClassName;\n      var pureRendering = columnProps.pureRendering || false;\n      var onColumnReorderEndCallback = columnProps.isReorderable ? _this.props.onColumnReorderEndCallback : null;\n      var onColumnResizeEndCallback = columnProps.isResizable ? _this.props.onColumnResizeEndCallback : null;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableCell$1, {\n        columnIndex: columnProps.index,\n        isScrolling: _this.props.isScrolling,\n        isHeaderOrFooter: _this.props.isHeaderOrFooter,\n        isHeader: _this.props.isHeader,\n        isGroupHeader: _this.props.isGroupHeader,\n        align: columnProps.align,\n        className: className,\n        height: height,\n        key: key,\n        maxWidth: columnProps.maxWidth,\n        minWidth: columnProps.minWidth,\n        touchEnabled: _this.props.touchEnabled,\n        onColumnResizeEnd: onColumnResizeEndCallback,\n        onColumnReorderEnd: onColumnReorderEndCallback,\n        rowIndex: rowIndex,\n        columnKey: columnProps.columnKey,\n        width: columnProps.width,\n        left: left,\n        cell: cellTemplate,\n        pureRendering: pureRendering,\n        isRTL: _this.props.isRTL,\n        cellGroupType: _this.props.cellGroupType,\n        isVisible: _this.props.isVisible && isHorizontallyVisible\n      });\n    });\n\n    _this._initialRender = true;\n    return _this;\n  }\n\n  _createClass$2(FixedDataTableCellGroupImpl, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._initialRender = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render()\n    /*object*/\n    {\n      var props = this.props;\n      var columns = props.columns;\n      var cells = new Array(columns.length);\n      var contentWidth = sumPropWidths(columns);\n      var currentPosition = 0;\n\n      for (var i = 0, j = columns.length; i < j; i++) {\n        var columnProps = columns[i].props;\n        var cellTemplate = columns[i].template;\n        var recyclable = columnProps.allowCellsRecycling;\n        var isHorizontallyVisible = currentPosition - props.left <= props.width && currentPosition - props.left + columnProps.width >= 0;\n\n        if (!recyclable || isHorizontallyVisible) {\n          var key = columnProps.columnKey || 'cell_' + i;\n          cells[i] = this._renderCell(props.rowIndex, props.rowHeight, columnProps, cellTemplate, currentPosition, key, isHorizontallyVisible);\n        }\n\n        currentPosition += columnProps.width;\n      }\n\n      var style = {\n        height: props.height,\n        position: 'absolute',\n        width: contentWidth,\n        zIndex: props.zIndex\n      };\n      FixedDataTableTranslateDOMPosition(style, -1 * props.left, 0, this._initialRender, this.props.isRTL);\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: cx('fixedDataTableCellGroupLayout/cellGroup'),\n        style: style\n      }, cells);\n    }\n  }]);\n\n  return FixedDataTableCellGroupImpl;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n\n_defineProperty$1(FixedDataTableCellGroupImpl, \"propTypes_DISABLED_FOR_PERFORMANCE\", {\n  /**\n   * Array of per column configuration properties.\n   */\n  columns: PropTypes.array.isRequired,\n  isScrolling: PropTypes.bool,\n  left: PropTypes.number,\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Height of fixedDataTableCellGroupLayout/cellGroupWrapper.\n   */\n  cellGroupWrapperHeight: PropTypes.number,\n  rowHeight: PropTypes.number.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  zIndex: PropTypes.number.isRequired,\n  touchEnabled: PropTypes.bool,\n  isHeaderOrFooter: PropTypes.bool,\n  isRTL: PropTypes.bool,\n\n  /**\n   * Callback that is called when resizer has been released\n   * and column needs to be updated.\n   *\n   * Only for backward compatibility.\n   *\n   * Required if the isResizable property is true on any column.\n   *\n   * ```\n   * function(\n   *   newColumnWidth: number,\n   *   columnKey: string,\n   * )\n   * ```\n   */\n  onColumnResizeEndCallback: PropTypes.func,\n\n  /**\n   * Callback that is called when reordering has been completed\n   * and columns need to be updated.\n   *\n   * ```\n   * function(\n   *   event {\n   *     columnBefore: string|undefined, // the column before the new location of this one\n   *     columnAfter: string|undefined,  // the column after the new location of this one\n   *     reorderColumn: string,          // the column key that was just reordered\n   *   }\n   * )\n   * ```\n   */\n  onColumnReorderEndCallback: PropTypes.func,\n\n  /**\n   * Whether these cells belong to the header/group-header\n   */\n  isHeader: PropTypes.bool,\n\n  /**\n   * Whether this cell group is visible (i.e, vertically within the viewport) or not.\n   */\n  isVisible: PropTypes.bool.isRequired\n});\n\nvar FixedDataTableCellGroup = /*#__PURE__*/function (_React$Component2) {\n  _inherits$2(FixedDataTableCellGroup, _React$Component2);\n\n  var _super2 = _createSuper$7(FixedDataTableCellGroup);\n\n  function FixedDataTableCellGroup() {\n    _classCallCheck$2(this, FixedDataTableCellGroup);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass$2(FixedDataTableCellGroup, [{\n    key: \"shouldComponentUpdate\",\n    value:\n    /**\n     * PropTypes are disabled in this component, because having them on slows\n     * down the FixedDataTable hugely in DEV mode. You can enable them back for\n     * development, but please don't commit this component with enabled propTypes.\n     */\n    function shouldComponentUpdate(\n    /*object*/\n    nextProps)\n    /*boolean*/\n    {\n      /// if offsets and visibility haven't changed for the same cell group while scrolling, then skip update\n      return !(nextProps.isScrolling && this.props.rowIndex === nextProps.rowIndex && this.props.left === nextProps.left && this.props.offsetLeft === nextProps.offsetLeft && this.props.isVisible === nextProps.isVisible);\n    }\n  }, {\n    key: \"render\",\n    value: function render()\n    /*object*/\n    {\n      var _this$props = this.props,\n          offsetLeft = _this$props.offsetLeft,\n          props = _objectWithoutProperties(_this$props, _excluded$1);\n\n      var style = {\n        height: props.cellGroupWrapperHeight || props.height,\n        width: props.width\n      };\n\n      if (this.props.isRTL) {\n        style.right = offsetLeft;\n      } else {\n        style.left = offsetLeft;\n      }\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        style: style,\n        className: cx('fixedDataTableCellGroupLayout/cellGroupWrapper')\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableCellGroupImpl, props));\n    }\n  }]);\n\n  return FixedDataTableCellGroup;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n\n_defineProperty$1(FixedDataTableCellGroup, \"propTypes_DISABLED_FOR_PERFORMANCE\", {\n  isScrolling: PropTypes.bool,\n\n  /**\n   * Height of the row.\n   */\n  height: PropTypes.number.isRequired,\n  offsetLeft: PropTypes.number,\n  left: PropTypes.number,\n\n  /**\n   * Z-index on which the row will be displayed. Used e.g. for keeping\n   * header and footer in front of other rows.\n   */\n  zIndex: PropTypes.number.isRequired\n});\n\n_defineProperty$1(FixedDataTableCellGroup, \"defaultProps\",\n/*object*/\n{\n  left: 0,\n  offsetLeft: 0\n});\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FixedDataTableRow\n * @typechecks\n */\nvar _excluded = [\"offsetTop\", \"zIndex\"];\n\nfunction _createSuper$6(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$6(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct$6() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar HEADER_BORDER_BOTTOM_WIDTH = 1;\n/**\n * Component that renders the row for <FixedDataTable />.\n * This component should not be used directly by developer. Instead,\n * only <FixedDataTable /> should use the component internally.\n */\n\nvar FixedDataTableRowImpl = /*#__PURE__*/function (_React$Component) {\n  _inherits$2(FixedDataTableRowImpl, _React$Component);\n\n  var _super = _createSuper$6(FixedDataTableRowImpl);\n\n  function FixedDataTableRowImpl() {\n    var _this;\n\n    _classCallCheck$2(this, FixedDataTableRowImpl);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty$1(_assertThisInitialized(_this), \"mouseLeaveIndex\", null);\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_getRowExpanded\", function (\n    /*number*/\n    subRowHeight)\n    /*?object*/\n    {\n      if (_this.props.rowExpanded) {\n        var rowExpandedProps = {\n          rowIndex: _this.props.index,\n          height: subRowHeight,\n          width: _this.props.width\n        };\n        var rowExpanded;\n\n        if ( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(_this.props.rowExpanded)) {\n          rowExpanded = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(_this.props.rowExpanded, rowExpandedProps);\n        } else if (typeof _this.props.rowExpanded === 'function') {\n          rowExpanded = _this.props.rowExpanded(rowExpandedProps);\n        }\n\n        return rowExpanded;\n      }\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_renderColumnsLeftShadow\", function (\n    /*number*/\n    left)\n    /*?object*/\n    {\n      var className = cx({\n        'fixedDataTableRowLayout/fixedColumnsDivider': left > 0,\n        'fixedDataTableRowLayout/columnsShadow': _this.props.scrollLeft > 0,\n        'public/fixedDataTableRow/fixedColumnsDivider': left > 0,\n        'public/fixedDataTableRow/columnsShadow': _this.props.scrollLeft > 0\n      });\n      var dividerHeight = _this.props.cellGroupWrapperHeight ? _this.props.cellGroupWrapperHeight - HEADER_BORDER_BOTTOM_WIDTH : _this.props.height;\n      var style = {\n        left: left,\n        height: dividerHeight\n      };\n\n      if (_this.props.isRTL) {\n        style.right = left;\n        style.left = 'auto';\n      }\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: className,\n        style: style\n      });\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_renderFixedRightColumnsShadow\", function (\n    /*number*/\n    left)\n    /*?object*/\n    {\n      var className = cx('fixedDataTableRowLayout/columnsShadow', 'fixedDataTableRowLayout/columnsRightShadow', 'fixedDataTableRowLayout/fixedColumnsDivider', 'public/fixedDataTableRow/columnsShadow', 'public/fixedDataTableRow/columnsRightShadow', 'public/fixedDataTableRow/fixedColumnsDivider');\n      var style = {\n        height: _this.props.height,\n        left: left\n      };\n\n      if (_this.props.isRTL) {\n        style.right = left;\n        style.left = 'auto';\n      }\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: className,\n        style: style\n      });\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_renderColumnsRightShadow\", function (\n    /*number*/\n    totalWidth)\n    /*?object*/\n    {\n      if (Math.ceil(_this.props.scrollLeft + _this.props.width) < Math.floor(totalWidth)) {\n        var className = cx('fixedDataTableRowLayout/columnsShadow', 'fixedDataTableRowLayout/columnsRightShadow', 'public/fixedDataTableRow/columnsShadow', 'public/fixedDataTableRow/columnsRightShadow');\n        var style = {\n          height: _this.props.height\n        };\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n          className: className,\n          style: style\n        });\n      }\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onClick\", function (\n    /*object*/\n    event) {\n      _this.props.onClick(event, _this.props.index);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onContextMenu\", function (\n    /*object*/\n    event) {\n      _this.props.onContextMenu(event, _this.props.index);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onDoubleClick\", function (\n    /*object*/\n    event) {\n      _this.props.onDoubleClick(event, _this.props.index);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onMouseUp\", function (\n    /*object*/\n    event) {\n      _this.props.onMouseUp(event, _this.props.index);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onMouseDown\", function (\n    /*object*/\n    event) {\n      _this.props.onMouseDown(event, _this.props.index);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onMouseEnter\", function (\n    /*object*/\n    event) {\n      /**\n       * This is necessary so that onMouseLeave is fired with the initial\n       * row index since this row could be updated with a different index\n       * when scrolling.\n       */\n      _this.mouseLeaveIndex = _this.props.index;\n\n      if (_this.props.onMouseEnter) {\n        _this.props.onMouseEnter(event, _this.props.index);\n      }\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onMouseLeave\", function (\n    /*object*/\n    event) {\n      if (_this.mouseLeaveIndex === null) {\n        _this.mouseLeaveIndex = _this.props.index;\n      }\n\n      _this.props.onMouseLeave(event, _this.mouseLeaveIndex);\n\n      _this.mouseLeaveIndex = null;\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onTouchStart\", function (\n    /*object*/\n    event) {\n      _this.props.onTouchStart(event, _this.props.index);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onTouchEnd\", function (\n    /*object*/\n    event) {\n      _this.props.onTouchEnd(event, _this.props.index);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onTouchMove\", function (\n    /*object*/\n    event) {\n      _this.props.onTouchMove(event, _this.props.index);\n    });\n\n    return _this;\n  }\n  /**\n   * The index of a row for which to fire the onMouseLeave event.\n   */\n\n\n  _createClass$2(FixedDataTableRowImpl, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      // only skip updates while scrolling\n      if (!nextProps.isScrolling) {\n        return true;\n      } // if row is not visible then no need to render it\n      // change in visibility is handled by the parent\n\n\n      if (!nextProps.visible) {\n        return false;\n      } // if row's visibility has changed, then update it\n\n\n      if (this.props.visible !== nextProps.visible) {\n        return true;\n      } // Only update the row if scrolling leads to a change in horizontal offsets.\n      // The vertical offset is taken care of by the wrapper\n\n\n      return !(this.props.index === nextProps.index && this.props.scrollLeft === nextProps.scrollLeft);\n    }\n  }, {\n    key: \"render\",\n    value: function render()\n    /*object*/\n    {\n      var subRowHeight = this.props.subRowHeight || 0;\n      var style = {\n        width: this.props.width,\n        height: this.props.height + subRowHeight\n      };\n      var className = cx({\n        'fixedDataTableRowLayout/main': true,\n        'public/fixedDataTableRow/main': true,\n        'public/fixedDataTableRow/highlighted': this.props.index % 2 === 1,\n        'public/fixedDataTableRow/odd': this.props.index % 2 === 1,\n        'public/fixedDataTableRow/even': this.props.index % 2 === 0\n      });\n      var fixedColumnsWidth = sumPropWidths(this.props.fixedColumns);\n      var fixedColumns = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableCellGroup, {\n        key: \"fixed_cells\",\n        isScrolling: this.props.isScrolling,\n        height: this.props.height,\n        cellGroupWrapperHeight: this.props.cellGroupWrapperHeight,\n        left: 0,\n        width: fixedColumnsWidth,\n        zIndex: 2,\n        columns: this.props.fixedColumns,\n        touchEnabled: this.props.touchEnabled,\n        onColumnResizeEndCallback: this.props.onColumnResizeEndCallback,\n        onColumnReorderEndCallback: this.props.onColumnReorderEndCallback,\n        rowHeight: this.props.height,\n        rowIndex: this.props.index,\n        isHeaderOrFooter: this.props.isHeaderOrFooter,\n        isHeader: this.props.isHeader,\n        isGroupHeader: this.props.isGroupHeader,\n        isRTL: this.props.isRTL,\n        cellGroupType: CellGroupType.FIXED,\n        isVisible: this.props.visible\n      });\n\n      var columnsLeftShadow = this._renderColumnsLeftShadow(fixedColumnsWidth);\n\n      var fixedRightColumnsWidth = sumPropWidths(this.props.fixedRightColumns);\n      var scrollbarOffset = this.props.showScrollbarY ? this.props.scrollbarYWidth : 0;\n      var fixedRightColumns = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableCellGroup, {\n        key: \"fixed_right_cells\",\n        isScrolling: this.props.isScrolling,\n        height: this.props.height,\n        cellGroupWrapperHeight: this.props.cellGroupWrapperHeight,\n        offsetLeft: this.props.width - fixedRightColumnsWidth - scrollbarOffset,\n        width: fixedRightColumnsWidth,\n        zIndex: 2,\n        columns: this.props.fixedRightColumns,\n        touchEnabled: this.props.touchEnabled,\n        onColumnResizeEndCallback: this.props.onColumnResizeEndCallback,\n        onColumnReorderEndCallback: this.props.onColumnReorderEndCallback,\n        rowHeight: this.props.height,\n        rowIndex: this.props.index,\n        isHeaderOrFooter: this.props.isHeaderOrFooter,\n        isHeader: this.props.isHeader,\n        isGroupHeader: this.props.isGroupHeader,\n        isRTL: this.props.isRTL,\n        cellGroupType: CellGroupType.FIXED_RIGHT,\n        isVisible: this.props.visible\n      });\n      var fixedRightColumnsShadow = fixedRightColumnsWidth ? this._renderFixedRightColumnsShadow(this.props.width - fixedRightColumnsWidth - scrollbarOffset - 5) : null;\n      var scrollableColumns = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableCellGroup, {\n        key: \"scrollable_cells\",\n        isScrolling: this.props.isScrolling,\n        height: this.props.height,\n        cellGroupWrapperHeight: this.props.cellGroupWrapperHeight,\n        align: \"right\",\n        left: this.props.scrollLeft,\n        offsetLeft: fixedColumnsWidth,\n        width: this.props.width - fixedColumnsWidth - fixedRightColumnsWidth - scrollbarOffset,\n        zIndex: 0,\n        columns: this.props.scrollableColumns,\n        touchEnabled: this.props.touchEnabled,\n        onColumnResizeEndCallback: this.props.onColumnResizeEndCallback,\n        onColumnReorderEndCallback: this.props.onColumnReorderEndCallback,\n        rowHeight: this.props.height,\n        rowIndex: this.props.index,\n        isHeaderOrFooter: this.props.isHeaderOrFooter,\n        isHeader: this.props.isHeader,\n        isGroupHeader: this.props.isGroupHeader,\n        isRTL: this.props.isRTL,\n        cellGroupType: CellGroupType.SCROLLABLE,\n        isVisible: this.props.visible\n      });\n      var scrollableColumnsWidth = sumPropWidths(this.props.scrollableColumns);\n\n      var columnsRightShadow = this._renderColumnsRightShadow(fixedColumnsWidth + scrollableColumnsWidth);\n\n      var rowExpanded = this._getRowExpanded(subRowHeight);\n\n      var rowExpandedStyle = {\n        height: subRowHeight,\n        top: this.props.height,\n        width: this.props.width\n      };\n      var scrollbarSpacer = null;\n\n      if (this.props.showScrollbarY) {\n        var spacerStyles = {\n          width: scrollbarOffset,\n          height: this.props.height,\n          // Since the box-sizing = border-box the border on the table is included in the width\n          // so we need to account for the left and right border\n          left: this.props.isRTL ? 2 : this.props.width - scrollbarOffset - 2\n        };\n        scrollbarSpacer = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n          style: spacerStyles,\n          className: cx('public/fixedDataTable/scrollbarSpacer')\n        });\n      }\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", _extends({\n        className: joinClasses(className, this.props.className),\n        role: 'row',\n        \"aria-rowindex\": this.props.ariaRowIndex\n      }, this.props.attributes, {\n        onClick: this.props.onClick ? this._onClick : null,\n        onContextMenu: this.props.onContextMenu ? this._onContextMenu : null,\n        onDoubleClick: this.props.onDoubleClick ? this._onDoubleClick : null,\n        onMouseDown: this.props.onMouseDown ? this._onMouseDown : null,\n        onMouseUp: this.props.onMouseUp ? this._onMouseUp : null,\n        onMouseEnter: this.props.onMouseEnter || this.props.onMouseLeave ? this._onMouseEnter : null,\n        onMouseLeave: this.props.onMouseLeave ? this._onMouseLeave : null,\n        onTouchStart: this.props.onTouchStart ? this._onTouchStart : null,\n        onTouchEnd: this.props.onTouchEnd ? this._onTouchEnd : null,\n        onTouchMove: this.props.onTouchMove ? this._onTouchMove : null,\n        style: style\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: cx('fixedDataTableRowLayout/body')\n      }, fixedColumns, scrollableColumns, columnsLeftShadow, fixedRightColumns, fixedRightColumnsShadow, scrollbarSpacer), rowExpanded && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: cx('fixedDataTableRowLayout/rowExpanded'),\n        style: rowExpandedStyle\n      }, rowExpanded), columnsRightShadow);\n    }\n  }]);\n\n  return FixedDataTableRowImpl;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n\n_defineProperty$1(FixedDataTableRowImpl, \"propTypes\", {\n  isScrolling: PropTypes.bool,\n\n  /**\n   * Array of data for the fixed columns.\n   */\n  fixedColumns: PropTypes.array.isRequired,\n\n  /**\n   * Array of <FixedDataTableColumn /> for the fixed columns positioned at end of the table.\n   */\n  fixedRightColumns: PropTypes.array.isRequired,\n\n  /**\n   * Height of the row.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Height of fixedDataTableCellGroupLayout/cellGroupWrapper.\n   */\n  cellGroupWrapperHeight: PropTypes.number,\n\n  /**\n   * Height of the content to be displayed below the row.\n   */\n  subRowHeight: PropTypes.number,\n\n  /**\n   * the row expanded.\n   */\n  rowExpanded: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n\n  /**\n   * The row index.\n   */\n  index: PropTypes.number.isRequired,\n\n  /**\n   * Array of data for the scrollable columns.\n   */\n  scrollableColumns: PropTypes.array.isRequired,\n\n  /**\n   * The distance between the left edge of the table and the leftmost portion\n   * of the row currently visible in the table.\n   */\n  scrollLeft: PropTypes.number.isRequired,\n\n  /**\n   * Width of the row.\n   */\n  width: PropTypes.number.isRequired,\n\n  /**\n   * Fire when a row is clicked.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Fire when a contextual-menu is requested above a row.\n   */\n  onContextMenu: PropTypes.func,\n\n  /**\n   * Fire when a row is double clicked.\n   */\n  onDoubleClick: PropTypes.func,\n\n  /**\n   * Callback that is called when reordering has been completed\n   * and columns need to be updated.\n   *\n   * ```\n   * function(\n   *   event {\n   *     columnBefore: string|undefined, // the column before the new location of this one\n   *     columnAfter: string|undefined,  // the column after the new location of this one\n   *     reorderColumn: string,          // the column key that was just reordered\n   *   }\n   * )\n   * ```\n   */\n  onColumnReorderEndCallback: PropTypes.func,\n  touchEnabled: PropTypes.bool,\n\n  /**\n   * Whether the row is part of the header or footer.\n   */\n  isHeaderOrFooter: PropTypes.bool,\n\n  /**\n   * The value of the aria-rowindex attribute.\n   */\n  ariaRowIndex: PropTypes.number,\n\n  /**\n   * Whether the grid should be in RTL mode\n   */\n  isRTL: PropTypes.bool,\n\n  /**\n   * DOM attributes to be applied to the row.\n   */\n  attributes: PropTypes.object,\n\n  /**\n   * Callback that is called when resizer has been released\n   * and column needs to be updated.\n   *\n   * Only for backward compatibility.\n   *\n   * Required if the isResizable property is true on any column.\n   *\n   * ```\n   * function(\n   *   newColumnWidth: number,\n   *   columnKey: string,\n   * )\n   * ```\n   */\n  onColumnResizeEndCallback: PropTypes.func,\n\n  /**\n   * Whether these cells belong to the header\n   */\n  isHeader: PropTypes.bool,\n\n  /**\n   * Whether these cells belong to the group-header\n   */\n  isGroupHeader: PropTypes.bool,\n\n  /**\n   * Function to change the scroll position by interacting with the store.\n   */\n  scrollToX: PropTypes.func\n});\n\nvar FixedDataTableRow = /*#__PURE__*/function (_React$Component2) {\n  _inherits$2(FixedDataTableRow, _React$Component2);\n\n  var _super2 = _createSuper$6(FixedDataTableRow);\n\n  function FixedDataTableRow(props) {\n    var _this2;\n\n    _classCallCheck$2(this, FixedDataTableRow);\n\n    _this2 = _super2.call(this, props);\n    _this2._initialRender = true;\n    return _this2;\n  }\n\n  _createClass$2(FixedDataTableRow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._initialRender = false;\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      // only skip updates while scrolling\n      if (!nextProps.isScrolling) {\n        return true;\n      } // if row's visibility has changed, then update it\n\n\n      if (this.props.visible !== nextProps.visible) {\n        return true;\n      } // if row is still not visible then no need to update\n\n\n      if (!nextProps.visible) {\n        return false;\n      } // if offsets haven't changed for the same row while scrolling, then skip update\n\n\n      return !(nextProps.isScrolling && this.props.index === nextProps.index && this.props.offsetTop === nextProps.offsetTop && this.props.scrollLeft === nextProps.scrollLeft);\n    }\n  }, {\n    key: \"render\",\n    value: function render()\n    /*object*/\n    {\n      var _this$props = this.props,\n          offsetTop = _this$props.offsetTop,\n          zIndex = _this$props.zIndex,\n          rowProps = _objectWithoutProperties(_this$props, _excluded);\n\n      var style = {\n        width: this.props.width,\n        height: this.props.height,\n        zIndex: zIndex ? zIndex : 0,\n        visibility: rowProps.visible ? 'visible' : 'hidden'\n      };\n      FixedDataTableTranslateDOMPosition(style, 0, offsetTop, this._initialRender, this.props.isRTL);\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        style: style,\n        className: cx('fixedDataTableRowLayout/rowWrapper')\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableRowImpl, rowProps));\n    }\n  }]);\n\n  return FixedDataTableRow;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n\n_defineProperty$1(FixedDataTableRow, \"propTypes\", {\n  isScrolling: PropTypes.bool,\n\n  /**\n   * Height of the row.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Z-index on which the row will be displayed. Used e.g. for keeping\n   * header and footer in front of other rows.\n   */\n  zIndex: PropTypes.number,\n\n  /**\n   * The vertical position where the row should render itself\n   */\n  offsetTop: PropTypes.number.isRequired,\n\n  /**\n   * Pass false to hide the row via CSS\n   */\n  visible: PropTypes.bool.isRequired,\n\n  /**\n   * Width of the row.\n   */\n  width: PropTypes.number.isRequired\n});\n\nfunction _createSuper$5(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$5(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct$5() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar FixedDataTableBufferedRows = /*#__PURE__*/function (_React$Component) {\n  _inherits$2(FixedDataTableBufferedRows, _React$Component);\n\n  var _super = _createSuper$5(FixedDataTableBufferedRows);\n\n  function FixedDataTableBufferedRows(props) {\n    var _this;\n\n    _classCallCheck$2(this, FixedDataTableBufferedRows);\n\n    _this = _super.call(this, props);\n    _this._staticRowArray = [];\n    _this._initialRender = true;\n    return _this;\n  }\n\n  _createClass$2(FixedDataTableBufferedRows, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._initialRender = false;\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate()\n    /*boolean*/\n    {\n      // Don't add PureRenderMixin to this component please.\n      return true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._staticRowArray.length = 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render()\n    /*object*/\n    {\n      var _this$props = this.props,\n          offsetTop = _this$props.offsetTop,\n          rowOffsets = _this$props.rowOffsets,\n          scrollTop = _this$props.scrollTop,\n          isScrolling = _this$props.isScrolling,\n          rowsToRender = _this$props.rowsToRender;\n      rowsToRender = rowsToRender || [];\n\n      if (isScrolling) {\n        // allow static array to grow while scrolling\n        this._staticRowArray.length = Math.max(this._staticRowArray.length, rowsToRender.length);\n      } else {\n        // when scrolling is done, static array can shrink to fit the buffer\n        this._staticRowArray.length = rowsToRender.length;\n      }\n      /**\n       * NOTE (pradeep): To increase vertical scrolling performance, we only translate the parent container.\n       * This means, rows at a particular index won't need to be rerendered.\n       *\n       * But browsers have limits and are unable to translate the container past a limit (known here as bufferHeight).\n       * To work around this, we wrap the translated amount over bufferHeight.\n       *\n       * For the container, the wrapped offset will be:\n       *    const containerOffsetTop = offsetTop - (scrollTop % bufferHeight);\n       *\n       * Similarly, the row offset will also need to be wrapped:\n       *    const rowOffsetTop = rowOffset - (Math.floor(scrollTop / bufferHeight) * bufferHeight);\n       *\n       * Therefore,\n       *    (rowOffsetTop + containerOffsetTop)\n       *      = offsetTop - (scrollTop % bufferHeight) + rowOffset - (Math.floor(scrollTop / bufferHeight) * bufferHeight)\n       *      = offsetTop + rowOffset - scrollTop\n       */\n\n\n      var bufferHeight = 1000000;\n      var containerOffsetTop = offsetTop - scrollTop % bufferHeight; // render each row from the buffer into the static row array\n\n      for (var i = 0; i < this._staticRowArray.length; i++) {\n        var _this$_staticRowArray;\n\n        // if the row doesn't exist in the buffer set, then take the previous one\n        var rowIndex = defaultTo_1(rowsToRender[i], (_this$_staticRowArray = this._staticRowArray[i]) === null || _this$_staticRowArray === void 0 ? void 0 : _this$_staticRowArray.props.index);\n\n        if (isNil_1(rowIndex) || !inRange_1(rowIndex, 0, this.props.rowSettings.rowsCount)) {\n          this._staticRowArray[i] = null;\n          continue;\n        }\n\n        var rowOffsetTop = rowOffsets[rowIndex] - Math.floor(scrollTop / bufferHeight) * bufferHeight;\n        this._staticRowArray[i] = this.renderRow({\n          rowIndex: rowIndex,\n          key: i,\n          rowOffsetTop: rowOffsetTop\n        });\n      } // We translate all the rows together with a parent div. This saves a lot of renders.\n\n\n      var style = {\n        position: 'relative'\n      };\n      FixedDataTableTranslateDOMPosition(style, 0, containerOffsetTop, false); // NOTE (pradeep): Sort the rows by row index so that they appear with the right order in the DOM (see #221)\n\n      var sortedRows = this._staticRowArray.slice().sort(this.rowSortComparator);\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        style: style\n      }, sortedRows);\n    }\n    /**\n     * @typedef RowProps\n     * @prop {number} rowIndex\n     * @prop {number} key\n     * @prop {number} rowOffsetTop\n     *\n     * @param {RowProps} rowProps\n     * @return {!Object}\n     */\n\n  }, {\n    key: \"renderRow\",\n    value: function renderRow(_ref)\n    /*object*/\n    {\n      var rowIndex = _ref.rowIndex,\n          key = _ref.key,\n          rowOffsetTop = _ref.rowOffsetTop;\n      var props = this.props;\n      var rowClassNameGetter = props.rowClassNameGetter || emptyFunction;\n      var rowProps = {};\n      rowProps.height = this.props.rowSettings.rowHeightGetter(rowIndex);\n      rowProps.subRowHeight = this.props.rowSettings.subRowHeightGetter(rowIndex);\n      rowProps.offsetTop = rowOffsetTop;\n      rowProps.key = props.rowKeyGetter ? props.rowKeyGetter(rowIndex) : key;\n      rowProps.attributes = props.rowSettings.rowAttributesGetter && props.rowSettings.rowAttributesGetter(rowIndex);\n      var hasBottomBorder = rowIndex === props.rowSettings.rowsCount - 1 && props.showLastRowBorder;\n      rowProps.className = joinClasses(rowClassNameGetter(rowIndex), cx('public/fixedDataTable/bodyRow'), cx({\n        'fixedDataTableLayout/hasBottomBorder': hasBottomBorder,\n        'public/fixedDataTable/hasBottomBorder': hasBottomBorder\n      }));\n      var visible = inRange_1(rowIndex, this.props.firstViewportRowIndex, this.props.endViewportRowIndex);\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableRow, _extends({\n        key: key,\n        index: rowIndex,\n        ariaRowIndex: rowIndex + props.ariaRowIndexOffset,\n        isScrolling: props.isScrolling,\n        width: props.width,\n        rowExpanded: props.rowExpanded,\n        scrollLeft: Math.round(props.scrollLeft),\n        fixedColumns: props.fixedColumns,\n        fixedRightColumns: props.fixedRightColumns,\n        scrollableColumns: props.scrollableColumns,\n        onClick: props.onRowClick,\n        onContextMenu: props.onRowContextMenu,\n        onDoubleClick: props.onRowDoubleClick,\n        onMouseDown: props.onRowMouseDown,\n        onMouseUp: props.onRowMouseUp,\n        onMouseEnter: props.onRowMouseEnter,\n        onMouseLeave: props.onRowMouseLeave,\n        onTouchStart: props.onRowTouchStart,\n        onTouchEnd: props.onRowTouchEnd,\n        onTouchMove: props.onRowTouchMove,\n        showScrollbarY: props.showScrollbarY,\n        scrollbarYWidth: props.scrollbarYWidth,\n        isRTL: props.isRTL,\n        visible: visible\n      }, rowProps));\n    }\n    /**\n     * @param {?React.ReactElement} rowA\n     * @param {?React.ReactElement} rowB\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: \"rowSortComparator\",\n    value: function rowSortComparator(rowA, rowB) {\n      var _rowA$props$ariaRowIn, _rowB$props$ariaRowIn;\n\n      // NOTE (pradeep): Aria row index can't be zero, but the row itself can be undefined.\n      // I picked -1 as the default here. As long as the default sites outside the usual row index range,\n      // it should work. I purposefully didn't choose Infinity or -Infinity, as they might break\n      // arithmetic operations.\n      return ((_rowA$props$ariaRowIn = rowA === null || rowA === void 0 ? void 0 : rowA.props.ariaRowIndex) !== null && _rowA$props$ariaRowIn !== void 0 ? _rowA$props$ariaRowIn : -1) - ((_rowB$props$ariaRowIn = rowB === null || rowB === void 0 ? void 0 : rowB.props.ariaRowIndex) !== null && _rowB$props$ariaRowIn !== void 0 ? _rowB$props$ariaRowIn : -1);\n    }\n  }]);\n\n  return FixedDataTableBufferedRows;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n\n_defineProperty$1(FixedDataTableBufferedRows, \"propTypes\", {\n  ariaRowIndexOffset: PropTypes.number,\n  isScrolling: PropTypes.bool,\n  firstViewportRowIndex: PropTypes.number.isRequired,\n  endViewportRowIndex: PropTypes.number.isRequired,\n  fixedColumns: PropTypes.array.isRequired,\n  fixedRightColumns: PropTypes.array.isRequired,\n  height: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number.isRequired,\n  onRowClick: PropTypes.func,\n  onRowContextMenu: PropTypes.func,\n  onRowDoubleClick: PropTypes.func,\n  onRowMouseDown: PropTypes.func,\n  onRowMouseUp: PropTypes.func,\n  onRowMouseEnter: PropTypes.func,\n  onRowMouseLeave: PropTypes.func,\n  onRowTouchStart: PropTypes.func,\n  onRowTouchEnd: PropTypes.func,\n  onRowTouchMove: PropTypes.func,\n  rowClassNameGetter: PropTypes.func,\n  rowExpanded: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n  rowOffsets: PropTypes.object.isRequired,\n  rowKeyGetter: PropTypes.func,\n  rowSettings: PropTypes.shape({\n    rowAttributesGetter: PropTypes.func,\n    rowHeightGetter: PropTypes.func,\n    rowsCount: PropTypes.number.isRequired,\n    subRowHeightGetter: PropTypes.func\n  }),\n  rowsToRender: PropTypes.array.isRequired,\n  scrollLeft: PropTypes.number.isRequired,\n  scrollTop: PropTypes.number.isRequired,\n  scrollableColumns: PropTypes.array.isRequired,\n  showLastRowBorder: PropTypes.bool,\n  showScrollbarY: PropTypes.bool,\n  width: PropTypes.number.isRequired,\n  isRTL: PropTypes.bool\n});\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * This is utility that handles touch events and calls provided touch\n * callback with correct frame rate.\n * Deceleration logic based on http://ariya.ofilabs.com/2013/11/javascript-kinetic-scrolling-part-2.html\n *\n * @providesModule ReactTouchHandler\n * @typechecks\n */\nvar MOVE_AMPLITUDE = 1.6;\nvar DECELERATION_AMPLITUDE = 1.6;\nvar DECELERATION_FACTOR = 325;\nvar TRACKER_TIMEOUT = 100;\n\nvar ReactTouchHandler = /*#__PURE__*/function () {\n  /**\n   * onTouchScroll is the callback that will be called with right frame rate if\n   * any touch events happened\n   * onTouchScroll should is to be called with two arguments: deltaX and deltaY in\n   * this order\n   */\n  function ReactTouchHandler(\n  /*function*/\n  onTouchScroll,\n  /*boolean|function*/\n  handleScrollX,\n  /*boolean|function*/\n  handleScrollY,\n  /*?boolean*/\n  preventDefault,\n  /*?boolean*/\n  stopPropagation) {\n    _classCallCheck$2(this, ReactTouchHandler);\n\n    // The animation frame id for the drag scroll\n    this._dragAnimationId = null; // The interval id for tracking the drag velocity\n\n    this._trackerId = null; // Used to track the drag scroll delta while waiting for an animation frame\n\n    this._deltaX = 0;\n    this._deltaY = 0; // The last touch we processed while dragging.  Used to compute the delta and velocity above\n\n    this._lastTouchX = 0;\n    this._lastTouchY = 0; // Used to track a moving average of the scroll velocity while dragging\n\n    this._velocityX = 0;\n    this._velocityY = 0; // An accummulated drag scroll delta used to calculate velocity\n\n    this._accumulatedDeltaX = 0;\n    this._accumulatedDeltaY = 0; // Timestamp from the last interval frame we used to track velocity\n\n    this._lastFrameTimestamp = Date.now(); // Timestamp from the last animation frame we used to autoscroll after drag stop\n\n    this._autoScrollTimestamp = Date.now();\n\n    if (typeof handleScrollX !== 'function') {\n      handleScrollX = handleScrollX ? emptyFunction.thatReturnsTrue : emptyFunction.thatReturnsFalse;\n    }\n\n    if (typeof handleScrollY !== 'function') {\n      handleScrollY = handleScrollY ? emptyFunction.thatReturnsTrue : emptyFunction.thatReturnsFalse;\n    }\n\n    this._handleScrollX = handleScrollX;\n    this._handleScrollY = handleScrollY;\n    this._preventDefault = preventDefault;\n    this._stopPropagation = stopPropagation;\n    this._onTouchScrollCallback = onTouchScroll;\n    this._didTouchMove = this._didTouchMove.bind(this);\n    this._track = this._track.bind(this);\n    this._autoScroll = this._autoScroll.bind(this);\n    this._startAutoScroll = this._startAutoScroll.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onTouchMove = this.onTouchMove.bind(this);\n    this.onTouchCancel = this.onTouchCancel.bind(this);\n  }\n\n  _createClass$2(ReactTouchHandler, [{\n    key: \"onTouchStart\",\n    value: function onTouchStart(\n    /*object*/\n    event) {\n      // Start tracking drag delta for scrolling\n      this._lastTouchX = event.touches[0].pageX;\n      this._lastTouchY = event.touches[0].pageY; // Reset our velocity and intermediate data used to compute velocity\n\n      this._velocityX = 0;\n      this._velocityY = 0;\n      this._accumulatedDeltaX = 0;\n      this._accumulatedDeltaY = 0;\n      this._lastFrameTimestamp = Date.now(); // Setup interval for tracking velocity\n\n      clearInterval(this._trackerId);\n      this._trackerId = setInterval(this._track, TRACKER_TIMEOUT);\n\n      if (this._stopPropagation) {\n        event.stopPropagation();\n      }\n    }\n  }, {\n    key: \"onTouchEnd\",\n    value: function onTouchEnd(\n    /*object*/\n    event) {\n      // Stop tracking velocity\n      clearInterval(this._trackerId);\n      this._trackerId = null; // Initialize decelerating autoscroll on drag stop\n\n      requestAnimationFrame(this._startAutoScroll);\n\n      if (this._stopPropagation) {\n        event.stopPropagation();\n      }\n    }\n  }, {\n    key: \"onTouchCancel\",\n    value: function onTouchCancel(\n    /*object*/\n    event) {\n      // Stop tracking velocity\n      clearInterval(this._trackerId);\n      this._trackerId = null;\n\n      if (this._stopPropagation) {\n        event.stopPropagation();\n      }\n    }\n  }, {\n    key: \"onTouchMove\",\n    value: function onTouchMove(\n    /*object*/\n    event) {\n      if (this._preventDefault) {\n        event.preventDefault();\n      }\n\n      var moveX = event.touches[0].pageX;\n      var moveY = event.touches[0].pageY; // Compute delta scrolled since last drag\n      // Mobile, scrolling is inverted\n\n      this._deltaX = MOVE_AMPLITUDE * (this._lastTouchX - moveX);\n      this._deltaY = MOVE_AMPLITUDE * (this._lastTouchY - moveY);\n\n      var handleScrollX = this._handleScrollX(this._deltaX, this._deltaY);\n\n      var handleScrollY = this._handleScrollY(this._deltaY, this._deltaX);\n\n      if (!handleScrollX && !handleScrollY) {\n        return;\n      } // If we can handle scroll update last touch for computing delta\n\n\n      if (handleScrollX) {\n        this._lastTouchX = moveX;\n      } else {\n        this._deltaX = 0;\n      }\n\n      if (handleScrollY) {\n        this._lastTouchY = moveY;\n      } else {\n        this._deltaY = 0;\n      } // The event will result in a scroll to the table, so there's no need to also let the parent containers scroll\n\n\n      if (!event.defaultPrevented) {\n        event.preventDefault();\n      } // Ensure minimum delta magnitude is met to avoid jitter\n\n\n      var changed = false;\n\n      if (Math.abs(this._deltaX) > 2 || Math.abs(this._deltaY) > 2) {\n        if (this._stopPropagation) {\n          event.stopPropagation();\n        }\n\n        changed = true;\n      } // Request animation frame to trigger scroll of computed delta\n\n\n      if (changed === true && this._dragAnimationId === null) {\n        this._dragAnimationId = requestAnimationFrame(this._didTouchMove);\n      }\n    }\n    /**\n     * Fire scroll callback based on computed drag delta.\n     * Also track accummulated delta so we can calculate velocity\n     */\n\n  }, {\n    key: \"_didTouchMove\",\n    value: function _didTouchMove() {\n      this._dragAnimationId = null;\n\n      this._onTouchScrollCallback(this._deltaX, this._deltaY);\n\n      this._accumulatedDeltaX += this._deltaX;\n      this._accumulatedDeltaY += this._deltaY;\n      this._deltaX = 0;\n      this._deltaY = 0;\n    }\n    /**\n     * Compute velocity based on a weighted average of drag over last 100 ms and\n     * previous velocity.  Combining into a moving average results in a smoother scroll.\n     */\n\n  }, {\n    key: \"_track\",\n    value: function _track() {\n      var now = Date.now();\n      var elapsed = now - this._lastFrameTimestamp;\n      var oldVelocityX = this._velocityX;\n      var oldVelocityY = this._velocityY; // We compute velocity using a weighted average of the current velocity and the previous velocity\n      // If the previous velocity is 0, put the full weight on the last 100 ms\n\n      var weight = 0.8;\n\n      if (elapsed < TRACKER_TIMEOUT) {\n        weight *= elapsed / TRACKER_TIMEOUT;\n      }\n\n      if (oldVelocityX === 0 && oldVelocityY === 0) {\n        weight = 1;\n      } // Formula for computing weighted average of velocity\n\n\n      this._velocityX = weight * (TRACKER_TIMEOUT * this._accumulatedDeltaX / (1 + elapsed));\n\n      if (weight < 1) {\n        this._velocityX += (1 - weight) * oldVelocityX;\n      }\n\n      this._velocityY = weight * (TRACKER_TIMEOUT * this._accumulatedDeltaY / (1 + elapsed));\n\n      if (weight < 1) {\n        this._velocityY += (1 - weight) * oldVelocityY;\n      }\n\n      this._accumulatedDeltaX = 0;\n      this._accumulatedDeltaY = 0;\n      this._lastFrameTimestamp = now;\n    }\n    /**\n     * To kick off deceleration / momentum scrolling,\n     * handle any scrolling from a drag which was waiting for an animation frame\n     * Then update our velocity\n     * Finally start the momentum scrolling handler (autoScroll)\n     */\n\n  }, {\n    key: \"_startAutoScroll\",\n    value: function _startAutoScroll() {\n      this._autoScrollTimestamp = Date.now();\n\n      if (this._deltaX > 0 || this.deltaY > 0) {\n        this._didTouchMove();\n      }\n\n      this._track();\n\n      this._autoScroll();\n    }\n    /**\n     * Compute a scroll delta with an exponential decay based on time elapsed since drag was released.\n     * This is called recursively on animation frames until the delta is below a threshold (5 pixels)\n     */\n\n  }, {\n    key: \"_autoScroll\",\n    value: function _autoScroll() {\n      var elapsed = Date.now() - this._autoScrollTimestamp;\n\n      var factor = DECELERATION_AMPLITUDE * Math.exp(-elapsed / DECELERATION_FACTOR);\n      var deltaX = factor * this._velocityX;\n      var deltaY = factor * this._velocityY;\n\n      if (Math.abs(deltaX) <= 5 || !this._handleScrollX(deltaX, deltaY)) {\n        deltaX = 0;\n      }\n\n      if (Math.abs(deltaY) <= 5 || !this._handleScrollY(deltaY, deltaX)) {\n        deltaY = 0;\n      }\n\n      if (deltaX !== 0 || deltaY !== 0) {\n        this._onTouchScrollCallback(deltaX, deltaY);\n\n        requestAnimationFrame(this._autoScroll);\n      }\n    }\n  }]);\n\n  return ReactTouchHandler;\n}();\n\nfunction _createSuper$4(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$4(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct$4() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar ARROW_SCROLL_SPEED = 25;\n/**\n * Data grid component with fixed or scrollable header and columns.\n *\n * The layout of the data table is as follows:\n *\n * ```\n * +---------------------------------------------------+\n * | Fixed Column Group    | Scrollable Column Group   |\n * | Header                | Header                    |\n * |                       |                           |\n * +---------------------------------------------------+\n * |                       |                           |\n * | Fixed Header Columns  | Scrollable Header Columns |\n * |                       |                           |\n * +-----------------------+---------------------------+\n * |                       |                           |\n * | Fixed Body Columns    | Scrollable Body Columns   |\n * |                       |                           |\n * +-----------------------+---------------------------+\n * |                       |                           |\n * | Fixed Footer Columns  | Scrollable Footer Columns |\n * |                       |                           |\n * +-----------------------+---------------------------+\n * ```\n *\n * - Fixed Column Group Header: These are the headers for a group\n *   of columns if included in the table that do not scroll\n *   vertically or horizontally.\n *\n * - Scrollable Column Group Header: The header for a group of columns\n *   that do not move while scrolling vertically, but move horizontally\n *   with the horizontal scrolling.\n *\n * - Fixed Header Columns: The header columns that do not move while scrolling\n *   vertically or horizontally.\n *\n * - Scrollable Header Columns: The header columns that do not move\n *   while scrolling vertically, but move horizontally with the horizontal\n *   scrolling.\n *\n * - Fixed Body Columns: The body columns that do not move while scrolling\n *   horizontally, but move vertically with the vertical scrolling.\n *\n * - Scrollable Body Columns: The body columns that move while scrolling\n *   vertically or horizontally.\n */\n\nvar FixedDataTable = /*#__PURE__*/function (_React$Component) {\n  _inherits$2(FixedDataTable, _React$Component);\n\n  var _super = _createSuper$4(FixedDataTable);\n\n  function FixedDataTable(_props) {\n    var _this;\n\n    _classCallCheck$2(this, FixedDataTable);\n\n    _this = _super.call(this, _props);\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_shouldHandleTouchX\", function\n      /*boolean*/\n    (\n    /*number*/\n    delta) {\n      return _this.props.touchScrollEnabled && _this._shouldHandleWheelX(delta);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_shouldHandleTouchY\", function\n      /*boolean*/\n    (\n    /*number*/\n    delta) {\n      return _this.props.touchScrollEnabled && _this._shouldHandleWheelY(delta);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_shouldHandleWheelX\", function\n      /*boolean*/\n    (\n    /*number*/\n    delta) {\n      var _this$props = _this.props,\n          maxScrollX = _this$props.maxScrollX,\n          scrollFlags = _this$props.scrollFlags,\n          scrollX = _this$props.scrollX;\n      var overflowX = scrollFlags.overflowX;\n\n      if (overflowX === 'hidden') {\n        return false;\n      }\n\n      delta = Math.round(delta);\n\n      if (delta === 0) {\n        return false;\n      }\n\n      return delta < 0 && scrollX > 0 || delta >= 0 && scrollX < maxScrollX;\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_shouldHandleWheelY\", function\n      /*boolean*/\n    (\n    /*number*/\n    delta) {\n      var _this$props2 = _this.props,\n          maxScrollY = _this$props2.maxScrollY,\n          scrollFlags = _this$props2.scrollFlags,\n          scrollY = _this$props2.scrollY;\n      var overflowY = scrollFlags.overflowY;\n\n      if (overflowY === 'hidden' || delta === 0) {\n        return false;\n      }\n\n      delta = Math.round(delta);\n\n      if (delta === 0) {\n        return false;\n      }\n\n      return delta < 0 && scrollY > 0 || delta >= 0 && scrollY < maxScrollY;\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_reportContentHeight\", function () {\n      var _tableHeightsSelector = tableHeightsSelector(_this.props),\n          contentHeight = _tableHeightsSelector.contentHeight;\n\n      var onContentHeightChange = _this.props.onContentHeightChange;\n\n      if (contentHeight !== _this._contentHeight && onContentHeightChange) {\n        onContentHeightChange(contentHeight);\n      }\n\n      _this._contentHeight = contentHeight;\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_renderRows\", function\n      /*object*/\n    (\n    /*number*/\n    offsetTop, fixedCellTemplates, fixedRightCellTemplates, scrollableCellTemplates, bodyHeight,\n    /*number*/\n    ariaRowIndexOffset) {\n      var _scrollbarsVisible = scrollbarsVisible$1(_this.props),\n          scrollEnabledY = _scrollbarsVisible.scrollEnabledY;\n\n      var props = _this.props;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableBufferedRows, {\n        ariaRowIndexOffset: ariaRowIndexOffset,\n        isScrolling: props.scrolling,\n        fixedColumns: fixedCellTemplates,\n        fixedRightColumns: fixedRightCellTemplates,\n        firstViewportRowIndex: props.firstRowIndex,\n        endViewportRowIndex: props.endRowIndex,\n        height: bodyHeight,\n        offsetTop: offsetTop,\n        onRowClick: props.onRowClick,\n        onRowContextMenu: props.onRowContextMenu,\n        onRowDoubleClick: props.onRowDoubleClick,\n        onRowMouseUp: props.onRowMouseUp,\n        onRowMouseDown: props.onRowMouseDown,\n        onRowMouseEnter: props.onRowMouseEnter,\n        onRowMouseLeave: props.onRowMouseLeave,\n        onRowTouchStart: props.touchScrollEnabled ? props.onRowTouchStart : null,\n        onRowTouchEnd: props.touchScrollEnabled ? props.onRowTouchEnd : null,\n        onRowTouchMove: props.touchScrollEnabled ? props.onRowTouchMove : null,\n        rowClassNameGetter: props.rowClassNameGetter,\n        rowExpanded: props.rowExpanded,\n        rowKeyGetter: props.rowKeyGetter,\n        rowSettings: props.rowSettings,\n        scrollLeft: props.scrollX,\n        scrollTop: props.scrollY,\n        scrollableColumns: scrollableCellTemplates,\n        showLastRowBorder: true,\n        width: props.tableSize.width,\n        rowsToRender: props.rows,\n        rowOffsets: props.rowOffsets,\n        showScrollbarY: scrollEnabledY,\n        scrollbarYWidth: props.scrollbarYWidth,\n        isRTL: props.isRTL\n      });\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onRef\", function (div) {\n      _this._divRef = div;\n\n      if (_this._wheelHandler) {\n        if (_this.props.stopReactWheelPropagation) {\n          _this._wheelHandler.setRoot(div);\n        } else {\n          _this._wheelHandler.setRoot(null);\n        }\n      }\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onScroll\", function (\n    /*number*/\n    deltaX,\n    /*number*/\n    deltaY) {\n      var _this$props3 = _this.props,\n          maxScrollX = _this$props3.maxScrollX,\n          maxScrollY = _this$props3.maxScrollY,\n          onHorizontalScroll = _this$props3.onHorizontalScroll,\n          onVerticalScroll = _this$props3.onVerticalScroll,\n          scrollActions = _this$props3.scrollActions,\n          scrollFlags = _this$props3.scrollFlags,\n          scrollX = _this$props3.scrollX,\n          scrollY = _this$props3.scrollY;\n          _this$props3.scrolling;\n      var overflowX = scrollFlags.overflowX,\n          overflowY = scrollFlags.overflowY;\n      var x = scrollX;\n      var y = scrollY;\n\n      if (Math.abs(deltaY) > Math.abs(deltaX) && overflowY !== 'hidden') {\n        y += deltaY;\n        y = y < 0 ? 0 : y;\n        y = y > maxScrollY ? maxScrollY : y; //NOTE (jordan) This is a hacky workaround to prevent FDT from setting its internal state\n\n        if (onVerticalScroll ? onVerticalScroll(y) : true) {\n          scrollActions.scrollToY(y);\n        }\n      } else if (deltaX && overflowX !== 'hidden') {\n        x += deltaX;\n        x = x < 0 ? 0 : x;\n        x = x > maxScrollX ? maxScrollX : x; // This is a workaround to prevent content blurring. This happens when translate3d\n        // is applied with non-rounded values to elements having text.\n\n        var roundedX = Math.round(x); //NOTE (asif) This is a hacky workaround to prevent FDT from setting its internal state\n\n        if (onHorizontalScroll ? onHorizontalScroll(roundedX) : true) {\n          scrollActions.scrollToX(roundedX);\n        }\n      }\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_scrollTo\", function (\n    /*number*/\n    scrollX,\n    /*number*/\n    scrollY) {\n      _this.props.scrollActions.scrollToX(scrollX);\n\n      _this.props.scrollActions.scrollToY(scrollY);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_didScroll\", function (\n    /* !object */\n    prevProps) {\n      var _this$props4 = _this.props,\n          onScrollStart = _this$props4.onScrollStart,\n          scrollX = _this$props4.scrollX,\n          scrollY = _this$props4.scrollY,\n          onHorizontalScroll = _this$props4.onHorizontalScroll,\n          onVerticalScroll = _this$props4.onVerticalScroll,\n          ownerHeight = _this$props4.tableSize.ownerHeight,\n          scrolling = _this$props4.scrolling;\n      var oldEndRowIndex = prevProps.endRowIndex,\n          oldFirstRowIndex = prevProps.firstRowIndex,\n          oldScrollX = prevProps.scrollX,\n          oldScrollY = prevProps.scrollY,\n          oldOwnerHeight = prevProps.tableSize.ownerHeight,\n          oldScrolling = prevProps.scrolling; // check if scroll values have changed - we have an extra check on NaN because (NaN !== NaN)\n\n      var ownerHeightChanged = ownerHeight !== oldOwnerHeight && !(_isNaN(ownerHeight) && _isNaN(oldOwnerHeight));\n      var scrollXChanged = scrollX !== oldScrollX;\n      var scrollYChanged = scrollY !== oldScrollY; // if none of the above changed, then a scroll didn't happen at all\n\n      if (!ownerHeightChanged && !scrollXChanged && !scrollYChanged) {\n        return;\n      } // only call onScrollStart if scrolling wasn't on previously\n\n\n      if (!oldScrolling && scrolling && onScrollStart) {\n        onScrollStart(oldScrollX, oldScrollY, oldFirstRowIndex, oldEndRowIndex);\n      }\n\n      if (scrollXChanged && onHorizontalScroll) {\n        onHorizontalScroll(scrollX);\n      }\n\n      if (scrollYChanged && onVerticalScroll) {\n        onVerticalScroll(scrollY);\n      } // debounced version of didScrollStop as we don't immediately stop scrolling\n\n\n      _this._didScrollStop();\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_didScrollStopSync\", function () {\n      var _this$props5 = _this.props,\n          endRowIndex = _this$props5.endRowIndex,\n          firstRowIndex = _this$props5.firstRowIndex,\n          onScrollEnd = _this$props5.onScrollEnd,\n          scrollActions = _this$props5.scrollActions,\n          scrollX = _this$props5.scrollX,\n          scrollY = _this$props5.scrollY,\n          scrolling = _this$props5.scrolling;\n\n      if (!scrolling) {\n        return;\n      }\n\n      scrollActions.stopScroll();\n\n      if (onScrollEnd) {\n        onScrollEnd(scrollX, scrollY, firstRowIndex, endRowIndex);\n      }\n    });\n\n    _this._didScrollStop = debounce(_this._didScrollStopSync, 200, _assertThisInitialized(_this));\n    _this._onKeyDown = _this._onKeyDown.bind(_assertThisInitialized(_this));\n\n    _this._setupHandlers();\n\n    return _this;\n  }\n\n  _createClass$2(FixedDataTable, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._cleanupHandlers(); // Cancel any pending debounced scroll handling and handle immediately.\n\n\n      this._didScrollStop.reset();\n\n      this._didScrollStopSync();\n    }\n  }, {\n    key: \"_setupHandlers\",\n    value: function _setupHandlers() {\n      if (!this._wheelHandler) {\n        this._wheelHandler = new ReactWheelHandler(this._onScroll, this._shouldHandleWheelX, this._shouldHandleWheelY, this.props.isRTL, this.props.stopScrollDefaultHandling, this.props.stopScrollPropagation);\n      }\n\n      if (!this._touchHandler) {\n        this._touchHandler = new ReactTouchHandler(this._onScroll, this._shouldHandleTouchX, this._shouldHandleTouchY, this.props.stopScrollDefaultHandling, this.props.stopScrollPropagation);\n      } // TODO (pradeep): Remove these and pass to our table component directly after\n      // React provides an API where event handlers can be specified to be non-passive (facebook/react#6436)\n\n\n      if (this._divRef) {\n        this._divRef.addEventListener('wheel', this._wheelHandler.onWheel, {\n          passive: false\n        });\n      }\n\n      if (this.props.touchScrollEnabled && this._divRef) {\n        this._divRef.addEventListener('touchmove', this._touchHandler.onTouchMove, {\n          passive: false\n        });\n      }\n    }\n  }, {\n    key: \"_cleanupHandlers\",\n    value: function _cleanupHandlers() {\n      if (this._wheelHandler) {\n        if (this._divRef) {\n          this._divRef.removeEventListener('wheel', this._wheelHandler.onWheel, {\n            passive: false\n          });\n        }\n\n        this._wheelHandler = null;\n      }\n\n      if (this._touchHandler) {\n        if (this._divRef) {\n          this._divRef.removeEventListener('touchmove', this._touchHandler.onTouchMove, {\n            passive: false\n          });\n        }\n\n        this._touchHandler = null;\n      }\n    }\n  }, {\n    key: \"_onKeyDown\",\n    value: function _onKeyDown(event) {\n      var _tableHeightsSelector2 = tableHeightsSelector(this.props),\n          scrollbarYHeight = _tableHeightsSelector2.scrollbarYHeight;\n\n      if (this.props.keyboardPageEnabled) {\n        switch (event.key) {\n          case 'PageDown':\n            this._onScroll(0, scrollbarYHeight);\n\n            event.preventDefault();\n            break;\n\n          case 'PageUp':\n            this._onScroll(0, scrollbarYHeight * -1);\n\n            event.preventDefault();\n            break;\n        }\n      }\n\n      if (this.props.keyboardScrollEnabled) {\n        switch (event.key) {\n          case 'ArrowDown':\n            this._onScroll(0, ARROW_SCROLL_SPEED);\n\n            event.preventDefault();\n            break;\n\n          case 'ArrowUp':\n            this._onScroll(0, ARROW_SCROLL_SPEED * -1);\n\n            event.preventDefault();\n            break;\n\n          case 'ArrowRight':\n            this._onScroll(ARROW_SCROLL_SPEED, 0);\n\n            event.preventDefault();\n            break;\n\n          case 'ArrowLeft':\n            this._onScroll(ARROW_SCROLL_SPEED * -1, 0);\n\n            event.preventDefault();\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return !shallowEqual(this.props, nextProps);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setupHandlers();\n\n      this._reportContentHeight();\n\n      this._reportScrollBarsUpdates();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(\n    /*object*/\n    prevProps) {\n      this._didScroll(prevProps);\n\n      this._reportContentHeight();\n\n      this._reportScrollBarsUpdates();\n    }\n    /**\n     * Method to report scrollbars updates\n     * @private\n     */\n\n  }, {\n    key: \"_reportScrollBarsUpdates\",\n    value: function _reportScrollBarsUpdates() {\n      var _tableHeightsSelector3 = tableHeightsSelector(this.props),\n          bodyOffsetTop = _tableHeightsSelector3.bodyOffsetTop,\n          scrollbarXOffsetTop = _tableHeightsSelector3.scrollbarXOffsetTop,\n          visibleRowsHeight = _tableHeightsSelector3.visibleRowsHeight;\n\n      var _this$props6 = this.props,\n          width = _this$props6.tableSize.width,\n          scrollContentHeight = _this$props6.scrollContentHeight,\n          scrollY = _this$props6.scrollY,\n          scrollX = _this$props6.scrollX;\n      var newScrollState = {\n        viewportHeight: visibleRowsHeight,\n        contentHeight: scrollContentHeight,\n        scrollbarYOffsetTop: bodyOffsetTop,\n        scrollY: scrollY,\n        viewportWidth: width,\n        contentWidth: width + this.props.maxScrollX,\n        scrollbarXOffsetTop: scrollbarXOffsetTop,\n        scrollX: scrollX,\n        scrollTo: this._scrollTo,\n        scrollToX: this.props.scrollActions.scrollToX,\n        scrollToY: this.props.scrollActions.scrollToY\n      };\n\n      if (!shallowEqual(this.previousScrollState, newScrollState)) {\n        this.props.onScrollBarsUpdate(newScrollState);\n        this.previousScrollState = newScrollState;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render()\n    /*object*/\n    {\n      var _ariaAttributesSelect = ariaAttributesSelector(this.props),\n          ariaGroupHeaderIndex = _ariaAttributesSelect.ariaGroupHeaderIndex,\n          ariaHeaderIndex = _ariaAttributesSelect.ariaHeaderIndex,\n          ariaFooterIndex = _ariaAttributesSelect.ariaFooterIndex,\n          ariaRowCount = _ariaAttributesSelect.ariaRowCount,\n          ariaRowIndexOffset = _ariaAttributesSelect.ariaRowIndexOffset;\n\n      var _columnTemplatesSelec = columnTemplatesSelector(this.props),\n          fixedColumnGroups = _columnTemplatesSelec.fixedColumnGroups,\n          fixedColumns = _columnTemplatesSelec.fixedColumns,\n          fixedRightColumnGroups = _columnTemplatesSelec.fixedRightColumnGroups,\n          fixedRightColumns = _columnTemplatesSelec.fixedRightColumns,\n          scrollableColumnGroups = _columnTemplatesSelec.scrollableColumnGroups,\n          scrollableColumns = _columnTemplatesSelec.scrollableColumns;\n\n      var _tableHeightsSelector4 = tableHeightsSelector(this.props),\n          bodyHeight = _tableHeightsSelector4.bodyHeight,\n          bodyOffsetTop = _tableHeightsSelector4.bodyOffsetTop,\n          componentHeight = _tableHeightsSelector4.componentHeight,\n          footOffsetTop = _tableHeightsSelector4.footOffsetTop,\n          scrollbarXOffsetTop = _tableHeightsSelector4.scrollbarXOffsetTop,\n          visibleRowsHeight = _tableHeightsSelector4.visibleRowsHeight;\n\n      var _this$props7 = this.props,\n          className = _this$props7.className,\n          elementHeights = _this$props7.elementHeights,\n          gridAttributesGetter = _this$props7.gridAttributesGetter;\n          _this$props7.maxScrollX;\n          var maxScrollY = _this$props7.maxScrollY,\n          onColumnReorderEndCallback = _this$props7.onColumnReorderEndCallback,\n          onColumnResizeEndCallback = _this$props7.onColumnResizeEndCallback,\n          scrollContentHeight = _this$props7.scrollContentHeight,\n          scrollX = _this$props7.scrollX,\n          scrollY = _this$props7.scrollY,\n          scrolling = _this$props7.scrolling,\n          tableSize = _this$props7.tableSize,\n          touchScrollEnabled = _this$props7.touchScrollEnabled,\n          scrollbarYWidth = _this$props7.scrollbarYWidth;\n      var ownerHeight = tableSize.ownerHeight,\n          width = tableSize.width;\n      var cellGroupWrapperHeight = elementHeights.cellGroupWrapperHeight,\n          footerHeight = elementHeights.footerHeight,\n          groupHeaderHeight = elementHeights.groupHeaderHeight,\n          headerHeight = elementHeights.headerHeight;\n\n      var _scrollbarsVisible2 = scrollbarsVisible$1(this.props),\n          scrollEnabledX = _scrollbarsVisible2.scrollEnabledX,\n          scrollEnabledY = _scrollbarsVisible2.scrollEnabledY;\n\n      var attributes = gridAttributesGetter && gridAttributesGetter();\n      var groupHeader;\n\n      if (groupHeaderHeight > 0) {\n        groupHeader = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableRow, {\n          key: \"group_header\",\n          ariaRowIndex: ariaGroupHeaderIndex,\n          isHeaderOrFooter: true,\n          isScrolling: scrolling,\n          className: joinClasses(cx('fixedDataTableLayout/header'), cx('public/fixedDataTable/header')),\n          width: width,\n          height: groupHeaderHeight,\n          cellGroupWrapperHeight: cellGroupWrapperHeight,\n          index: 0,\n          zIndex: 1,\n          offsetTop: 0,\n          scrollLeft: scrollX,\n          fixedColumns: fixedColumnGroups,\n          fixedRightColumns: fixedRightColumnGroups,\n          scrollableColumns: scrollableColumnGroups,\n          visible: true,\n          touchEnabled: touchScrollEnabled,\n          onColumnResizeEndCallback: onColumnResizeEndCallback,\n          onColumnReorderEndCallback: onColumnReorderEndCallback,\n          showScrollbarY: scrollEnabledY,\n          scrollbarYWidth: scrollbarYWidth,\n          isRTL: this.props.isRTL,\n          isHeader: true,\n          isGroupHeader: true\n        });\n      }\n\n      var scrollbarY;\n\n      if (scrollEnabledY) {\n        scrollbarY = this.props.scrollbarY;\n      }\n\n      var scrollbarX;\n\n      if (scrollEnabledX) {\n        scrollbarX = this.props.scrollbarX;\n      }\n\n      var footer = null;\n\n      if (footerHeight) {\n        footer = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableRow, {\n          key: \"footer\",\n          ariaRowIndex: ariaFooterIndex,\n          isHeaderOrFooter: true,\n          isScrolling: scrolling,\n          className: joinClasses(cx('fixedDataTableLayout/footer'), cx('public/fixedDataTable/footer')),\n          width: width,\n          height: footerHeight,\n          index: -1,\n          zIndex: 1,\n          offsetTop: footOffsetTop,\n          visible: true,\n          fixedColumns: fixedColumns.footer,\n          fixedRightColumns: fixedRightColumns.footer,\n          scrollableColumns: scrollableColumns.footer,\n          scrollLeft: scrollX,\n          showScrollbarY: scrollEnabledY,\n          scrollbarYWidth: scrollbarYWidth,\n          isRTL: this.props.isRTL\n        });\n      }\n\n      var rows = this._renderRows(bodyOffsetTop, fixedColumns.cell, fixedRightColumns.cell, scrollableColumns.cell, bodyHeight, ariaRowIndexOffset);\n\n      var header = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableRow, {\n        key: \"header\",\n        ariaRowIndex: ariaHeaderIndex,\n        isHeaderOrFooter: true,\n        isScrolling: scrolling,\n        className: joinClasses(cx('fixedDataTableLayout/header'), cx('public/fixedDataTable/header')),\n        width: width,\n        height: headerHeight,\n        cellGroupWrapperHeight: cellGroupWrapperHeight,\n        index: -1,\n        zIndex: 1,\n        offsetTop: groupHeaderHeight,\n        scrollLeft: scrollX,\n        visible: true,\n        fixedColumns: fixedColumns.header,\n        fixedRightColumns: fixedRightColumns.header,\n        scrollableColumns: scrollableColumns.header,\n        touchEnabled: touchScrollEnabled,\n        onColumnResizeEndCallback: onColumnResizeEndCallback,\n        onColumnReorderEndCallback: onColumnReorderEndCallback,\n        showScrollbarY: scrollEnabledY,\n        scrollbarYWidth: scrollbarYWidth,\n        isRTL: this.props.isRTL,\n        isHeader: true\n      });\n      var topShadow;\n\n      if (scrollY) {\n        topShadow = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n          className: joinClasses(cx('fixedDataTableLayout/topShadow'), cx('public/fixedDataTable/topShadow')),\n          style: {\n            top: bodyOffsetTop\n          }\n        });\n      } // ownerScrollAvailable is true if the rows rendered will overflow the owner element\n      // so we show a shadow in that case even if the FDT component can't scroll anymore\n\n\n      var ownerScrollAvailable = ownerHeight && ownerHeight < componentHeight && scrollContentHeight > visibleRowsHeight;\n      var bottomShadow;\n\n      if (ownerScrollAvailable || scrollY < maxScrollY) {\n        bottomShadow = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n          className: joinClasses(cx('fixedDataTableLayout/bottomShadow'), cx('public/fixedDataTable/bottomShadow')),\n          style: {\n            top: footOffsetTop\n          }\n        });\n      }\n\n      var tabIndex = null;\n\n      if (this.props.keyboardPageEnabled || this.props.keyboardScrollEnabled) {\n        tabIndex = 0;\n      }\n\n      var tableClassName = className;\n\n      if (this.props.isRTL) {\n        tableClassName = joinClasses(tableClassName, 'fixedDataTable_isRTL');\n      }\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", _extends({\n        className: joinClasses(tableClassName, cx('fixedDataTableLayout/main'), cx('public/fixedDataTable/main')),\n        role: \"grid\",\n        \"aria-rowcount\": ariaRowCount\n      }, attributes, {\n        tabIndex: tabIndex,\n        onKeyDown: this._onKeyDown,\n        onTouchStart: touchScrollEnabled ? this._touchHandler.onTouchStart : null,\n        onTouchEnd: touchScrollEnabled ? this._touchHandler.onTouchEnd : null,\n        onTouchCancel: touchScrollEnabled ? this._touchHandler.onTouchCancel : null,\n        ref: this._onRef,\n        style: {\n          height: componentHeight,\n          width: width\n        }\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: cx('fixedDataTableLayout/rowsContainer'),\n        style: {\n          height: scrollbarXOffsetTop,\n          width: width\n        }\n      }, groupHeader, header, rows, footer, topShadow, bottomShadow), scrollbarY, scrollbarX);\n    }\n    /**\n     * Calls the user specified scroll callbacks -- onScrollStart, onScrollEnd, onHorizontalScroll, and onVerticalScroll.\n     */\n    // We need two versions of this function, one to finish up synchronously (for\n    // example, in componentWillUnmount), and a debounced version for normal\n    // scroll handling.\n\n  }]);\n\n  return FixedDataTable;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n\n_defineProperty$1(FixedDataTable, \"propTypes\", {\n  // TODO (jordan) Remove propType of width without losing documentation (moved to tableSize)\n\n  /**\n   * Pixel width of table. If all columns do not fit,\n   * a horizontal scrollbar will appear.\n   */\n  width: PropTypes.number.isRequired,\n  // TODO (jordan) Remove propType of height without losing documentation (moved to tableSize)\n\n  /**\n   * Pixel height of table. If all rows do not fit,\n   * a vertical scrollbar will appear.\n   *\n   * Either `height` or `maxHeight` must be specified.\n   */\n  height: PropTypes.number,\n\n  /**\n   * Class name to be passed into parent container\n   */\n  className: PropTypes.string,\n  // TODO (jordan) Remove propType of maxHeight without losing documentation (moved to tableSize)\n\n  /**\n   * Maximum pixel height of table. If all rows do not fit,\n   * a vertical scrollbar will appear.\n   *\n   * Either `height` or `maxHeight` must be specified.\n   */\n  maxHeight: PropTypes.number,\n  // TODO (jordan) Remove propType of ownerHeight without losing documentation (moved to tableSize)\n\n  /**\n   * Pixel height of table's owner, this is used in a managed scrolling\n   * situation when you want to slide the table up from below the fold\n   * without having to constantly update the height on every scroll tick.\n   * Instead, vary this property on scroll. By using `ownerHeight`, we\n   * over-render the table while making sure the footer and horizontal\n   * scrollbar of the table are visible when the current space for the table\n   * in view is smaller than the final, over-flowing height of table. It\n   * allows us to avoid resizing and reflowing table when it is moving in the\n   * view.\n   *\n   * This is used if `ownerHeight < height` (or `maxHeight`).\n   */\n  ownerHeight: PropTypes.number,\n  // TODO (jordan) Remove propType of overflowX & overflowY without losing documentation (moved to scrollFlags)\n  overflowX: PropTypes.oneOf(['hidden', 'auto']),\n  overflowY: PropTypes.oneOf(['hidden', 'auto']),\n\n  /**\n   * Boolean flag indicating of touch scrolling should be enabled\n   * This feature is current in beta and may have bugs\n   */\n  touchScrollEnabled: PropTypes.bool,\n\n  /**\n   * Boolean flags to control if scrolling with keys is enabled\n   */\n  keyboardScrollEnabled: PropTypes.bool,\n  keyboardPageEnabled: PropTypes.bool,\n\n  /**\n   * Scrollbar X to be rendered\n   */\n  scrollbarX: PropTypes.node,\n\n  /**\n   * Height to be reserved for scrollbar X\n   */\n  scrollbarXHeight: PropTypes.number,\n\n  /**\n   * Scrollbar Y to be rendered\n   */\n  scrollbarY: PropTypes.node,\n\n  /**\n   * Width to be reserved for scrollbar Y\n   */\n  scrollbarYWidth: PropTypes.number,\n\n  /**\n   * Function to listen to scroll bars related updates like scroll position, visible rows height, all rows height,....\n   */\n  onScrollBarsUpdate: PropTypes.func,\n  // TODO Remove propType of defaultScrollbars without losing documentation (this is required for FixedDataTableContainer only)\n\n  /**\n   * Default scrollbars provided by FDT-2 will be rendered, pass false if you want to render custom scrollbars (by passing scrollbarX and scrollbarY props)\n   */\n  defaultScrollbars: PropTypes.bool,\n  // TODO (jordan) Remove propType of showScrollbarX & showScrollbarY without losing documentation (moved to scrollFlags)\n\n  /**\n   * Hide the scrollbar but still enable scroll functionality\n   */\n  showScrollbarX: PropTypes.bool,\n  showScrollbarY: PropTypes.bool,\n\n  /**\n   * Callback when horizontally scrolling the grid.\n   *\n   * Return false to stop propagation.\n   */\n  onHorizontalScroll: PropTypes.func,\n\n  /**\n   * Callback when vertically scrolling the grid.\n   *\n   * Return false to stop propagation.\n   */\n  onVerticalScroll: PropTypes.func,\n  // TODO (jordan) Remove propType of rowsCount without losing documentation (moved to rowSettings)\n\n  /**\n   * Number of rows in the table.\n   */\n  rowsCount: PropTypes.number.isRequired,\n  // TODO (jordan) Remove propType of rowHeight without losing documentation (moved to rowSettings)\n\n  /**\n   * Pixel height of rows unless `rowHeightGetter` is specified and returns\n   * different value.\n   */\n  rowHeight: PropTypes.number.isRequired,\n  // TODO (jordan) Remove propType of rowHeightGetter without losing documentation (moved to rowSettings)\n\n  /**\n   * If specified, `rowHeightGetter(index)` is called for each row and the\n   * returned value overrides `rowHeight` for particular row.\n   */\n  rowHeightGetter: PropTypes.func,\n  // TODO (jordan) Remove propType of subRowHeight without losing documentation (moved to rowSettings)\n\n  /**\n   * Pixel height of sub-row unless `subRowHeightGetter` is specified and returns\n   * different value.  Defaults to 0 and no sub-row being displayed.\n   */\n  subRowHeight: PropTypes.number,\n  // TODO (jordan) Remove propType of subRowHeightGetter without losing documentation (moved to rowSettings)\n\n  /**\n   * If specified, `subRowHeightGetter(index)` is called for each row and the\n   * returned value overrides `subRowHeight` for particular row.\n   */\n  subRowHeightGetter: PropTypes.func,\n\n  /**\n   * The row expanded for table row.\n   * This can either be a React element, or a function that generates\n   * a React Element. By default, the React element passed in can expect to\n   * receive the following props:\n   *\n   * ```\n   * props: {\n   *   rowIndex; number // (the row index)\n   *   height: number // (supplied from subRowHeight or subRowHeightGetter)\n   *   width: number // (supplied from the Table)\n   * }\n   * ```\n   *\n   * Because you are passing in your own React element, you can feel free to\n   * pass in whatever props you may want or need.\n   *\n   * If you pass in a function, you will receive the same props object as the\n   * first argument.\n   */\n  rowExpanded: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n\n  /**\n   * To get any additional CSS classes that should be added to a row,\n   * `rowClassNameGetter(index)` is called.\n   */\n  rowClassNameGetter: PropTypes.func,\n\n  /**\n   * If specified, `rowKeyGetter(index)` is called for each row and the\n   * returned value overrides `key` for the particular row.\n   */\n  rowKeyGetter: PropTypes.func,\n  // TODO (jordan) Remove propType of groupHeaderHeight without losing documentation (moved to elementHeights)\n\n  /**\n   * Pixel height of the column group header.\n   */\n  groupHeaderHeight: PropTypes.number,\n  // TODO (jordan) Remove propType of headerHeight without losing documentation (moved to elementHeights)\n\n  /**\n   * Pixel height of header.\n   */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Pixel height of fixedDataTableCellGroupLayout/cellGroupWrapper.\n   * Default is headerHeight and groupHeaderHeight.\n   *\n   * This can be used with CSS to make a header cell span both the group & normal header row.\n   * Setting this to a value larger than height will cause the content to\n   * overflow the height. This is useful when adding a 2nd table as the group\n   * header and vertically merging the 2 headers when a column is not part\n   * of a group. Here are the necessary CSS changes:\n   *\n   * Both headers:\n   *  - cellGroupWrapper needs overflow-x: hidden and pointer-events: none\n   *  - cellGroup needs pointer-events: auto to reenable them on child els\n   * Group header:\n   *  - Layout/main needs overflow: visible and a higher z-index\n   *  - CellLayout/main needs overflow-y: visible\n   *  - cellGroup needs overflow: visible\n   */\n  cellGroupWrapperHeight: PropTypes.number,\n  // TODO (jordan) Remove propType of footerHeight without losing documentation (moved to elementHeights)\n\n  /**\n   * Pixel height of footer.\n   */\n  footerHeight: PropTypes.number,\n\n  /**\n   * Value of horizontal scroll.\n   */\n  scrollLeft: PropTypes.number,\n  // TODO (jordan) Remove propType of scrollToRow & scrollToColumn without losing documentation\n\n  /**\n   * Index of column to scroll to.\n   */\n  scrollToColumn: PropTypes.number,\n\n  /**\n   * Value of vertical scroll.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * By default in case of variable rows heights,\n   * when table uses `scrollTop` it makes an optimization\n   * in order to not ask for all the rows heights, it uses the cached stored heights,\n   * that are initialized to the constant `rowHeight` property.\n   * Those heights are updated with the actual value (requested using `rowHeightGetter`)\n   * only when the rows becomes visible.\n   * So when the `scrollTop` is incremented step by step, the actual displayed row is exact,\n   * but when the `scrollTop` is set to a far position, the actual displayed row is inexact\n   *\n   * E.g. : first row height = 30, but the rest of the rows height = 500px,\n   * and the constant `rowheight` property = 30,\n   * when scrollTop changes from 0 to 5000, the displayed first row instead of being 11 is 57\n   *\n   * By setting ```isVerticalScrollExact``` to true, when trying to scroll to ```scrollTop``` position, the table will consider\n   * the exact row heights, so the offset of the displayed rows will be correct\n   */\n  isVerticalScrollExact: PropTypes.bool,\n\n  /**\n   * Index of row to scroll to.\n   */\n  scrollToRow: PropTypes.number,\n\n  /**\n   * Callback that is called when scrolling starts. The current horizontal and vertical scroll values,\n   * and the current first and last row indexes will be provided to the callback.\n   */\n  onScrollStart: PropTypes.func,\n\n  /**\n   * Callback that is called when scrolling ends. The new horizontal and vertical scroll values,\n   * and the new first and last row indexes will be provided to the callback.\n   */\n  onScrollEnd: PropTypes.func,\n\n  /**\n   * If enabled scroll events will not be propagated outside of the table.\n   */\n  stopReactWheelPropagation: PropTypes.bool,\n\n  /**\n   * If enabled scroll events will never be bubbled to the browser default handler.\n   * If disabled (default when unspecified), scroll events will be bubbled up if the scroll\n   * doesn't lead to a change in scroll offsets, which is preferable if you like\n   * the page/container to scroll up when the table is already scrolled up max.\n   */\n  stopScrollDefaultHandling: PropTypes.bool,\n\n  /**\n   * If enabled scroll events will not be propagated outside of the table.\n   */\n  stopScrollPropagation: PropTypes.bool,\n\n  /**\n   * Callback that is called when `rowHeightGetter` returns a different height\n   * for a row than the `rowHeight` prop. This is necessary because initially\n   * table estimates heights of some parts of the content.\n   */\n  onContentHeightChange: PropTypes.func,\n\n  /**\n   * Callback that is called when a row is clicked.\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback that is called when a contextual-menu event happens on a row.\n   */\n  onRowContextMenu: PropTypes.func,\n\n  /**\n   * Callback that is called when a row is double clicked.\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback that is called when a mouse-down event happens on a row.\n   */\n  onRowMouseDown: PropTypes.func,\n\n  /**\n   * Callback that is called when a mouse-up event happens on a row.\n   */\n  onRowMouseUp: PropTypes.func,\n\n  /**\n   * Callback that is called when a mouse-enter event happens on a row.\n   */\n  onRowMouseEnter: PropTypes.func,\n\n  /**\n   * Callback that is called when a mouse-leave event happens on a row.\n   */\n  onRowMouseLeave: PropTypes.func,\n\n  /**\n   * Callback that is called when a touch-start event happens on a row.\n   */\n  onRowTouchStart: PropTypes.func,\n\n  /**\n   * Callback that is called when a touch-end event happens on a row.\n   */\n  onRowTouchEnd: PropTypes.func,\n\n  /**\n   * Callback that is called when a touch-move event happens on a row.\n   */\n  onRowTouchMove: PropTypes.func,\n\n  /**\n   * @deprecated This prop is deprecated in favor of the ResizeCell plugin\n   * component. Please refer to the \"Resizable columns\" example for usage.\n   *\n   * Callback that is called when resizer has been released\n   * and column needs to be updated.\n   *\n   * Required if the isResizable property is true on any column.\n   *\n   * ```\n   * function(\n   *   newColumnWidth: number,\n   *   columnKey: string,\n   * )\n   * ```\n   */\n  onColumnResizeEndCallback: PropTypes.func,\n\n  /**\n   * @deprecated This prop is deprecated in favor of the ReorderCell plugin\n   * component. Please refer to the \"Reorderable columns\" example for usage.\n   *\n   * Callback that is called when reordering has been completed\n   * and columns need to be updated.\n   *\n   * ```\n   * function(\n   *   event {\n   *     columnBefore: string|undefined, // the column before the new location of this one\n   *     columnAfter: string|undefined,  // the column after the new location of this one\n   *     reorderColumn: string,          // the column key that was just reordered\n   *   }\n   * )\n   * ```\n   */\n  onColumnReorderEndCallback: PropTypes.func,\n\n  /**\n   * Whether the grid should be in RTL mode\n   */\n  isRTL: PropTypes.bool,\n  // TODO (jordan) Remove propType of bufferRowCount without losing documentation\n\n  /**\n   * The number of rows outside the viewport to prerender. Defaults to roughly\n   * half of the number of visible rows.\n   */\n  bufferRowCount: PropTypes.number,\n  // TODO (pradeep): Move elementHeights to a selector instead of passing it through redux as state variables\n\n  /**\n   * Row heights of the header, groupheader, footer, and cell group wrapper\n   * grouped into a single object.\n   *\n   * @ignore\n   */\n  elementHeights: PropTypes.shape({\n    cellGroupWrapperHeight: PropTypes.number,\n    footerHeight: PropTypes.number,\n    groupHeaderHeight: PropTypes.number,\n    headerHeight: PropTypes.number\n  }),\n\n  /**\n   * Callback that returns an object of html attributes to add to the grid element\n   */\n  gridAttributesGetter: PropTypes.func,\n  // TODO (pradeep) Remove propType of rowAttributesGetter without losing documentation (moved to rowSettings)\n\n  /**\n   * Callback that returns an object of html attributes to add to each row element.\n   *\n   * ```\n   * function(rowIndex: number)\n   * ```\n   */\n  rowAttributesGetter: PropTypes.func\n});\n\n_defineProperty$1(FixedDataTable, \"defaultProps\",\n/*object*/\n{\n  elementHeights: {\n    cellGroupWrapperHeight: undefined,\n    footerHeight: 0,\n    groupHeaderHeight: 0,\n    headerHeight: 0\n  },\n  keyboardScrollEnabled: false,\n  keyboardPageEnabled: false,\n  touchScrollEnabled: false,\n  stopScrollPropagation: false\n});\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FixedDataTableStore\n */\nvar FixedDataTableStore = {\n  get: function get() {\n    return configureStore({\n      reducer: reducer,\n      devTools: \"development\" !== \"production\",\n      middleware: function middleware(getDefaultMiddleware) {\n        return getDefaultMiddleware({\n          // Todo(deshpsuy): Have to disable immutableCheck because state has circular JSON somewhere in it. Need to investigate it.\n          immutableCheck: false,\n          serializableCheck: false\n        });\n      }\n    });\n  }\n};\n\nvar baseKeys$1 = _baseKeys,\n    getTag$1 = _getTag,\n    isArguments = isArguments_1,\n    isArray$1 = isArray_1,\n    isArrayLike$1 = isArrayLike_1,\n    isBuffer = isBuffer$3.exports,\n    isPrototype = _isPrototype,\n    isTypedArray = isTypedArray_1;\n\n/** `Object#toString` result references. */\nvar mapTag$1 = '[object Map]',\n    setTag$1 = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike$1(value) &&\n      (isArray$1(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag$1(value);\n  if (tag == mapTag$1 || tag == setTag$1) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys$1(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvar isEmpty_1 = isEmpty;\n\nfunction _createSuper$3(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$3(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct$3() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ScrollContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits$2(ScrollContainer, _React$Component);\n\n  var _super = _createSuper$3(ScrollContainer);\n\n  function ScrollContainer() {\n    var _this;\n\n    _classCallCheck$2(this, ScrollContainer);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(_args));\n\n    _defineProperty$1(_assertThisInitialized(_this), \"state\", {});\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onScrollBarsUpdate\", function (args) {\n      _this.setState(args);\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onVerticalScroll\", function (\n    /*number*/\n    scrollPos) {\n      if (_this.state.scrollToY !== undefined) {\n        _this.state.scrollToY(scrollPos);\n      }\n    });\n\n    _defineProperty$1(_assertThisInitialized(_this), \"_onHorizontalScroll\", function (\n    /*number*/\n    scrollPos) {\n      if (_this.state.scrollToX !== undefined) {\n        _this.state.scrollToX(scrollPos);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass$2(ScrollContainer, [{\n    key: \"render\",\n    value: function render() {\n      var scrollbarY = !isEmpty_1(this.state) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Scrollbar, {\n        size: this.state.viewportHeight,\n        contentSize: this.state.contentHeight,\n        onScroll: this._onVerticalScroll,\n        verticalTop: this.state.scrollbarYOffsetTop,\n        position: this.state.scrollY,\n        touchEnabled: this.props.touchScrollEnabled,\n        isRTL: this.props.isRTL\n      });\n      var scrollbarX = !isEmpty_1(this.state) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(HorizontalScrollbar, {\n        contentSize: this.state.contentWidth,\n        offset: this.state.scrollbarXOffsetTop,\n        onScroll: this._onHorizontalScroll,\n        position: this.state.scrollX,\n        size: this.state.viewportWidth,\n        touchEnabled: this.props.touchScrollEnabled,\n        isRTL: this.props.isRTL\n      });\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(this.props.children, {\n        onScrollBarsUpdate: this._onScrollBarsUpdate,\n        scrollbarX: scrollbarX,\n        scrollbarY: scrollbarY\n      });\n    }\n  }]);\n\n  return ScrollContainer;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n\nvar HorizontalScrollbar = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits$2(HorizontalScrollbar, _React$PureComponent);\n\n  var _super2 = _createSuper$3(HorizontalScrollbar);\n\n  function HorizontalScrollbar() {\n    _classCallCheck$2(this, HorizontalScrollbar);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass$2(HorizontalScrollbar, [{\n    key: \"render\",\n    value: function render()\n    /*object*/\n    {\n      var _this$props = this.props,\n          offset = _this$props.offset,\n          size = _this$props.size;\n      var outerContainerStyle = {\n        height: Scrollbar.SIZE,\n        width: size\n      };\n      var innerContainerStyle = {\n        height: Scrollbar.SIZE,\n        overflow: 'hidden',\n        width: size,\n        top: offset\n      };\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: joinClasses(cx('public/fixedDataTable/horizontalScrollbar')),\n        style: outerContainerStyle\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        style: innerContainerStyle\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Scrollbar, _extends({}, this.props, {\n        isOpaque: true,\n        orientation: \"horizontal\",\n        offset: undefined\n      }))));\n    }\n  }]);\n\n  return HorizontalScrollbar;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().PureComponent));\n\n_defineProperty$1(HorizontalScrollbar, \"propTypes\", {\n  contentSize: PropTypes.number.isRequired,\n  offset: PropTypes.number.isRequired,\n  onScroll: PropTypes.func.isRequired,\n  position: PropTypes.number.isRequired,\n  size: PropTypes.number.isRequired,\n  isRTL: PropTypes.bool\n});\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\nvar getApiDataSelector = function getApiDataSelector() {\n  return shallowEqualSelector([function (state) {\n    return tableHeightsSelector(state).componentHeight;\n  }, function (state) {\n    return state.elementHeights.groupHeaderHeight;\n  }, function (state) {\n    return state.scrollX;\n  }, function (state) {\n    return state.maxScrollX;\n  }, function (state) {\n    return columnWidths$1(state).availableScrollWidth;\n  }, function (state) {\n    return state.isRTL;\n  }], function (\n  /*number*/\n  tableHeight,\n  /*number*/\n  groupHeaderHeight,\n  /*number*/\n  scrollX,\n  /*number*/\n  maxScrollX,\n  /*number*/\n  availableScrollWidth,\n  /*boolean*/\n  isRTL) {\n    return {\n      tableHeight: tableHeight,\n      groupHeaderHeight: groupHeaderHeight,\n      scrollX: scrollX,\n      maxScrollX: maxScrollX,\n      availableScrollWidth: availableScrollWidth,\n      isRTL: isRTL\n    };\n  });\n};\n\nvar baseGetTag = _baseGetTag,\n    isArray = isArray_1,\n    isObjectLike = isObjectLike_1;\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString$1(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nvar isString_1 = isString$1;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\nfunction baseProperty$1(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nvar _baseProperty = baseProperty$1;\n\nvar baseProperty = _baseProperty;\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize$1 = baseProperty('length');\n\nvar _asciiSize = asciiSize$1;\n\n/** Used to compose unicode character classes. */\n\nvar rsAstralRange$1 = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange$1 = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange$1 = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange$1 = '\\\\u20d0-\\\\u20ff',\n    rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1,\n    rsVarRange$1 = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ$1 = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ$1 + rsAstralRange$1  + rsComboRange$1 + rsVarRange$1 + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode$1(string) {\n  return reHasUnicode.test(string);\n}\n\nvar _hasUnicode = hasUnicode$1;\n\n/** Used to compose unicode character classes. */\n\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize$1(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nvar _unicodeSize = unicodeSize$1;\n\nvar asciiSize = _asciiSize,\n    hasUnicode = _hasUnicode,\n    unicodeSize = _unicodeSize;\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\nfunction stringSize$1(string) {\n  return hasUnicode(string)\n    ? unicodeSize(string)\n    : asciiSize(string);\n}\n\nvar _stringSize = stringSize$1;\n\nvar baseKeys = _baseKeys,\n    getTag = _getTag,\n    isArrayLike = isArrayLike_1,\n    isString = isString_1,\n    stringSize = _stringSize;\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable string keyed properties for objects.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the collection size.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */\nfunction size(collection) {\n  if (collection == null) {\n    return 0;\n  }\n  if (isArrayLike(collection)) {\n    return isString(collection) ? stringSize(collection) : collection.length;\n  }\n  var tag = getTag(collection);\n  if (tag == mapTag || tag == setTag) {\n    return collection.size;\n  }\n  return baseKeys(collection).length;\n}\n\nvar size_1 = size;\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n/**\n * Minimal data of a column that we expose through our APIs\n */\n\nvar _getMinimalColumn = function _getMinimalColumn(column) {\n  return {\n    offset: column.offset,\n    width: column.width,\n    index: column.index,\n    columnKey: column.columnKey\n  };\n};\n/**\n * Minimal data of a column group that we expose through our APIs\n */\n\n\nvar _getMinimalColumnGroup = function _getMinimalColumnGroup(columnGroup) {\n  return {\n    offset: columnGroup.offset,\n    width: columnGroup.width,\n    index: columnGroup.index,\n    columnKey: columnGroup.columnKey\n  };\n};\n/**\n * Return all exposed APIs\n *\n * @param {!Object} state\n * @param {!Object} api\n * @returns\n */\n\n\nvar getApiMethodsSelector = function getApiMethodsSelector() {\n  return shallowEqualSelector([function (state) {\n    return columnWidths$1(state);\n  }, function (state, actions) {\n    return actions;\n  }], function (\n  /*object*/\n  columnWidths,\n  /*object*/\n  actions) {\n    var fixedColumns = columnWidths.fixedColumns,\n        fixedRightColumns = columnWidths.fixedRightColumns,\n        scrollableColumns = columnWidths.scrollableColumns,\n        fixedColumnGroups = columnWidths.fixedColumnGroups,\n        fixedRightColumnGroups = columnWidths.fixedRightColumnGroups,\n        scrollableColumnGroups = columnWidths.scrollableColumnGroups;\n\n    var validateColumnIndex = function validateColumnIndex(columnIndex) {\n      var totalColumns = fixedColumns.length + scrollableColumns.length + fixedRightColumns.length;\n\n      if (columnIndex < 0 || columnIndex >= totalColumns || !Number.isInteger(columnIndex)) {\n        throw \"columnIndex must be an integer between 0 and \".concat(totalColumns - 1, \" inclusive\");\n      }\n    };\n\n    var validateColumnGroupIndex = function validateColumnGroupIndex(columnGroupIndex) {\n      var totalColumnGroups = fixedColumnGroups.length + scrollableColumnGroups.length + fixedRightColumnGroups.length;\n\n      if (columnGroupIndex < 0 || columnGroupIndex >= totalColumnGroups || !Number.isInteger(columnGroupIndex)) {\n        throw \"columnGroupIndex must be an integer between 0 and \".concat(totalColumnGroups - 1, \" inclusive\");\n      }\n    };\n\n    var validateCellGroupType = function validateCellGroupType(cellGroupType) {\n      var allowNil = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (allowNil && isNil_1(cellGroupType)) {\n        return;\n      }\n\n      if (cellGroupType !== CellGroupType.FIXED && cellGroupType !== CellGroupType.FIXED_RIGHT && cellGroupType !== CellGroupType.SCROLLABLE) {\n        throw 'Invalid CellGroupType';\n      }\n    };\n\n    var _getCellGroupTypeFromColumnIndex = function _getCellGroupTypeFromColumnIndex(columnIndex) {\n      if (columnIndex < fixedColumns.length) {\n        return CellGroupType.FIXED;\n      }\n\n      if (columnIndex < fixedColumns.length + scrollableColumns.length) {\n        return CellGroupType.SCROLLABLE;\n      }\n\n      return CellGroupType.FIXED_RIGHT;\n    };\n\n    var _getCellGroupTypeFromColumnGroupIndex = function _getCellGroupTypeFromColumnGroupIndex(columnGroupIndex) {\n      if (columnGroupIndex < fixedColumnGroups.length) {\n        return CellGroupType.FIXED;\n      }\n\n      if (columnGroupIndex < fixedColumnGroups.length + scrollableColumnGroups.length) {\n        return CellGroupType.SCROLLABLE;\n      }\n\n      return CellGroupType.FIXED_RIGHT;\n    };\n\n    var _getLocalColumnIndex = function _getLocalColumnIndex(columnIndex, cellGroupType) {\n      if (cellGroupType === CellGroupType.FIXED) {\n        return columnIndex;\n      }\n\n      if (cellGroupType === CellGroupType.SCROLLABLE) {\n        return columnIndex - fixedColumns.length;\n      } else if (cellGroupType === CellGroupType.FIXED_RIGHT) {\n        return columnIndex - fixedColumns.length - scrollableColumns.length;\n      }\n    };\n\n    var _getLocalColumnGroupIndex = function _getLocalColumnGroupIndex(columnGroupIndex, cellGroupType) {\n      if (cellGroupType === CellGroupType.FIXED) {\n        return columnGroupIndex;\n      }\n\n      if (cellGroupType === CellGroupType.SCROLLABLE) {\n        return columnGroupIndex - fixedColumnGroups.length;\n      } else if (cellGroupType === CellGroupType.FIXED_RIGHT) {\n        return columnGroupIndex - fixedColumnGroups.length - scrollableColumnGroups.length;\n      }\n    };\n\n    var getCellGroupWidth = function getCellGroupWidth() {\n      var cellGroupType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CellGroupType.SCROLLABLE;\n      validateCellGroupType(cellGroupType);\n\n      var container = _getColumnContainerByCellGroupType(cellGroupType);\n\n      return container.reduce(function (sum, column) {\n        return sum + column.width;\n      }, 0);\n    };\n\n    var _getColumn = function _getColumn(columnIndex, cellGroupType) {\n      var container = _getColumnContainerByCellGroupType(cellGroupType);\n\n      var localColumnIndex = _getLocalColumnIndex(columnIndex, cellGroupType);\n\n      return container[localColumnIndex];\n    };\n\n    var getColumn = function getColumn(columnIndex) {\n      validateColumnIndex(columnIndex);\n\n      var cellGroupType = _getCellGroupTypeFromColumnIndex(columnIndex);\n\n      var column = _getColumn(columnIndex, cellGroupType);\n\n      return _getMinimalColumn(column);\n    };\n\n    var getColumnCount = function getColumnCount() {\n      var cellGroupType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      validateCellGroupType(cellGroupType, true);\n\n      if (isNil_1(cellGroupType)) {\n        return fixedColumns.length + scrollableColumns.length + fixedRightColumns.length;\n      }\n\n      var container = _getColumnContainerByCellGroupType(cellGroupType);\n\n      return container.length;\n    };\n\n    var getColumnGroupCount = function getColumnGroupCount() {\n      var cellGroupType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      validateCellGroupType(cellGroupType, true);\n\n      if (isNil_1(cellGroupType)) {\n        return fixedColumnGroups.length + scrollableColumnGroups.length + fixedRightColumnGroups.length;\n      }\n\n      var container = _getColumnGroupContainerByCellGroupType(cellGroupType);\n\n      return container.length;\n    };\n\n    var _getColumnGroup = function _getColumnGroup(columnGroupIndex, cellGroupType) {\n      var container = _getColumnGroupContainerByCellGroupType(cellGroupType);\n\n      var localColumnGroupIndex = _getLocalColumnGroupIndex(columnGroupIndex, cellGroupType);\n\n      return _getMinimalColumnGroup(container[localColumnGroupIndex]);\n    };\n\n    var getColumnGroup = function getColumnGroup(columnGroupIndex) {\n      validateColumnGroupIndex(columnGroupIndex);\n\n      var cellGroupType = _getCellGroupTypeFromColumnGroupIndex(columnGroupIndex);\n\n      return _getColumnGroup(columnGroupIndex, cellGroupType);\n    };\n\n    var getColumnGroupByChild = function getColumnGroupByChild(columnIndex) {\n      validateColumnIndex(columnIndex);\n\n      var cellGroupType = _getCellGroupTypeFromColumnIndex(columnIndex);\n\n      var groupIndex = _getColumn(columnIndex, cellGroupType).groupIdx;\n\n      var columnGroup = _getColumnGroupByAbsoluteIndex(groupIndex);\n\n      return _getMinimalColumnGroup(columnGroup);\n    };\n\n    var _getColumnContainerByCellGroupType = function _getColumnContainerByCellGroupType(cellGroupType) {\n      if (cellGroupType === CellGroupType.FIXED) {\n        return fixedColumns;\n      } else if (cellGroupType === CellGroupType.FIXED_RIGHT) {\n        return fixedRightColumns;\n      } else if (cellGroupType === CellGroupType.SCROLLABLE) {\n        return scrollableColumns;\n      } else {\n        throw 'Invalid cell group type';\n      }\n    };\n\n    var _getColumnGroupContainerByCellGroupType = function _getColumnGroupContainerByCellGroupType(cellGroupType) {\n      if (cellGroupType === CellGroupType.FIXED) {\n        return fixedColumnGroups;\n      } else if (cellGroupType === CellGroupType.FIXED_RIGHT) {\n        return fixedRightColumnGroups;\n      } else if (cellGroupType === CellGroupType.SCROLLABLE) {\n        return scrollableColumnGroups;\n      } else {\n        throw 'Invalid cell group type';\n      }\n    };\n\n    var _getColumnGroupByAbsoluteIndex = function _getColumnGroupByAbsoluteIndex(absoluteIndex) {\n      var fixedCount = size_1(fixedColumnGroups);\n      var scrollableCount = size_1(scrollableColumnGroups);\n      var fixedRightCount = size_1(fixedRightColumnGroups);\n\n      if (inRange_1(absoluteIndex, 0, fixedCount)) {\n        return fixedColumnGroups[absoluteIndex];\n      } else if (inRange_1(absoluteIndex, fixedCount, fixedCount + scrollableCount)) {\n        return scrollableColumnGroups[absoluteIndex - fixedCount];\n      } else if (inRange_1(absoluteIndex, fixedCount + scrollableCount, fixedCount + scrollableCount + fixedRightCount)) {\n        return fixedRightColumnGroups[absoluteIndex - fixedCount - scrollableCount];\n      } else {\n        throw 'Invalid absolute column group index';\n      }\n    };\n\n    var _getElementAtOffset = function _getElementAtOffset(container, offset) {\n      if (container.length === 0) {\n        return {\n          element: null,\n          distanceFromOffset: null\n        };\n      }\n\n      var currentOffset = 0;\n      var index = 0;\n\n      while (index !== container.length) {\n        if (currentOffset > offset) {\n          break;\n        }\n\n        currentOffset += container[index].width;\n        index++;\n      }\n\n      index = clamp_1(index - 1, 0, container.length - 1);\n      return {\n        element: container[index],\n        distanceFromOffset: container[index].width - (currentOffset - offset)\n      };\n    };\n\n    var getColumnAtOffset = function getColumnAtOffset(offset) {\n      var cellGroupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CellGroupType.SCROLLABLE;\n      validateCellGroupType(cellGroupType);\n\n      var container = _getColumnContainerByCellGroupType(cellGroupType);\n\n      var _getElementAtOffset2 = _getElementAtOffset(container, offset),\n          element = _getElementAtOffset2.element,\n          distanceFromOffset = _getElementAtOffset2.distanceFromOffset;\n\n      if (element) {\n        element = _getMinimalColumnGroup(element);\n      }\n\n      return {\n        column: element,\n        distanceFromOffset: distanceFromOffset\n      };\n    };\n\n    var getColumnGroupAtOffset = function getColumnGroupAtOffset(offset) {\n      var cellGroupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CellGroupType.SCROLLABLE;\n      validateCellGroupType(cellGroupType);\n\n      var container = _getColumnGroupContainerByCellGroupType(cellGroupType);\n\n      var _getElementAtOffset3 = _getElementAtOffset(container, offset),\n          element = _getElementAtOffset3.element,\n          distanceFromOffset = _getElementAtOffset3.distanceFromOffset;\n\n      if (element) {\n        element = _getMinimalColumnGroup(element);\n      }\n\n      return {\n        columnGroup: element,\n        distanceFromOffset: distanceFromOffset\n      };\n    };\n\n    var scrollToX = actions.scrollToX;\n    var updateRowHeights = actions.updateRowHeights;\n    return {\n      /** get element */\n      getColumn: getColumn,\n      getColumnGroup: getColumnGroup,\n      getColumnGroupByChild: getColumnGroupByChild,\n\n      /** get element at offset */\n      getColumnAtOffset: getColumnAtOffset,\n      getColumnGroupAtOffset: getColumnGroupAtOffset,\n\n      /** get cell group width */\n      getCellGroupWidth: getCellGroupWidth,\n\n      /** get count */\n      getColumnCount: getColumnCount,\n      getColumnGroupCount: getColumnGroupCount,\n\n      /** actions */\n      scrollToX: scrollToX,\n      updateRowHeights: updateRowHeights\n    };\n  });\n};\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty$1(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n/**\n * Factory to create a wrapper which exposes the API.\n * This is required because we want to maintain seperate API instances per FDT table instances, so as to facilitate caching and subscription per instance.\n */\n\nvar createApi = function createApi() {\n  // NOTE (pradeep): We provide subscription functionality so that plugin consumers can listen for API value changes\n  var subscribers = []; // Keep track of the latest computed API values\n\n  var apiValue = null;\n  /**\n   * Method to add a subscriber that listens to api value changes.\n   * @param {Function} subscriber\n   * @returns {Function}\n   */\n\n  var subscribe = function subscribe(subscriber) {\n    subscribers = subscribers.concat(subscriber); // return a method which can be called to remove the subscriber\n\n    return function () {\n      var subcriberIndex = subscribers.indexOf(subscriber);\n      subscribers.splice(subcriberIndex, 1);\n    };\n  };\n\n  var getApiData = getApiDataSelector();\n  var getApiMethods = getApiMethodsSelector();\n  return {\n    /**\n     * Memoizer for calculating api value\n     *\n     * @param {Object} state\n     */\n    getValue: shallowEqualSelector([function (state) {\n      return getApiData(state);\n    }, function (state, actions) {\n      return getApiMethods(state, actions);\n    }], function (apiData, apiMethods) {\n      apiValue = _objectSpread$1(_objectSpread$1(_objectSpread$1({}, apiData), apiMethods), {}, {\n        subscribe: subscribe\n      });\n      return apiValue;\n    }),\n\n    /**\n     * Notify all subscribers with the latest API value\n     */\n    notify: function notify() {\n      subscribers.forEach(function (subscriber) {\n        return subscriber(apiValue);\n      });\n    }\n  };\n};\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty$1(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper$2(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$2(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct$2() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar FixedDataTableContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits$2(FixedDataTableContainer, _React$Component);\n\n  var _super = _createSuper$2(FixedDataTableContainer);\n\n  function FixedDataTableContainer(props) {\n    var _this;\n\n    _classCallCheck$2(this, FixedDataTableContainer);\n\n    _this = _super.call(this, props);\n\n    _this._initialize(props);\n\n    _this.fixedDataTableApi = createApi();\n    _this.previousApiValue = null;\n    return _this;\n  }\n\n  _createClass$2(FixedDataTableContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._initialize(this.props);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._cleanup();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.notifyApiValueChanges();\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize(props) {\n      var _this2 = this;\n\n      if (this.reduxStore) {\n        // already initialized\n        return;\n      }\n\n      this.reduxStore = FixedDataTableStore.get();\n      this.reduxStore.dispatch(initialize(props));\n      this.scrollActions = getScrollActions(this.reduxStore, function () {\n        return _this2.props;\n      });\n      this.unsubscribe = this.reduxStore.subscribe(this.onStoreUpdate.bind(this));\n      var state = {\n        boundState: FixedDataTableContainer.getBoundState(this.reduxStore),\n        // the state from the redux store\n        reduxStore: this.reduxStore,\n        // put store instance in local state so that getDerivedStateFromProps can access it\n        props: props // put props in local state so that getDerivedStateFromProps can access it\n\n      };\n\n      if (this.state) {\n        // component is already constructed, so just update state\n        this.setState(state);\n      } else {\n        // component isn't constructed yet, so initialize state\n        this.state = state;\n      }\n    }\n  }, {\n    key: \"_cleanup\",\n    value: function _cleanup() {\n      if (!this.reduxStore) {\n        // already cleaned up\n        return;\n      }\n\n      this.unsubscribe();\n      this.unsubscribe = null;\n      this.reduxStore = null;\n    }\n    /**\n     * Returns FDT's public API.\n     *\n     * @public\n     * @returns\n     */\n\n  }, {\n    key: \"getApi\",\n    value: function getApi() {\n      var _this3 = this;\n\n      return this.fixedDataTableApi.getValue(_objectSpread(_objectSpread({}, this.props), this.reduxStore.getState()), _objectSpread(_objectSpread({}, this.scrollActions), {}, {\n        updateRowHeights: function updateRowHeights$1(firstUpdatedRowIndex) {\n          return bindActionCreators({\n            updateRowHeights: updateRowHeights\n          }, _this3.reduxStore.dispatch).updateRowHeights(firstUpdatedRowIndex);\n        }\n      }));\n    }\n    /**\n     * Notify all subscribers of the API if API value got changed.\n     */\n\n  }, {\n    key: \"notifyApiValueChanges\",\n    value: function notifyApiValueChanges() {\n      var fixedDataTableContextValue = this.getApi();\n\n      if (this.previousApiValue !== fixedDataTableContextValue) {\n        this.fixedDataTableApi.notify();\n        this.previousApiValue = fixedDataTableContextValue;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var fixedDataTableContextValue = this.getApi();\n      var fdt = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTable, _extends({}, this.props, this.state.boundState, {\n        scrollActions: this.scrollActions\n      })); // For backward compatibility, by default we render FDT-2 scrollbars\n\n      if (this.props.defaultScrollbars) {\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableContext.Provider, {\n          value: fixedDataTableContextValue\n        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ScrollContainer, this.props, fdt));\n      }\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FixedDataTableContext.Provider, {\n        value: fixedDataTableContextValue\n      }, fdt);\n    }\n  }, {\n    key: \"onStoreUpdate\",\n    value: function onStoreUpdate() {\n      var newBoundState = FixedDataTableContainer.getBoundState(this.reduxStore); // If onStoreUpdate was called through a prop change, then skip updating local state.\n      // This is fine because getDerivedStateFromProps already calculates the new state.\n\n      if (this.state.boundState.propsRevision !== newBoundState.propsRevision) {\n        return;\n      }\n\n      this.setState({\n        boundState: newBoundState\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, currentState) {\n      invariant$1(nextProps.height !== undefined || nextProps.maxHeight !== undefined, 'You must set either a height or a maxHeight'); // getDerivedStateFromProps is called for both prop and state updates.\n      // If props are unchanged here, then there's no need to recalculate derived state.\n\n      if (nextProps === currentState.props) {\n        // return null to indicate that state should be unchanged\n        return null;\n      } // Props have changed, so update the redux store with the latest props\n\n\n      currentState.reduxStore.dispatch(propChange({\n        newProps: nextProps,\n        oldProps: currentState.props\n      })); // return the new state from the updated redux store\n\n      return {\n        boundState: FixedDataTableContainer.getBoundState(currentState.reduxStore),\n        props: nextProps\n      };\n    }\n  }, {\n    key: \"getBoundState\",\n    value: function getBoundState(reduxStore) {\n      var state = reduxStore.getState();\n      var boundState = pick_1(state, ['columnGroupElements', 'columnElements', 'elementHeights', 'elementTemplates', 'firstRowIndex', 'endRowIndex', 'maxScrollX', 'maxScrollY', 'propsRevision', 'rows', 'rowOffsets', 'rowSettings', 'scrollContentHeight', 'scrollFlags', 'scrollX', 'scrollY', 'scrolling', 'scrollJumpedX', 'scrollJumpedY', 'tableSize']);\n      return boundState;\n    }\n  }]);\n\n  return FixedDataTableContainer;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n\n_defineProperty$1(FixedDataTableContainer, \"defaultProps\", {\n  defaultScrollbars: true,\n  scrollbarXHeight: Scrollbar.SIZE,\n  scrollbarYWidth: Scrollbar.SIZE\n});\n\nvar FixedDataTableContainer$1 = polyfill(FixedDataTableContainer);\n\nfunction _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct$1() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n/**\n * Component that defines the attributes of table column.\n */\n\nvar FixedDataTableColumn = /*#__PURE__*/function (_React$Component) {\n  _inherits$2(FixedDataTableColumn, _React$Component);\n\n  var _super = _createSuper$1(FixedDataTableColumn);\n\n  function FixedDataTableColumn() {\n    _classCallCheck$2(this, FixedDataTableColumn);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass$2(FixedDataTableColumn, [{\n    key: \"render\",\n    value: function render() {\n      if (true) {\n        throw new Error('Component <FixedDataTableColumn /> should never render');\n      }\n\n      // removed by dead control flow\n{}\n    }\n  }]);\n\n  return FixedDataTableColumn;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n\n_defineProperty$1(FixedDataTableColumn, \"__TableColumn__\", true);\n\n_defineProperty$1(FixedDataTableColumn, \"propTypes\", {\n  /**\n   * The horizontal alignment of the table cell content.\n   */\n  align: PropTypes.oneOf(['left', 'center', 'right']),\n\n  /**\n   * Controls if the column is fixed when scrolling in the X axis.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Controls if the column is fixed to the right side of the table when scrolling in the X axis.\n   */\n  fixedRight: PropTypes.bool,\n\n  /**\n   * The header cell for this column.\n   * This can either be a string a React element, or a function that generates\n   * a React Element. Passing in a string will render a default header cell\n   * with that string. By default, the React element passed in can expect to\n   * receive the following props:\n   *\n   * ```\n   * props: {\n   *   columnKey: string // (of the column, if given)\n   *   height: number // (supplied from the Table or rowHeightGetter)\n   *   width: number // (supplied from the Column)\n   * }\n   * ```\n   *\n   * Because you are passing in your own React element, you can feel free to\n   * pass in whatever props you may want or need.\n   *\n   * If you pass in a function, you will receive the same props object as the\n   * first argument.\n   */\n  header: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n  /**\n   * This is the body cell that will be cloned for this column.\n   * This can either be a string a React element, or a function that generates\n   * a React Element. Passing in a string will render a default header cell\n   * with that string. By default, the React element passed in can expect to\n   * receive the following props:\n   *\n   * ```\n   * props: {\n   *   rowIndex; number // (the row index of the cell)\n   *   columnKey: string // (of the column, if given)\n   *   height: number // (supplied from the Table or rowHeightGetter)\n   *   width: number // (supplied from the Column)\n   * }\n   * ```\n   *\n   * Because you are passing in your own React element, you can feel free to\n   * pass in whatever props you may want or need.\n   *\n   * If you pass in a function, you will receive the same props object as the\n   * first argument.\n   */\n  cell: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n  /**\n   * This is the footer cell for this column.\n   * This can either be a string a React element, or a function that generates\n   * a React Element. Passing in a string will render a default header cell\n   * with that string. By default, the React element passed in can expect to\n   * receive the following props:\n   *\n   * ```\n   * props: {\n   *   columnKey: string // (of the column, if given)\n   *   height: number // (supplied from the Table or rowHeightGetter)\n   *   width: number // (supplied from the Column)\n   * }\n   * ```\n   *\n   * Because you are passing in your own React element, you can feel free to\n   * pass in whatever props you may want or need.\n   *\n   * If you pass in a function, you will receive the same props object as the\n   * first argument.\n   */\n  footer: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n  /**\n   * This is used to uniquely identify the column, and is not required unless\n   * you a resizing columns. This will be the key given in the\n   * `onColumnResizeEndCallback` on the Table.\n   */\n  columnKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * The pixel width of the column.\n   */\n  width: PropTypes.number.isRequired,\n\n  /**\n   * If this is a resizable column this is its minimum pixel width.\n   */\n  minWidth: PropTypes.number,\n\n  /**\n   * If this is a resizable column this is its maximum pixel width.\n   */\n  maxWidth: PropTypes.number,\n\n  /**\n   * The grow factor relative to other columns. Same as the flex-grow API\n   * from http://www.w3.org/TR/css3-flexbox/. Basically, take any available\n   * extra width and distribute it proportionally according to all columns'\n   * flexGrow values. Defaults to zero (no-flexing).\n   */\n  flexGrow: PropTypes.number,\n\n  /**\n   * @deprecated This prop is deprecated in favor of the ResizeCell plugin\n   * component. Please refer to the \"Resizable columns\" example for usage.\n   *\n   * Whether the column can be resized.\n   * Please note that if a column has a flex grow, once you resize\n   * the column, this will be set to 0.\n   *\n   * This property only provides the UI for the column resizing. If this\n   * is set to true, you will need to set the onColumnResizeEndCallback table\n   * property and render your columns appropriately.\n   */\n  isResizable: PropTypes.bool,\n\n  /**\n   * @deprecated This prop is deprecated in favor of the ReorderCell plugin\n   * component. Please refer to the \"Reorderable columns\" example for usage.\n   *\n   * Whether the column can be dragged to reorder.\n   *\n   * This property only provides the UI for the column reordering. If this\n   * is set to true, you will need to set the onColumnReorderEndCallback table\n   * property and render your columns appropriately.\n   */\n  isReorderable: PropTypes.bool,\n\n  /**\n   * Whether cells in this column can be removed from document when outside\n   * of viewport as a result of horizontal scrolling.\n   * Setting this property to true allows the table to not render cells in\n   * particular column that are outside of viewport for visible rows. This\n   * allows to create table with many columns and not have vertical scrolling\n   * performance drop.\n   * Setting the property to false will keep previous behaviour and keep\n   * cell rendered if the row it belongs to is visible.\n   */\n  allowCellsRecycling: PropTypes.bool,\n\n  /**\n   * Flag to enable performance check when rendering. Stops the component from\n   * rendering if none of it's passed in props have changed\n   */\n  pureRendering: PropTypes.bool,\n\n  /**\n   * Additional classnames to be added to cells under this column.\n   */\n  cellClassName: PropTypes.string\n});\n\n_defineProperty$1(FixedDataTableColumn, \"defaultProps\", {\n  allowCellsRecycling: false,\n  fixed: false,\n  fixedRight: false\n});\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n/**\n * Component that defines the attributes of a table column group.\n */\n\nvar FixedDataTableColumnGroup = /*#__PURE__*/function (_React$Component) {\n  _inherits$2(FixedDataTableColumnGroup, _React$Component);\n\n  var _super = _createSuper(FixedDataTableColumnGroup);\n\n  function FixedDataTableColumnGroup() {\n    _classCallCheck$2(this, FixedDataTableColumnGroup);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass$2(FixedDataTableColumnGroup, [{\n    key: \"render\",\n    value: function render() {\n      if (true) {\n        throw new Error('Component <FixedDataTableColumnGroup /> should never render');\n      }\n\n      // removed by dead control flow\n{}\n    }\n  }]);\n\n  return FixedDataTableColumnGroup;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n\n_defineProperty$1(FixedDataTableColumnGroup, \"__TableColumnGroup__\", true);\n\n_defineProperty$1(FixedDataTableColumnGroup, \"propTypes\", {\n  /**\n   * The horizontal alignment of the table cell content.\n   */\n  align: PropTypes.oneOf(['left', 'center', 'right']),\n\n  /**\n   * Controls if the column group is fixed when scrolling in the X axis.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * This is the header cell for this column group.\n   * This can either be a string or a React element. Passing in a string\n   * will render a default footer cell with that string. By default, the React\n   * element passed in can expect to receive the following props:\n   *\n   * ```\n   * props: {\n   *   height: number // (supplied from the groupHeaderHeight)\n   *   width: number // (supplied from the Column)\n   * }\n   * ```\n   *\n   * Because you are passing in your own React element, you can feel free to\n   * pass in whatever props you may want or need.\n   *\n   * You can also pass in a function that returns a react elemnt, with the\n   * props object above passed in as the first parameter.\n   */\n  header: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n});\n\n_defineProperty$1(FixedDataTableColumnGroup, \"defaultProps\", {\n  fixed: false\n});\n\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule index\n */\nvar version = '2.0.21';\nvar Plugins = {\n  ResizeCell: ResizeCell,\n  ReorderCell: ReorderCell\n};\n\n\n//# sourceMappingURL=fixed-data-table-2.js.map\n\n\n//# sourceURL=webpack://workout_planner/./node_modules/fixed-data-table-2/dist/es/fixed-data-table-2.js?\n}");

/***/ }),

/***/ "./node_modules/react-dom/cjs/react-dom-client.development.js":
/*!********************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom-client.development.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{/**\n * @license React\n * react-dom-client.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n\n true &&\n  (function () {\n    function findHook(fiber, id) {\n      for (fiber = fiber.memoizedState; null !== fiber && 0 < id; )\n        (fiber = fiber.next), id--;\n      return fiber;\n    }\n    function copyWithSetImpl(obj, path, index, value) {\n      if (index >= path.length) return value;\n      var key = path[index],\n        updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);\n      updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n      return updated;\n    }\n    function copyWithRename(obj, oldPath, newPath) {\n      if (oldPath.length !== newPath.length)\n        console.warn(\"copyWithRename() expects paths of the same length\");\n      else {\n        for (var i = 0; i < newPath.length - 1; i++)\n          if (oldPath[i] !== newPath[i]) {\n            console.warn(\n              \"copyWithRename() expects paths to be the same except for the deepest key\"\n            );\n            return;\n          }\n        return copyWithRenameImpl(obj, oldPath, newPath, 0);\n      }\n    }\n    function copyWithRenameImpl(obj, oldPath, newPath, index) {\n      var oldKey = oldPath[index],\n        updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);\n      index + 1 === oldPath.length\n        ? ((updated[newPath[index]] = updated[oldKey]),\n          isArrayImpl(updated)\n            ? updated.splice(oldKey, 1)\n            : delete updated[oldKey])\n        : (updated[oldKey] = copyWithRenameImpl(\n            obj[oldKey],\n            oldPath,\n            newPath,\n            index + 1\n          ));\n      return updated;\n    }\n    function copyWithDeleteImpl(obj, path, index) {\n      var key = path[index],\n        updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);\n      if (index + 1 === path.length)\n        return (\n          isArrayImpl(updated) ? updated.splice(key, 1) : delete updated[key],\n          updated\n        );\n      updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n      return updated;\n    }\n    function shouldSuspendImpl() {\n      return !1;\n    }\n    function shouldErrorImpl() {\n      return null;\n    }\n    function warnForMissingKey() {}\n    function warnInvalidHookAccess() {\n      console.error(\n        \"Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://react.dev/link/rules-of-hooks\"\n      );\n    }\n    function warnInvalidContextAccess() {\n      console.error(\n        \"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().\"\n      );\n    }\n    function noop$2() {}\n    function setToSortedString(set) {\n      var array = [];\n      set.forEach(function (value) {\n        array.push(value);\n      });\n      return array.sort().join(\", \");\n    }\n    function createFiber(tag, pendingProps, key, mode) {\n      return new FiberNode(tag, pendingProps, key, mode);\n    }\n    function scheduleRoot(root, element) {\n      root.context === emptyContextObject &&\n        (updateContainerImpl(root.current, 2, element, root, null, null),\n        flushSyncWork$1());\n    }\n    function scheduleRefresh(root, update) {\n      if (null !== resolveFamily) {\n        var staleFamilies = update.staleFamilies;\n        update = update.updatedFamilies;\n        flushPendingEffects();\n        scheduleFibersWithFamiliesRecursively(\n          root.current,\n          update,\n          staleFamilies\n        );\n        flushSyncWork$1();\n      }\n    }\n    function setRefreshHandler(handler) {\n      resolveFamily = handler;\n    }\n    function isValidContainer(node) {\n      return !(\n        !node ||\n        (1 !== node.nodeType && 9 !== node.nodeType && 11 !== node.nodeType)\n      );\n    }\n    function getNearestMountedFiber(fiber) {\n      var node = fiber,\n        nearestMounted = fiber;\n      if (fiber.alternate) for (; node.return; ) node = node.return;\n      else {\n        fiber = node;\n        do\n          (node = fiber),\n            0 !== (node.flags & 4098) && (nearestMounted = node.return),\n            (fiber = node.return);\n        while (fiber);\n      }\n      return 3 === node.tag ? nearestMounted : null;\n    }\n    function getSuspenseInstanceFromFiber(fiber) {\n      if (13 === fiber.tag) {\n        var suspenseState = fiber.memoizedState;\n        null === suspenseState &&\n          ((fiber = fiber.alternate),\n          null !== fiber && (suspenseState = fiber.memoizedState));\n        if (null !== suspenseState) return suspenseState.dehydrated;\n      }\n      return null;\n    }\n    function assertIsMounted(fiber) {\n      if (getNearestMountedFiber(fiber) !== fiber)\n        throw Error(\"Unable to find node on an unmounted component.\");\n    }\n    function findCurrentFiberUsingSlowPath(fiber) {\n      var alternate = fiber.alternate;\n      if (!alternate) {\n        alternate = getNearestMountedFiber(fiber);\n        if (null === alternate)\n          throw Error(\"Unable to find node on an unmounted component.\");\n        return alternate !== fiber ? null : fiber;\n      }\n      for (var a = fiber, b = alternate; ; ) {\n        var parentA = a.return;\n        if (null === parentA) break;\n        var parentB = parentA.alternate;\n        if (null === parentB) {\n          b = parentA.return;\n          if (null !== b) {\n            a = b;\n            continue;\n          }\n          break;\n        }\n        if (parentA.child === parentB.child) {\n          for (parentB = parentA.child; parentB; ) {\n            if (parentB === a) return assertIsMounted(parentA), fiber;\n            if (parentB === b) return assertIsMounted(parentA), alternate;\n            parentB = parentB.sibling;\n          }\n          throw Error(\"Unable to find node on an unmounted component.\");\n        }\n        if (a.return !== b.return) (a = parentA), (b = parentB);\n        else {\n          for (var didFindChild = !1, _child = parentA.child; _child; ) {\n            if (_child === a) {\n              didFindChild = !0;\n              a = parentA;\n              b = parentB;\n              break;\n            }\n            if (_child === b) {\n              didFindChild = !0;\n              b = parentA;\n              a = parentB;\n              break;\n            }\n            _child = _child.sibling;\n          }\n          if (!didFindChild) {\n            for (_child = parentB.child; _child; ) {\n              if (_child === a) {\n                didFindChild = !0;\n                a = parentB;\n                b = parentA;\n                break;\n              }\n              if (_child === b) {\n                didFindChild = !0;\n                b = parentB;\n                a = parentA;\n                break;\n              }\n              _child = _child.sibling;\n            }\n            if (!didFindChild)\n              throw Error(\n                \"Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.\"\n              );\n          }\n        }\n        if (a.alternate !== b)\n          throw Error(\n            \"Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.\"\n          );\n      }\n      if (3 !== a.tag)\n        throw Error(\"Unable to find node on an unmounted component.\");\n      return a.stateNode.current === a ? fiber : alternate;\n    }\n    function findCurrentHostFiberImpl(node) {\n      var tag = node.tag;\n      if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;\n      for (node = node.child; null !== node; ) {\n        tag = findCurrentHostFiberImpl(node);\n        if (null !== tag) return tag;\n        node = node.sibling;\n      }\n      return null;\n    }\n    function getIteratorFn(maybeIterable) {\n      if (null === maybeIterable || \"object\" !== typeof maybeIterable)\n        return null;\n      maybeIterable =\n        (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n        maybeIterable[\"@@iterator\"];\n      return \"function\" === typeof maybeIterable ? maybeIterable : null;\n    }\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n        case REACT_ACTIVITY_TYPE:\n          return \"Activity\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function getComponentNameFromOwner(owner) {\n      return \"number\" === typeof owner.tag\n        ? getComponentNameFromFiber(owner)\n        : \"string\" === typeof owner.name\n          ? owner.name\n          : null;\n    }\n    function getComponentNameFromFiber(fiber) {\n      var type = fiber.type;\n      switch (fiber.tag) {\n        case 31:\n          return \"Activity\";\n        case 24:\n          return \"Cache\";\n        case 9:\n          return (type._context.displayName || \"Context\") + \".Consumer\";\n        case 10:\n          return (type.displayName || \"Context\") + \".Provider\";\n        case 18:\n          return \"DehydratedFragment\";\n        case 11:\n          return (\n            (fiber = type.render),\n            (fiber = fiber.displayName || fiber.name || \"\"),\n            type.displayName ||\n              (\"\" !== fiber ? \"ForwardRef(\" + fiber + \")\" : \"ForwardRef\")\n          );\n        case 7:\n          return \"Fragment\";\n        case 26:\n        case 27:\n        case 5:\n          return type;\n        case 4:\n          return \"Portal\";\n        case 3:\n          return \"Root\";\n        case 6:\n          return \"Text\";\n        case 16:\n          return getComponentNameFromType(type);\n        case 8:\n          return type === REACT_STRICT_MODE_TYPE ? \"StrictMode\" : \"Mode\";\n        case 22:\n          return \"Offscreen\";\n        case 12:\n          return \"Profiler\";\n        case 21:\n          return \"Scope\";\n        case 13:\n          return \"Suspense\";\n        case 19:\n          return \"SuspenseList\";\n        case 25:\n          return \"TracingMarker\";\n        case 1:\n        case 0:\n        case 14:\n        case 15:\n          if (\"function\" === typeof type)\n            return type.displayName || type.name || null;\n          if (\"string\" === typeof type) return type;\n          break;\n        case 29:\n          type = fiber._debugInfo;\n          if (null != type)\n            for (var i = type.length - 1; 0 <= i; i--)\n              if (\"string\" === typeof type[i].name) return type[i].name;\n          if (null !== fiber.return)\n            return getComponentNameFromFiber(fiber.return);\n      }\n      return null;\n    }\n    function createCursor(defaultValue) {\n      return { current: defaultValue };\n    }\n    function pop(cursor, fiber) {\n      0 > index$jscomp$0\n        ? console.error(\"Unexpected pop.\")\n        : (fiber !== fiberStack[index$jscomp$0] &&\n            console.error(\"Unexpected Fiber popped.\"),\n          (cursor.current = valueStack[index$jscomp$0]),\n          (valueStack[index$jscomp$0] = null),\n          (fiberStack[index$jscomp$0] = null),\n          index$jscomp$0--);\n    }\n    function push(cursor, value, fiber) {\n      index$jscomp$0++;\n      valueStack[index$jscomp$0] = cursor.current;\n      fiberStack[index$jscomp$0] = fiber;\n      cursor.current = value;\n    }\n    function requiredContext(c) {\n      null === c &&\n        console.error(\n          \"Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.\"\n        );\n      return c;\n    }\n    function pushHostContainer(fiber, nextRootInstance) {\n      push(rootInstanceStackCursor, nextRootInstance, fiber);\n      push(contextFiberStackCursor, fiber, fiber);\n      push(contextStackCursor, null, fiber);\n      var nextRootContext = nextRootInstance.nodeType;\n      switch (nextRootContext) {\n        case 9:\n        case 11:\n          nextRootContext = 9 === nextRootContext ? \"#document\" : \"#fragment\";\n          nextRootInstance = (nextRootInstance =\n            nextRootInstance.documentElement)\n            ? (nextRootInstance = nextRootInstance.namespaceURI)\n              ? getOwnHostContext(nextRootInstance)\n              : HostContextNamespaceNone\n            : HostContextNamespaceNone;\n          break;\n        default:\n          if (\n            ((nextRootContext = nextRootInstance.tagName),\n            (nextRootInstance = nextRootInstance.namespaceURI))\n          )\n            (nextRootInstance = getOwnHostContext(nextRootInstance)),\n              (nextRootInstance = getChildHostContextProd(\n                nextRootInstance,\n                nextRootContext\n              ));\n          else\n            switch (nextRootContext) {\n              case \"svg\":\n                nextRootInstance = HostContextNamespaceSvg;\n                break;\n              case \"math\":\n                nextRootInstance = HostContextNamespaceMath;\n                break;\n              default:\n                nextRootInstance = HostContextNamespaceNone;\n            }\n      }\n      nextRootContext = nextRootContext.toLowerCase();\n      nextRootContext = updatedAncestorInfoDev(null, nextRootContext);\n      nextRootContext = {\n        context: nextRootInstance,\n        ancestorInfo: nextRootContext\n      };\n      pop(contextStackCursor, fiber);\n      push(contextStackCursor, nextRootContext, fiber);\n    }\n    function popHostContainer(fiber) {\n      pop(contextStackCursor, fiber);\n      pop(contextFiberStackCursor, fiber);\n      pop(rootInstanceStackCursor, fiber);\n    }\n    function getHostContext() {\n      return requiredContext(contextStackCursor.current);\n    }\n    function pushHostContext(fiber) {\n      null !== fiber.memoizedState &&\n        push(hostTransitionProviderCursor, fiber, fiber);\n      var context = requiredContext(contextStackCursor.current);\n      var type = fiber.type;\n      var nextContext = getChildHostContextProd(context.context, type);\n      type = updatedAncestorInfoDev(context.ancestorInfo, type);\n      nextContext = { context: nextContext, ancestorInfo: type };\n      context !== nextContext &&\n        (push(contextFiberStackCursor, fiber, fiber),\n        push(contextStackCursor, nextContext, fiber));\n    }\n    function popHostContext(fiber) {\n      contextFiberStackCursor.current === fiber &&\n        (pop(contextStackCursor, fiber), pop(contextFiberStackCursor, fiber));\n      hostTransitionProviderCursor.current === fiber &&\n        (pop(hostTransitionProviderCursor, fiber),\n        (HostTransitionContext._currentValue = NotPendingTransition));\n    }\n    function typeName(value) {\n      return (\n        (\"function\" === typeof Symbol &&\n          Symbol.toStringTag &&\n          value[Symbol.toStringTag]) ||\n        value.constructor.name ||\n        \"Object\"\n      );\n    }\n    function willCoercionThrow(value) {\n      try {\n        return testStringCoercion(value), !1;\n      } catch (e) {\n        return !0;\n      }\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkAttributeStringCoercion(value, attributeName) {\n      if (willCoercionThrow(value))\n        return (\n          console.error(\n            \"The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before using it here.\",\n            attributeName,\n            typeName(value)\n          ),\n          testStringCoercion(value)\n        );\n    }\n    function checkCSSPropertyStringCoercion(value, propName) {\n      if (willCoercionThrow(value))\n        return (\n          console.error(\n            \"The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before using it here.\",\n            propName,\n            typeName(value)\n          ),\n          testStringCoercion(value)\n        );\n    }\n    function checkFormFieldValueStringCoercion(value) {\n      if (willCoercionThrow(value))\n        return (\n          console.error(\n            \"Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before using it here.\",\n            typeName(value)\n          ),\n          testStringCoercion(value)\n        );\n    }\n    function injectInternals(internals) {\n      if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;\n      var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n      if (hook.isDisabled) return !0;\n      if (!hook.supportsFiber)\n        return (\n          console.error(\n            \"The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://react.dev/link/react-devtools\"\n          ),\n          !0\n        );\n      try {\n        (rendererID = hook.inject(internals)), (injectedHook = hook);\n      } catch (err) {\n        console.error(\"React instrumentation encountered an error: %s.\", err);\n      }\n      return hook.checkDCE ? !0 : !1;\n    }\n    function setIsStrictModeForDevtools(newIsStrictMode) {\n      \"function\" === typeof log$1 &&\n        unstable_setDisableYieldValue(newIsStrictMode);\n      if (injectedHook && \"function\" === typeof injectedHook.setStrictMode)\n        try {\n          injectedHook.setStrictMode(rendererID, newIsStrictMode);\n        } catch (err) {\n          hasLoggedError ||\n            ((hasLoggedError = !0),\n            console.error(\n              \"React instrumentation encountered an error: %s\",\n              err\n            ));\n        }\n    }\n    function injectProfilingHooks(profilingHooks) {\n      injectedProfilingHooks = profilingHooks;\n    }\n    function markCommitStopped() {\n      null !== injectedProfilingHooks &&\n        \"function\" === typeof injectedProfilingHooks.markCommitStopped &&\n        injectedProfilingHooks.markCommitStopped();\n    }\n    function markComponentRenderStarted(fiber) {\n      null !== injectedProfilingHooks &&\n        \"function\" ===\n          typeof injectedProfilingHooks.markComponentRenderStarted &&\n        injectedProfilingHooks.markComponentRenderStarted(fiber);\n    }\n    function markComponentRenderStopped() {\n      null !== injectedProfilingHooks &&\n        \"function\" ===\n          typeof injectedProfilingHooks.markComponentRenderStopped &&\n        injectedProfilingHooks.markComponentRenderStopped();\n    }\n    function markRenderStarted(lanes) {\n      null !== injectedProfilingHooks &&\n        \"function\" === typeof injectedProfilingHooks.markRenderStarted &&\n        injectedProfilingHooks.markRenderStarted(lanes);\n    }\n    function markRenderStopped() {\n      null !== injectedProfilingHooks &&\n        \"function\" === typeof injectedProfilingHooks.markRenderStopped &&\n        injectedProfilingHooks.markRenderStopped();\n    }\n    function markStateUpdateScheduled(fiber, lane) {\n      null !== injectedProfilingHooks &&\n        \"function\" === typeof injectedProfilingHooks.markStateUpdateScheduled &&\n        injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);\n    }\n    function clz32Fallback(x) {\n      x >>>= 0;\n      return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;\n    }\n    function getLabelForLane(lane) {\n      if (lane & 1) return \"SyncHydrationLane\";\n      if (lane & 2) return \"Sync\";\n      if (lane & 4) return \"InputContinuousHydration\";\n      if (lane & 8) return \"InputContinuous\";\n      if (lane & 16) return \"DefaultHydration\";\n      if (lane & 32) return \"Default\";\n      if (lane & 128) return \"TransitionHydration\";\n      if (lane & 4194048) return \"Transition\";\n      if (lane & 62914560) return \"Retry\";\n      if (lane & 67108864) return \"SelectiveHydration\";\n      if (lane & 134217728) return \"IdleHydration\";\n      if (lane & 268435456) return \"Idle\";\n      if (lane & 536870912) return \"Offscreen\";\n      if (lane & 1073741824) return \"Deferred\";\n    }\n    function getHighestPriorityLanes(lanes) {\n      var pendingSyncLanes = lanes & 42;\n      if (0 !== pendingSyncLanes) return pendingSyncLanes;\n      switch (lanes & -lanes) {\n        case 1:\n          return 1;\n        case 2:\n          return 2;\n        case 4:\n          return 4;\n        case 8:\n          return 8;\n        case 16:\n          return 16;\n        case 32:\n          return 32;\n        case 64:\n          return 64;\n        case 128:\n          return 128;\n        case 256:\n        case 512:\n        case 1024:\n        case 2048:\n        case 4096:\n        case 8192:\n        case 16384:\n        case 32768:\n        case 65536:\n        case 131072:\n        case 262144:\n        case 524288:\n        case 1048576:\n        case 2097152:\n          return lanes & 4194048;\n        case 4194304:\n        case 8388608:\n        case 16777216:\n        case 33554432:\n          return lanes & 62914560;\n        case 67108864:\n          return 67108864;\n        case 134217728:\n          return 134217728;\n        case 268435456:\n          return 268435456;\n        case 536870912:\n          return 536870912;\n        case 1073741824:\n          return 0;\n        default:\n          return (\n            console.error(\n              \"Should have found matching lanes. This is a bug in React.\"\n            ),\n            lanes\n          );\n      }\n    }\n    function getNextLanes(root, wipLanes, rootHasPendingCommit) {\n      var pendingLanes = root.pendingLanes;\n      if (0 === pendingLanes) return 0;\n      var nextLanes = 0,\n        suspendedLanes = root.suspendedLanes,\n        pingedLanes = root.pingedLanes;\n      root = root.warmLanes;\n      var nonIdlePendingLanes = pendingLanes & 134217727;\n      0 !== nonIdlePendingLanes\n        ? ((pendingLanes = nonIdlePendingLanes & ~suspendedLanes),\n          0 !== pendingLanes\n            ? (nextLanes = getHighestPriorityLanes(pendingLanes))\n            : ((pingedLanes &= nonIdlePendingLanes),\n              0 !== pingedLanes\n                ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n                : rootHasPendingCommit ||\n                  ((rootHasPendingCommit = nonIdlePendingLanes & ~root),\n                  0 !== rootHasPendingCommit &&\n                    (nextLanes =\n                      getHighestPriorityLanes(rootHasPendingCommit)))))\n        : ((nonIdlePendingLanes = pendingLanes & ~suspendedLanes),\n          0 !== nonIdlePendingLanes\n            ? (nextLanes = getHighestPriorityLanes(nonIdlePendingLanes))\n            : 0 !== pingedLanes\n              ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n              : rootHasPendingCommit ||\n                ((rootHasPendingCommit = pendingLanes & ~root),\n                0 !== rootHasPendingCommit &&\n                  (nextLanes = getHighestPriorityLanes(rootHasPendingCommit))));\n      return 0 === nextLanes\n        ? 0\n        : 0 !== wipLanes &&\n            wipLanes !== nextLanes &&\n            0 === (wipLanes & suspendedLanes) &&\n            ((suspendedLanes = nextLanes & -nextLanes),\n            (rootHasPendingCommit = wipLanes & -wipLanes),\n            suspendedLanes >= rootHasPendingCommit ||\n              (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)))\n          ? wipLanes\n          : nextLanes;\n    }\n    function checkIfRootIsPrerendering(root, renderLanes) {\n      return (\n        0 ===\n        (root.pendingLanes &\n          ~(root.suspendedLanes & ~root.pingedLanes) &\n          renderLanes)\n      );\n    }\n    function computeExpirationTime(lane, currentTime) {\n      switch (lane) {\n        case 1:\n        case 2:\n        case 4:\n        case 8:\n        case 64:\n          return currentTime + 250;\n        case 16:\n        case 32:\n        case 128:\n        case 256:\n        case 512:\n        case 1024:\n        case 2048:\n        case 4096:\n        case 8192:\n        case 16384:\n        case 32768:\n        case 65536:\n        case 131072:\n        case 262144:\n        case 524288:\n        case 1048576:\n        case 2097152:\n          return currentTime + 5e3;\n        case 4194304:\n        case 8388608:\n        case 16777216:\n        case 33554432:\n          return -1;\n        case 67108864:\n        case 134217728:\n        case 268435456:\n        case 536870912:\n        case 1073741824:\n          return -1;\n        default:\n          return (\n            console.error(\n              \"Should have found matching lanes. This is a bug in React.\"\n            ),\n            -1\n          );\n      }\n    }\n    function claimNextTransitionLane() {\n      var lane = nextTransitionLane;\n      nextTransitionLane <<= 1;\n      0 === (nextTransitionLane & 4194048) && (nextTransitionLane = 256);\n      return lane;\n    }\n    function claimNextRetryLane() {\n      var lane = nextRetryLane;\n      nextRetryLane <<= 1;\n      0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);\n      return lane;\n    }\n    function createLaneMap(initial) {\n      for (var laneMap = [], i = 0; 31 > i; i++) laneMap.push(initial);\n      return laneMap;\n    }\n    function markRootUpdated$1(root, updateLane) {\n      root.pendingLanes |= updateLane;\n      268435456 !== updateLane &&\n        ((root.suspendedLanes = 0),\n        (root.pingedLanes = 0),\n        (root.warmLanes = 0));\n    }\n    function markRootFinished(\n      root,\n      finishedLanes,\n      remainingLanes,\n      spawnedLane,\n      updatedLanes,\n      suspendedRetryLanes\n    ) {\n      var previouslyPendingLanes = root.pendingLanes;\n      root.pendingLanes = remainingLanes;\n      root.suspendedLanes = 0;\n      root.pingedLanes = 0;\n      root.warmLanes = 0;\n      root.expiredLanes &= remainingLanes;\n      root.entangledLanes &= remainingLanes;\n      root.errorRecoveryDisabledLanes &= remainingLanes;\n      root.shellSuspendCounter = 0;\n      var entanglements = root.entanglements,\n        expirationTimes = root.expirationTimes,\n        hiddenUpdates = root.hiddenUpdates;\n      for (\n        remainingLanes = previouslyPendingLanes & ~remainingLanes;\n        0 < remainingLanes;\n\n      ) {\n        var index = 31 - clz32(remainingLanes),\n          lane = 1 << index;\n        entanglements[index] = 0;\n        expirationTimes[index] = -1;\n        var hiddenUpdatesForLane = hiddenUpdates[index];\n        if (null !== hiddenUpdatesForLane)\n          for (\n            hiddenUpdates[index] = null, index = 0;\n            index < hiddenUpdatesForLane.length;\n            index++\n          ) {\n            var update = hiddenUpdatesForLane[index];\n            null !== update && (update.lane &= -536870913);\n          }\n        remainingLanes &= ~lane;\n      }\n      0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);\n      0 !== suspendedRetryLanes &&\n        0 === updatedLanes &&\n        0 !== root.tag &&\n        (root.suspendedLanes |=\n          suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));\n    }\n    function markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {\n      root.pendingLanes |= spawnedLane;\n      root.suspendedLanes &= ~spawnedLane;\n      var spawnedLaneIndex = 31 - clz32(spawnedLane);\n      root.entangledLanes |= spawnedLane;\n      root.entanglements[spawnedLaneIndex] =\n        root.entanglements[spawnedLaneIndex] |\n        1073741824 |\n        (entangledLanes & 4194090);\n    }\n    function markRootEntangled(root, entangledLanes) {\n      var rootEntangledLanes = (root.entangledLanes |= entangledLanes);\n      for (root = root.entanglements; rootEntangledLanes; ) {\n        var index = 31 - clz32(rootEntangledLanes),\n          lane = 1 << index;\n        (lane & entangledLanes) | (root[index] & entangledLanes) &&\n          (root[index] |= entangledLanes);\n        rootEntangledLanes &= ~lane;\n      }\n    }\n    function getBumpedLaneForHydrationByLane(lane) {\n      switch (lane) {\n        case 2:\n          lane = 1;\n          break;\n        case 8:\n          lane = 4;\n          break;\n        case 32:\n          lane = 16;\n          break;\n        case 256:\n        case 512:\n        case 1024:\n        case 2048:\n        case 4096:\n        case 8192:\n        case 16384:\n        case 32768:\n        case 65536:\n        case 131072:\n        case 262144:\n        case 524288:\n        case 1048576:\n        case 2097152:\n        case 4194304:\n        case 8388608:\n        case 16777216:\n        case 33554432:\n          lane = 128;\n          break;\n        case 268435456:\n          lane = 134217728;\n          break;\n        default:\n          lane = 0;\n      }\n      return lane;\n    }\n    function addFiberToLanesMap(root, fiber, lanes) {\n      if (isDevToolsPresent)\n        for (root = root.pendingUpdatersLaneMap; 0 < lanes; ) {\n          var index = 31 - clz32(lanes),\n            lane = 1 << index;\n          root[index].add(fiber);\n          lanes &= ~lane;\n        }\n    }\n    function movePendingFibersToMemoized(root, lanes) {\n      if (isDevToolsPresent)\n        for (\n          var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap,\n            memoizedUpdaters = root.memoizedUpdaters;\n          0 < lanes;\n\n        ) {\n          var index = 31 - clz32(lanes);\n          root = 1 << index;\n          index = pendingUpdatersLaneMap[index];\n          0 < index.size &&\n            (index.forEach(function (fiber) {\n              var alternate = fiber.alternate;\n              (null !== alternate && memoizedUpdaters.has(alternate)) ||\n                memoizedUpdaters.add(fiber);\n            }),\n            index.clear());\n          lanes &= ~root;\n        }\n    }\n    function lanesToEventPriority(lanes) {\n      lanes &= -lanes;\n      return 0 !== DiscreteEventPriority && DiscreteEventPriority < lanes\n        ? 0 !== ContinuousEventPriority && ContinuousEventPriority < lanes\n          ? 0 !== (lanes & 134217727)\n            ? DefaultEventPriority\n            : IdleEventPriority\n          : ContinuousEventPriority\n        : DiscreteEventPriority;\n    }\n    function resolveUpdatePriority() {\n      var updatePriority = ReactDOMSharedInternals.p;\n      if (0 !== updatePriority) return updatePriority;\n      updatePriority = window.event;\n      return void 0 === updatePriority\n        ? DefaultEventPriority\n        : getEventPriority(updatePriority.type);\n    }\n    function runWithPriority(priority, fn) {\n      var previousPriority = ReactDOMSharedInternals.p;\n      try {\n        return (ReactDOMSharedInternals.p = priority), fn();\n      } finally {\n        ReactDOMSharedInternals.p = previousPriority;\n      }\n    }\n    function detachDeletedInstance(node) {\n      delete node[internalInstanceKey];\n      delete node[internalPropsKey];\n      delete node[internalEventHandlersKey];\n      delete node[internalEventHandlerListenersKey];\n      delete node[internalEventHandlesSetKey];\n    }\n    function getClosestInstanceFromNode(targetNode) {\n      var targetInst = targetNode[internalInstanceKey];\n      if (targetInst) return targetInst;\n      for (var parentNode = targetNode.parentNode; parentNode; ) {\n        if (\n          (targetInst =\n            parentNode[internalContainerInstanceKey] ||\n            parentNode[internalInstanceKey])\n        ) {\n          parentNode = targetInst.alternate;\n          if (\n            null !== targetInst.child ||\n            (null !== parentNode && null !== parentNode.child)\n          )\n            for (\n              targetNode = getParentSuspenseInstance(targetNode);\n              null !== targetNode;\n\n            ) {\n              if ((parentNode = targetNode[internalInstanceKey]))\n                return parentNode;\n              targetNode = getParentSuspenseInstance(targetNode);\n            }\n          return targetInst;\n        }\n        targetNode = parentNode;\n        parentNode = targetNode.parentNode;\n      }\n      return null;\n    }\n    function getInstanceFromNode(node) {\n      if (\n        (node = node[internalInstanceKey] || node[internalContainerInstanceKey])\n      ) {\n        var tag = node.tag;\n        if (\n          5 === tag ||\n          6 === tag ||\n          13 === tag ||\n          26 === tag ||\n          27 === tag ||\n          3 === tag\n        )\n          return node;\n      }\n      return null;\n    }\n    function getNodeFromInstance(inst) {\n      var tag = inst.tag;\n      if (5 === tag || 26 === tag || 27 === tag || 6 === tag)\n        return inst.stateNode;\n      throw Error(\"getNodeFromInstance: Invalid argument.\");\n    }\n    function getResourcesFromRoot(root) {\n      var resources = root[internalRootNodeResourcesKey];\n      resources ||\n        (resources = root[internalRootNodeResourcesKey] =\n          { hoistableStyles: new Map(), hoistableScripts: new Map() });\n      return resources;\n    }\n    function markNodeAsHoistable(node) {\n      node[internalHoistableMarker] = !0;\n    }\n    function registerTwoPhaseEvent(registrationName, dependencies) {\n      registerDirectEvent(registrationName, dependencies);\n      registerDirectEvent(registrationName + \"Capture\", dependencies);\n    }\n    function registerDirectEvent(registrationName, dependencies) {\n      registrationNameDependencies[registrationName] &&\n        console.error(\n          \"EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.\",\n          registrationName\n        );\n      registrationNameDependencies[registrationName] = dependencies;\n      var lowerCasedName = registrationName.toLowerCase();\n      possibleRegistrationNames[lowerCasedName] = registrationName;\n      \"onDoubleClick\" === registrationName &&\n        (possibleRegistrationNames.ondblclick = registrationName);\n      for (\n        registrationName = 0;\n        registrationName < dependencies.length;\n        registrationName++\n      )\n        allNativeEvents.add(dependencies[registrationName]);\n    }\n    function checkControlledValueProps(tagName, props) {\n      hasReadOnlyValue[props.type] ||\n        props.onChange ||\n        props.onInput ||\n        props.readOnly ||\n        props.disabled ||\n        null == props.value ||\n        (\"select\" === tagName\n          ? console.error(\n              \"You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set `onChange`.\"\n            )\n          : console.error(\n              \"You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.\"\n            ));\n      props.onChange ||\n        props.readOnly ||\n        props.disabled ||\n        null == props.checked ||\n        console.error(\n          \"You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.\"\n        );\n    }\n    function isAttributeNameSafe(attributeName) {\n      if (hasOwnProperty.call(validatedAttributeNameCache, attributeName))\n        return !0;\n      if (hasOwnProperty.call(illegalAttributeNameCache, attributeName))\n        return !1;\n      if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))\n        return (validatedAttributeNameCache[attributeName] = !0);\n      illegalAttributeNameCache[attributeName] = !0;\n      console.error(\"Invalid attribute name: `%s`\", attributeName);\n      return !1;\n    }\n    function getValueForAttributeOnCustomComponent(node, name, expected) {\n      if (isAttributeNameSafe(name)) {\n        if (!node.hasAttribute(name)) {\n          switch (typeof expected) {\n            case \"symbol\":\n            case \"object\":\n              return expected;\n            case \"function\":\n              return expected;\n            case \"boolean\":\n              if (!1 === expected) return expected;\n          }\n          return void 0 === expected ? void 0 : null;\n        }\n        node = node.getAttribute(name);\n        if (\"\" === node && !0 === expected) return !0;\n        checkAttributeStringCoercion(expected, name);\n        return node === \"\" + expected ? expected : node;\n      }\n    }\n    function setValueForAttribute(node, name, value) {\n      if (isAttributeNameSafe(name))\n        if (null === value) node.removeAttribute(name);\n        else {\n          switch (typeof value) {\n            case \"undefined\":\n            case \"function\":\n            case \"symbol\":\n              node.removeAttribute(name);\n              return;\n            case \"boolean\":\n              var prefix = name.toLowerCase().slice(0, 5);\n              if (\"data-\" !== prefix && \"aria-\" !== prefix) {\n                node.removeAttribute(name);\n                return;\n              }\n          }\n          checkAttributeStringCoercion(value, name);\n          node.setAttribute(name, \"\" + value);\n        }\n    }\n    function setValueForKnownAttribute(node, name, value) {\n      if (null === value) node.removeAttribute(name);\n      else {\n        switch (typeof value) {\n          case \"undefined\":\n          case \"function\":\n          case \"symbol\":\n          case \"boolean\":\n            node.removeAttribute(name);\n            return;\n        }\n        checkAttributeStringCoercion(value, name);\n        node.setAttribute(name, \"\" + value);\n      }\n    }\n    function setValueForNamespacedAttribute(node, namespace, name, value) {\n      if (null === value) node.removeAttribute(name);\n      else {\n        switch (typeof value) {\n          case \"undefined\":\n          case \"function\":\n          case \"symbol\":\n          case \"boolean\":\n            node.removeAttribute(name);\n            return;\n        }\n        checkAttributeStringCoercion(value, name);\n        node.setAttributeNS(namespace, name, \"\" + value);\n      }\n    }\n    function disabledLog() {}\n    function disableLogs() {\n      if (0 === disabledDepth) {\n        prevLog = console.log;\n        prevInfo = console.info;\n        prevWarn = console.warn;\n        prevError = console.error;\n        prevGroup = console.group;\n        prevGroupCollapsed = console.groupCollapsed;\n        prevGroupEnd = console.groupEnd;\n        var props = {\n          configurable: !0,\n          enumerable: !0,\n          value: disabledLog,\n          writable: !0\n        };\n        Object.defineProperties(console, {\n          info: props,\n          log: props,\n          warn: props,\n          error: props,\n          group: props,\n          groupCollapsed: props,\n          groupEnd: props\n        });\n      }\n      disabledDepth++;\n    }\n    function reenableLogs() {\n      disabledDepth--;\n      if (0 === disabledDepth) {\n        var props = { configurable: !0, enumerable: !0, writable: !0 };\n        Object.defineProperties(console, {\n          log: assign({}, props, { value: prevLog }),\n          info: assign({}, props, { value: prevInfo }),\n          warn: assign({}, props, { value: prevWarn }),\n          error: assign({}, props, { value: prevError }),\n          group: assign({}, props, { value: prevGroup }),\n          groupCollapsed: assign({}, props, { value: prevGroupCollapsed }),\n          groupEnd: assign({}, props, { value: prevGroupEnd })\n        });\n      }\n      0 > disabledDepth &&\n        console.error(\n          \"disabledDepth fell below zero. This is a bug in React. Please file an issue.\"\n        );\n    }\n    function describeBuiltInComponentFrame(name) {\n      if (void 0 === prefix)\n        try {\n          throw Error();\n        } catch (x) {\n          var match = x.stack.trim().match(/\\n( *(at )?)/);\n          prefix = (match && match[1]) || \"\";\n          suffix =\n            -1 < x.stack.indexOf(\"\\n    at\")\n              ? \" (<anonymous>)\"\n              : -1 < x.stack.indexOf(\"@\")\n                ? \"@unknown:0:0\"\n                : \"\";\n        }\n      return \"\\n\" + prefix + name + suffix;\n    }\n    function describeNativeComponentFrame(fn, construct) {\n      if (!fn || reentry) return \"\";\n      var frame = componentFrameCache.get(fn);\n      if (void 0 !== frame) return frame;\n      reentry = !0;\n      frame = Error.prepareStackTrace;\n      Error.prepareStackTrace = void 0;\n      var previousDispatcher = null;\n      previousDispatcher = ReactSharedInternals.H;\n      ReactSharedInternals.H = null;\n      disableLogs();\n      try {\n        var RunInRootFrame = {\n          DetermineComponentFrameRoot: function () {\n            try {\n              if (construct) {\n                var Fake = function () {\n                  throw Error();\n                };\n                Object.defineProperty(Fake.prototype, \"props\", {\n                  set: function () {\n                    throw Error();\n                  }\n                });\n                if (\"object\" === typeof Reflect && Reflect.construct) {\n                  try {\n                    Reflect.construct(Fake, []);\n                  } catch (x) {\n                    var control = x;\n                  }\n                  Reflect.construct(fn, [], Fake);\n                } else {\n                  try {\n                    Fake.call();\n                  } catch (x$0) {\n                    control = x$0;\n                  }\n                  fn.call(Fake.prototype);\n                }\n              } else {\n                try {\n                  throw Error();\n                } catch (x$1) {\n                  control = x$1;\n                }\n                (Fake = fn()) &&\n                  \"function\" === typeof Fake.catch &&\n                  Fake.catch(function () {});\n              }\n            } catch (sample) {\n              if (sample && control && \"string\" === typeof sample.stack)\n                return [sample.stack, control.stack];\n            }\n            return [null, null];\n          }\n        };\n        RunInRootFrame.DetermineComponentFrameRoot.displayName =\n          \"DetermineComponentFrameRoot\";\n        var namePropDescriptor = Object.getOwnPropertyDescriptor(\n          RunInRootFrame.DetermineComponentFrameRoot,\n          \"name\"\n        );\n        namePropDescriptor &&\n          namePropDescriptor.configurable &&\n          Object.defineProperty(\n            RunInRootFrame.DetermineComponentFrameRoot,\n            \"name\",\n            { value: \"DetermineComponentFrameRoot\" }\n          );\n        var _RunInRootFrame$Deter =\n            RunInRootFrame.DetermineComponentFrameRoot(),\n          sampleStack = _RunInRootFrame$Deter[0],\n          controlStack = _RunInRootFrame$Deter[1];\n        if (sampleStack && controlStack) {\n          var sampleLines = sampleStack.split(\"\\n\"),\n            controlLines = controlStack.split(\"\\n\");\n          for (\n            _RunInRootFrame$Deter = namePropDescriptor = 0;\n            namePropDescriptor < sampleLines.length &&\n            !sampleLines[namePropDescriptor].includes(\n              \"DetermineComponentFrameRoot\"\n            );\n\n          )\n            namePropDescriptor++;\n          for (\n            ;\n            _RunInRootFrame$Deter < controlLines.length &&\n            !controlLines[_RunInRootFrame$Deter].includes(\n              \"DetermineComponentFrameRoot\"\n            );\n\n          )\n            _RunInRootFrame$Deter++;\n          if (\n            namePropDescriptor === sampleLines.length ||\n            _RunInRootFrame$Deter === controlLines.length\n          )\n            for (\n              namePropDescriptor = sampleLines.length - 1,\n                _RunInRootFrame$Deter = controlLines.length - 1;\n              1 <= namePropDescriptor &&\n              0 <= _RunInRootFrame$Deter &&\n              sampleLines[namePropDescriptor] !==\n                controlLines[_RunInRootFrame$Deter];\n\n            )\n              _RunInRootFrame$Deter--;\n          for (\n            ;\n            1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter;\n            namePropDescriptor--, _RunInRootFrame$Deter--\n          )\n            if (\n              sampleLines[namePropDescriptor] !==\n              controlLines[_RunInRootFrame$Deter]\n            ) {\n              if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {\n                do\n                  if (\n                    (namePropDescriptor--,\n                    _RunInRootFrame$Deter--,\n                    0 > _RunInRootFrame$Deter ||\n                      sampleLines[namePropDescriptor] !==\n                        controlLines[_RunInRootFrame$Deter])\n                  ) {\n                    var _frame =\n                      \"\\n\" +\n                      sampleLines[namePropDescriptor].replace(\n                        \" at new \",\n                        \" at \"\n                      );\n                    fn.displayName &&\n                      _frame.includes(\"<anonymous>\") &&\n                      (_frame = _frame.replace(\"<anonymous>\", fn.displayName));\n                    \"function\" === typeof fn &&\n                      componentFrameCache.set(fn, _frame);\n                    return _frame;\n                  }\n                while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter);\n              }\n              break;\n            }\n        }\n      } finally {\n        (reentry = !1),\n          (ReactSharedInternals.H = previousDispatcher),\n          reenableLogs(),\n          (Error.prepareStackTrace = frame);\n      }\n      sampleLines = (sampleLines = fn ? fn.displayName || fn.name : \"\")\n        ? describeBuiltInComponentFrame(sampleLines)\n        : \"\";\n      \"function\" === typeof fn && componentFrameCache.set(fn, sampleLines);\n      return sampleLines;\n    }\n    function formatOwnerStack(error) {\n      var prevPrepareStackTrace = Error.prepareStackTrace;\n      Error.prepareStackTrace = void 0;\n      error = error.stack;\n      Error.prepareStackTrace = prevPrepareStackTrace;\n      error.startsWith(\"Error: react-stack-top-frame\\n\") &&\n        (error = error.slice(29));\n      prevPrepareStackTrace = error.indexOf(\"\\n\");\n      -1 !== prevPrepareStackTrace &&\n        (error = error.slice(prevPrepareStackTrace + 1));\n      prevPrepareStackTrace = error.indexOf(\"react_stack_bottom_frame\");\n      -1 !== prevPrepareStackTrace &&\n        (prevPrepareStackTrace = error.lastIndexOf(\n          \"\\n\",\n          prevPrepareStackTrace\n        ));\n      if (-1 !== prevPrepareStackTrace)\n        error = error.slice(0, prevPrepareStackTrace);\n      else return \"\";\n      return error;\n    }\n    function describeFiber(fiber) {\n      switch (fiber.tag) {\n        case 26:\n        case 27:\n        case 5:\n          return describeBuiltInComponentFrame(fiber.type);\n        case 16:\n          return describeBuiltInComponentFrame(\"Lazy\");\n        case 13:\n          return describeBuiltInComponentFrame(\"Suspense\");\n        case 19:\n          return describeBuiltInComponentFrame(\"SuspenseList\");\n        case 0:\n        case 15:\n          return describeNativeComponentFrame(fiber.type, !1);\n        case 11:\n          return describeNativeComponentFrame(fiber.type.render, !1);\n        case 1:\n          return describeNativeComponentFrame(fiber.type, !0);\n        case 31:\n          return describeBuiltInComponentFrame(\"Activity\");\n        default:\n          return \"\";\n      }\n    }\n    function getStackByFiberInDevAndProd(workInProgress) {\n      try {\n        var info = \"\";\n        do {\n          info += describeFiber(workInProgress);\n          var debugInfo = workInProgress._debugInfo;\n          if (debugInfo)\n            for (var i = debugInfo.length - 1; 0 <= i; i--) {\n              var entry = debugInfo[i];\n              if (\"string\" === typeof entry.name) {\n                var JSCompiler_temp_const = info,\n                  env = entry.env;\n                var JSCompiler_inline_result = describeBuiltInComponentFrame(\n                  entry.name + (env ? \" [\" + env + \"]\" : \"\")\n                );\n                info = JSCompiler_temp_const + JSCompiler_inline_result;\n              }\n            }\n          workInProgress = workInProgress.return;\n        } while (workInProgress);\n        return info;\n      } catch (x) {\n        return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n      }\n    }\n    function describeFunctionComponentFrameWithoutLineNumber(fn) {\n      return (fn = fn ? fn.displayName || fn.name : \"\")\n        ? describeBuiltInComponentFrame(fn)\n        : \"\";\n    }\n    function getCurrentFiberOwnerNameInDevOrNull() {\n      if (null === current) return null;\n      var owner = current._debugOwner;\n      return null != owner ? getComponentNameFromOwner(owner) : null;\n    }\n    function getCurrentFiberStackInDev() {\n      if (null === current) return \"\";\n      var workInProgress = current;\n      try {\n        var info = \"\";\n        6 === workInProgress.tag && (workInProgress = workInProgress.return);\n        switch (workInProgress.tag) {\n          case 26:\n          case 27:\n          case 5:\n            info += describeBuiltInComponentFrame(workInProgress.type);\n            break;\n          case 13:\n            info += describeBuiltInComponentFrame(\"Suspense\");\n            break;\n          case 19:\n            info += describeBuiltInComponentFrame(\"SuspenseList\");\n            break;\n          case 31:\n            info += describeBuiltInComponentFrame(\"Activity\");\n            break;\n          case 30:\n          case 0:\n          case 15:\n          case 1:\n            workInProgress._debugOwner ||\n              \"\" !== info ||\n              (info += describeFunctionComponentFrameWithoutLineNumber(\n                workInProgress.type\n              ));\n            break;\n          case 11:\n            workInProgress._debugOwner ||\n              \"\" !== info ||\n              (info += describeFunctionComponentFrameWithoutLineNumber(\n                workInProgress.type.render\n              ));\n        }\n        for (; workInProgress; )\n          if (\"number\" === typeof workInProgress.tag) {\n            var fiber = workInProgress;\n            workInProgress = fiber._debugOwner;\n            var debugStack = fiber._debugStack;\n            workInProgress &&\n              debugStack &&\n              (\"string\" !== typeof debugStack &&\n                (fiber._debugStack = debugStack = formatOwnerStack(debugStack)),\n              \"\" !== debugStack && (info += \"\\n\" + debugStack));\n          } else if (null != workInProgress.debugStack) {\n            var ownerStack = workInProgress.debugStack;\n            (workInProgress = workInProgress.owner) &&\n              ownerStack &&\n              (info += \"\\n\" + formatOwnerStack(ownerStack));\n          } else break;\n        var JSCompiler_inline_result = info;\n      } catch (x) {\n        JSCompiler_inline_result =\n          \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n      }\n      return JSCompiler_inline_result;\n    }\n    function runWithFiberInDEV(fiber, callback, arg0, arg1, arg2, arg3, arg4) {\n      var previousFiber = current;\n      setCurrentFiber(fiber);\n      try {\n        return null !== fiber && fiber._debugTask\n          ? fiber._debugTask.run(\n              callback.bind(null, arg0, arg1, arg2, arg3, arg4)\n            )\n          : callback(arg0, arg1, arg2, arg3, arg4);\n      } finally {\n        setCurrentFiber(previousFiber);\n      }\n      // removed by dead control flow\n{}\n    }\n    function setCurrentFiber(fiber) {\n      ReactSharedInternals.getCurrentStack =\n        null === fiber ? null : getCurrentFiberStackInDev;\n      isRendering = !1;\n      current = fiber;\n    }\n    function getToStringValue(value) {\n      switch (typeof value) {\n        case \"bigint\":\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n        case \"undefined\":\n          return value;\n        case \"object\":\n          return checkFormFieldValueStringCoercion(value), value;\n        default:\n          return \"\";\n      }\n    }\n    function isCheckable(elem) {\n      var type = elem.type;\n      return (\n        (elem = elem.nodeName) &&\n        \"input\" === elem.toLowerCase() &&\n        (\"checkbox\" === type || \"radio\" === type)\n      );\n    }\n    function trackValueOnNode(node) {\n      var valueField = isCheckable(node) ? \"checked\" : \"value\",\n        descriptor = Object.getOwnPropertyDescriptor(\n          node.constructor.prototype,\n          valueField\n        );\n      checkFormFieldValueStringCoercion(node[valueField]);\n      var currentValue = \"\" + node[valueField];\n      if (\n        !node.hasOwnProperty(valueField) &&\n        \"undefined\" !== typeof descriptor &&\n        \"function\" === typeof descriptor.get &&\n        \"function\" === typeof descriptor.set\n      ) {\n        var get = descriptor.get,\n          set = descriptor.set;\n        Object.defineProperty(node, valueField, {\n          configurable: !0,\n          get: function () {\n            return get.call(this);\n          },\n          set: function (value) {\n            checkFormFieldValueStringCoercion(value);\n            currentValue = \"\" + value;\n            set.call(this, value);\n          }\n        });\n        Object.defineProperty(node, valueField, {\n          enumerable: descriptor.enumerable\n        });\n        return {\n          getValue: function () {\n            return currentValue;\n          },\n          setValue: function (value) {\n            checkFormFieldValueStringCoercion(value);\n            currentValue = \"\" + value;\n          },\n          stopTracking: function () {\n            node._valueTracker = null;\n            delete node[valueField];\n          }\n        };\n      }\n    }\n    function track(node) {\n      node._valueTracker || (node._valueTracker = trackValueOnNode(node));\n    }\n    function updateValueIfChanged(node) {\n      if (!node) return !1;\n      var tracker = node._valueTracker;\n      if (!tracker) return !0;\n      var lastValue = tracker.getValue();\n      var value = \"\";\n      node &&\n        (value = isCheckable(node)\n          ? node.checked\n            ? \"true\"\n            : \"false\"\n          : node.value);\n      node = value;\n      return node !== lastValue ? (tracker.setValue(node), !0) : !1;\n    }\n    function getActiveElement(doc) {\n      doc = doc || (\"undefined\" !== typeof document ? document : void 0);\n      if (\"undefined\" === typeof doc) return null;\n      try {\n        return doc.activeElement || doc.body;\n      } catch (e) {\n        return doc.body;\n      }\n    }\n    function escapeSelectorAttributeValueInsideDoubleQuotes(value) {\n      return value.replace(\n        escapeSelectorAttributeValueInsideDoubleQuotesRegex,\n        function (ch) {\n          return \"\\\\\" + ch.charCodeAt(0).toString(16) + \" \";\n        }\n      );\n    }\n    function validateInputProps(element, props) {\n      void 0 === props.checked ||\n        void 0 === props.defaultChecked ||\n        didWarnCheckedDefaultChecked ||\n        (console.error(\n          \"%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://react.dev/link/controlled-components\",\n          getCurrentFiberOwnerNameInDevOrNull() || \"A component\",\n          props.type\n        ),\n        (didWarnCheckedDefaultChecked = !0));\n      void 0 === props.value ||\n        void 0 === props.defaultValue ||\n        didWarnValueDefaultValue$1 ||\n        (console.error(\n          \"%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://react.dev/link/controlled-components\",\n          getCurrentFiberOwnerNameInDevOrNull() || \"A component\",\n          props.type\n        ),\n        (didWarnValueDefaultValue$1 = !0));\n    }\n    function updateInput(\n      element,\n      value,\n      defaultValue,\n      lastDefaultValue,\n      checked,\n      defaultChecked,\n      type,\n      name\n    ) {\n      element.name = \"\";\n      null != type &&\n      \"function\" !== typeof type &&\n      \"symbol\" !== typeof type &&\n      \"boolean\" !== typeof type\n        ? (checkAttributeStringCoercion(type, \"type\"), (element.type = type))\n        : element.removeAttribute(\"type\");\n      if (null != value)\n        if (\"number\" === type) {\n          if ((0 === value && \"\" === element.value) || element.value != value)\n            element.value = \"\" + getToStringValue(value);\n        } else\n          element.value !== \"\" + getToStringValue(value) &&\n            (element.value = \"\" + getToStringValue(value));\n      else\n        (\"submit\" !== type && \"reset\" !== type) ||\n          element.removeAttribute(\"value\");\n      null != value\n        ? setDefaultValue(element, type, getToStringValue(value))\n        : null != defaultValue\n          ? setDefaultValue(element, type, getToStringValue(defaultValue))\n          : null != lastDefaultValue && element.removeAttribute(\"value\");\n      null == checked &&\n        null != defaultChecked &&\n        (element.defaultChecked = !!defaultChecked);\n      null != checked &&\n        (element.checked =\n          checked &&\n          \"function\" !== typeof checked &&\n          \"symbol\" !== typeof checked);\n      null != name &&\n      \"function\" !== typeof name &&\n      \"symbol\" !== typeof name &&\n      \"boolean\" !== typeof name\n        ? (checkAttributeStringCoercion(name, \"name\"),\n          (element.name = \"\" + getToStringValue(name)))\n        : element.removeAttribute(\"name\");\n    }\n    function initInput(\n      element,\n      value,\n      defaultValue,\n      checked,\n      defaultChecked,\n      type,\n      name,\n      isHydrating\n    ) {\n      null != type &&\n        \"function\" !== typeof type &&\n        \"symbol\" !== typeof type &&\n        \"boolean\" !== typeof type &&\n        (checkAttributeStringCoercion(type, \"type\"), (element.type = type));\n      if (null != value || null != defaultValue) {\n        if (\n          !(\n            (\"submit\" !== type && \"reset\" !== type) ||\n            (void 0 !== value && null !== value)\n          )\n        )\n          return;\n        defaultValue =\n          null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n        value = null != value ? \"\" + getToStringValue(value) : defaultValue;\n        isHydrating || value === element.value || (element.value = value);\n        element.defaultValue = value;\n      }\n      checked = null != checked ? checked : defaultChecked;\n      checked =\n        \"function\" !== typeof checked &&\n        \"symbol\" !== typeof checked &&\n        !!checked;\n      element.checked = isHydrating ? element.checked : !!checked;\n      element.defaultChecked = !!checked;\n      null != name &&\n        \"function\" !== typeof name &&\n        \"symbol\" !== typeof name &&\n        \"boolean\" !== typeof name &&\n        (checkAttributeStringCoercion(name, \"name\"), (element.name = name));\n    }\n    function setDefaultValue(node, type, value) {\n      (\"number\" === type && getActiveElement(node.ownerDocument) === node) ||\n        node.defaultValue === \"\" + value ||\n        (node.defaultValue = \"\" + value);\n    }\n    function validateOptionProps(element, props) {\n      null == props.value &&\n        (\"object\" === typeof props.children && null !== props.children\n          ? React.Children.forEach(props.children, function (child) {\n              null == child ||\n                \"string\" === typeof child ||\n                \"number\" === typeof child ||\n                \"bigint\" === typeof child ||\n                didWarnInvalidChild ||\n                ((didWarnInvalidChild = !0),\n                console.error(\n                  \"Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.\"\n                ));\n            })\n          : null == props.dangerouslySetInnerHTML ||\n            didWarnInvalidInnerHTML ||\n            ((didWarnInvalidInnerHTML = !0),\n            console.error(\n              \"Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.\"\n            )));\n      null == props.selected ||\n        didWarnSelectedSetOnOption ||\n        (console.error(\n          \"Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.\"\n        ),\n        (didWarnSelectedSetOnOption = !0));\n    }\n    function getDeclarationErrorAddendum() {\n      var ownerName = getCurrentFiberOwnerNameInDevOrNull();\n      return ownerName\n        ? \"\\n\\nCheck the render method of `\" + ownerName + \"`.\"\n        : \"\";\n    }\n    function updateOptions(node, multiple, propValue, setDefaultSelected) {\n      node = node.options;\n      if (multiple) {\n        multiple = {};\n        for (var i = 0; i < propValue.length; i++)\n          multiple[\"$\" + propValue[i]] = !0;\n        for (propValue = 0; propValue < node.length; propValue++)\n          (i = multiple.hasOwnProperty(\"$\" + node[propValue].value)),\n            node[propValue].selected !== i && (node[propValue].selected = i),\n            i && setDefaultSelected && (node[propValue].defaultSelected = !0);\n      } else {\n        propValue = \"\" + getToStringValue(propValue);\n        multiple = null;\n        for (i = 0; i < node.length; i++) {\n          if (node[i].value === propValue) {\n            node[i].selected = !0;\n            setDefaultSelected && (node[i].defaultSelected = !0);\n            return;\n          }\n          null !== multiple || node[i].disabled || (multiple = node[i]);\n        }\n        null !== multiple && (multiple.selected = !0);\n      }\n    }\n    function validateSelectProps(element, props) {\n      for (element = 0; element < valuePropNames.length; element++) {\n        var propName = valuePropNames[element];\n        if (null != props[propName]) {\n          var propNameIsArray = isArrayImpl(props[propName]);\n          props.multiple && !propNameIsArray\n            ? console.error(\n                \"The `%s` prop supplied to <select> must be an array if `multiple` is true.%s\",\n                propName,\n                getDeclarationErrorAddendum()\n              )\n            : !props.multiple &&\n              propNameIsArray &&\n              console.error(\n                \"The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s\",\n                propName,\n                getDeclarationErrorAddendum()\n              );\n        }\n      }\n      void 0 === props.value ||\n        void 0 === props.defaultValue ||\n        didWarnValueDefaultValue ||\n        (console.error(\n          \"Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://react.dev/link/controlled-components\"\n        ),\n        (didWarnValueDefaultValue = !0));\n    }\n    function validateTextareaProps(element, props) {\n      void 0 === props.value ||\n        void 0 === props.defaultValue ||\n        didWarnValDefaultVal ||\n        (console.error(\n          \"%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://react.dev/link/controlled-components\",\n          getCurrentFiberOwnerNameInDevOrNull() || \"A component\"\n        ),\n        (didWarnValDefaultVal = !0));\n      null != props.children &&\n        null == props.value &&\n        console.error(\n          \"Use the `defaultValue` or `value` props instead of setting children on <textarea>.\"\n        );\n    }\n    function updateTextarea(element, value, defaultValue) {\n      if (\n        null != value &&\n        ((value = \"\" + getToStringValue(value)),\n        value !== element.value && (element.value = value),\n        null == defaultValue)\n      ) {\n        element.defaultValue !== value && (element.defaultValue = value);\n        return;\n      }\n      element.defaultValue =\n        null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n    }\n    function initTextarea(element, value, defaultValue, children) {\n      if (null == value) {\n        if (null != children) {\n          if (null != defaultValue)\n            throw Error(\n              \"If you supply `defaultValue` on a <textarea>, do not pass children.\"\n            );\n          if (isArrayImpl(children)) {\n            if (1 < children.length)\n              throw Error(\"<textarea> can only have at most one child.\");\n            children = children[0];\n          }\n          defaultValue = children;\n        }\n        null == defaultValue && (defaultValue = \"\");\n        value = defaultValue;\n      }\n      defaultValue = getToStringValue(value);\n      element.defaultValue = defaultValue;\n      children = element.textContent;\n      children === defaultValue &&\n        \"\" !== children &&\n        null !== children &&\n        (element.value = children);\n    }\n    function findNotableNode(node, indent) {\n      return void 0 === node.serverProps &&\n        0 === node.serverTail.length &&\n        1 === node.children.length &&\n        3 < node.distanceFromLeaf &&\n        node.distanceFromLeaf > 15 - indent\n        ? findNotableNode(node.children[0], indent)\n        : node;\n    }\n    function indentation(indent) {\n      return \"  \" + \"  \".repeat(indent);\n    }\n    function added(indent) {\n      return \"+ \" + \"  \".repeat(indent);\n    }\n    function removed(indent) {\n      return \"- \" + \"  \".repeat(indent);\n    }\n    function describeFiberType(fiber) {\n      switch (fiber.tag) {\n        case 26:\n        case 27:\n        case 5:\n          return fiber.type;\n        case 16:\n          return \"Lazy\";\n        case 13:\n          return \"Suspense\";\n        case 19:\n          return \"SuspenseList\";\n        case 0:\n        case 15:\n          return (fiber = fiber.type), fiber.displayName || fiber.name || null;\n        case 11:\n          return (\n            (fiber = fiber.type.render), fiber.displayName || fiber.name || null\n          );\n        case 1:\n          return (fiber = fiber.type), fiber.displayName || fiber.name || null;\n        default:\n          return null;\n      }\n    }\n    function describeTextNode(content, maxLength) {\n      return needsEscaping.test(content)\n        ? ((content = JSON.stringify(content)),\n          content.length > maxLength - 2\n            ? 8 > maxLength\n              ? '{\"...\"}'\n              : \"{\" + content.slice(0, maxLength - 7) + '...\"}'\n            : \"{\" + content + \"}\")\n        : content.length > maxLength\n          ? 5 > maxLength\n            ? '{\"...\"}'\n            : content.slice(0, maxLength - 3) + \"...\"\n          : content;\n    }\n    function describeTextDiff(clientText, serverProps, indent) {\n      var maxLength = 120 - 2 * indent;\n      if (null === serverProps)\n        return added(indent) + describeTextNode(clientText, maxLength) + \"\\n\";\n      if (\"string\" === typeof serverProps) {\n        for (\n          var firstDiff = 0;\n          firstDiff < serverProps.length &&\n          firstDiff < clientText.length &&\n          serverProps.charCodeAt(firstDiff) ===\n            clientText.charCodeAt(firstDiff);\n          firstDiff++\n        );\n        firstDiff > maxLength - 8 &&\n          10 < firstDiff &&\n          ((clientText = \"...\" + clientText.slice(firstDiff - 8)),\n          (serverProps = \"...\" + serverProps.slice(firstDiff - 8)));\n        return (\n          added(indent) +\n          describeTextNode(clientText, maxLength) +\n          \"\\n\" +\n          removed(indent) +\n          describeTextNode(serverProps, maxLength) +\n          \"\\n\"\n        );\n      }\n      return (\n        indentation(indent) + describeTextNode(clientText, maxLength) + \"\\n\"\n      );\n    }\n    function objectName(object) {\n      return Object.prototype.toString\n        .call(object)\n        .replace(/^\\[object (.*)\\]$/, function (m, p0) {\n          return p0;\n        });\n    }\n    function describeValue(value, maxLength) {\n      switch (typeof value) {\n        case \"string\":\n          return (\n            (value = JSON.stringify(value)),\n            value.length > maxLength\n              ? 5 > maxLength\n                ? '\"...\"'\n                : value.slice(0, maxLength - 4) + '...\"'\n              : value\n          );\n        case \"object\":\n          if (null === value) return \"null\";\n          if (isArrayImpl(value)) return \"[...]\";\n          if (value.$$typeof === REACT_ELEMENT_TYPE)\n            return (maxLength = getComponentNameFromType(value.type))\n              ? \"<\" + maxLength + \">\"\n              : \"<...>\";\n          var name = objectName(value);\n          if (\"Object\" === name) {\n            name = \"\";\n            maxLength -= 2;\n            for (var propName in value)\n              if (value.hasOwnProperty(propName)) {\n                var jsonPropName = JSON.stringify(propName);\n                jsonPropName !== '\"' + propName + '\"' &&\n                  (propName = jsonPropName);\n                maxLength -= propName.length - 2;\n                jsonPropName = describeValue(\n                  value[propName],\n                  15 > maxLength ? maxLength : 15\n                );\n                maxLength -= jsonPropName.length;\n                if (0 > maxLength) {\n                  name += \"\" === name ? \"...\" : \", ...\";\n                  break;\n                }\n                name +=\n                  (\"\" === name ? \"\" : \",\") + propName + \":\" + jsonPropName;\n              }\n            return \"{\" + name + \"}\";\n          }\n          return name;\n        case \"function\":\n          return (maxLength = value.displayName || value.name)\n            ? \"function \" + maxLength\n            : \"function\";\n        default:\n          return String(value);\n      }\n    }\n    function describePropValue(value, maxLength) {\n      return \"string\" !== typeof value || needsEscaping.test(value)\n        ? \"{\" + describeValue(value, maxLength - 2) + \"}\"\n        : value.length > maxLength - 2\n          ? 5 > maxLength\n            ? '\"...\"'\n            : '\"' + value.slice(0, maxLength - 5) + '...\"'\n          : '\"' + value + '\"';\n    }\n    function describeExpandedElement(type, props, rowPrefix) {\n      var remainingRowLength = 120 - rowPrefix.length - type.length,\n        properties = [],\n        propName;\n      for (propName in props)\n        if (props.hasOwnProperty(propName) && \"children\" !== propName) {\n          var propValue = describePropValue(\n            props[propName],\n            120 - rowPrefix.length - propName.length - 1\n          );\n          remainingRowLength -= propName.length + propValue.length + 2;\n          properties.push(propName + \"=\" + propValue);\n        }\n      return 0 === properties.length\n        ? rowPrefix + \"<\" + type + \">\\n\"\n        : 0 < remainingRowLength\n          ? rowPrefix + \"<\" + type + \" \" + properties.join(\" \") + \">\\n\"\n          : rowPrefix +\n            \"<\" +\n            type +\n            \"\\n\" +\n            rowPrefix +\n            \"  \" +\n            properties.join(\"\\n\" + rowPrefix + \"  \") +\n            \"\\n\" +\n            rowPrefix +\n            \">\\n\";\n    }\n    function describePropertiesDiff(clientObject, serverObject, indent) {\n      var properties = \"\",\n        remainingServerProperties = assign({}, serverObject),\n        propName;\n      for (propName in clientObject)\n        if (clientObject.hasOwnProperty(propName)) {\n          delete remainingServerProperties[propName];\n          var maxLength = 120 - 2 * indent - propName.length - 2,\n            clientPropValue = describeValue(clientObject[propName], maxLength);\n          serverObject.hasOwnProperty(propName)\n            ? ((maxLength = describeValue(serverObject[propName], maxLength)),\n              (properties +=\n                added(indent) + propName + \": \" + clientPropValue + \"\\n\"),\n              (properties +=\n                removed(indent) + propName + \": \" + maxLength + \"\\n\"))\n            : (properties +=\n                added(indent) + propName + \": \" + clientPropValue + \"\\n\");\n        }\n      for (var _propName in remainingServerProperties)\n        remainingServerProperties.hasOwnProperty(_propName) &&\n          ((clientObject = describeValue(\n            remainingServerProperties[_propName],\n            120 - 2 * indent - _propName.length - 2\n          )),\n          (properties +=\n            removed(indent) + _propName + \": \" + clientObject + \"\\n\"));\n      return properties;\n    }\n    function describeElementDiff(type, clientProps, serverProps, indent) {\n      var content = \"\",\n        serverPropNames = new Map();\n      for (propName$jscomp$0 in serverProps)\n        serverProps.hasOwnProperty(propName$jscomp$0) &&\n          serverPropNames.set(\n            propName$jscomp$0.toLowerCase(),\n            propName$jscomp$0\n          );\n      if (1 === serverPropNames.size && serverPropNames.has(\"children\"))\n        content += describeExpandedElement(\n          type,\n          clientProps,\n          indentation(indent)\n        );\n      else {\n        for (var _propName2 in clientProps)\n          if (\n            clientProps.hasOwnProperty(_propName2) &&\n            \"children\" !== _propName2\n          ) {\n            var maxLength$jscomp$0 =\n                120 - 2 * (indent + 1) - _propName2.length - 1,\n              serverPropName = serverPropNames.get(_propName2.toLowerCase());\n            if (void 0 !== serverPropName) {\n              serverPropNames.delete(_propName2.toLowerCase());\n              var propName$jscomp$0 = clientProps[_propName2];\n              serverPropName = serverProps[serverPropName];\n              var clientPropValue = describePropValue(\n                propName$jscomp$0,\n                maxLength$jscomp$0\n              );\n              maxLength$jscomp$0 = describePropValue(\n                serverPropName,\n                maxLength$jscomp$0\n              );\n              \"object\" === typeof propName$jscomp$0 &&\n              null !== propName$jscomp$0 &&\n              \"object\" === typeof serverPropName &&\n              null !== serverPropName &&\n              \"Object\" === objectName(propName$jscomp$0) &&\n              \"Object\" === objectName(serverPropName) &&\n              (2 < Object.keys(propName$jscomp$0).length ||\n                2 < Object.keys(serverPropName).length ||\n                -1 < clientPropValue.indexOf(\"...\") ||\n                -1 < maxLength$jscomp$0.indexOf(\"...\"))\n                ? (content +=\n                    indentation(indent + 1) +\n                    _propName2 +\n                    \"={{\\n\" +\n                    describePropertiesDiff(\n                      propName$jscomp$0,\n                      serverPropName,\n                      indent + 2\n                    ) +\n                    indentation(indent + 1) +\n                    \"}}\\n\")\n                : ((content +=\n                    added(indent + 1) +\n                    _propName2 +\n                    \"=\" +\n                    clientPropValue +\n                    \"\\n\"),\n                  (content +=\n                    removed(indent + 1) +\n                    _propName2 +\n                    \"=\" +\n                    maxLength$jscomp$0 +\n                    \"\\n\"));\n            } else\n              content +=\n                indentation(indent + 1) +\n                _propName2 +\n                \"=\" +\n                describePropValue(clientProps[_propName2], maxLength$jscomp$0) +\n                \"\\n\";\n          }\n        serverPropNames.forEach(function (propName) {\n          if (\"children\" !== propName) {\n            var maxLength = 120 - 2 * (indent + 1) - propName.length - 1;\n            content +=\n              removed(indent + 1) +\n              propName +\n              \"=\" +\n              describePropValue(serverProps[propName], maxLength) +\n              \"\\n\";\n          }\n        });\n        content =\n          \"\" === content\n            ? indentation(indent) + \"<\" + type + \">\\n\"\n            : indentation(indent) +\n              \"<\" +\n              type +\n              \"\\n\" +\n              content +\n              indentation(indent) +\n              \">\\n\";\n      }\n      type = serverProps.children;\n      clientProps = clientProps.children;\n      if (\n        \"string\" === typeof type ||\n        \"number\" === typeof type ||\n        \"bigint\" === typeof type\n      ) {\n        serverPropNames = \"\";\n        if (\n          \"string\" === typeof clientProps ||\n          \"number\" === typeof clientProps ||\n          \"bigint\" === typeof clientProps\n        )\n          serverPropNames = \"\" + clientProps;\n        content += describeTextDiff(serverPropNames, \"\" + type, indent + 1);\n      } else if (\n        \"string\" === typeof clientProps ||\n        \"number\" === typeof clientProps ||\n        \"bigint\" === typeof clientProps\n      )\n        content =\n          null == type\n            ? content + describeTextDiff(\"\" + clientProps, null, indent + 1)\n            : content + describeTextDiff(\"\" + clientProps, void 0, indent + 1);\n      return content;\n    }\n    function describeSiblingFiber(fiber, indent) {\n      var type = describeFiberType(fiber);\n      if (null === type) {\n        type = \"\";\n        for (fiber = fiber.child; fiber; )\n          (type += describeSiblingFiber(fiber, indent)),\n            (fiber = fiber.sibling);\n        return type;\n      }\n      return indentation(indent) + \"<\" + type + \">\\n\";\n    }\n    function describeNode(node, indent) {\n      var skipToNode = findNotableNode(node, indent);\n      if (\n        skipToNode !== node &&\n        (1 !== node.children.length || node.children[0] !== skipToNode)\n      )\n        return (\n          indentation(indent) + \"...\\n\" + describeNode(skipToNode, indent + 1)\n        );\n      skipToNode = \"\";\n      var debugInfo = node.fiber._debugInfo;\n      if (debugInfo)\n        for (var i = 0; i < debugInfo.length; i++) {\n          var serverComponentName = debugInfo[i].name;\n          \"string\" === typeof serverComponentName &&\n            ((skipToNode +=\n              indentation(indent) + \"<\" + serverComponentName + \">\\n\"),\n            indent++);\n        }\n      debugInfo = \"\";\n      i = node.fiber.pendingProps;\n      if (6 === node.fiber.tag)\n        (debugInfo = describeTextDiff(i, node.serverProps, indent)), indent++;\n      else if (\n        ((serverComponentName = describeFiberType(node.fiber)),\n        null !== serverComponentName)\n      )\n        if (void 0 === node.serverProps) {\n          debugInfo = indent;\n          var maxLength = 120 - 2 * debugInfo - serverComponentName.length - 2,\n            content = \"\";\n          for (propName in i)\n            if (i.hasOwnProperty(propName) && \"children\" !== propName) {\n              var propValue = describePropValue(i[propName], 15);\n              maxLength -= propName.length + propValue.length + 2;\n              if (0 > maxLength) {\n                content += \" ...\";\n                break;\n              }\n              content += \" \" + propName + \"=\" + propValue;\n            }\n          debugInfo =\n            indentation(debugInfo) +\n            \"<\" +\n            serverComponentName +\n            content +\n            \">\\n\";\n          indent++;\n        } else\n          null === node.serverProps\n            ? ((debugInfo = describeExpandedElement(\n                serverComponentName,\n                i,\n                added(indent)\n              )),\n              indent++)\n            : \"string\" === typeof node.serverProps\n              ? console.error(\n                  \"Should not have matched a non HostText fiber to a Text node. This is a bug in React.\"\n                )\n              : ((debugInfo = describeElementDiff(\n                  serverComponentName,\n                  i,\n                  node.serverProps,\n                  indent\n                )),\n                indent++);\n      var propName = \"\";\n      i = node.fiber.child;\n      for (\n        serverComponentName = 0;\n        i && serverComponentName < node.children.length;\n\n      )\n        (maxLength = node.children[serverComponentName]),\n          maxLength.fiber === i\n            ? ((propName += describeNode(maxLength, indent)),\n              serverComponentName++)\n            : (propName += describeSiblingFiber(i, indent)),\n          (i = i.sibling);\n      i &&\n        0 < node.children.length &&\n        (propName += indentation(indent) + \"...\\n\");\n      i = node.serverTail;\n      null === node.serverProps && indent--;\n      for (node = 0; node < i.length; node++)\n        (serverComponentName = i[node]),\n          (propName =\n            \"string\" === typeof serverComponentName\n              ? propName +\n                (removed(indent) +\n                  describeTextNode(serverComponentName, 120 - 2 * indent) +\n                  \"\\n\")\n              : propName +\n                describeExpandedElement(\n                  serverComponentName.type,\n                  serverComponentName.props,\n                  removed(indent)\n                ));\n      return skipToNode + debugInfo + propName;\n    }\n    function describeDiff(rootNode) {\n      try {\n        return \"\\n\\n\" + describeNode(rootNode, 0);\n      } catch (x) {\n        return \"\";\n      }\n    }\n    function describeAncestors(ancestor, child, props) {\n      for (var fiber = child, node = null, distanceFromLeaf = 0; fiber; )\n        fiber === ancestor && (distanceFromLeaf = 0),\n          (node = {\n            fiber: fiber,\n            children: null !== node ? [node] : [],\n            serverProps:\n              fiber === child ? props : fiber === ancestor ? null : void 0,\n            serverTail: [],\n            distanceFromLeaf: distanceFromLeaf\n          }),\n          distanceFromLeaf++,\n          (fiber = fiber.return);\n      return null !== node ? describeDiff(node).replaceAll(/^[+-]/gm, \">\") : \"\";\n    }\n    function updatedAncestorInfoDev(oldInfo, tag) {\n      var ancestorInfo = assign({}, oldInfo || emptyAncestorInfoDev),\n        info = { tag: tag };\n      -1 !== inScopeTags.indexOf(tag) &&\n        ((ancestorInfo.aTagInScope = null),\n        (ancestorInfo.buttonTagInScope = null),\n        (ancestorInfo.nobrTagInScope = null));\n      -1 !== buttonScopeTags.indexOf(tag) &&\n        (ancestorInfo.pTagInButtonScope = null);\n      -1 !== specialTags.indexOf(tag) &&\n        \"address\" !== tag &&\n        \"div\" !== tag &&\n        \"p\" !== tag &&\n        ((ancestorInfo.listItemTagAutoclosing = null),\n        (ancestorInfo.dlItemTagAutoclosing = null));\n      ancestorInfo.current = info;\n      \"form\" === tag && (ancestorInfo.formTag = info);\n      \"a\" === tag && (ancestorInfo.aTagInScope = info);\n      \"button\" === tag && (ancestorInfo.buttonTagInScope = info);\n      \"nobr\" === tag && (ancestorInfo.nobrTagInScope = info);\n      \"p\" === tag && (ancestorInfo.pTagInButtonScope = info);\n      \"li\" === tag && (ancestorInfo.listItemTagAutoclosing = info);\n      if (\"dd\" === tag || \"dt\" === tag)\n        ancestorInfo.dlItemTagAutoclosing = info;\n      \"#document\" === tag || \"html\" === tag\n        ? (ancestorInfo.containerTagInScope = null)\n        : ancestorInfo.containerTagInScope ||\n          (ancestorInfo.containerTagInScope = info);\n      null !== oldInfo ||\n      (\"#document\" !== tag && \"html\" !== tag && \"body\" !== tag)\n        ? !0 === ancestorInfo.implicitRootScope &&\n          (ancestorInfo.implicitRootScope = !1)\n        : (ancestorInfo.implicitRootScope = !0);\n      return ancestorInfo;\n    }\n    function isTagValidWithParent(tag, parentTag, implicitRootScope) {\n      switch (parentTag) {\n        case \"select\":\n          return (\n            \"hr\" === tag ||\n            \"option\" === tag ||\n            \"optgroup\" === tag ||\n            \"script\" === tag ||\n            \"template\" === tag ||\n            \"#text\" === tag\n          );\n        case \"optgroup\":\n          return \"option\" === tag || \"#text\" === tag;\n        case \"option\":\n          return \"#text\" === tag;\n        case \"tr\":\n          return (\n            \"th\" === tag ||\n            \"td\" === tag ||\n            \"style\" === tag ||\n            \"script\" === tag ||\n            \"template\" === tag\n          );\n        case \"tbody\":\n        case \"thead\":\n        case \"tfoot\":\n          return (\n            \"tr\" === tag ||\n            \"style\" === tag ||\n            \"script\" === tag ||\n            \"template\" === tag\n          );\n        case \"colgroup\":\n          return \"col\" === tag || \"template\" === tag;\n        case \"table\":\n          return (\n            \"caption\" === tag ||\n            \"colgroup\" === tag ||\n            \"tbody\" === tag ||\n            \"tfoot\" === tag ||\n            \"thead\" === tag ||\n            \"style\" === tag ||\n            \"script\" === tag ||\n            \"template\" === tag\n          );\n        case \"head\":\n          return (\n            \"base\" === tag ||\n            \"basefont\" === tag ||\n            \"bgsound\" === tag ||\n            \"link\" === tag ||\n            \"meta\" === tag ||\n            \"title\" === tag ||\n            \"noscript\" === tag ||\n            \"noframes\" === tag ||\n            \"style\" === tag ||\n            \"script\" === tag ||\n            \"template\" === tag\n          );\n        case \"html\":\n          if (implicitRootScope) break;\n          return \"head\" === tag || \"body\" === tag || \"frameset\" === tag;\n        case \"frameset\":\n          return \"frame\" === tag;\n        case \"#document\":\n          if (!implicitRootScope) return \"html\" === tag;\n      }\n      switch (tag) {\n        case \"h1\":\n        case \"h2\":\n        case \"h3\":\n        case \"h4\":\n        case \"h5\":\n        case \"h6\":\n          return (\n            \"h1\" !== parentTag &&\n            \"h2\" !== parentTag &&\n            \"h3\" !== parentTag &&\n            \"h4\" !== parentTag &&\n            \"h5\" !== parentTag &&\n            \"h6\" !== parentTag\n          );\n        case \"rp\":\n        case \"rt\":\n          return -1 === impliedEndTags.indexOf(parentTag);\n        case \"caption\":\n        case \"col\":\n        case \"colgroup\":\n        case \"frameset\":\n        case \"frame\":\n        case \"tbody\":\n        case \"td\":\n        case \"tfoot\":\n        case \"th\":\n        case \"thead\":\n        case \"tr\":\n          return null == parentTag;\n        case \"head\":\n          return implicitRootScope || null === parentTag;\n        case \"html\":\n          return (\n            (implicitRootScope && \"#document\" === parentTag) ||\n            null === parentTag\n          );\n        case \"body\":\n          return (\n            (implicitRootScope &&\n              (\"#document\" === parentTag || \"html\" === parentTag)) ||\n            null === parentTag\n          );\n      }\n      return !0;\n    }\n    function findInvalidAncestorForTag(tag, ancestorInfo) {\n      switch (tag) {\n        case \"address\":\n        case \"article\":\n        case \"aside\":\n        case \"blockquote\":\n        case \"center\":\n        case \"details\":\n        case \"dialog\":\n        case \"dir\":\n        case \"div\":\n        case \"dl\":\n        case \"fieldset\":\n        case \"figcaption\":\n        case \"figure\":\n        case \"footer\":\n        case \"header\":\n        case \"hgroup\":\n        case \"main\":\n        case \"menu\":\n        case \"nav\":\n        case \"ol\":\n        case \"p\":\n        case \"section\":\n        case \"summary\":\n        case \"ul\":\n        case \"pre\":\n        case \"listing\":\n        case \"table\":\n        case \"hr\":\n        case \"xmp\":\n        case \"h1\":\n        case \"h2\":\n        case \"h3\":\n        case \"h4\":\n        case \"h5\":\n        case \"h6\":\n          return ancestorInfo.pTagInButtonScope;\n        case \"form\":\n          return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n        case \"li\":\n          return ancestorInfo.listItemTagAutoclosing;\n        case \"dd\":\n        case \"dt\":\n          return ancestorInfo.dlItemTagAutoclosing;\n        case \"button\":\n          return ancestorInfo.buttonTagInScope;\n        case \"a\":\n          return ancestorInfo.aTagInScope;\n        case \"nobr\":\n          return ancestorInfo.nobrTagInScope;\n      }\n      return null;\n    }\n    function findAncestor(parent, tagName) {\n      for (; parent; ) {\n        switch (parent.tag) {\n          case 5:\n          case 26:\n          case 27:\n            if (parent.type === tagName) return parent;\n        }\n        parent = parent.return;\n      }\n      return null;\n    }\n    function validateDOMNesting(childTag, ancestorInfo) {\n      ancestorInfo = ancestorInfo || emptyAncestorInfoDev;\n      var parentInfo = ancestorInfo.current;\n      ancestorInfo = (parentInfo = isTagValidWithParent(\n        childTag,\n        parentInfo && parentInfo.tag,\n        ancestorInfo.implicitRootScope\n      )\n        ? null\n        : parentInfo)\n        ? null\n        : findInvalidAncestorForTag(childTag, ancestorInfo);\n      ancestorInfo = parentInfo || ancestorInfo;\n      if (!ancestorInfo) return !0;\n      var ancestorTag = ancestorInfo.tag;\n      ancestorInfo = String(!!parentInfo) + \"|\" + childTag + \"|\" + ancestorTag;\n      if (didWarn[ancestorInfo]) return !1;\n      didWarn[ancestorInfo] = !0;\n      var ancestor = (ancestorInfo = current)\n          ? findAncestor(ancestorInfo.return, ancestorTag)\n          : null,\n        ancestorDescription =\n          null !== ancestorInfo && null !== ancestor\n            ? describeAncestors(ancestor, ancestorInfo, null)\n            : \"\",\n        tagDisplayName = \"<\" + childTag + \">\";\n      parentInfo\n        ? ((parentInfo = \"\"),\n          \"table\" === ancestorTag &&\n            \"tr\" === childTag &&\n            (parentInfo +=\n              \" Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.\"),\n          console.error(\n            \"In HTML, %s cannot be a child of <%s>.%s\\nThis will cause a hydration error.%s\",\n            tagDisplayName,\n            ancestorTag,\n            parentInfo,\n            ancestorDescription\n          ))\n        : console.error(\n            \"In HTML, %s cannot be a descendant of <%s>.\\nThis will cause a hydration error.%s\",\n            tagDisplayName,\n            ancestorTag,\n            ancestorDescription\n          );\n      ancestorInfo &&\n        ((childTag = ancestorInfo.return),\n        null === ancestor ||\n          null === childTag ||\n          (ancestor === childTag &&\n            childTag._debugOwner === ancestorInfo._debugOwner) ||\n          runWithFiberInDEV(ancestor, function () {\n            console.error(\n              \"<%s> cannot contain a nested %s.\\nSee this log for the ancestor stack trace.\",\n              ancestorTag,\n              tagDisplayName\n            );\n          }));\n      return !1;\n    }\n    function validateTextNesting(childText, parentTag, implicitRootScope) {\n      if (implicitRootScope || isTagValidWithParent(\"#text\", parentTag, !1))\n        return !0;\n      implicitRootScope = \"#text|\" + parentTag;\n      if (didWarn[implicitRootScope]) return !1;\n      didWarn[implicitRootScope] = !0;\n      var ancestor = (implicitRootScope = current)\n        ? findAncestor(implicitRootScope, parentTag)\n        : null;\n      implicitRootScope =\n        null !== implicitRootScope && null !== ancestor\n          ? describeAncestors(\n              ancestor,\n              implicitRootScope,\n              6 !== implicitRootScope.tag ? { children: null } : null\n            )\n          : \"\";\n      /\\S/.test(childText)\n        ? console.error(\n            \"In HTML, text nodes cannot be a child of <%s>.\\nThis will cause a hydration error.%s\",\n            parentTag,\n            implicitRootScope\n          )\n        : console.error(\n            \"In HTML, whitespace text nodes cannot be a child of <%s>. Make sure you don't have any extra whitespace between tags on each line of your source code.\\nThis will cause a hydration error.%s\",\n            parentTag,\n            implicitRootScope\n          );\n      return !1;\n    }\n    function setTextContent(node, text) {\n      if (text) {\n        var firstChild = node.firstChild;\n        if (\n          firstChild &&\n          firstChild === node.lastChild &&\n          3 === firstChild.nodeType\n        ) {\n          firstChild.nodeValue = text;\n          return;\n        }\n      }\n      node.textContent = text;\n    }\n    function camelize(string) {\n      return string.replace(hyphenPattern, function (_, character) {\n        return character.toUpperCase();\n      });\n    }\n    function setValueForStyle(style, styleName, value) {\n      var isCustomProperty = 0 === styleName.indexOf(\"--\");\n      isCustomProperty ||\n        (-1 < styleName.indexOf(\"-\")\n          ? (warnedStyleNames.hasOwnProperty(styleName) &&\n              warnedStyleNames[styleName]) ||\n            ((warnedStyleNames[styleName] = !0),\n            console.error(\n              \"Unsupported style property %s. Did you mean %s?\",\n              styleName,\n              camelize(styleName.replace(msPattern, \"ms-\"))\n            ))\n          : badVendoredStyleNamePattern.test(styleName)\n            ? (warnedStyleNames.hasOwnProperty(styleName) &&\n                warnedStyleNames[styleName]) ||\n              ((warnedStyleNames[styleName] = !0),\n              console.error(\n                \"Unsupported vendor-prefixed style property %s. Did you mean %s?\",\n                styleName,\n                styleName.charAt(0).toUpperCase() + styleName.slice(1)\n              ))\n            : !badStyleValueWithSemicolonPattern.test(value) ||\n              (warnedStyleValues.hasOwnProperty(value) &&\n                warnedStyleValues[value]) ||\n              ((warnedStyleValues[value] = !0),\n              console.error(\n                'Style property values shouldn\\'t contain a semicolon. Try \"%s: %s\" instead.',\n                styleName,\n                value.replace(badStyleValueWithSemicolonPattern, \"\")\n              )),\n        \"number\" === typeof value &&\n          (isNaN(value)\n            ? warnedForNaNValue ||\n              ((warnedForNaNValue = !0),\n              console.error(\n                \"`NaN` is an invalid value for the `%s` css style property.\",\n                styleName\n              ))\n            : isFinite(value) ||\n              warnedForInfinityValue ||\n              ((warnedForInfinityValue = !0),\n              console.error(\n                \"`Infinity` is an invalid value for the `%s` css style property.\",\n                styleName\n              ))));\n      null == value || \"boolean\" === typeof value || \"\" === value\n        ? isCustomProperty\n          ? style.setProperty(styleName, \"\")\n          : \"float\" === styleName\n            ? (style.cssFloat = \"\")\n            : (style[styleName] = \"\")\n        : isCustomProperty\n          ? style.setProperty(styleName, value)\n          : \"number\" !== typeof value ||\n              0 === value ||\n              unitlessNumbers.has(styleName)\n            ? \"float\" === styleName\n              ? (style.cssFloat = value)\n              : (checkCSSPropertyStringCoercion(value, styleName),\n                (style[styleName] = (\"\" + value).trim()))\n            : (style[styleName] = value + \"px\");\n    }\n    function setValueForStyles(node, styles, prevStyles) {\n      if (null != styles && \"object\" !== typeof styles)\n        throw Error(\n          \"The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.\"\n        );\n      styles && Object.freeze(styles);\n      node = node.style;\n      if (null != prevStyles) {\n        if (styles) {\n          var expandedUpdates = {};\n          if (prevStyles)\n            for (var key in prevStyles)\n              if (prevStyles.hasOwnProperty(key) && !styles.hasOwnProperty(key))\n                for (\n                  var longhands = shorthandToLonghand[key] || [key], i = 0;\n                  i < longhands.length;\n                  i++\n                )\n                  expandedUpdates[longhands[i]] = key;\n          for (var _key in styles)\n            if (\n              styles.hasOwnProperty(_key) &&\n              (!prevStyles || prevStyles[_key] !== styles[_key])\n            )\n              for (\n                key = shorthandToLonghand[_key] || [_key], longhands = 0;\n                longhands < key.length;\n                longhands++\n              )\n                expandedUpdates[key[longhands]] = _key;\n          _key = {};\n          for (var key$jscomp$0 in styles)\n            for (\n              key = shorthandToLonghand[key$jscomp$0] || [key$jscomp$0],\n                longhands = 0;\n              longhands < key.length;\n              longhands++\n            )\n              _key[key[longhands]] = key$jscomp$0;\n          key$jscomp$0 = {};\n          for (var _key2 in expandedUpdates)\n            if (\n              ((key = expandedUpdates[_key2]),\n              (longhands = _key[_key2]) &&\n                key !== longhands &&\n                ((i = key + \",\" + longhands), !key$jscomp$0[i]))\n            ) {\n              key$jscomp$0[i] = !0;\n              i = console;\n              var value = styles[key];\n              i.error.call(\n                i,\n                \"%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.\",\n                null == value || \"boolean\" === typeof value || \"\" === value\n                  ? \"Removing\"\n                  : \"Updating\",\n                key,\n                longhands\n              );\n            }\n        }\n        for (var styleName in prevStyles)\n          !prevStyles.hasOwnProperty(styleName) ||\n            (null != styles && styles.hasOwnProperty(styleName)) ||\n            (0 === styleName.indexOf(\"--\")\n              ? node.setProperty(styleName, \"\")\n              : \"float\" === styleName\n                ? (node.cssFloat = \"\")\n                : (node[styleName] = \"\"));\n        for (var _styleName in styles)\n          (_key2 = styles[_styleName]),\n            styles.hasOwnProperty(_styleName) &&\n              prevStyles[_styleName] !== _key2 &&\n              setValueForStyle(node, _styleName, _key2);\n      } else\n        for (expandedUpdates in styles)\n          styles.hasOwnProperty(expandedUpdates) &&\n            setValueForStyle(node, expandedUpdates, styles[expandedUpdates]);\n    }\n    function isCustomElement(tagName) {\n      if (-1 === tagName.indexOf(\"-\")) return !1;\n      switch (tagName) {\n        case \"annotation-xml\":\n        case \"color-profile\":\n        case \"font-face\":\n        case \"font-face-src\":\n        case \"font-face-uri\":\n        case \"font-face-format\":\n        case \"font-face-name\":\n        case \"missing-glyph\":\n          return !1;\n        default:\n          return !0;\n      }\n    }\n    function getAttributeAlias(name) {\n      return aliases.get(name) || name;\n    }\n    function validateProperty$1(tagName, name) {\n      if (\n        hasOwnProperty.call(warnedProperties$1, name) &&\n        warnedProperties$1[name]\n      )\n        return !0;\n      if (rARIACamel$1.test(name)) {\n        tagName = \"aria-\" + name.slice(4).toLowerCase();\n        tagName = ariaProperties.hasOwnProperty(tagName) ? tagName : null;\n        if (null == tagName)\n          return (\n            console.error(\n              \"Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.\",\n              name\n            ),\n            (warnedProperties$1[name] = !0)\n          );\n        if (name !== tagName)\n          return (\n            console.error(\n              \"Invalid ARIA attribute `%s`. Did you mean `%s`?\",\n              name,\n              tagName\n            ),\n            (warnedProperties$1[name] = !0)\n          );\n      }\n      if (rARIA$1.test(name)) {\n        tagName = name.toLowerCase();\n        tagName = ariaProperties.hasOwnProperty(tagName) ? tagName : null;\n        if (null == tagName) return (warnedProperties$1[name] = !0), !1;\n        name !== tagName &&\n          (console.error(\n            \"Unknown ARIA attribute `%s`. Did you mean `%s`?\",\n            name,\n            tagName\n          ),\n          (warnedProperties$1[name] = !0));\n      }\n      return !0;\n    }\n    function validateProperties$2(type, props) {\n      var invalidProps = [],\n        key;\n      for (key in props)\n        validateProperty$1(type, key) || invalidProps.push(key);\n      props = invalidProps\n        .map(function (prop) {\n          return \"`\" + prop + \"`\";\n        })\n        .join(\", \");\n      1 === invalidProps.length\n        ? console.error(\n            \"Invalid aria prop %s on <%s> tag. For details, see https://react.dev/link/invalid-aria-props\",\n            props,\n            type\n          )\n        : 1 < invalidProps.length &&\n          console.error(\n            \"Invalid aria props %s on <%s> tag. For details, see https://react.dev/link/invalid-aria-props\",\n            props,\n            type\n          );\n    }\n    function validateProperty(tagName, name, value, eventRegistry) {\n      if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name])\n        return !0;\n      var lowerCasedName = name.toLowerCase();\n      if (\"onfocusin\" === lowerCasedName || \"onfocusout\" === lowerCasedName)\n        return (\n          console.error(\n            \"React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.\"\n          ),\n          (warnedProperties[name] = !0)\n        );\n      if (\n        \"function\" === typeof value &&\n        ((\"form\" === tagName && \"action\" === name) ||\n          (\"input\" === tagName && \"formAction\" === name) ||\n          (\"button\" === tagName && \"formAction\" === name))\n      )\n        return !0;\n      if (null != eventRegistry) {\n        tagName = eventRegistry.possibleRegistrationNames;\n        if (eventRegistry.registrationNameDependencies.hasOwnProperty(name))\n          return !0;\n        eventRegistry = tagName.hasOwnProperty(lowerCasedName)\n          ? tagName[lowerCasedName]\n          : null;\n        if (null != eventRegistry)\n          return (\n            console.error(\n              \"Invalid event handler property `%s`. Did you mean `%s`?\",\n              name,\n              eventRegistry\n            ),\n            (warnedProperties[name] = !0)\n          );\n        if (EVENT_NAME_REGEX.test(name))\n          return (\n            console.error(\n              \"Unknown event handler property `%s`. It will be ignored.\",\n              name\n            ),\n            (warnedProperties[name] = !0)\n          );\n      } else if (EVENT_NAME_REGEX.test(name))\n        return (\n          INVALID_EVENT_NAME_REGEX.test(name) &&\n            console.error(\n              \"Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.\",\n              name\n            ),\n          (warnedProperties[name] = !0)\n        );\n      if (rARIA.test(name) || rARIACamel.test(name)) return !0;\n      if (\"innerhtml\" === lowerCasedName)\n        return (\n          console.error(\n            \"Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.\"\n          ),\n          (warnedProperties[name] = !0)\n        );\n      if (\"aria\" === lowerCasedName)\n        return (\n          console.error(\n            \"The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.\"\n          ),\n          (warnedProperties[name] = !0)\n        );\n      if (\n        \"is\" === lowerCasedName &&\n        null !== value &&\n        void 0 !== value &&\n        \"string\" !== typeof value\n      )\n        return (\n          console.error(\n            \"Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.\",\n            typeof value\n          ),\n          (warnedProperties[name] = !0)\n        );\n      if (\"number\" === typeof value && isNaN(value))\n        return (\n          console.error(\n            \"Received NaN for the `%s` attribute. If this is expected, cast the value to a string.\",\n            name\n          ),\n          (warnedProperties[name] = !0)\n        );\n      if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n        if (\n          ((lowerCasedName = possibleStandardNames[lowerCasedName]),\n          lowerCasedName !== name)\n        )\n          return (\n            console.error(\n              \"Invalid DOM property `%s`. Did you mean `%s`?\",\n              name,\n              lowerCasedName\n            ),\n            (warnedProperties[name] = !0)\n          );\n      } else if (name !== lowerCasedName)\n        return (\n          console.error(\n            \"React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.\",\n            name,\n            lowerCasedName\n          ),\n          (warnedProperties[name] = !0)\n        );\n      switch (name) {\n        case \"dangerouslySetInnerHTML\":\n        case \"children\":\n        case \"style\":\n        case \"suppressContentEditableWarning\":\n        case \"suppressHydrationWarning\":\n        case \"defaultValue\":\n        case \"defaultChecked\":\n        case \"innerHTML\":\n        case \"ref\":\n          return !0;\n        case \"innerText\":\n        case \"textContent\":\n          return !0;\n      }\n      switch (typeof value) {\n        case \"boolean\":\n          switch (name) {\n            case \"autoFocus\":\n            case \"checked\":\n            case \"multiple\":\n            case \"muted\":\n            case \"selected\":\n            case \"contentEditable\":\n            case \"spellCheck\":\n            case \"draggable\":\n            case \"value\":\n            case \"autoReverse\":\n            case \"externalResourcesRequired\":\n            case \"focusable\":\n            case \"preserveAlpha\":\n            case \"allowFullScreen\":\n            case \"async\":\n            case \"autoPlay\":\n            case \"controls\":\n            case \"default\":\n            case \"defer\":\n            case \"disabled\":\n            case \"disablePictureInPicture\":\n            case \"disableRemotePlayback\":\n            case \"formNoValidate\":\n            case \"hidden\":\n            case \"loop\":\n            case \"noModule\":\n            case \"noValidate\":\n            case \"open\":\n            case \"playsInline\":\n            case \"readOnly\":\n            case \"required\":\n            case \"reversed\":\n            case \"scoped\":\n            case \"seamless\":\n            case \"itemScope\":\n            case \"capture\":\n            case \"download\":\n            case \"inert\":\n              return !0;\n            default:\n              lowerCasedName = name.toLowerCase().slice(0, 5);\n              if (\"data-\" === lowerCasedName || \"aria-\" === lowerCasedName)\n                return !0;\n              value\n                ? console.error(\n                    'Received `%s` for a non-boolean attribute `%s`.\\n\\nIf you want to write it to the DOM, pass a string instead: %s=\"%s\" or %s={value.toString()}.',\n                    value,\n                    name,\n                    name,\n                    value,\n                    name\n                  )\n                : console.error(\n                    'Received `%s` for a non-boolean attribute `%s`.\\n\\nIf you want to write it to the DOM, pass a string instead: %s=\"%s\" or %s={value.toString()}.\\n\\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.',\n                    value,\n                    name,\n                    name,\n                    value,\n                    name,\n                    name,\n                    name\n                  );\n              return (warnedProperties[name] = !0);\n          }\n        case \"function\":\n        case \"symbol\":\n          return (warnedProperties[name] = !0), !1;\n        case \"string\":\n          if (\"false\" === value || \"true\" === value) {\n            switch (name) {\n              case \"checked\":\n              case \"selected\":\n              case \"multiple\":\n              case \"muted\":\n              case \"allowFullScreen\":\n              case \"async\":\n              case \"autoPlay\":\n              case \"controls\":\n              case \"default\":\n              case \"defer\":\n              case \"disabled\":\n              case \"disablePictureInPicture\":\n              case \"disableRemotePlayback\":\n              case \"formNoValidate\":\n              case \"hidden\":\n              case \"loop\":\n              case \"noModule\":\n              case \"noValidate\":\n              case \"open\":\n              case \"playsInline\":\n              case \"readOnly\":\n              case \"required\":\n              case \"reversed\":\n              case \"scoped\":\n              case \"seamless\":\n              case \"itemScope\":\n              case \"inert\":\n                break;\n              default:\n                return !0;\n            }\n            console.error(\n              \"Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?\",\n              value,\n              name,\n              \"false\" === value\n                ? \"The browser will interpret it as a truthy value.\"\n                : 'Although this works, it will not work as expected if you pass the string \"false\".',\n              name,\n              value\n            );\n            warnedProperties[name] = !0;\n          }\n      }\n      return !0;\n    }\n    function warnUnknownProperties(type, props, eventRegistry) {\n      var unknownProps = [],\n        key;\n      for (key in props)\n        validateProperty(type, key, props[key], eventRegistry) ||\n          unknownProps.push(key);\n      props = unknownProps\n        .map(function (prop) {\n          return \"`\" + prop + \"`\";\n        })\n        .join(\", \");\n      1 === unknownProps.length\n        ? console.error(\n            \"Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://react.dev/link/attribute-behavior \",\n            props,\n            type\n          )\n        : 1 < unknownProps.length &&\n          console.error(\n            \"Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://react.dev/link/attribute-behavior \",\n            props,\n            type\n          );\n    }\n    function sanitizeURL(url) {\n      return isJavaScriptProtocol.test(\"\" + url)\n        ? \"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')\"\n        : url;\n    }\n    function getEventTarget(nativeEvent) {\n      nativeEvent = nativeEvent.target || nativeEvent.srcElement || window;\n      nativeEvent.correspondingUseElement &&\n        (nativeEvent = nativeEvent.correspondingUseElement);\n      return 3 === nativeEvent.nodeType ? nativeEvent.parentNode : nativeEvent;\n    }\n    function restoreStateOfTarget(target) {\n      var internalInstance = getInstanceFromNode(target);\n      if (internalInstance && (target = internalInstance.stateNode)) {\n        var props = target[internalPropsKey] || null;\n        a: switch (\n          ((target = internalInstance.stateNode), internalInstance.type)\n        ) {\n          case \"input\":\n            updateInput(\n              target,\n              props.value,\n              props.defaultValue,\n              props.defaultValue,\n              props.checked,\n              props.defaultChecked,\n              props.type,\n              props.name\n            );\n            internalInstance = props.name;\n            if (\"radio\" === props.type && null != internalInstance) {\n              for (props = target; props.parentNode; ) props = props.parentNode;\n              checkAttributeStringCoercion(internalInstance, \"name\");\n              props = props.querySelectorAll(\n                'input[name=\"' +\n                  escapeSelectorAttributeValueInsideDoubleQuotes(\n                    \"\" + internalInstance\n                  ) +\n                  '\"][type=\"radio\"]'\n              );\n              for (\n                internalInstance = 0;\n                internalInstance < props.length;\n                internalInstance++\n              ) {\n                var otherNode = props[internalInstance];\n                if (otherNode !== target && otherNode.form === target.form) {\n                  var otherProps = otherNode[internalPropsKey] || null;\n                  if (!otherProps)\n                    throw Error(\n                      \"ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.\"\n                    );\n                  updateInput(\n                    otherNode,\n                    otherProps.value,\n                    otherProps.defaultValue,\n                    otherProps.defaultValue,\n                    otherProps.checked,\n                    otherProps.defaultChecked,\n                    otherProps.type,\n                    otherProps.name\n                  );\n                }\n              }\n              for (\n                internalInstance = 0;\n                internalInstance < props.length;\n                internalInstance++\n              )\n                (otherNode = props[internalInstance]),\n                  otherNode.form === target.form &&\n                    updateValueIfChanged(otherNode);\n            }\n            break a;\n          case \"textarea\":\n            updateTextarea(target, props.value, props.defaultValue);\n            break a;\n          case \"select\":\n            (internalInstance = props.value),\n              null != internalInstance &&\n                updateOptions(target, !!props.multiple, internalInstance, !1);\n        }\n      }\n    }\n    function batchedUpdates$1(fn, a, b) {\n      if (isInsideEventHandler) return fn(a, b);\n      isInsideEventHandler = !0;\n      try {\n        var JSCompiler_inline_result = fn(a);\n        return JSCompiler_inline_result;\n      } finally {\n        if (\n          ((isInsideEventHandler = !1),\n          null !== restoreTarget || null !== restoreQueue)\n        )\n          if (\n            (flushSyncWork$1(),\n            restoreTarget &&\n              ((a = restoreTarget),\n              (fn = restoreQueue),\n              (restoreQueue = restoreTarget = null),\n              restoreStateOfTarget(a),\n              fn))\n          )\n            for (a = 0; a < fn.length; a++) restoreStateOfTarget(fn[a]);\n      }\n    }\n    function getListener(inst, registrationName) {\n      var stateNode = inst.stateNode;\n      if (null === stateNode) return null;\n      var props = stateNode[internalPropsKey] || null;\n      if (null === props) return null;\n      stateNode = props[registrationName];\n      a: switch (registrationName) {\n        case \"onClick\":\n        case \"onClickCapture\":\n        case \"onDoubleClick\":\n        case \"onDoubleClickCapture\":\n        case \"onMouseDown\":\n        case \"onMouseDownCapture\":\n        case \"onMouseMove\":\n        case \"onMouseMoveCapture\":\n        case \"onMouseUp\":\n        case \"onMouseUpCapture\":\n        case \"onMouseEnter\":\n          (props = !props.disabled) ||\n            ((inst = inst.type),\n            (props = !(\n              \"button\" === inst ||\n              \"input\" === inst ||\n              \"select\" === inst ||\n              \"textarea\" === inst\n            )));\n          inst = !props;\n          break a;\n        default:\n          inst = !1;\n      }\n      if (inst) return null;\n      if (stateNode && \"function\" !== typeof stateNode)\n        throw Error(\n          \"Expected `\" +\n            registrationName +\n            \"` listener to be a function, instead got a value of `\" +\n            typeof stateNode +\n            \"` type.\"\n        );\n      return stateNode;\n    }\n    function getData() {\n      if (fallbackText) return fallbackText;\n      var start,\n        startValue = startText,\n        startLength = startValue.length,\n        end,\n        endValue = \"value\" in root ? root.value : root.textContent,\n        endLength = endValue.length;\n      for (\n        start = 0;\n        start < startLength && startValue[start] === endValue[start];\n        start++\n      );\n      var minEnd = startLength - start;\n      for (\n        end = 1;\n        end <= minEnd &&\n        startValue[startLength - end] === endValue[endLength - end];\n        end++\n      );\n      return (fallbackText = endValue.slice(start, 1 < end ? 1 - end : void 0));\n    }\n    function getEventCharCode(nativeEvent) {\n      var keyCode = nativeEvent.keyCode;\n      \"charCode\" in nativeEvent\n        ? ((nativeEvent = nativeEvent.charCode),\n          0 === nativeEvent && 13 === keyCode && (nativeEvent = 13))\n        : (nativeEvent = keyCode);\n      10 === nativeEvent && (nativeEvent = 13);\n      return 32 <= nativeEvent || 13 === nativeEvent ? nativeEvent : 0;\n    }\n    function functionThatReturnsTrue() {\n      return !0;\n    }\n    function functionThatReturnsFalse() {\n      return !1;\n    }\n    function createSyntheticEvent(Interface) {\n      function SyntheticBaseEvent(\n        reactName,\n        reactEventType,\n        targetInst,\n        nativeEvent,\n        nativeEventTarget\n      ) {\n        this._reactName = reactName;\n        this._targetInst = targetInst;\n        this.type = reactEventType;\n        this.nativeEvent = nativeEvent;\n        this.target = nativeEventTarget;\n        this.currentTarget = null;\n        for (var propName in Interface)\n          Interface.hasOwnProperty(propName) &&\n            ((reactName = Interface[propName]),\n            (this[propName] = reactName\n              ? reactName(nativeEvent)\n              : nativeEvent[propName]));\n        this.isDefaultPrevented = (\n          null != nativeEvent.defaultPrevented\n            ? nativeEvent.defaultPrevented\n            : !1 === nativeEvent.returnValue\n        )\n          ? functionThatReturnsTrue\n          : functionThatReturnsFalse;\n        this.isPropagationStopped = functionThatReturnsFalse;\n        return this;\n      }\n      assign(SyntheticBaseEvent.prototype, {\n        preventDefault: function () {\n          this.defaultPrevented = !0;\n          var event = this.nativeEvent;\n          event &&\n            (event.preventDefault\n              ? event.preventDefault()\n              : \"unknown\" !== typeof event.returnValue &&\n                (event.returnValue = !1),\n            (this.isDefaultPrevented = functionThatReturnsTrue));\n        },\n        stopPropagation: function () {\n          var event = this.nativeEvent;\n          event &&\n            (event.stopPropagation\n              ? event.stopPropagation()\n              : \"unknown\" !== typeof event.cancelBubble &&\n                (event.cancelBubble = !0),\n            (this.isPropagationStopped = functionThatReturnsTrue));\n        },\n        persist: function () {},\n        isPersistent: functionThatReturnsTrue\n      });\n      return SyntheticBaseEvent;\n    }\n    function modifierStateGetter(keyArg) {\n      var nativeEvent = this.nativeEvent;\n      return nativeEvent.getModifierState\n        ? nativeEvent.getModifierState(keyArg)\n        : (keyArg = modifierKeyToProp[keyArg])\n          ? !!nativeEvent[keyArg]\n          : !1;\n    }\n    function getEventModifierState() {\n      return modifierStateGetter;\n    }\n    function isFallbackCompositionEnd(domEventName, nativeEvent) {\n      switch (domEventName) {\n        case \"keyup\":\n          return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);\n        case \"keydown\":\n          return nativeEvent.keyCode !== START_KEYCODE;\n        case \"keypress\":\n        case \"mousedown\":\n        case \"focusout\":\n          return !0;\n        default:\n          return !1;\n      }\n    }\n    function getDataFromCustomEvent(nativeEvent) {\n      nativeEvent = nativeEvent.detail;\n      return \"object\" === typeof nativeEvent && \"data\" in nativeEvent\n        ? nativeEvent.data\n        : null;\n    }\n    function getNativeBeforeInputChars(domEventName, nativeEvent) {\n      switch (domEventName) {\n        case \"compositionend\":\n          return getDataFromCustomEvent(nativeEvent);\n        case \"keypress\":\n          if (nativeEvent.which !== SPACEBAR_CODE) return null;\n          hasSpaceKeypress = !0;\n          return SPACEBAR_CHAR;\n        case \"textInput\":\n          return (\n            (domEventName = nativeEvent.data),\n            domEventName === SPACEBAR_CHAR && hasSpaceKeypress\n              ? null\n              : domEventName\n          );\n        default:\n          return null;\n      }\n    }\n    function getFallbackBeforeInputChars(domEventName, nativeEvent) {\n      if (isComposing)\n        return \"compositionend\" === domEventName ||\n          (!canUseCompositionEvent &&\n            isFallbackCompositionEnd(domEventName, nativeEvent))\n          ? ((domEventName = getData()),\n            (fallbackText = startText = root = null),\n            (isComposing = !1),\n            domEventName)\n          : null;\n      switch (domEventName) {\n        case \"paste\":\n          return null;\n        case \"keypress\":\n          if (\n            !(\n              nativeEvent.ctrlKey ||\n              nativeEvent.altKey ||\n              nativeEvent.metaKey\n            ) ||\n            (nativeEvent.ctrlKey && nativeEvent.altKey)\n          ) {\n            if (nativeEvent.char && 1 < nativeEvent.char.length)\n              return nativeEvent.char;\n            if (nativeEvent.which)\n              return String.fromCharCode(nativeEvent.which);\n          }\n          return null;\n        case \"compositionend\":\n          return useFallbackCompositionData && \"ko\" !== nativeEvent.locale\n            ? null\n            : nativeEvent.data;\n        default:\n          return null;\n      }\n    }\n    function isTextInputElement(elem) {\n      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n      return \"input\" === nodeName\n        ? !!supportedInputTypes[elem.type]\n        : \"textarea\" === nodeName\n          ? !0\n          : !1;\n    }\n    function isEventSupported(eventNameSuffix) {\n      if (!canUseDOM) return !1;\n      eventNameSuffix = \"on\" + eventNameSuffix;\n      var isSupported = eventNameSuffix in document;\n      isSupported ||\n        ((isSupported = document.createElement(\"div\")),\n        isSupported.setAttribute(eventNameSuffix, \"return;\"),\n        (isSupported = \"function\" === typeof isSupported[eventNameSuffix]));\n      return isSupported;\n    }\n    function createAndAccumulateChangeEvent(\n      dispatchQueue,\n      inst,\n      nativeEvent,\n      target\n    ) {\n      restoreTarget\n        ? restoreQueue\n          ? restoreQueue.push(target)\n          : (restoreQueue = [target])\n        : (restoreTarget = target);\n      inst = accumulateTwoPhaseListeners(inst, \"onChange\");\n      0 < inst.length &&\n        ((nativeEvent = new SyntheticEvent(\n          \"onChange\",\n          \"change\",\n          null,\n          nativeEvent,\n          target\n        )),\n        dispatchQueue.push({ event: nativeEvent, listeners: inst }));\n    }\n    function runEventInBatch(dispatchQueue) {\n      processDispatchQueue(dispatchQueue, 0);\n    }\n    function getInstIfValueChanged(targetInst) {\n      var targetNode = getNodeFromInstance(targetInst);\n      if (updateValueIfChanged(targetNode)) return targetInst;\n    }\n    function getTargetInstForChangeEvent(domEventName, targetInst) {\n      if (\"change\" === domEventName) return targetInst;\n    }\n    function stopWatchingForValueChange() {\n      activeElement$1 &&\n        (activeElement$1.detachEvent(\"onpropertychange\", handlePropertyChange),\n        (activeElementInst$1 = activeElement$1 = null));\n    }\n    function handlePropertyChange(nativeEvent) {\n      if (\n        \"value\" === nativeEvent.propertyName &&\n        getInstIfValueChanged(activeElementInst$1)\n      ) {\n        var dispatchQueue = [];\n        createAndAccumulateChangeEvent(\n          dispatchQueue,\n          activeElementInst$1,\n          nativeEvent,\n          getEventTarget(nativeEvent)\n        );\n        batchedUpdates$1(runEventInBatch, dispatchQueue);\n      }\n    }\n    function handleEventsForInputEventPolyfill(\n      domEventName,\n      target,\n      targetInst\n    ) {\n      \"focusin\" === domEventName\n        ? (stopWatchingForValueChange(),\n          (activeElement$1 = target),\n          (activeElementInst$1 = targetInst),\n          activeElement$1.attachEvent(\"onpropertychange\", handlePropertyChange))\n        : \"focusout\" === domEventName && stopWatchingForValueChange();\n    }\n    function getTargetInstForInputEventPolyfill(domEventName) {\n      if (\n        \"selectionchange\" === domEventName ||\n        \"keyup\" === domEventName ||\n        \"keydown\" === domEventName\n      )\n        return getInstIfValueChanged(activeElementInst$1);\n    }\n    function getTargetInstForClickEvent(domEventName, targetInst) {\n      if (\"click\" === domEventName) return getInstIfValueChanged(targetInst);\n    }\n    function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {\n      if (\"input\" === domEventName || \"change\" === domEventName)\n        return getInstIfValueChanged(targetInst);\n    }\n    function is(x, y) {\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n    }\n    function shallowEqual(objA, objB) {\n      if (objectIs(objA, objB)) return !0;\n      if (\n        \"object\" !== typeof objA ||\n        null === objA ||\n        \"object\" !== typeof objB ||\n        null === objB\n      )\n        return !1;\n      var keysA = Object.keys(objA),\n        keysB = Object.keys(objB);\n      if (keysA.length !== keysB.length) return !1;\n      for (keysB = 0; keysB < keysA.length; keysB++) {\n        var currentKey = keysA[keysB];\n        if (\n          !hasOwnProperty.call(objB, currentKey) ||\n          !objectIs(objA[currentKey], objB[currentKey])\n        )\n          return !1;\n      }\n      return !0;\n    }\n    function getLeafNode(node) {\n      for (; node && node.firstChild; ) node = node.firstChild;\n      return node;\n    }\n    function getNodeForCharacterOffset(root, offset) {\n      var node = getLeafNode(root);\n      root = 0;\n      for (var nodeEnd; node; ) {\n        if (3 === node.nodeType) {\n          nodeEnd = root + node.textContent.length;\n          if (root <= offset && nodeEnd >= offset)\n            return { node: node, offset: offset - root };\n          root = nodeEnd;\n        }\n        a: {\n          for (; node; ) {\n            if (node.nextSibling) {\n              node = node.nextSibling;\n              break a;\n            }\n            node = node.parentNode;\n          }\n          node = void 0;\n        }\n        node = getLeafNode(node);\n      }\n    }\n    function containsNode(outerNode, innerNode) {\n      return outerNode && innerNode\n        ? outerNode === innerNode\n          ? !0\n          : outerNode && 3 === outerNode.nodeType\n            ? !1\n            : innerNode && 3 === innerNode.nodeType\n              ? containsNode(outerNode, innerNode.parentNode)\n              : \"contains\" in outerNode\n                ? outerNode.contains(innerNode)\n                : outerNode.compareDocumentPosition\n                  ? !!(outerNode.compareDocumentPosition(innerNode) & 16)\n                  : !1\n        : !1;\n    }\n    function getActiveElementDeep(containerInfo) {\n      containerInfo =\n        null != containerInfo &&\n        null != containerInfo.ownerDocument &&\n        null != containerInfo.ownerDocument.defaultView\n          ? containerInfo.ownerDocument.defaultView\n          : window;\n      for (\n        var element = getActiveElement(containerInfo.document);\n        element instanceof containerInfo.HTMLIFrameElement;\n\n      ) {\n        try {\n          var JSCompiler_inline_result =\n            \"string\" === typeof element.contentWindow.location.href;\n        } catch (err) {\n          JSCompiler_inline_result = !1;\n        }\n        if (JSCompiler_inline_result) containerInfo = element.contentWindow;\n        else break;\n        element = getActiveElement(containerInfo.document);\n      }\n      return element;\n    }\n    function hasSelectionCapabilities(elem) {\n      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n      return (\n        nodeName &&\n        ((\"input\" === nodeName &&\n          (\"text\" === elem.type ||\n            \"search\" === elem.type ||\n            \"tel\" === elem.type ||\n            \"url\" === elem.type ||\n            \"password\" === elem.type)) ||\n          \"textarea\" === nodeName ||\n          \"true\" === elem.contentEditable)\n      );\n    }\n    function constructSelectEvent(\n      dispatchQueue,\n      nativeEvent,\n      nativeEventTarget\n    ) {\n      var doc =\n        nativeEventTarget.window === nativeEventTarget\n          ? nativeEventTarget.document\n          : 9 === nativeEventTarget.nodeType\n            ? nativeEventTarget\n            : nativeEventTarget.ownerDocument;\n      mouseDown ||\n        null == activeElement ||\n        activeElement !== getActiveElement(doc) ||\n        ((doc = activeElement),\n        \"selectionStart\" in doc && hasSelectionCapabilities(doc)\n          ? (doc = { start: doc.selectionStart, end: doc.selectionEnd })\n          : ((doc = (\n              (doc.ownerDocument && doc.ownerDocument.defaultView) ||\n              window\n            ).getSelection()),\n            (doc = {\n              anchorNode: doc.anchorNode,\n              anchorOffset: doc.anchorOffset,\n              focusNode: doc.focusNode,\n              focusOffset: doc.focusOffset\n            })),\n        (lastSelection && shallowEqual(lastSelection, doc)) ||\n          ((lastSelection = doc),\n          (doc = accumulateTwoPhaseListeners(activeElementInst, \"onSelect\")),\n          0 < doc.length &&\n            ((nativeEvent = new SyntheticEvent(\n              \"onSelect\",\n              \"select\",\n              null,\n              nativeEvent,\n              nativeEventTarget\n            )),\n            dispatchQueue.push({ event: nativeEvent, listeners: doc }),\n            (nativeEvent.target = activeElement))));\n    }\n    function makePrefixMap(styleProp, eventName) {\n      var prefixes = {};\n      prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n      prefixes[\"Webkit\" + styleProp] = \"webkit\" + eventName;\n      prefixes[\"Moz\" + styleProp] = \"moz\" + eventName;\n      return prefixes;\n    }\n    function getVendorPrefixedEventName(eventName) {\n      if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];\n      if (!vendorPrefixes[eventName]) return eventName;\n      var prefixMap = vendorPrefixes[eventName],\n        styleProp;\n      for (styleProp in prefixMap)\n        if (prefixMap.hasOwnProperty(styleProp) && styleProp in style)\n          return (prefixedEventNames[eventName] = prefixMap[styleProp]);\n      return eventName;\n    }\n    function registerSimpleEvent(domEventName, reactName) {\n      topLevelEventsToReactNames.set(domEventName, reactName);\n      registerTwoPhaseEvent(reactName, [domEventName]);\n    }\n    function createCapturedValueAtFiber(value, source) {\n      if (\"object\" === typeof value && null !== value) {\n        var existing = CapturedStacks.get(value);\n        if (void 0 !== existing) return existing;\n        source = {\n          value: value,\n          source: source,\n          stack: getStackByFiberInDevAndProd(source)\n        };\n        CapturedStacks.set(value, source);\n        return source;\n      }\n      return {\n        value: value,\n        source: source,\n        stack: getStackByFiberInDevAndProd(source)\n      };\n    }\n    function finishQueueingConcurrentUpdates() {\n      for (\n        var endIndex = concurrentQueuesIndex,\n          i = (concurrentlyUpdatedLanes = concurrentQueuesIndex = 0);\n        i < endIndex;\n\n      ) {\n        var fiber = concurrentQueues[i];\n        concurrentQueues[i++] = null;\n        var queue = concurrentQueues[i];\n        concurrentQueues[i++] = null;\n        var update = concurrentQueues[i];\n        concurrentQueues[i++] = null;\n        var lane = concurrentQueues[i];\n        concurrentQueues[i++] = null;\n        if (null !== queue && null !== update) {\n          var pending = queue.pending;\n          null === pending\n            ? (update.next = update)\n            : ((update.next = pending.next), (pending.next = update));\n          queue.pending = update;\n        }\n        0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);\n      }\n    }\n    function enqueueUpdate$1(fiber, queue, update, lane) {\n      concurrentQueues[concurrentQueuesIndex++] = fiber;\n      concurrentQueues[concurrentQueuesIndex++] = queue;\n      concurrentQueues[concurrentQueuesIndex++] = update;\n      concurrentQueues[concurrentQueuesIndex++] = lane;\n      concurrentlyUpdatedLanes |= lane;\n      fiber.lanes |= lane;\n      fiber = fiber.alternate;\n      null !== fiber && (fiber.lanes |= lane);\n    }\n    function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\n      enqueueUpdate$1(fiber, queue, update, lane);\n      return getRootForUpdatedFiber(fiber);\n    }\n    function enqueueConcurrentRenderForLane(fiber, lane) {\n      enqueueUpdate$1(fiber, null, null, lane);\n      return getRootForUpdatedFiber(fiber);\n    }\n    function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {\n      sourceFiber.lanes |= lane;\n      var alternate = sourceFiber.alternate;\n      null !== alternate && (alternate.lanes |= lane);\n      for (var isHidden = !1, parent = sourceFiber.return; null !== parent; )\n        (parent.childLanes |= lane),\n          (alternate = parent.alternate),\n          null !== alternate && (alternate.childLanes |= lane),\n          22 === parent.tag &&\n            ((sourceFiber = parent.stateNode),\n            null === sourceFiber ||\n              sourceFiber._visibility & OffscreenVisible ||\n              (isHidden = !0)),\n          (sourceFiber = parent),\n          (parent = parent.return);\n      return 3 === sourceFiber.tag\n        ? ((parent = sourceFiber.stateNode),\n          isHidden &&\n            null !== update &&\n            ((isHidden = 31 - clz32(lane)),\n            (sourceFiber = parent.hiddenUpdates),\n            (alternate = sourceFiber[isHidden]),\n            null === alternate\n              ? (sourceFiber[isHidden] = [update])\n              : alternate.push(update),\n            (update.lane = lane | 536870912)),\n          parent)\n        : null;\n    }\n    function getRootForUpdatedFiber(sourceFiber) {\n      if (nestedUpdateCount > NESTED_UPDATE_LIMIT)\n        throw (\n          ((nestedPassiveUpdateCount = nestedUpdateCount = 0),\n          (rootWithPassiveNestedUpdates = rootWithNestedUpdates = null),\n          Error(\n            \"Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.\"\n          ))\n        );\n      nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT &&\n        ((nestedPassiveUpdateCount = 0),\n        (rootWithPassiveNestedUpdates = null),\n        console.error(\n          \"Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\"\n        ));\n      null === sourceFiber.alternate &&\n        0 !== (sourceFiber.flags & 4098) &&\n        warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n      for (var node = sourceFiber, parent = node.return; null !== parent; )\n        null === node.alternate &&\n          0 !== (node.flags & 4098) &&\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber),\n          (node = parent),\n          (parent = node.return);\n      return 3 === node.tag ? node.stateNode : null;\n    }\n    function resolveFunctionForHotReloading(type) {\n      if (null === resolveFamily) return type;\n      var family = resolveFamily(type);\n      return void 0 === family ? type : family.current;\n    }\n    function resolveForwardRefForHotReloading(type) {\n      if (null === resolveFamily) return type;\n      var family = resolveFamily(type);\n      return void 0 === family\n        ? null !== type &&\n          void 0 !== type &&\n          \"function\" === typeof type.render &&\n          ((family = resolveFunctionForHotReloading(type.render)),\n          type.render !== family)\n          ? ((family = { $$typeof: REACT_FORWARD_REF_TYPE, render: family }),\n            void 0 !== type.displayName &&\n              (family.displayName = type.displayName),\n            family)\n          : type\n        : family.current;\n    }\n    function isCompatibleFamilyForHotReloading(fiber, element) {\n      if (null === resolveFamily) return !1;\n      var prevType = fiber.elementType;\n      element = element.type;\n      var needsCompareFamilies = !1,\n        $$typeofNextType =\n          \"object\" === typeof element && null !== element\n            ? element.$$typeof\n            : null;\n      switch (fiber.tag) {\n        case 1:\n          \"function\" === typeof element && (needsCompareFamilies = !0);\n          break;\n        case 0:\n          \"function\" === typeof element\n            ? (needsCompareFamilies = !0)\n            : $$typeofNextType === REACT_LAZY_TYPE &&\n              (needsCompareFamilies = !0);\n          break;\n        case 11:\n          $$typeofNextType === REACT_FORWARD_REF_TYPE\n            ? (needsCompareFamilies = !0)\n            : $$typeofNextType === REACT_LAZY_TYPE &&\n              (needsCompareFamilies = !0);\n          break;\n        case 14:\n        case 15:\n          $$typeofNextType === REACT_MEMO_TYPE\n            ? (needsCompareFamilies = !0)\n            : $$typeofNextType === REACT_LAZY_TYPE &&\n              (needsCompareFamilies = !0);\n          break;\n        default:\n          return !1;\n      }\n      return needsCompareFamilies &&\n        ((fiber = resolveFamily(prevType)),\n        void 0 !== fiber && fiber === resolveFamily(element))\n        ? !0\n        : !1;\n    }\n    function markFailedErrorBoundaryForHotReloading(fiber) {\n      null !== resolveFamily &&\n        \"function\" === typeof WeakSet &&\n        (null === failedBoundaries && (failedBoundaries = new WeakSet()),\n        failedBoundaries.add(fiber));\n    }\n    function scheduleFibersWithFamiliesRecursively(\n      fiber,\n      updatedFamilies,\n      staleFamilies\n    ) {\n      var alternate = fiber.alternate,\n        child = fiber.child,\n        sibling = fiber.sibling,\n        tag = fiber.tag,\n        type = fiber.type,\n        candidateType = null;\n      switch (tag) {\n        case 0:\n        case 15:\n        case 1:\n          candidateType = type;\n          break;\n        case 11:\n          candidateType = type.render;\n      }\n      if (null === resolveFamily)\n        throw Error(\"Expected resolveFamily to be set during hot reload.\");\n      var needsRender = !1;\n      type = !1;\n      null !== candidateType &&\n        ((candidateType = resolveFamily(candidateType)),\n        void 0 !== candidateType &&\n          (staleFamilies.has(candidateType)\n            ? (type = !0)\n            : updatedFamilies.has(candidateType) &&\n              (1 === tag ? (type = !0) : (needsRender = !0))));\n      null !== failedBoundaries &&\n        (failedBoundaries.has(fiber) ||\n          (null !== alternate && failedBoundaries.has(alternate))) &&\n        (type = !0);\n      type && (fiber._debugNeedsRemount = !0);\n      if (type || needsRender)\n        (alternate = enqueueConcurrentRenderForLane(fiber, 2)),\n          null !== alternate && scheduleUpdateOnFiber(alternate, fiber, 2);\n      null === child ||\n        type ||\n        scheduleFibersWithFamiliesRecursively(\n          child,\n          updatedFamilies,\n          staleFamilies\n        );\n      null !== sibling &&\n        scheduleFibersWithFamiliesRecursively(\n          sibling,\n          updatedFamilies,\n          staleFamilies\n        );\n    }\n    function FiberNode(tag, pendingProps, key, mode) {\n      this.tag = tag;\n      this.key = key;\n      this.sibling =\n        this.child =\n        this.return =\n        this.stateNode =\n        this.type =\n        this.elementType =\n          null;\n      this.index = 0;\n      this.refCleanup = this.ref = null;\n      this.pendingProps = pendingProps;\n      this.dependencies =\n        this.memoizedState =\n        this.updateQueue =\n        this.memoizedProps =\n          null;\n      this.mode = mode;\n      this.subtreeFlags = this.flags = 0;\n      this.deletions = null;\n      this.childLanes = this.lanes = 0;\n      this.alternate = null;\n      this.actualDuration = -0;\n      this.actualStartTime = -1.1;\n      this.treeBaseDuration = this.selfBaseDuration = -0;\n      this._debugTask =\n        this._debugStack =\n        this._debugOwner =\n        this._debugInfo =\n          null;\n      this._debugNeedsRemount = !1;\n      this._debugHookTypes = null;\n      hasBadMapPolyfill ||\n        \"function\" !== typeof Object.preventExtensions ||\n        Object.preventExtensions(this);\n    }\n    function shouldConstruct(Component) {\n      Component = Component.prototype;\n      return !(!Component || !Component.isReactComponent);\n    }\n    function createWorkInProgress(current, pendingProps) {\n      var workInProgress = current.alternate;\n      null === workInProgress\n        ? ((workInProgress = createFiber(\n            current.tag,\n            pendingProps,\n            current.key,\n            current.mode\n          )),\n          (workInProgress.elementType = current.elementType),\n          (workInProgress.type = current.type),\n          (workInProgress.stateNode = current.stateNode),\n          (workInProgress._debugOwner = current._debugOwner),\n          (workInProgress._debugStack = current._debugStack),\n          (workInProgress._debugTask = current._debugTask),\n          (workInProgress._debugHookTypes = current._debugHookTypes),\n          (workInProgress.alternate = current),\n          (current.alternate = workInProgress))\n        : ((workInProgress.pendingProps = pendingProps),\n          (workInProgress.type = current.type),\n          (workInProgress.flags = 0),\n          (workInProgress.subtreeFlags = 0),\n          (workInProgress.deletions = null),\n          (workInProgress.actualDuration = -0),\n          (workInProgress.actualStartTime = -1.1));\n      workInProgress.flags = current.flags & 65011712;\n      workInProgress.childLanes = current.childLanes;\n      workInProgress.lanes = current.lanes;\n      workInProgress.child = current.child;\n      workInProgress.memoizedProps = current.memoizedProps;\n      workInProgress.memoizedState = current.memoizedState;\n      workInProgress.updateQueue = current.updateQueue;\n      pendingProps = current.dependencies;\n      workInProgress.dependencies =\n        null === pendingProps\n          ? null\n          : {\n              lanes: pendingProps.lanes,\n              firstContext: pendingProps.firstContext,\n              _debugThenableState: pendingProps._debugThenableState\n            };\n      workInProgress.sibling = current.sibling;\n      workInProgress.index = current.index;\n      workInProgress.ref = current.ref;\n      workInProgress.refCleanup = current.refCleanup;\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n      workInProgress._debugInfo = current._debugInfo;\n      workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n      switch (workInProgress.tag) {\n        case 0:\n        case 15:\n          workInProgress.type = resolveFunctionForHotReloading(current.type);\n          break;\n        case 1:\n          workInProgress.type = resolveFunctionForHotReloading(current.type);\n          break;\n        case 11:\n          workInProgress.type = resolveForwardRefForHotReloading(current.type);\n      }\n      return workInProgress;\n    }\n    function resetWorkInProgress(workInProgress, renderLanes) {\n      workInProgress.flags &= 65011714;\n      var current = workInProgress.alternate;\n      null === current\n        ? ((workInProgress.childLanes = 0),\n          (workInProgress.lanes = renderLanes),\n          (workInProgress.child = null),\n          (workInProgress.subtreeFlags = 0),\n          (workInProgress.memoizedProps = null),\n          (workInProgress.memoizedState = null),\n          (workInProgress.updateQueue = null),\n          (workInProgress.dependencies = null),\n          (workInProgress.stateNode = null),\n          (workInProgress.selfBaseDuration = 0),\n          (workInProgress.treeBaseDuration = 0))\n        : ((workInProgress.childLanes = current.childLanes),\n          (workInProgress.lanes = current.lanes),\n          (workInProgress.child = current.child),\n          (workInProgress.subtreeFlags = 0),\n          (workInProgress.deletions = null),\n          (workInProgress.memoizedProps = current.memoizedProps),\n          (workInProgress.memoizedState = current.memoizedState),\n          (workInProgress.updateQueue = current.updateQueue),\n          (workInProgress.type = current.type),\n          (renderLanes = current.dependencies),\n          (workInProgress.dependencies =\n            null === renderLanes\n              ? null\n              : {\n                  lanes: renderLanes.lanes,\n                  firstContext: renderLanes.firstContext,\n                  _debugThenableState: renderLanes._debugThenableState\n                }),\n          (workInProgress.selfBaseDuration = current.selfBaseDuration),\n          (workInProgress.treeBaseDuration = current.treeBaseDuration));\n      return workInProgress;\n    }\n    function createFiberFromTypeAndProps(\n      type,\n      key,\n      pendingProps,\n      owner,\n      mode,\n      lanes\n    ) {\n      var fiberTag = 0,\n        resolvedType = type;\n      if (\"function\" === typeof type)\n        shouldConstruct(type) && (fiberTag = 1),\n          (resolvedType = resolveFunctionForHotReloading(resolvedType));\n      else if (\"string\" === typeof type)\n        (fiberTag = getHostContext()),\n          (fiberTag = isHostHoistableType(type, pendingProps, fiberTag)\n            ? 26\n            : \"html\" === type || \"head\" === type || \"body\" === type\n              ? 27\n              : 5);\n      else\n        a: switch (type) {\n          case REACT_ACTIVITY_TYPE:\n            return (\n              (key = createFiber(31, pendingProps, key, mode)),\n              (key.elementType = REACT_ACTIVITY_TYPE),\n              (key.lanes = lanes),\n              key\n            );\n          case REACT_FRAGMENT_TYPE:\n            return createFiberFromFragment(\n              pendingProps.children,\n              mode,\n              lanes,\n              key\n            );\n          case REACT_STRICT_MODE_TYPE:\n            fiberTag = 8;\n            mode |= StrictLegacyMode;\n            mode |= StrictEffectsMode;\n            break;\n          case REACT_PROFILER_TYPE:\n            return (\n              (type = pendingProps),\n              (owner = mode),\n              \"string\" !== typeof type.id &&\n                console.error(\n                  'Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.',\n                  typeof type.id\n                ),\n              (key = createFiber(12, type, key, owner | ProfileMode)),\n              (key.elementType = REACT_PROFILER_TYPE),\n              (key.lanes = lanes),\n              (key.stateNode = { effectDuration: 0, passiveEffectDuration: 0 }),\n              key\n            );\n          case REACT_SUSPENSE_TYPE:\n            return (\n              (key = createFiber(13, pendingProps, key, mode)),\n              (key.elementType = REACT_SUSPENSE_TYPE),\n              (key.lanes = lanes),\n              key\n            );\n          case REACT_SUSPENSE_LIST_TYPE:\n            return (\n              (key = createFiber(19, pendingProps, key, mode)),\n              (key.elementType = REACT_SUSPENSE_LIST_TYPE),\n              (key.lanes = lanes),\n              key\n            );\n          default:\n            if (\"object\" === typeof type && null !== type)\n              switch (type.$$typeof) {\n                case REACT_PROVIDER_TYPE:\n                case REACT_CONTEXT_TYPE:\n                  fiberTag = 10;\n                  break a;\n                case REACT_CONSUMER_TYPE:\n                  fiberTag = 9;\n                  break a;\n                case REACT_FORWARD_REF_TYPE:\n                  fiberTag = 11;\n                  resolvedType = resolveForwardRefForHotReloading(resolvedType);\n                  break a;\n                case REACT_MEMO_TYPE:\n                  fiberTag = 14;\n                  break a;\n                case REACT_LAZY_TYPE:\n                  fiberTag = 16;\n                  resolvedType = null;\n                  break a;\n              }\n            resolvedType = \"\";\n            if (\n              void 0 === type ||\n              (\"object\" === typeof type &&\n                null !== type &&\n                0 === Object.keys(type).length)\n            )\n              resolvedType +=\n                \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\";\n            null === type\n              ? (pendingProps = \"null\")\n              : isArrayImpl(type)\n                ? (pendingProps = \"array\")\n                : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE\n                  ? ((pendingProps =\n                      \"<\" +\n                      (getComponentNameFromType(type.type) || \"Unknown\") +\n                      \" />\"),\n                    (resolvedType =\n                      \" Did you accidentally export a JSX literal instead of a component?\"))\n                  : (pendingProps = typeof type);\n            (fiberTag = owner ? getComponentNameFromOwner(owner) : null) &&\n              (resolvedType +=\n                \"\\n\\nCheck the render method of `\" + fiberTag + \"`.\");\n            fiberTag = 29;\n            pendingProps = Error(\n              \"Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: \" +\n                (pendingProps + \".\" + resolvedType)\n            );\n            resolvedType = null;\n        }\n      key = createFiber(fiberTag, pendingProps, key, mode);\n      key.elementType = type;\n      key.type = resolvedType;\n      key.lanes = lanes;\n      key._debugOwner = owner;\n      return key;\n    }\n    function createFiberFromElement(element, mode, lanes) {\n      mode = createFiberFromTypeAndProps(\n        element.type,\n        element.key,\n        element.props,\n        element._owner,\n        mode,\n        lanes\n      );\n      mode._debugOwner = element._owner;\n      mode._debugStack = element._debugStack;\n      mode._debugTask = element._debugTask;\n      return mode;\n    }\n    function createFiberFromFragment(elements, mode, lanes, key) {\n      elements = createFiber(7, elements, key, mode);\n      elements.lanes = lanes;\n      return elements;\n    }\n    function createFiberFromText(content, mode, lanes) {\n      content = createFiber(6, content, null, mode);\n      content.lanes = lanes;\n      return content;\n    }\n    function createFiberFromPortal(portal, mode, lanes) {\n      mode = createFiber(\n        4,\n        null !== portal.children ? portal.children : [],\n        portal.key,\n        mode\n      );\n      mode.lanes = lanes;\n      mode.stateNode = {\n        containerInfo: portal.containerInfo,\n        pendingChildren: null,\n        implementation: portal.implementation\n      };\n      return mode;\n    }\n    function pushTreeFork(workInProgress, totalChildren) {\n      warnIfNotHydrating();\n      forkStack[forkStackIndex++] = treeForkCount;\n      forkStack[forkStackIndex++] = treeForkProvider;\n      treeForkProvider = workInProgress;\n      treeForkCount = totalChildren;\n    }\n    function pushTreeId(workInProgress, totalChildren, index) {\n      warnIfNotHydrating();\n      idStack[idStackIndex++] = treeContextId;\n      idStack[idStackIndex++] = treeContextOverflow;\n      idStack[idStackIndex++] = treeContextProvider;\n      treeContextProvider = workInProgress;\n      var baseIdWithLeadingBit = treeContextId;\n      workInProgress = treeContextOverflow;\n      var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;\n      baseIdWithLeadingBit &= ~(1 << baseLength);\n      index += 1;\n      var length = 32 - clz32(totalChildren) + baseLength;\n      if (30 < length) {\n        var numberOfOverflowBits = baseLength - (baseLength % 5);\n        length = (\n          baseIdWithLeadingBit &\n          ((1 << numberOfOverflowBits) - 1)\n        ).toString(32);\n        baseIdWithLeadingBit >>= numberOfOverflowBits;\n        baseLength -= numberOfOverflowBits;\n        treeContextId =\n          (1 << (32 - clz32(totalChildren) + baseLength)) |\n          (index << baseLength) |\n          baseIdWithLeadingBit;\n        treeContextOverflow = length + workInProgress;\n      } else\n        (treeContextId =\n          (1 << length) | (index << baseLength) | baseIdWithLeadingBit),\n          (treeContextOverflow = workInProgress);\n    }\n    function pushMaterializedTreeId(workInProgress) {\n      warnIfNotHydrating();\n      null !== workInProgress.return &&\n        (pushTreeFork(workInProgress, 1), pushTreeId(workInProgress, 1, 0));\n    }\n    function popTreeContext(workInProgress) {\n      for (; workInProgress === treeForkProvider; )\n        (treeForkProvider = forkStack[--forkStackIndex]),\n          (forkStack[forkStackIndex] = null),\n          (treeForkCount = forkStack[--forkStackIndex]),\n          (forkStack[forkStackIndex] = null);\n      for (; workInProgress === treeContextProvider; )\n        (treeContextProvider = idStack[--idStackIndex]),\n          (idStack[idStackIndex] = null),\n          (treeContextOverflow = idStack[--idStackIndex]),\n          (idStack[idStackIndex] = null),\n          (treeContextId = idStack[--idStackIndex]),\n          (idStack[idStackIndex] = null);\n    }\n    function warnIfNotHydrating() {\n      isHydrating ||\n        console.error(\n          \"Expected to be hydrating. This is a bug in React. Please file an issue.\"\n        );\n    }\n    function buildHydrationDiffNode(fiber, distanceFromLeaf) {\n      if (null === fiber.return) {\n        if (null === hydrationDiffRootDEV)\n          hydrationDiffRootDEV = {\n            fiber: fiber,\n            children: [],\n            serverProps: void 0,\n            serverTail: [],\n            distanceFromLeaf: distanceFromLeaf\n          };\n        else {\n          if (hydrationDiffRootDEV.fiber !== fiber)\n            throw Error(\n              \"Saw multiple hydration diff roots in a pass. This is a bug in React.\"\n            );\n          hydrationDiffRootDEV.distanceFromLeaf > distanceFromLeaf &&\n            (hydrationDiffRootDEV.distanceFromLeaf = distanceFromLeaf);\n        }\n        return hydrationDiffRootDEV;\n      }\n      var siblings = buildHydrationDiffNode(\n        fiber.return,\n        distanceFromLeaf + 1\n      ).children;\n      if (0 < siblings.length && siblings[siblings.length - 1].fiber === fiber)\n        return (\n          (siblings = siblings[siblings.length - 1]),\n          siblings.distanceFromLeaf > distanceFromLeaf &&\n            (siblings.distanceFromLeaf = distanceFromLeaf),\n          siblings\n        );\n      distanceFromLeaf = {\n        fiber: fiber,\n        children: [],\n        serverProps: void 0,\n        serverTail: [],\n        distanceFromLeaf: distanceFromLeaf\n      };\n      siblings.push(distanceFromLeaf);\n      return distanceFromLeaf;\n    }\n    function warnNonHydratedInstance(fiber, rejectedCandidate) {\n      didSuspendOrErrorDEV ||\n        ((fiber = buildHydrationDiffNode(fiber, 0)),\n        (fiber.serverProps = null),\n        null !== rejectedCandidate &&\n          ((rejectedCandidate =\n            describeHydratableInstanceForDevWarnings(rejectedCandidate)),\n          fiber.serverTail.push(rejectedCandidate)));\n    }\n    function throwOnHydrationMismatch(fiber) {\n      var diff = \"\",\n        diffRoot = hydrationDiffRootDEV;\n      null !== diffRoot &&\n        ((hydrationDiffRootDEV = null), (diff = describeDiff(diffRoot)));\n      queueHydrationError(\n        createCapturedValueAtFiber(\n          Error(\n            \"Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:\\n\\n- A server/client branch `if (typeof window !== 'undefined')`.\\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\\n- Date formatting in a user's locale which doesn't match the server.\\n- External changing data without sending a snapshot of it along with the HTML.\\n- Invalid HTML tag nesting.\\n\\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\\n\\nhttps://react.dev/link/hydration-mismatch\" +\n              diff\n          ),\n          fiber\n        )\n      );\n      throw HydrationMismatchException;\n    }\n    function prepareToHydrateHostInstance(fiber) {\n      var didHydrate = fiber.stateNode;\n      var type = fiber.type,\n        props = fiber.memoizedProps;\n      didHydrate[internalInstanceKey] = fiber;\n      didHydrate[internalPropsKey] = props;\n      validatePropertiesInDevelopment(type, props);\n      switch (type) {\n        case \"dialog\":\n          listenToNonDelegatedEvent(\"cancel\", didHydrate);\n          listenToNonDelegatedEvent(\"close\", didHydrate);\n          break;\n        case \"iframe\":\n        case \"object\":\n        case \"embed\":\n          listenToNonDelegatedEvent(\"load\", didHydrate);\n          break;\n        case \"video\":\n        case \"audio\":\n          for (type = 0; type < mediaEventTypes.length; type++)\n            listenToNonDelegatedEvent(mediaEventTypes[type], didHydrate);\n          break;\n        case \"source\":\n          listenToNonDelegatedEvent(\"error\", didHydrate);\n          break;\n        case \"img\":\n        case \"image\":\n        case \"link\":\n          listenToNonDelegatedEvent(\"error\", didHydrate);\n          listenToNonDelegatedEvent(\"load\", didHydrate);\n          break;\n        case \"details\":\n          listenToNonDelegatedEvent(\"toggle\", didHydrate);\n          break;\n        case \"input\":\n          checkControlledValueProps(\"input\", props);\n          listenToNonDelegatedEvent(\"invalid\", didHydrate);\n          validateInputProps(didHydrate, props);\n          initInput(\n            didHydrate,\n            props.value,\n            props.defaultValue,\n            props.checked,\n            props.defaultChecked,\n            props.type,\n            props.name,\n            !0\n          );\n          track(didHydrate);\n          break;\n        case \"option\":\n          validateOptionProps(didHydrate, props);\n          break;\n        case \"select\":\n          checkControlledValueProps(\"select\", props);\n          listenToNonDelegatedEvent(\"invalid\", didHydrate);\n          validateSelectProps(didHydrate, props);\n          break;\n        case \"textarea\":\n          checkControlledValueProps(\"textarea\", props),\n            listenToNonDelegatedEvent(\"invalid\", didHydrate),\n            validateTextareaProps(didHydrate, props),\n            initTextarea(\n              didHydrate,\n              props.value,\n              props.defaultValue,\n              props.children\n            ),\n            track(didHydrate);\n      }\n      type = props.children;\n      (\"string\" !== typeof type &&\n        \"number\" !== typeof type &&\n        \"bigint\" !== typeof type) ||\n      didHydrate.textContent === \"\" + type ||\n      !0 === props.suppressHydrationWarning ||\n      checkForUnmatchedText(didHydrate.textContent, type)\n        ? (null != props.popover &&\n            (listenToNonDelegatedEvent(\"beforetoggle\", didHydrate),\n            listenToNonDelegatedEvent(\"toggle\", didHydrate)),\n          null != props.onScroll &&\n            listenToNonDelegatedEvent(\"scroll\", didHydrate),\n          null != props.onScrollEnd &&\n            listenToNonDelegatedEvent(\"scrollend\", didHydrate),\n          null != props.onClick && (didHydrate.onclick = noop$1),\n          (didHydrate = !0))\n        : (didHydrate = !1);\n      didHydrate || throwOnHydrationMismatch(fiber);\n    }\n    function popToNextHostParent(fiber) {\n      for (hydrationParentFiber = fiber.return; hydrationParentFiber; )\n        switch (hydrationParentFiber.tag) {\n          case 5:\n          case 13:\n            rootOrSingletonContext = !1;\n            return;\n          case 27:\n          case 3:\n            rootOrSingletonContext = !0;\n            return;\n          default:\n            hydrationParentFiber = hydrationParentFiber.return;\n        }\n    }\n    function popHydrationState(fiber) {\n      if (fiber !== hydrationParentFiber) return !1;\n      if (!isHydrating)\n        return popToNextHostParent(fiber), (isHydrating = !0), !1;\n      var tag = fiber.tag,\n        JSCompiler_temp;\n      if ((JSCompiler_temp = 3 !== tag && 27 !== tag)) {\n        if ((JSCompiler_temp = 5 === tag))\n          (JSCompiler_temp = fiber.type),\n            (JSCompiler_temp =\n              !(\"form\" !== JSCompiler_temp && \"button\" !== JSCompiler_temp) ||\n              shouldSetTextContent(fiber.type, fiber.memoizedProps));\n        JSCompiler_temp = !JSCompiler_temp;\n      }\n      if (JSCompiler_temp && nextHydratableInstance) {\n        for (JSCompiler_temp = nextHydratableInstance; JSCompiler_temp; ) {\n          var diffNode = buildHydrationDiffNode(fiber, 0),\n            description =\n              describeHydratableInstanceForDevWarnings(JSCompiler_temp);\n          diffNode.serverTail.push(description);\n          JSCompiler_temp =\n            \"Suspense\" === description.type\n              ? getNextHydratableInstanceAfterSuspenseInstance(JSCompiler_temp)\n              : getNextHydratable(JSCompiler_temp.nextSibling);\n        }\n        throwOnHydrationMismatch(fiber);\n      }\n      popToNextHostParent(fiber);\n      if (13 === tag) {\n        fiber = fiber.memoizedState;\n        fiber = null !== fiber ? fiber.dehydrated : null;\n        if (!fiber)\n          throw Error(\n            \"Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.\"\n          );\n        nextHydratableInstance =\n          getNextHydratableInstanceAfterSuspenseInstance(fiber);\n      } else\n        27 === tag\n          ? ((tag = nextHydratableInstance),\n            isSingletonScope(fiber.type)\n              ? ((fiber = previousHydratableOnEnteringScopedSingleton),\n                (previousHydratableOnEnteringScopedSingleton = null),\n                (nextHydratableInstance = fiber))\n              : (nextHydratableInstance = tag))\n          : (nextHydratableInstance = hydrationParentFiber\n              ? getNextHydratable(fiber.stateNode.nextSibling)\n              : null);\n      return !0;\n    }\n    function resetHydrationState() {\n      nextHydratableInstance = hydrationParentFiber = null;\n      didSuspendOrErrorDEV = isHydrating = !1;\n    }\n    function upgradeHydrationErrorsToRecoverable() {\n      var queuedErrors = hydrationErrors;\n      null !== queuedErrors &&\n        (null === workInProgressRootRecoverableErrors\n          ? (workInProgressRootRecoverableErrors = queuedErrors)\n          : workInProgressRootRecoverableErrors.push.apply(\n              workInProgressRootRecoverableErrors,\n              queuedErrors\n            ),\n        (hydrationErrors = null));\n      return queuedErrors;\n    }\n    function queueHydrationError(error) {\n      null === hydrationErrors\n        ? (hydrationErrors = [error])\n        : hydrationErrors.push(error);\n    }\n    function emitPendingHydrationWarnings() {\n      var diffRoot = hydrationDiffRootDEV;\n      if (null !== diffRoot) {\n        hydrationDiffRootDEV = null;\n        for (var diff = describeDiff(diffRoot); 0 < diffRoot.children.length; )\n          diffRoot = diffRoot.children[0];\n        runWithFiberInDEV(diffRoot.fiber, function () {\n          console.error(\n            \"A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\\n\\n- A server/client branch `if (typeof window !== 'undefined')`.\\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\\n- Date formatting in a user's locale which doesn't match the server.\\n- External changing data without sending a snapshot of it along with the HTML.\\n- Invalid HTML tag nesting.\\n\\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\\n\\n%s%s\",\n            \"https://react.dev/link/hydration-mismatch\",\n            diff\n          );\n        });\n      }\n    }\n    function resetContextDependencies() {\n      lastContextDependency = currentlyRenderingFiber$1 = null;\n      isDisallowedContextReadInDEV = !1;\n    }\n    function pushProvider(providerFiber, context, nextValue) {\n      push(valueCursor, context._currentValue, providerFiber);\n      context._currentValue = nextValue;\n      push(rendererCursorDEV, context._currentRenderer, providerFiber);\n      void 0 !== context._currentRenderer &&\n        null !== context._currentRenderer &&\n        context._currentRenderer !== rendererSigil &&\n        console.error(\n          \"Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.\"\n        );\n      context._currentRenderer = rendererSigil;\n    }\n    function popProvider(context, providerFiber) {\n      context._currentValue = valueCursor.current;\n      var currentRenderer = rendererCursorDEV.current;\n      pop(rendererCursorDEV, providerFiber);\n      context._currentRenderer = currentRenderer;\n      pop(valueCursor, providerFiber);\n    }\n    function scheduleContextWorkOnParentPath(\n      parent,\n      renderLanes,\n      propagationRoot\n    ) {\n      for (; null !== parent; ) {\n        var alternate = parent.alternate;\n        (parent.childLanes & renderLanes) !== renderLanes\n          ? ((parent.childLanes |= renderLanes),\n            null !== alternate && (alternate.childLanes |= renderLanes))\n          : null !== alternate &&\n            (alternate.childLanes & renderLanes) !== renderLanes &&\n            (alternate.childLanes |= renderLanes);\n        if (parent === propagationRoot) break;\n        parent = parent.return;\n      }\n      parent !== propagationRoot &&\n        console.error(\n          \"Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.\"\n        );\n    }\n    function propagateContextChanges(\n      workInProgress,\n      contexts,\n      renderLanes,\n      forcePropagateEntireTree\n    ) {\n      var fiber = workInProgress.child;\n      null !== fiber && (fiber.return = workInProgress);\n      for (; null !== fiber; ) {\n        var list = fiber.dependencies;\n        if (null !== list) {\n          var nextFiber = fiber.child;\n          list = list.firstContext;\n          a: for (; null !== list; ) {\n            var dependency = list;\n            list = fiber;\n            for (var i = 0; i < contexts.length; i++)\n              if (dependency.context === contexts[i]) {\n                list.lanes |= renderLanes;\n                dependency = list.alternate;\n                null !== dependency && (dependency.lanes |= renderLanes);\n                scheduleContextWorkOnParentPath(\n                  list.return,\n                  renderLanes,\n                  workInProgress\n                );\n                forcePropagateEntireTree || (nextFiber = null);\n                break a;\n              }\n            list = dependency.next;\n          }\n        } else if (18 === fiber.tag) {\n          nextFiber = fiber.return;\n          if (null === nextFiber)\n            throw Error(\n              \"We just came from a parent so we must have had a parent. This is a bug in React.\"\n            );\n          nextFiber.lanes |= renderLanes;\n          list = nextFiber.alternate;\n          null !== list && (list.lanes |= renderLanes);\n          scheduleContextWorkOnParentPath(\n            nextFiber,\n            renderLanes,\n            workInProgress\n          );\n          nextFiber = null;\n        } else nextFiber = fiber.child;\n        if (null !== nextFiber) nextFiber.return = fiber;\n        else\n          for (nextFiber = fiber; null !== nextFiber; ) {\n            if (nextFiber === workInProgress) {\n              nextFiber = null;\n              break;\n            }\n            fiber = nextFiber.sibling;\n            if (null !== fiber) {\n              fiber.return = nextFiber.return;\n              nextFiber = fiber;\n              break;\n            }\n            nextFiber = nextFiber.return;\n          }\n        fiber = nextFiber;\n      }\n    }\n    function propagateParentContextChanges(\n      current,\n      workInProgress,\n      renderLanes,\n      forcePropagateEntireTree\n    ) {\n      current = null;\n      for (\n        var parent = workInProgress, isInsidePropagationBailout = !1;\n        null !== parent;\n\n      ) {\n        if (!isInsidePropagationBailout)\n          if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = !0;\n          else if (0 !== (parent.flags & 262144)) break;\n        if (10 === parent.tag) {\n          var currentParent = parent.alternate;\n          if (null === currentParent)\n            throw Error(\"Should have a current fiber. This is a bug in React.\");\n          currentParent = currentParent.memoizedProps;\n          if (null !== currentParent) {\n            var context = parent.type;\n            objectIs(parent.pendingProps.value, currentParent.value) ||\n              (null !== current\n                ? current.push(context)\n                : (current = [context]));\n          }\n        } else if (parent === hostTransitionProviderCursor.current) {\n          currentParent = parent.alternate;\n          if (null === currentParent)\n            throw Error(\"Should have a current fiber. This is a bug in React.\");\n          currentParent.memoizedState.memoizedState !==\n            parent.memoizedState.memoizedState &&\n            (null !== current\n              ? current.push(HostTransitionContext)\n              : (current = [HostTransitionContext]));\n        }\n        parent = parent.return;\n      }\n      null !== current &&\n        propagateContextChanges(\n          workInProgress,\n          current,\n          renderLanes,\n          forcePropagateEntireTree\n        );\n      workInProgress.flags |= 262144;\n    }\n    function checkIfContextChanged(currentDependencies) {\n      for (\n        currentDependencies = currentDependencies.firstContext;\n        null !== currentDependencies;\n\n      ) {\n        if (\n          !objectIs(\n            currentDependencies.context._currentValue,\n            currentDependencies.memoizedValue\n          )\n        )\n          return !0;\n        currentDependencies = currentDependencies.next;\n      }\n      return !1;\n    }\n    function prepareToReadContext(workInProgress) {\n      currentlyRenderingFiber$1 = workInProgress;\n      lastContextDependency = null;\n      workInProgress = workInProgress.dependencies;\n      null !== workInProgress && (workInProgress.firstContext = null);\n    }\n    function readContext(context) {\n      isDisallowedContextReadInDEV &&\n        console.error(\n          \"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().\"\n        );\n      return readContextForConsumer(currentlyRenderingFiber$1, context);\n    }\n    function readContextDuringReconciliation(consumer, context) {\n      null === currentlyRenderingFiber$1 && prepareToReadContext(consumer);\n      return readContextForConsumer(consumer, context);\n    }\n    function readContextForConsumer(consumer, context) {\n      var value = context._currentValue;\n      context = { context: context, memoizedValue: value, next: null };\n      if (null === lastContextDependency) {\n        if (null === consumer)\n          throw Error(\n            \"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().\"\n          );\n        lastContextDependency = context;\n        consumer.dependencies = {\n          lanes: 0,\n          firstContext: context,\n          _debugThenableState: null\n        };\n        consumer.flags |= 524288;\n      } else lastContextDependency = lastContextDependency.next = context;\n      return value;\n    }\n    function createCache() {\n      return {\n        controller: new AbortControllerLocal(),\n        data: new Map(),\n        refCount: 0\n      };\n    }\n    function retainCache(cache) {\n      cache.controller.signal.aborted &&\n        console.warn(\n          \"A cache instance was retained after it was already freed. This likely indicates a bug in React.\"\n        );\n      cache.refCount++;\n    }\n    function releaseCache(cache) {\n      cache.refCount--;\n      0 > cache.refCount &&\n        console.warn(\n          \"A cache instance was released after it was already freed. This likely indicates a bug in React.\"\n        );\n      0 === cache.refCount &&\n        scheduleCallback$2(NormalPriority, function () {\n          cache.controller.abort();\n        });\n    }\n    function pushNestedEffectDurations() {\n      var prevEffectDuration = profilerEffectDuration;\n      profilerEffectDuration = 0;\n      return prevEffectDuration;\n    }\n    function popNestedEffectDurations(prevEffectDuration) {\n      var elapsedTime = profilerEffectDuration;\n      profilerEffectDuration = prevEffectDuration;\n      return elapsedTime;\n    }\n    function bubbleNestedEffectDurations(prevEffectDuration) {\n      var elapsedTime = profilerEffectDuration;\n      profilerEffectDuration += prevEffectDuration;\n      return elapsedTime;\n    }\n    function startProfilerTimer(fiber) {\n      profilerStartTime = now();\n      0 > fiber.actualStartTime && (fiber.actualStartTime = profilerStartTime);\n    }\n    function stopProfilerTimerIfRunningAndRecordDuration(fiber) {\n      if (0 <= profilerStartTime) {\n        var elapsedTime = now() - profilerStartTime;\n        fiber.actualDuration += elapsedTime;\n        fiber.selfBaseDuration = elapsedTime;\n        profilerStartTime = -1;\n      }\n    }\n    function stopProfilerTimerIfRunningAndRecordIncompleteDuration(fiber) {\n      if (0 <= profilerStartTime) {\n        var elapsedTime = now() - profilerStartTime;\n        fiber.actualDuration += elapsedTime;\n        profilerStartTime = -1;\n      }\n    }\n    function recordEffectDuration() {\n      if (0 <= profilerStartTime) {\n        var elapsedTime = now() - profilerStartTime;\n        profilerStartTime = -1;\n        profilerEffectDuration += elapsedTime;\n      }\n    }\n    function startEffectTimer() {\n      profilerStartTime = now();\n    }\n    function transferActualDuration(fiber) {\n      for (var child = fiber.child; child; )\n        (fiber.actualDuration += child.actualDuration), (child = child.sibling);\n    }\n    function entangleAsyncAction(transition, thenable) {\n      if (null === currentEntangledListeners) {\n        var entangledListeners = (currentEntangledListeners = []);\n        currentEntangledPendingCount = 0;\n        currentEntangledLane = requestTransitionLane();\n        currentEntangledActionThenable = {\n          status: \"pending\",\n          value: void 0,\n          then: function (resolve) {\n            entangledListeners.push(resolve);\n          }\n        };\n      }\n      currentEntangledPendingCount++;\n      thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);\n      return thenable;\n    }\n    function pingEngtangledActionScope() {\n      if (\n        0 === --currentEntangledPendingCount &&\n        null !== currentEntangledListeners\n      ) {\n        null !== currentEntangledActionThenable &&\n          (currentEntangledActionThenable.status = \"fulfilled\");\n        var listeners = currentEntangledListeners;\n        currentEntangledListeners = null;\n        currentEntangledLane = 0;\n        currentEntangledActionThenable = null;\n        for (var i = 0; i < listeners.length; i++) (0, listeners[i])();\n      }\n    }\n    function chainThenableValue(thenable, result) {\n      var listeners = [],\n        thenableWithOverride = {\n          status: \"pending\",\n          value: null,\n          reason: null,\n          then: function (resolve) {\n            listeners.push(resolve);\n          }\n        };\n      thenable.then(\n        function () {\n          thenableWithOverride.status = \"fulfilled\";\n          thenableWithOverride.value = result;\n          for (var i = 0; i < listeners.length; i++) (0, listeners[i])(result);\n        },\n        function (error) {\n          thenableWithOverride.status = \"rejected\";\n          thenableWithOverride.reason = error;\n          for (error = 0; error < listeners.length; error++)\n            (0, listeners[error])(void 0);\n        }\n      );\n      return thenableWithOverride;\n    }\n    function peekCacheFromPool() {\n      var cacheResumedFromPreviousRender = resumedCache.current;\n      return null !== cacheResumedFromPreviousRender\n        ? cacheResumedFromPreviousRender\n        : workInProgressRoot.pooledCache;\n    }\n    function pushTransition(offscreenWorkInProgress, prevCachePool) {\n      null === prevCachePool\n        ? push(resumedCache, resumedCache.current, offscreenWorkInProgress)\n        : push(resumedCache, prevCachePool.pool, offscreenWorkInProgress);\n    }\n    function getSuspendedCache() {\n      var cacheFromPool = peekCacheFromPool();\n      return null === cacheFromPool\n        ? null\n        : { parent: CacheContext._currentValue, pool: cacheFromPool };\n    }\n    function createThenableState() {\n      return { didWarnAboutUncachedPromise: !1, thenables: [] };\n    }\n    function isThenableResolved(thenable) {\n      thenable = thenable.status;\n      return \"fulfilled\" === thenable || \"rejected\" === thenable;\n    }\n    function noop$3() {}\n    function trackUsedThenable(thenableState, thenable, index) {\n      null !== ReactSharedInternals.actQueue &&\n        (ReactSharedInternals.didUsePromise = !0);\n      var trackedThenables = thenableState.thenables;\n      index = trackedThenables[index];\n      void 0 === index\n        ? trackedThenables.push(thenable)\n        : index !== thenable &&\n          (thenableState.didWarnAboutUncachedPromise ||\n            ((thenableState.didWarnAboutUncachedPromise = !0),\n            console.error(\n              \"A component was suspended by an uncached promise. Creating promises inside a Client Component or hook is not yet supported, except via a Suspense-compatible library or framework.\"\n            )),\n          thenable.then(noop$3, noop$3),\n          (thenable = index));\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw (\n            ((thenableState = thenable.reason),\n            checkIfUseWrappedInAsyncCatch(thenableState),\n            thenableState)\n          );\n        default:\n          if (\"string\" === typeof thenable.status)\n            thenable.then(noop$3, noop$3);\n          else {\n            thenableState = workInProgressRoot;\n            if (\n              null !== thenableState &&\n              100 < thenableState.shellSuspendCounter\n            )\n              throw Error(\n                \"An unknown Component is an async Client Component. Only Server Components can be async at the moment. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.\"\n              );\n            thenableState = thenable;\n            thenableState.status = \"pending\";\n            thenableState.then(\n              function (fulfilledValue) {\n                if (\"pending\" === thenable.status) {\n                  var fulfilledThenable = thenable;\n                  fulfilledThenable.status = \"fulfilled\";\n                  fulfilledThenable.value = fulfilledValue;\n                }\n              },\n              function (error) {\n                if (\"pending\" === thenable.status) {\n                  var rejectedThenable = thenable;\n                  rejectedThenable.status = \"rejected\";\n                  rejectedThenable.reason = error;\n                }\n              }\n            );\n          }\n          switch (thenable.status) {\n            case \"fulfilled\":\n              return thenable.value;\n            case \"rejected\":\n              throw (\n                ((thenableState = thenable.reason),\n                checkIfUseWrappedInAsyncCatch(thenableState),\n                thenableState)\n              );\n          }\n          suspendedThenable = thenable;\n          needsToResetSuspendedThenableDEV = !0;\n          throw SuspenseException;\n      }\n    }\n    function getSuspendedThenable() {\n      if (null === suspendedThenable)\n        throw Error(\n          \"Expected a suspended thenable. This is a bug in React. Please file an issue.\"\n        );\n      var thenable = suspendedThenable;\n      suspendedThenable = null;\n      needsToResetSuspendedThenableDEV = !1;\n      return thenable;\n    }\n    function checkIfUseWrappedInAsyncCatch(rejectedReason) {\n      if (\n        rejectedReason === SuspenseException ||\n        rejectedReason === SuspenseActionException\n      )\n        throw Error(\n          \"Hooks are not supported inside an async component. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.\"\n        );\n    }\n    function initializeUpdateQueue(fiber) {\n      fiber.updateQueue = {\n        baseState: fiber.memoizedState,\n        firstBaseUpdate: null,\n        lastBaseUpdate: null,\n        shared: { pending: null, lanes: 0, hiddenCallbacks: null },\n        callbacks: null\n      };\n    }\n    function cloneUpdateQueue(current, workInProgress) {\n      current = current.updateQueue;\n      workInProgress.updateQueue === current &&\n        (workInProgress.updateQueue = {\n          baseState: current.baseState,\n          firstBaseUpdate: current.firstBaseUpdate,\n          lastBaseUpdate: current.lastBaseUpdate,\n          shared: current.shared,\n          callbacks: null\n        });\n    }\n    function createUpdate(lane) {\n      return {\n        lane: lane,\n        tag: UpdateState,\n        payload: null,\n        callback: null,\n        next: null\n      };\n    }\n    function enqueueUpdate(fiber, update, lane) {\n      var updateQueue = fiber.updateQueue;\n      if (null === updateQueue) return null;\n      updateQueue = updateQueue.shared;\n      if (\n        currentlyProcessingQueue === updateQueue &&\n        !didWarnUpdateInsideUpdate\n      ) {\n        var componentName = getComponentNameFromFiber(fiber);\n        console.error(\n          \"An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.\\n\\nPlease update the following component: %s\",\n          componentName\n        );\n        didWarnUpdateInsideUpdate = !0;\n      }\n      if ((executionContext & RenderContext) !== NoContext)\n        return (\n          (componentName = updateQueue.pending),\n          null === componentName\n            ? (update.next = update)\n            : ((update.next = componentName.next),\n              (componentName.next = update)),\n          (updateQueue.pending = update),\n          (update = getRootForUpdatedFiber(fiber)),\n          markUpdateLaneFromFiberToRoot(fiber, null, lane),\n          update\n        );\n      enqueueUpdate$1(fiber, updateQueue, update, lane);\n      return getRootForUpdatedFiber(fiber);\n    }\n    function entangleTransitions(root, fiber, lane) {\n      fiber = fiber.updateQueue;\n      if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194048))) {\n        var queueLanes = fiber.lanes;\n        queueLanes &= root.pendingLanes;\n        lane |= queueLanes;\n        fiber.lanes = lane;\n        markRootEntangled(root, lane);\n      }\n    }\n    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n      var queue = workInProgress.updateQueue,\n        current = workInProgress.alternate;\n      if (\n        null !== current &&\n        ((current = current.updateQueue), queue === current)\n      ) {\n        var newFirst = null,\n          newLast = null;\n        queue = queue.firstBaseUpdate;\n        if (null !== queue) {\n          do {\n            var clone = {\n              lane: queue.lane,\n              tag: queue.tag,\n              payload: queue.payload,\n              callback: null,\n              next: null\n            };\n            null === newLast\n              ? (newFirst = newLast = clone)\n              : (newLast = newLast.next = clone);\n            queue = queue.next;\n          } while (null !== queue);\n          null === newLast\n            ? (newFirst = newLast = capturedUpdate)\n            : (newLast = newLast.next = capturedUpdate);\n        } else newFirst = newLast = capturedUpdate;\n        queue = {\n          baseState: current.baseState,\n          firstBaseUpdate: newFirst,\n          lastBaseUpdate: newLast,\n          shared: current.shared,\n          callbacks: current.callbacks\n        };\n        workInProgress.updateQueue = queue;\n        return;\n      }\n      workInProgress = queue.lastBaseUpdate;\n      null === workInProgress\n        ? (queue.firstBaseUpdate = capturedUpdate)\n        : (workInProgress.next = capturedUpdate);\n      queue.lastBaseUpdate = capturedUpdate;\n    }\n    function suspendIfUpdateReadFromEntangledAsyncAction() {\n      if (didReadFromEntangledAsyncAction) {\n        var entangledActionThenable = currentEntangledActionThenable;\n        if (null !== entangledActionThenable) throw entangledActionThenable;\n      }\n    }\n    function processUpdateQueue(\n      workInProgress,\n      props,\n      instance$jscomp$0,\n      renderLanes\n    ) {\n      didReadFromEntangledAsyncAction = !1;\n      var queue = workInProgress.updateQueue;\n      hasForceUpdate = !1;\n      currentlyProcessingQueue = queue.shared;\n      var firstBaseUpdate = queue.firstBaseUpdate,\n        lastBaseUpdate = queue.lastBaseUpdate,\n        pendingQueue = queue.shared.pending;\n      if (null !== pendingQueue) {\n        queue.shared.pending = null;\n        var lastPendingUpdate = pendingQueue,\n          firstPendingUpdate = lastPendingUpdate.next;\n        lastPendingUpdate.next = null;\n        null === lastBaseUpdate\n          ? (firstBaseUpdate = firstPendingUpdate)\n          : (lastBaseUpdate.next = firstPendingUpdate);\n        lastBaseUpdate = lastPendingUpdate;\n        var current = workInProgress.alternate;\n        null !== current &&\n          ((current = current.updateQueue),\n          (pendingQueue = current.lastBaseUpdate),\n          pendingQueue !== lastBaseUpdate &&\n            (null === pendingQueue\n              ? (current.firstBaseUpdate = firstPendingUpdate)\n              : (pendingQueue.next = firstPendingUpdate),\n            (current.lastBaseUpdate = lastPendingUpdate)));\n      }\n      if (null !== firstBaseUpdate) {\n        var newState = queue.baseState;\n        lastBaseUpdate = 0;\n        current = firstPendingUpdate = lastPendingUpdate = null;\n        pendingQueue = firstBaseUpdate;\n        do {\n          var updateLane = pendingQueue.lane & -536870913,\n            isHiddenUpdate = updateLane !== pendingQueue.lane;\n          if (\n            isHiddenUpdate\n              ? (workInProgressRootRenderLanes & updateLane) === updateLane\n              : (renderLanes & updateLane) === updateLane\n          ) {\n            0 !== updateLane &&\n              updateLane === currentEntangledLane &&\n              (didReadFromEntangledAsyncAction = !0);\n            null !== current &&\n              (current = current.next =\n                {\n                  lane: 0,\n                  tag: pendingQueue.tag,\n                  payload: pendingQueue.payload,\n                  callback: null,\n                  next: null\n                });\n            a: {\n              updateLane = workInProgress;\n              var partialState = pendingQueue;\n              var nextProps = props,\n                instance = instance$jscomp$0;\n              switch (partialState.tag) {\n                case ReplaceState:\n                  partialState = partialState.payload;\n                  if (\"function\" === typeof partialState) {\n                    isDisallowedContextReadInDEV = !0;\n                    var nextState = partialState.call(\n                      instance,\n                      newState,\n                      nextProps\n                    );\n                    if (updateLane.mode & StrictLegacyMode) {\n                      setIsStrictModeForDevtools(!0);\n                      try {\n                        partialState.call(instance, newState, nextProps);\n                      } finally {\n                        setIsStrictModeForDevtools(!1);\n                      }\n                    }\n                    isDisallowedContextReadInDEV = !1;\n                    newState = nextState;\n                    break a;\n                  }\n                  newState = partialState;\n                  break a;\n                case CaptureUpdate:\n                  updateLane.flags = (updateLane.flags & -65537) | 128;\n                case UpdateState:\n                  nextState = partialState.payload;\n                  if (\"function\" === typeof nextState) {\n                    isDisallowedContextReadInDEV = !0;\n                    partialState = nextState.call(\n                      instance,\n                      newState,\n                      nextProps\n                    );\n                    if (updateLane.mode & StrictLegacyMode) {\n                      setIsStrictModeForDevtools(!0);\n                      try {\n                        nextState.call(instance, newState, nextProps);\n                      } finally {\n                        setIsStrictModeForDevtools(!1);\n                      }\n                    }\n                    isDisallowedContextReadInDEV = !1;\n                  } else partialState = nextState;\n                  if (null === partialState || void 0 === partialState) break a;\n                  newState = assign({}, newState, partialState);\n                  break a;\n                case ForceUpdate:\n                  hasForceUpdate = !0;\n              }\n            }\n            updateLane = pendingQueue.callback;\n            null !== updateLane &&\n              ((workInProgress.flags |= 64),\n              isHiddenUpdate && (workInProgress.flags |= 8192),\n              (isHiddenUpdate = queue.callbacks),\n              null === isHiddenUpdate\n                ? (queue.callbacks = [updateLane])\n                : isHiddenUpdate.push(updateLane));\n          } else\n            (isHiddenUpdate = {\n              lane: updateLane,\n              tag: pendingQueue.tag,\n              payload: pendingQueue.payload,\n              callback: pendingQueue.callback,\n              next: null\n            }),\n              null === current\n                ? ((firstPendingUpdate = current = isHiddenUpdate),\n                  (lastPendingUpdate = newState))\n                : (current = current.next = isHiddenUpdate),\n              (lastBaseUpdate |= updateLane);\n          pendingQueue = pendingQueue.next;\n          if (null === pendingQueue)\n            if (((pendingQueue = queue.shared.pending), null === pendingQueue))\n              break;\n            else\n              (isHiddenUpdate = pendingQueue),\n                (pendingQueue = isHiddenUpdate.next),\n                (isHiddenUpdate.next = null),\n                (queue.lastBaseUpdate = isHiddenUpdate),\n                (queue.shared.pending = null);\n        } while (1);\n        null === current && (lastPendingUpdate = newState);\n        queue.baseState = lastPendingUpdate;\n        queue.firstBaseUpdate = firstPendingUpdate;\n        queue.lastBaseUpdate = current;\n        null === firstBaseUpdate && (queue.shared.lanes = 0);\n        workInProgressRootSkippedLanes |= lastBaseUpdate;\n        workInProgress.lanes = lastBaseUpdate;\n        workInProgress.memoizedState = newState;\n      }\n      currentlyProcessingQueue = null;\n    }\n    function callCallback(callback, context) {\n      if (\"function\" !== typeof callback)\n        throw Error(\n          \"Invalid argument passed as callback. Expected a function. Instead received: \" +\n            callback\n        );\n      callback.call(context);\n    }\n    function commitHiddenCallbacks(updateQueue, context) {\n      var hiddenCallbacks = updateQueue.shared.hiddenCallbacks;\n      if (null !== hiddenCallbacks)\n        for (\n          updateQueue.shared.hiddenCallbacks = null, updateQueue = 0;\n          updateQueue < hiddenCallbacks.length;\n          updateQueue++\n        )\n          callCallback(hiddenCallbacks[updateQueue], context);\n    }\n    function commitCallbacks(updateQueue, context) {\n      var callbacks = updateQueue.callbacks;\n      if (null !== callbacks)\n        for (\n          updateQueue.callbacks = null, updateQueue = 0;\n          updateQueue < callbacks.length;\n          updateQueue++\n        )\n          callCallback(callbacks[updateQueue], context);\n    }\n    function pushHiddenContext(fiber, context) {\n      var prevEntangledRenderLanes = entangledRenderLanes;\n      push(prevEntangledRenderLanesCursor, prevEntangledRenderLanes, fiber);\n      push(currentTreeHiddenStackCursor, context, fiber);\n      entangledRenderLanes = prevEntangledRenderLanes | context.baseLanes;\n    }\n    function reuseHiddenContextOnStack(fiber) {\n      push(prevEntangledRenderLanesCursor, entangledRenderLanes, fiber);\n      push(\n        currentTreeHiddenStackCursor,\n        currentTreeHiddenStackCursor.current,\n        fiber\n      );\n    }\n    function popHiddenContext(fiber) {\n      entangledRenderLanes = prevEntangledRenderLanesCursor.current;\n      pop(currentTreeHiddenStackCursor, fiber);\n      pop(prevEntangledRenderLanesCursor, fiber);\n    }\n    function mountHookTypesDev() {\n      var hookName = currentHookNameInDev;\n      null === hookTypesDev\n        ? (hookTypesDev = [hookName])\n        : hookTypesDev.push(hookName);\n    }\n    function updateHookTypesDev() {\n      var hookName = currentHookNameInDev;\n      if (\n        null !== hookTypesDev &&\n        (hookTypesUpdateIndexDev++,\n        hookTypesDev[hookTypesUpdateIndexDev] !== hookName)\n      ) {\n        var componentName = getComponentNameFromFiber(currentlyRenderingFiber);\n        if (\n          !didWarnAboutMismatchedHooksForComponent.has(componentName) &&\n          (didWarnAboutMismatchedHooksForComponent.add(componentName),\n          null !== hookTypesDev)\n        ) {\n          for (var table = \"\", i = 0; i <= hookTypesUpdateIndexDev; i++) {\n            var oldHookName = hookTypesDev[i],\n              newHookName =\n                i === hookTypesUpdateIndexDev ? hookName : oldHookName;\n            for (\n              oldHookName = i + 1 + \". \" + oldHookName;\n              30 > oldHookName.length;\n\n            )\n              oldHookName += \" \";\n            oldHookName += newHookName + \"\\n\";\n            table += oldHookName;\n          }\n          console.error(\n            \"React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://react.dev/link/rules-of-hooks\\n\\n   Previous render            Next render\\n   ------------------------------------------------------\\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\",\n            componentName,\n            table\n          );\n        }\n      }\n    }\n    function checkDepsAreArrayDev(deps) {\n      void 0 === deps ||\n        null === deps ||\n        isArrayImpl(deps) ||\n        console.error(\n          \"%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.\",\n          currentHookNameInDev,\n          typeof deps\n        );\n    }\n    function warnOnUseFormStateInDev() {\n      var componentName = getComponentNameFromFiber(currentlyRenderingFiber);\n      didWarnAboutUseFormState.has(componentName) ||\n        (didWarnAboutUseFormState.add(componentName),\n        console.error(\n          \"ReactDOM.useFormState has been renamed to React.useActionState. Please update %s to use React.useActionState.\",\n          componentName\n        ));\n    }\n    function throwInvalidHookError() {\n      throw Error(\n        \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.\"\n      );\n    }\n    function areHookInputsEqual(nextDeps, prevDeps) {\n      if (ignorePreviousDependencies) return !1;\n      if (null === prevDeps)\n        return (\n          console.error(\n            \"%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.\",\n            currentHookNameInDev\n          ),\n          !1\n        );\n      nextDeps.length !== prevDeps.length &&\n        console.error(\n          \"The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\\n\\nPrevious: %s\\nIncoming: %s\",\n          currentHookNameInDev,\n          \"[\" + prevDeps.join(\", \") + \"]\",\n          \"[\" + nextDeps.join(\", \") + \"]\"\n        );\n      for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++)\n        if (!objectIs(nextDeps[i], prevDeps[i])) return !1;\n      return !0;\n    }\n    function renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      props,\n      secondArg,\n      nextRenderLanes\n    ) {\n      renderLanes = nextRenderLanes;\n      currentlyRenderingFiber = workInProgress;\n      hookTypesDev = null !== current ? current._debugHookTypes : null;\n      hookTypesUpdateIndexDev = -1;\n      ignorePreviousDependencies =\n        null !== current && current.type !== workInProgress.type;\n      if (\n        \"[object AsyncFunction]\" ===\n          Object.prototype.toString.call(Component) ||\n        \"[object AsyncGeneratorFunction]\" ===\n          Object.prototype.toString.call(Component)\n      )\n        (nextRenderLanes = getComponentNameFromFiber(currentlyRenderingFiber)),\n          didWarnAboutAsyncClientComponent.has(nextRenderLanes) ||\n            (didWarnAboutAsyncClientComponent.add(nextRenderLanes),\n            console.error(\n              \"%s is an async Client Component. Only Server Components can be async at the moment. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.\",\n              null === nextRenderLanes\n                ? \"An unknown Component\"\n                : \"<\" + nextRenderLanes + \">\"\n            ));\n      workInProgress.memoizedState = null;\n      workInProgress.updateQueue = null;\n      workInProgress.lanes = 0;\n      ReactSharedInternals.H =\n        null !== current && null !== current.memoizedState\n          ? HooksDispatcherOnUpdateInDEV\n          : null !== hookTypesDev\n            ? HooksDispatcherOnMountWithHookTypesInDEV\n            : HooksDispatcherOnMountInDEV;\n      shouldDoubleInvokeUserFnsInHooksDEV = nextRenderLanes =\n        (workInProgress.mode & StrictLegacyMode) !== NoMode;\n      var children = callComponentInDEV(Component, props, secondArg);\n      shouldDoubleInvokeUserFnsInHooksDEV = !1;\n      didScheduleRenderPhaseUpdateDuringThisPass &&\n        (children = renderWithHooksAgain(\n          workInProgress,\n          Component,\n          props,\n          secondArg\n        ));\n      if (nextRenderLanes) {\n        setIsStrictModeForDevtools(!0);\n        try {\n          children = renderWithHooksAgain(\n            workInProgress,\n            Component,\n            props,\n            secondArg\n          );\n        } finally {\n          setIsStrictModeForDevtools(!1);\n        }\n      }\n      finishRenderingHooks(current, workInProgress);\n      return children;\n    }\n    function finishRenderingHooks(current, workInProgress) {\n      workInProgress._debugHookTypes = hookTypesDev;\n      null === workInProgress.dependencies\n        ? null !== thenableState$1 &&\n          (workInProgress.dependencies = {\n            lanes: 0,\n            firstContext: null,\n            _debugThenableState: thenableState$1\n          })\n        : (workInProgress.dependencies._debugThenableState = thenableState$1);\n      ReactSharedInternals.H = ContextOnlyDispatcher;\n      var didRenderTooFewHooks =\n        null !== currentHook && null !== currentHook.next;\n      renderLanes = 0;\n      hookTypesDev =\n        currentHookNameInDev =\n        workInProgressHook =\n        currentHook =\n        currentlyRenderingFiber =\n          null;\n      hookTypesUpdateIndexDev = -1;\n      null !== current &&\n        (current.flags & 65011712) !== (workInProgress.flags & 65011712) &&\n        console.error(\n          \"Internal React error: Expected static flag was missing. Please notify the React team.\"\n        );\n      didScheduleRenderPhaseUpdate = !1;\n      thenableIndexCounter$1 = 0;\n      thenableState$1 = null;\n      if (didRenderTooFewHooks)\n        throw Error(\n          \"Rendered fewer hooks than expected. This may be caused by an accidental early return statement.\"\n        );\n      null === current ||\n        didReceiveUpdate ||\n        ((current = current.dependencies),\n        null !== current &&\n          checkIfContextChanged(current) &&\n          (didReceiveUpdate = !0));\n      needsToResetSuspendedThenableDEV\n        ? ((needsToResetSuspendedThenableDEV = !1), (current = !0))\n        : (current = !1);\n      current &&\n        ((workInProgress =\n          getComponentNameFromFiber(workInProgress) || \"Unknown\"),\n        didWarnAboutUseWrappedInTryCatch.has(workInProgress) ||\n          didWarnAboutAsyncClientComponent.has(workInProgress) ||\n          (didWarnAboutUseWrappedInTryCatch.add(workInProgress),\n          console.error(\n            \"`use` was called from inside a try/catch block. This is not allowed and can lead to unexpected behavior. To handle errors triggered by `use`, wrap your component in a error boundary.\"\n          )));\n    }\n    function renderWithHooksAgain(workInProgress, Component, props, secondArg) {\n      currentlyRenderingFiber = workInProgress;\n      var numberOfReRenders = 0;\n      do {\n        didScheduleRenderPhaseUpdateDuringThisPass && (thenableState$1 = null);\n        thenableIndexCounter$1 = 0;\n        didScheduleRenderPhaseUpdateDuringThisPass = !1;\n        if (numberOfReRenders >= RE_RENDER_LIMIT)\n          throw Error(\n            \"Too many re-renders. React limits the number of renders to prevent an infinite loop.\"\n          );\n        numberOfReRenders += 1;\n        ignorePreviousDependencies = !1;\n        workInProgressHook = currentHook = null;\n        if (null != workInProgress.updateQueue) {\n          var children = workInProgress.updateQueue;\n          children.lastEffect = null;\n          children.events = null;\n          children.stores = null;\n          null != children.memoCache && (children.memoCache.index = 0);\n        }\n        hookTypesUpdateIndexDev = -1;\n        ReactSharedInternals.H = HooksDispatcherOnRerenderInDEV;\n        children = callComponentInDEV(Component, props, secondArg);\n      } while (didScheduleRenderPhaseUpdateDuringThisPass);\n      return children;\n    }\n    function TransitionAwareHostComponent() {\n      var dispatcher = ReactSharedInternals.H,\n        maybeThenable = dispatcher.useState()[0];\n      maybeThenable =\n        \"function\" === typeof maybeThenable.then\n          ? useThenable(maybeThenable)\n          : maybeThenable;\n      dispatcher = dispatcher.useState()[0];\n      (null !== currentHook ? currentHook.memoizedState : null) !==\n        dispatcher && (currentlyRenderingFiber.flags |= 1024);\n      return maybeThenable;\n    }\n    function checkDidRenderIdHook() {\n      var didRenderIdHook = 0 !== localIdCounter;\n      localIdCounter = 0;\n      return didRenderIdHook;\n    }\n    function bailoutHooks(current, workInProgress, lanes) {\n      workInProgress.updateQueue = current.updateQueue;\n      workInProgress.flags =\n        (workInProgress.mode & StrictEffectsMode) !== NoMode\n          ? workInProgress.flags & -402655237\n          : workInProgress.flags & -2053;\n      current.lanes &= ~lanes;\n    }\n    function resetHooksOnUnwind(workInProgress) {\n      if (didScheduleRenderPhaseUpdate) {\n        for (\n          workInProgress = workInProgress.memoizedState;\n          null !== workInProgress;\n\n        ) {\n          var queue = workInProgress.queue;\n          null !== queue && (queue.pending = null);\n          workInProgress = workInProgress.next;\n        }\n        didScheduleRenderPhaseUpdate = !1;\n      }\n      renderLanes = 0;\n      hookTypesDev =\n        workInProgressHook =\n        currentHook =\n        currentlyRenderingFiber =\n          null;\n      hookTypesUpdateIndexDev = -1;\n      currentHookNameInDev = null;\n      didScheduleRenderPhaseUpdateDuringThisPass = !1;\n      thenableIndexCounter$1 = localIdCounter = 0;\n      thenableState$1 = null;\n    }\n    function mountWorkInProgressHook() {\n      var hook = {\n        memoizedState: null,\n        baseState: null,\n        baseQueue: null,\n        queue: null,\n        next: null\n      };\n      null === workInProgressHook\n        ? (currentlyRenderingFiber.memoizedState = workInProgressHook = hook)\n        : (workInProgressHook = workInProgressHook.next = hook);\n      return workInProgressHook;\n    }\n    function updateWorkInProgressHook() {\n      if (null === currentHook) {\n        var nextCurrentHook = currentlyRenderingFiber.alternate;\n        nextCurrentHook =\n          null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;\n      } else nextCurrentHook = currentHook.next;\n      var nextWorkInProgressHook =\n        null === workInProgressHook\n          ? currentlyRenderingFiber.memoizedState\n          : workInProgressHook.next;\n      if (null !== nextWorkInProgressHook)\n        (workInProgressHook = nextWorkInProgressHook),\n          (currentHook = nextCurrentHook);\n      else {\n        if (null === nextCurrentHook) {\n          if (null === currentlyRenderingFiber.alternate)\n            throw Error(\n              \"Update hook called on initial render. This is likely a bug in React. Please file an issue.\"\n            );\n          throw Error(\"Rendered more hooks than during the previous render.\");\n        }\n        currentHook = nextCurrentHook;\n        nextCurrentHook = {\n          memoizedState: currentHook.memoizedState,\n          baseState: currentHook.baseState,\n          baseQueue: currentHook.baseQueue,\n          queue: currentHook.queue,\n          next: null\n        };\n        null === workInProgressHook\n          ? (currentlyRenderingFiber.memoizedState = workInProgressHook =\n              nextCurrentHook)\n          : (workInProgressHook = workInProgressHook.next = nextCurrentHook);\n      }\n      return workInProgressHook;\n    }\n    function createFunctionComponentUpdateQueue() {\n      return { lastEffect: null, events: null, stores: null, memoCache: null };\n    }\n    function useThenable(thenable) {\n      var index = thenableIndexCounter$1;\n      thenableIndexCounter$1 += 1;\n      null === thenableState$1 && (thenableState$1 = createThenableState());\n      thenable = trackUsedThenable(thenableState$1, thenable, index);\n      index = currentlyRenderingFiber;\n      null ===\n        (null === workInProgressHook\n          ? index.memoizedState\n          : workInProgressHook.next) &&\n        ((index = index.alternate),\n        (ReactSharedInternals.H =\n          null !== index && null !== index.memoizedState\n            ? HooksDispatcherOnUpdateInDEV\n            : HooksDispatcherOnMountInDEV));\n      return thenable;\n    }\n    function use(usable) {\n      if (null !== usable && \"object\" === typeof usable) {\n        if (\"function\" === typeof usable.then) return useThenable(usable);\n        if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);\n      }\n      throw Error(\"An unsupported type was passed to use(): \" + String(usable));\n    }\n    function useMemoCache(size) {\n      var memoCache = null,\n        updateQueue = currentlyRenderingFiber.updateQueue;\n      null !== updateQueue && (memoCache = updateQueue.memoCache);\n      if (null == memoCache) {\n        var current = currentlyRenderingFiber.alternate;\n        null !== current &&\n          ((current = current.updateQueue),\n          null !== current &&\n            ((current = current.memoCache),\n            null != current &&\n              (memoCache = {\n                data: current.data.map(function (array) {\n                  return array.slice();\n                }),\n                index: 0\n              })));\n      }\n      null == memoCache && (memoCache = { data: [], index: 0 });\n      null === updateQueue &&\n        ((updateQueue = createFunctionComponentUpdateQueue()),\n        (currentlyRenderingFiber.updateQueue = updateQueue));\n      updateQueue.memoCache = memoCache;\n      updateQueue = memoCache.data[memoCache.index];\n      if (void 0 === updateQueue || ignorePreviousDependencies)\n        for (\n          updateQueue = memoCache.data[memoCache.index] = Array(size),\n            current = 0;\n          current < size;\n          current++\n        )\n          updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;\n      else\n        updateQueue.length !== size &&\n          console.error(\n            \"Expected a constant size argument for each invocation of useMemoCache. The previous cache was allocated with size %s but size %s was requested.\",\n            updateQueue.length,\n            size\n          );\n      memoCache.index++;\n      return updateQueue;\n    }\n    function basicStateReducer(state, action) {\n      return \"function\" === typeof action ? action(state) : action;\n    }\n    function mountReducer(reducer, initialArg, init) {\n      var hook = mountWorkInProgressHook();\n      if (void 0 !== init) {\n        var initialState = init(initialArg);\n        if (shouldDoubleInvokeUserFnsInHooksDEV) {\n          setIsStrictModeForDevtools(!0);\n          try {\n            init(initialArg);\n          } finally {\n            setIsStrictModeForDevtools(!1);\n          }\n        }\n      } else initialState = initialArg;\n      hook.memoizedState = hook.baseState = initialState;\n      reducer = {\n        pending: null,\n        lanes: 0,\n        dispatch: null,\n        lastRenderedReducer: reducer,\n        lastRenderedState: initialState\n      };\n      hook.queue = reducer;\n      reducer = reducer.dispatch = dispatchReducerAction.bind(\n        null,\n        currentlyRenderingFiber,\n        reducer\n      );\n      return [hook.memoizedState, reducer];\n    }\n    function updateReducer(reducer) {\n      var hook = updateWorkInProgressHook();\n      return updateReducerImpl(hook, currentHook, reducer);\n    }\n    function updateReducerImpl(hook, current, reducer) {\n      var queue = hook.queue;\n      if (null === queue)\n        throw Error(\n          \"Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)\"\n        );\n      queue.lastRenderedReducer = reducer;\n      var baseQueue = hook.baseQueue,\n        pendingQueue = queue.pending;\n      if (null !== pendingQueue) {\n        if (null !== baseQueue) {\n          var baseFirst = baseQueue.next;\n          baseQueue.next = pendingQueue.next;\n          pendingQueue.next = baseFirst;\n        }\n        current.baseQueue !== baseQueue &&\n          console.error(\n            \"Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.\"\n          );\n        current.baseQueue = baseQueue = pendingQueue;\n        queue.pending = null;\n      }\n      pendingQueue = hook.baseState;\n      if (null === baseQueue) hook.memoizedState = pendingQueue;\n      else {\n        current = baseQueue.next;\n        var newBaseQueueFirst = (baseFirst = null),\n          newBaseQueueLast = null,\n          update = current,\n          didReadFromEntangledAsyncAction = !1;\n        do {\n          var updateLane = update.lane & -536870913;\n          if (\n            updateLane !== update.lane\n              ? (workInProgressRootRenderLanes & updateLane) === updateLane\n              : (renderLanes & updateLane) === updateLane\n          ) {\n            var revertLane = update.revertLane;\n            if (0 === revertLane)\n              null !== newBaseQueueLast &&\n                (newBaseQueueLast = newBaseQueueLast.next =\n                  {\n                    lane: 0,\n                    revertLane: 0,\n                    action: update.action,\n                    hasEagerState: update.hasEagerState,\n                    eagerState: update.eagerState,\n                    next: null\n                  }),\n                updateLane === currentEntangledLane &&\n                  (didReadFromEntangledAsyncAction = !0);\n            else if ((renderLanes & revertLane) === revertLane) {\n              update = update.next;\n              revertLane === currentEntangledLane &&\n                (didReadFromEntangledAsyncAction = !0);\n              continue;\n            } else\n              (updateLane = {\n                lane: 0,\n                revertLane: update.revertLane,\n                action: update.action,\n                hasEagerState: update.hasEagerState,\n                eagerState: update.eagerState,\n                next: null\n              }),\n                null === newBaseQueueLast\n                  ? ((newBaseQueueFirst = newBaseQueueLast = updateLane),\n                    (baseFirst = pendingQueue))\n                  : (newBaseQueueLast = newBaseQueueLast.next = updateLane),\n                (currentlyRenderingFiber.lanes |= revertLane),\n                (workInProgressRootSkippedLanes |= revertLane);\n            updateLane = update.action;\n            shouldDoubleInvokeUserFnsInHooksDEV &&\n              reducer(pendingQueue, updateLane);\n            pendingQueue = update.hasEagerState\n              ? update.eagerState\n              : reducer(pendingQueue, updateLane);\n          } else\n            (revertLane = {\n              lane: updateLane,\n              revertLane: update.revertLane,\n              action: update.action,\n              hasEagerState: update.hasEagerState,\n              eagerState: update.eagerState,\n              next: null\n            }),\n              null === newBaseQueueLast\n                ? ((newBaseQueueFirst = newBaseQueueLast = revertLane),\n                  (baseFirst = pendingQueue))\n                : (newBaseQueueLast = newBaseQueueLast.next = revertLane),\n              (currentlyRenderingFiber.lanes |= updateLane),\n              (workInProgressRootSkippedLanes |= updateLane);\n          update = update.next;\n        } while (null !== update && update !== current);\n        null === newBaseQueueLast\n          ? (baseFirst = pendingQueue)\n          : (newBaseQueueLast.next = newBaseQueueFirst);\n        if (\n          !objectIs(pendingQueue, hook.memoizedState) &&\n          ((didReceiveUpdate = !0),\n          didReadFromEntangledAsyncAction &&\n            ((reducer = currentEntangledActionThenable), null !== reducer))\n        )\n          throw reducer;\n        hook.memoizedState = pendingQueue;\n        hook.baseState = baseFirst;\n        hook.baseQueue = newBaseQueueLast;\n        queue.lastRenderedState = pendingQueue;\n      }\n      null === baseQueue && (queue.lanes = 0);\n      return [hook.memoizedState, queue.dispatch];\n    }\n    function rerenderReducer(reducer) {\n      var hook = updateWorkInProgressHook(),\n        queue = hook.queue;\n      if (null === queue)\n        throw Error(\n          \"Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)\"\n        );\n      queue.lastRenderedReducer = reducer;\n      var dispatch = queue.dispatch,\n        lastRenderPhaseUpdate = queue.pending,\n        newState = hook.memoizedState;\n      if (null !== lastRenderPhaseUpdate) {\n        queue.pending = null;\n        var update = (lastRenderPhaseUpdate = lastRenderPhaseUpdate.next);\n        do\n          (newState = reducer(newState, update.action)), (update = update.next);\n        while (update !== lastRenderPhaseUpdate);\n        objectIs(newState, hook.memoizedState) || (didReceiveUpdate = !0);\n        hook.memoizedState = newState;\n        null === hook.baseQueue && (hook.baseState = newState);\n        queue.lastRenderedState = newState;\n      }\n      return [newState, dispatch];\n    }\n    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n      var fiber = currentlyRenderingFiber,\n        hook = mountWorkInProgressHook();\n      if (isHydrating) {\n        if (void 0 === getServerSnapshot)\n          throw Error(\n            \"Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.\"\n          );\n        var nextSnapshot = getServerSnapshot();\n        didWarnUncachedGetSnapshot ||\n          nextSnapshot === getServerSnapshot() ||\n          (console.error(\n            \"The result of getServerSnapshot should be cached to avoid an infinite loop\"\n          ),\n          (didWarnUncachedGetSnapshot = !0));\n      } else {\n        nextSnapshot = getSnapshot();\n        didWarnUncachedGetSnapshot ||\n          ((getServerSnapshot = getSnapshot()),\n          objectIs(nextSnapshot, getServerSnapshot) ||\n            (console.error(\n              \"The result of getSnapshot should be cached to avoid an infinite loop\"\n            ),\n            (didWarnUncachedGetSnapshot = !0)));\n        if (null === workInProgressRoot)\n          throw Error(\n            \"Expected a work-in-progress root. This is a bug in React. Please file an issue.\"\n          );\n        0 !== (workInProgressRootRenderLanes & 124) ||\n          pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n      }\n      hook.memoizedState = nextSnapshot;\n      getServerSnapshot = { value: nextSnapshot, getSnapshot: getSnapshot };\n      hook.queue = getServerSnapshot;\n      mountEffect(\n        subscribeToStore.bind(null, fiber, getServerSnapshot, subscribe),\n        [subscribe]\n      );\n      fiber.flags |= 2048;\n      pushSimpleEffect(\n        HasEffect | Passive,\n        createEffectInstance(),\n        updateStoreInstance.bind(\n          null,\n          fiber,\n          getServerSnapshot,\n          nextSnapshot,\n          getSnapshot\n        ),\n        null\n      );\n      return nextSnapshot;\n    }\n    function updateSyncExternalStore(\n      subscribe,\n      getSnapshot,\n      getServerSnapshot\n    ) {\n      var fiber = currentlyRenderingFiber,\n        hook = updateWorkInProgressHook(),\n        isHydrating$jscomp$0 = isHydrating;\n      if (isHydrating$jscomp$0) {\n        if (void 0 === getServerSnapshot)\n          throw Error(\n            \"Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.\"\n          );\n        getServerSnapshot = getServerSnapshot();\n      } else if (\n        ((getServerSnapshot = getSnapshot()), !didWarnUncachedGetSnapshot)\n      ) {\n        var cachedSnapshot = getSnapshot();\n        objectIs(getServerSnapshot, cachedSnapshot) ||\n          (console.error(\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\n          ),\n          (didWarnUncachedGetSnapshot = !0));\n      }\n      if (\n        (cachedSnapshot = !objectIs(\n          (currentHook || hook).memoizedState,\n          getServerSnapshot\n        ))\n      )\n        (hook.memoizedState = getServerSnapshot), (didReceiveUpdate = !0);\n      hook = hook.queue;\n      var create = subscribeToStore.bind(null, fiber, hook, subscribe);\n      updateEffectImpl(2048, Passive, create, [subscribe]);\n      if (\n        hook.getSnapshot !== getSnapshot ||\n        cachedSnapshot ||\n        (null !== workInProgressHook &&\n          workInProgressHook.memoizedState.tag & HasEffect)\n      ) {\n        fiber.flags |= 2048;\n        pushSimpleEffect(\n          HasEffect | Passive,\n          createEffectInstance(),\n          updateStoreInstance.bind(\n            null,\n            fiber,\n            hook,\n            getServerSnapshot,\n            getSnapshot\n          ),\n          null\n        );\n        if (null === workInProgressRoot)\n          throw Error(\n            \"Expected a work-in-progress root. This is a bug in React. Please file an issue.\"\n          );\n        isHydrating$jscomp$0 ||\n          0 !== (renderLanes & 124) ||\n          pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n      }\n      return getServerSnapshot;\n    }\n    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n      fiber.flags |= 16384;\n      fiber = { getSnapshot: getSnapshot, value: renderedSnapshot };\n      getSnapshot = currentlyRenderingFiber.updateQueue;\n      null === getSnapshot\n        ? ((getSnapshot = createFunctionComponentUpdateQueue()),\n          (currentlyRenderingFiber.updateQueue = getSnapshot),\n          (getSnapshot.stores = [fiber]))\n        : ((renderedSnapshot = getSnapshot.stores),\n          null === renderedSnapshot\n            ? (getSnapshot.stores = [fiber])\n            : renderedSnapshot.push(fiber));\n    }\n    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n      inst.value = nextSnapshot;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n    }\n    function subscribeToStore(fiber, inst, subscribe) {\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n      });\n    }\n    function checkIfSnapshotChanged(inst) {\n      var latestGetSnapshot = inst.getSnapshot;\n      inst = inst.value;\n      try {\n        var nextValue = latestGetSnapshot();\n        return !objectIs(inst, nextValue);\n      } catch (error) {\n        return !0;\n      }\n    }\n    function forceStoreRerender(fiber) {\n      var root = enqueueConcurrentRenderForLane(fiber, 2);\n      null !== root && scheduleUpdateOnFiber(root, fiber, 2);\n    }\n    function mountStateImpl(initialState) {\n      var hook = mountWorkInProgressHook();\n      if (\"function\" === typeof initialState) {\n        var initialStateInitializer = initialState;\n        initialState = initialStateInitializer();\n        if (shouldDoubleInvokeUserFnsInHooksDEV) {\n          setIsStrictModeForDevtools(!0);\n          try {\n            initialStateInitializer();\n          } finally {\n            setIsStrictModeForDevtools(!1);\n          }\n        }\n      }\n      hook.memoizedState = hook.baseState = initialState;\n      hook.queue = {\n        pending: null,\n        lanes: 0,\n        dispatch: null,\n        lastRenderedReducer: basicStateReducer,\n        lastRenderedState: initialState\n      };\n      return hook;\n    }\n    function mountState(initialState) {\n      initialState = mountStateImpl(initialState);\n      var queue = initialState.queue,\n        dispatch = dispatchSetState.bind(null, currentlyRenderingFiber, queue);\n      queue.dispatch = dispatch;\n      return [initialState.memoizedState, dispatch];\n    }\n    function mountOptimistic(passthrough) {\n      var hook = mountWorkInProgressHook();\n      hook.memoizedState = hook.baseState = passthrough;\n      var queue = {\n        pending: null,\n        lanes: 0,\n        dispatch: null,\n        lastRenderedReducer: null,\n        lastRenderedState: null\n      };\n      hook.queue = queue;\n      hook = dispatchOptimisticSetState.bind(\n        null,\n        currentlyRenderingFiber,\n        !0,\n        queue\n      );\n      queue.dispatch = hook;\n      return [passthrough, hook];\n    }\n    function updateOptimistic(passthrough, reducer) {\n      var hook = updateWorkInProgressHook();\n      return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n    }\n    function updateOptimisticImpl(hook, current, passthrough, reducer) {\n      hook.baseState = passthrough;\n      return updateReducerImpl(\n        hook,\n        currentHook,\n        \"function\" === typeof reducer ? reducer : basicStateReducer\n      );\n    }\n    function rerenderOptimistic(passthrough, reducer) {\n      var hook = updateWorkInProgressHook();\n      if (null !== currentHook)\n        return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n      hook.baseState = passthrough;\n      return [passthrough, hook.queue.dispatch];\n    }\n    function dispatchActionState(\n      fiber,\n      actionQueue,\n      setPendingState,\n      setState,\n      payload\n    ) {\n      if (isRenderPhaseUpdate(fiber))\n        throw Error(\"Cannot update form state while rendering.\");\n      fiber = actionQueue.action;\n      if (null !== fiber) {\n        var actionNode = {\n          payload: payload,\n          action: fiber,\n          next: null,\n          isTransition: !0,\n          status: \"pending\",\n          value: null,\n          reason: null,\n          listeners: [],\n          then: function (listener) {\n            actionNode.listeners.push(listener);\n          }\n        };\n        null !== ReactSharedInternals.T\n          ? setPendingState(!0)\n          : (actionNode.isTransition = !1);\n        setState(actionNode);\n        setPendingState = actionQueue.pending;\n        null === setPendingState\n          ? ((actionNode.next = actionQueue.pending = actionNode),\n            runActionStateAction(actionQueue, actionNode))\n          : ((actionNode.next = setPendingState.next),\n            (actionQueue.pending = setPendingState.next = actionNode));\n      }\n    }\n    function runActionStateAction(actionQueue, node) {\n      var action = node.action,\n        payload = node.payload,\n        prevState = actionQueue.state;\n      if (node.isTransition) {\n        var prevTransition = ReactSharedInternals.T,\n          currentTransition = {};\n        ReactSharedInternals.T = currentTransition;\n        ReactSharedInternals.T._updatedFibers = new Set();\n        try {\n          var returnValue = action(prevState, payload),\n            onStartTransitionFinish = ReactSharedInternals.S;\n          null !== onStartTransitionFinish &&\n            onStartTransitionFinish(currentTransition, returnValue);\n          handleActionReturnValue(actionQueue, node, returnValue);\n        } catch (error) {\n          onActionError(actionQueue, node, error);\n        } finally {\n          (ReactSharedInternals.T = prevTransition),\n            null === prevTransition &&\n              currentTransition._updatedFibers &&\n              ((actionQueue = currentTransition._updatedFibers.size),\n              currentTransition._updatedFibers.clear(),\n              10 < actionQueue &&\n                console.warn(\n                  \"Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.\"\n                ));\n        }\n      } else\n        try {\n          (currentTransition = action(prevState, payload)),\n            handleActionReturnValue(actionQueue, node, currentTransition);\n        } catch (error$4) {\n          onActionError(actionQueue, node, error$4);\n        }\n    }\n    function handleActionReturnValue(actionQueue, node, returnValue) {\n      null !== returnValue &&\n      \"object\" === typeof returnValue &&\n      \"function\" === typeof returnValue.then\n        ? (returnValue.then(\n            function (nextState) {\n              onActionSuccess(actionQueue, node, nextState);\n            },\n            function (error) {\n              return onActionError(actionQueue, node, error);\n            }\n          ),\n          node.isTransition ||\n            console.error(\n              \"An async function with useActionState was called outside of a transition. This is likely not what you intended (for example, isPending will not update correctly). Either call the returned function inside startTransition, or pass it to an `action` or `formAction` prop.\"\n            ))\n        : onActionSuccess(actionQueue, node, returnValue);\n    }\n    function onActionSuccess(actionQueue, actionNode, nextState) {\n      actionNode.status = \"fulfilled\";\n      actionNode.value = nextState;\n      notifyActionListeners(actionNode);\n      actionQueue.state = nextState;\n      actionNode = actionQueue.pending;\n      null !== actionNode &&\n        ((nextState = actionNode.next),\n        nextState === actionNode\n          ? (actionQueue.pending = null)\n          : ((nextState = nextState.next),\n            (actionNode.next = nextState),\n            runActionStateAction(actionQueue, nextState)));\n    }\n    function onActionError(actionQueue, actionNode, error) {\n      var last = actionQueue.pending;\n      actionQueue.pending = null;\n      if (null !== last) {\n        last = last.next;\n        do\n          (actionNode.status = \"rejected\"),\n            (actionNode.reason = error),\n            notifyActionListeners(actionNode),\n            (actionNode = actionNode.next);\n        while (actionNode !== last);\n      }\n      actionQueue.action = null;\n    }\n    function notifyActionListeners(actionNode) {\n      actionNode = actionNode.listeners;\n      for (var i = 0; i < actionNode.length; i++) (0, actionNode[i])();\n    }\n    function actionStateReducer(oldState, newState) {\n      return newState;\n    }\n    function mountActionState(action, initialStateProp) {\n      if (isHydrating) {\n        var ssrFormState = workInProgressRoot.formState;\n        if (null !== ssrFormState) {\n          a: {\n            var isMatching = currentlyRenderingFiber;\n            if (isHydrating) {\n              if (nextHydratableInstance) {\n                b: {\n                  var markerInstance = nextHydratableInstance;\n                  for (\n                    var inRootOrSingleton = rootOrSingletonContext;\n                    8 !== markerInstance.nodeType;\n\n                  ) {\n                    if (!inRootOrSingleton) {\n                      markerInstance = null;\n                      break b;\n                    }\n                    markerInstance = getNextHydratable(\n                      markerInstance.nextSibling\n                    );\n                    if (null === markerInstance) {\n                      markerInstance = null;\n                      break b;\n                    }\n                  }\n                  inRootOrSingleton = markerInstance.data;\n                  markerInstance =\n                    inRootOrSingleton === FORM_STATE_IS_MATCHING ||\n                    inRootOrSingleton === FORM_STATE_IS_NOT_MATCHING\n                      ? markerInstance\n                      : null;\n                }\n                if (markerInstance) {\n                  nextHydratableInstance = getNextHydratable(\n                    markerInstance.nextSibling\n                  );\n                  isMatching = markerInstance.data === FORM_STATE_IS_MATCHING;\n                  break a;\n                }\n              }\n              throwOnHydrationMismatch(isMatching);\n            }\n            isMatching = !1;\n          }\n          isMatching && (initialStateProp = ssrFormState[0]);\n        }\n      }\n      ssrFormState = mountWorkInProgressHook();\n      ssrFormState.memoizedState = ssrFormState.baseState = initialStateProp;\n      isMatching = {\n        pending: null,\n        lanes: 0,\n        dispatch: null,\n        lastRenderedReducer: actionStateReducer,\n        lastRenderedState: initialStateProp\n      };\n      ssrFormState.queue = isMatching;\n      ssrFormState = dispatchSetState.bind(\n        null,\n        currentlyRenderingFiber,\n        isMatching\n      );\n      isMatching.dispatch = ssrFormState;\n      isMatching = mountStateImpl(!1);\n      inRootOrSingleton = dispatchOptimisticSetState.bind(\n        null,\n        currentlyRenderingFiber,\n        !1,\n        isMatching.queue\n      );\n      isMatching = mountWorkInProgressHook();\n      markerInstance = {\n        state: initialStateProp,\n        dispatch: null,\n        action: action,\n        pending: null\n      };\n      isMatching.queue = markerInstance;\n      ssrFormState = dispatchActionState.bind(\n        null,\n        currentlyRenderingFiber,\n        markerInstance,\n        inRootOrSingleton,\n        ssrFormState\n      );\n      markerInstance.dispatch = ssrFormState;\n      isMatching.memoizedState = action;\n      return [initialStateProp, ssrFormState, !1];\n    }\n    function updateActionState(action) {\n      var stateHook = updateWorkInProgressHook();\n      return updateActionStateImpl(stateHook, currentHook, action);\n    }\n    function updateActionStateImpl(stateHook, currentStateHook, action) {\n      currentStateHook = updateReducerImpl(\n        stateHook,\n        currentStateHook,\n        actionStateReducer\n      )[0];\n      stateHook = updateReducer(basicStateReducer)[0];\n      if (\n        \"object\" === typeof currentStateHook &&\n        null !== currentStateHook &&\n        \"function\" === typeof currentStateHook.then\n      )\n        try {\n          var state = useThenable(currentStateHook);\n        } catch (x) {\n          if (x === SuspenseException) throw SuspenseActionException;\n          throw x;\n        }\n      else state = currentStateHook;\n      currentStateHook = updateWorkInProgressHook();\n      var actionQueue = currentStateHook.queue,\n        dispatch = actionQueue.dispatch;\n      action !== currentStateHook.memoizedState &&\n        ((currentlyRenderingFiber.flags |= 2048),\n        pushSimpleEffect(\n          HasEffect | Passive,\n          createEffectInstance(),\n          actionStateActionEffect.bind(null, actionQueue, action),\n          null\n        ));\n      return [state, dispatch, stateHook];\n    }\n    function actionStateActionEffect(actionQueue, action) {\n      actionQueue.action = action;\n    }\n    function rerenderActionState(action) {\n      var stateHook = updateWorkInProgressHook(),\n        currentStateHook = currentHook;\n      if (null !== currentStateHook)\n        return updateActionStateImpl(stateHook, currentStateHook, action);\n      updateWorkInProgressHook();\n      stateHook = stateHook.memoizedState;\n      currentStateHook = updateWorkInProgressHook();\n      var dispatch = currentStateHook.queue.dispatch;\n      currentStateHook.memoizedState = action;\n      return [stateHook, dispatch, !1];\n    }\n    function pushSimpleEffect(tag, inst, create, createDeps) {\n      tag = {\n        tag: tag,\n        create: create,\n        deps: createDeps,\n        inst: inst,\n        next: null\n      };\n      inst = currentlyRenderingFiber.updateQueue;\n      null === inst &&\n        ((inst = createFunctionComponentUpdateQueue()),\n        (currentlyRenderingFiber.updateQueue = inst));\n      create = inst.lastEffect;\n      null === create\n        ? (inst.lastEffect = tag.next = tag)\n        : ((createDeps = create.next),\n          (create.next = tag),\n          (tag.next = createDeps),\n          (inst.lastEffect = tag));\n      return tag;\n    }\n    function createEffectInstance() {\n      return { destroy: void 0, resource: void 0 };\n    }\n    function mountRef(initialValue) {\n      var hook = mountWorkInProgressHook();\n      initialValue = { current: initialValue };\n      return (hook.memoizedState = initialValue);\n    }\n    function mountEffectImpl(fiberFlags, hookFlags, create, createDeps) {\n      var hook = mountWorkInProgressHook();\n      createDeps = void 0 === createDeps ? null : createDeps;\n      currentlyRenderingFiber.flags |= fiberFlags;\n      hook.memoizedState = pushSimpleEffect(\n        HasEffect | hookFlags,\n        createEffectInstance(),\n        create,\n        createDeps\n      );\n    }\n    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n      var hook = updateWorkInProgressHook();\n      deps = void 0 === deps ? null : deps;\n      var inst = hook.memoizedState.inst;\n      null !== currentHook &&\n      null !== deps &&\n      areHookInputsEqual(deps, currentHook.memoizedState.deps)\n        ? (hook.memoizedState = pushSimpleEffect(hookFlags, inst, create, deps))\n        : ((currentlyRenderingFiber.flags |= fiberFlags),\n          (hook.memoizedState = pushSimpleEffect(\n            HasEffect | hookFlags,\n            inst,\n            create,\n            deps\n          )));\n    }\n    function mountEffect(create, createDeps) {\n      (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode &&\n      (currentlyRenderingFiber.mode & NoStrictPassiveEffectsMode) === NoMode\n        ? mountEffectImpl(276826112, Passive, create, createDeps)\n        : mountEffectImpl(8390656, Passive, create, createDeps);\n    }\n    function mountLayoutEffect(create, deps) {\n      var fiberFlags = 4194308;\n      (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode &&\n        (fiberFlags |= 134217728);\n      return mountEffectImpl(fiberFlags, Layout, create, deps);\n    }\n    function imperativeHandleEffect(create, ref) {\n      if (\"function\" === typeof ref) {\n        create = create();\n        var refCleanup = ref(create);\n        return function () {\n          \"function\" === typeof refCleanup ? refCleanup() : ref(null);\n        };\n      }\n      if (null !== ref && void 0 !== ref)\n        return (\n          ref.hasOwnProperty(\"current\") ||\n            console.error(\n              \"Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.\",\n              \"an object with keys {\" + Object.keys(ref).join(\", \") + \"}\"\n            ),\n          (create = create()),\n          (ref.current = create),\n          function () {\n            ref.current = null;\n          }\n        );\n    }\n    function mountImperativeHandle(ref, create, deps) {\n      \"function\" !== typeof create &&\n        console.error(\n          \"Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.\",\n          null !== create ? typeof create : \"null\"\n        );\n      deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n      var fiberFlags = 4194308;\n      (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode &&\n        (fiberFlags |= 134217728);\n      mountEffectImpl(\n        fiberFlags,\n        Layout,\n        imperativeHandleEffect.bind(null, create, ref),\n        deps\n      );\n    }\n    function updateImperativeHandle(ref, create, deps) {\n      \"function\" !== typeof create &&\n        console.error(\n          \"Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.\",\n          null !== create ? typeof create : \"null\"\n        );\n      deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n      updateEffectImpl(\n        4,\n        Layout,\n        imperativeHandleEffect.bind(null, create, ref),\n        deps\n      );\n    }\n    function mountCallback(callback, deps) {\n      mountWorkInProgressHook().memoizedState = [\n        callback,\n        void 0 === deps ? null : deps\n      ];\n      return callback;\n    }\n    function updateCallback(callback, deps) {\n      var hook = updateWorkInProgressHook();\n      deps = void 0 === deps ? null : deps;\n      var prevState = hook.memoizedState;\n      if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n        return prevState[0];\n      hook.memoizedState = [callback, deps];\n      return callback;\n    }\n    function mountMemo(nextCreate, deps) {\n      var hook = mountWorkInProgressHook();\n      deps = void 0 === deps ? null : deps;\n      var nextValue = nextCreate();\n      if (shouldDoubleInvokeUserFnsInHooksDEV) {\n        setIsStrictModeForDevtools(!0);\n        try {\n          nextCreate();\n        } finally {\n          setIsStrictModeForDevtools(!1);\n        }\n      }\n      hook.memoizedState = [nextValue, deps];\n      return nextValue;\n    }\n    function updateMemo(nextCreate, deps) {\n      var hook = updateWorkInProgressHook();\n      deps = void 0 === deps ? null : deps;\n      var prevState = hook.memoizedState;\n      if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n        return prevState[0];\n      prevState = nextCreate();\n      if (shouldDoubleInvokeUserFnsInHooksDEV) {\n        setIsStrictModeForDevtools(!0);\n        try {\n          nextCreate();\n        } finally {\n          setIsStrictModeForDevtools(!1);\n        }\n      }\n      hook.memoizedState = [prevState, deps];\n      return prevState;\n    }\n    function mountDeferredValue(value, initialValue) {\n      var hook = mountWorkInProgressHook();\n      return mountDeferredValueImpl(hook, value, initialValue);\n    }\n    function updateDeferredValue(value, initialValue) {\n      var hook = updateWorkInProgressHook();\n      return updateDeferredValueImpl(\n        hook,\n        currentHook.memoizedState,\n        value,\n        initialValue\n      );\n    }\n    function rerenderDeferredValue(value, initialValue) {\n      var hook = updateWorkInProgressHook();\n      return null === currentHook\n        ? mountDeferredValueImpl(hook, value, initialValue)\n        : updateDeferredValueImpl(\n            hook,\n            currentHook.memoizedState,\n            value,\n            initialValue\n          );\n    }\n    function mountDeferredValueImpl(hook, value, initialValue) {\n      if (void 0 === initialValue || 0 !== (renderLanes & 1073741824))\n        return (hook.memoizedState = value);\n      hook.memoizedState = initialValue;\n      hook = requestDeferredLane();\n      currentlyRenderingFiber.lanes |= hook;\n      workInProgressRootSkippedLanes |= hook;\n      return initialValue;\n    }\n    function updateDeferredValueImpl(hook, prevValue, value, initialValue) {\n      if (objectIs(value, prevValue)) return value;\n      if (null !== currentTreeHiddenStackCursor.current)\n        return (\n          (hook = mountDeferredValueImpl(hook, value, initialValue)),\n          objectIs(hook, prevValue) || (didReceiveUpdate = !0),\n          hook\n        );\n      if (0 === (renderLanes & 42))\n        return (didReceiveUpdate = !0), (hook.memoizedState = value);\n      hook = requestDeferredLane();\n      currentlyRenderingFiber.lanes |= hook;\n      workInProgressRootSkippedLanes |= hook;\n      return prevValue;\n    }\n    function startTransition(\n      fiber,\n      queue,\n      pendingState,\n      finishedState,\n      callback\n    ) {\n      var previousPriority = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p =\n        0 !== previousPriority && previousPriority < ContinuousEventPriority\n          ? previousPriority\n          : ContinuousEventPriority;\n      var prevTransition = ReactSharedInternals.T,\n        currentTransition = {};\n      ReactSharedInternals.T = currentTransition;\n      dispatchOptimisticSetState(fiber, !1, queue, pendingState);\n      currentTransition._updatedFibers = new Set();\n      try {\n        var returnValue = callback(),\n          onStartTransitionFinish = ReactSharedInternals.S;\n        null !== onStartTransitionFinish &&\n          onStartTransitionFinish(currentTransition, returnValue);\n        if (\n          null !== returnValue &&\n          \"object\" === typeof returnValue &&\n          \"function\" === typeof returnValue.then\n        ) {\n          var thenableForFinishedState = chainThenableValue(\n            returnValue,\n            finishedState\n          );\n          dispatchSetStateInternal(\n            fiber,\n            queue,\n            thenableForFinishedState,\n            requestUpdateLane(fiber)\n          );\n        } else\n          dispatchSetStateInternal(\n            fiber,\n            queue,\n            finishedState,\n            requestUpdateLane(fiber)\n          );\n      } catch (error) {\n        dispatchSetStateInternal(\n          fiber,\n          queue,\n          { then: function () {}, status: \"rejected\", reason: error },\n          requestUpdateLane(fiber)\n        );\n      } finally {\n        (ReactDOMSharedInternals.p = previousPriority),\n          (ReactSharedInternals.T = prevTransition),\n          null === prevTransition &&\n            currentTransition._updatedFibers &&\n            ((fiber = currentTransition._updatedFibers.size),\n            currentTransition._updatedFibers.clear(),\n            10 < fiber &&\n              console.warn(\n                \"Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.\"\n              ));\n      }\n    }\n    function startHostTransition(formFiber, pendingState, action, formData) {\n      if (5 !== formFiber.tag)\n        throw Error(\n          \"Expected the form instance to be a HostComponent. This is a bug in React.\"\n        );\n      var queue = ensureFormComponentIsStateful(formFiber).queue;\n      startTransition(\n        formFiber,\n        queue,\n        pendingState,\n        NotPendingTransition,\n        null === action\n          ? noop$2\n          : function () {\n              requestFormReset$1(formFiber);\n              return action(formData);\n            }\n      );\n    }\n    function ensureFormComponentIsStateful(formFiber) {\n      var existingStateHook = formFiber.memoizedState;\n      if (null !== existingStateHook) return existingStateHook;\n      existingStateHook = {\n        memoizedState: NotPendingTransition,\n        baseState: NotPendingTransition,\n        baseQueue: null,\n        queue: {\n          pending: null,\n          lanes: 0,\n          dispatch: null,\n          lastRenderedReducer: basicStateReducer,\n          lastRenderedState: NotPendingTransition\n        },\n        next: null\n      };\n      var initialResetState = {};\n      existingStateHook.next = {\n        memoizedState: initialResetState,\n        baseState: initialResetState,\n        baseQueue: null,\n        queue: {\n          pending: null,\n          lanes: 0,\n          dispatch: null,\n          lastRenderedReducer: basicStateReducer,\n          lastRenderedState: initialResetState\n        },\n        next: null\n      };\n      formFiber.memoizedState = existingStateHook;\n      formFiber = formFiber.alternate;\n      null !== formFiber && (formFiber.memoizedState = existingStateHook);\n      return existingStateHook;\n    }\n    function requestFormReset$1(formFiber) {\n      null === ReactSharedInternals.T &&\n        console.error(\n          \"requestFormReset was called outside a transition or action. To fix, move to an action, or wrap with startTransition.\"\n        );\n      var resetStateQueue = ensureFormComponentIsStateful(formFiber).next.queue;\n      dispatchSetStateInternal(\n        formFiber,\n        resetStateQueue,\n        {},\n        requestUpdateLane(formFiber)\n      );\n    }\n    function mountTransition() {\n      var stateHook = mountStateImpl(!1);\n      stateHook = startTransition.bind(\n        null,\n        currentlyRenderingFiber,\n        stateHook.queue,\n        !0,\n        !1\n      );\n      mountWorkInProgressHook().memoizedState = stateHook;\n      return [!1, stateHook];\n    }\n    function updateTransition() {\n      var booleanOrThenable = updateReducer(basicStateReducer)[0],\n        start = updateWorkInProgressHook().memoizedState;\n      return [\n        \"boolean\" === typeof booleanOrThenable\n          ? booleanOrThenable\n          : useThenable(booleanOrThenable),\n        start\n      ];\n    }\n    function rerenderTransition() {\n      var booleanOrThenable = rerenderReducer(basicStateReducer)[0],\n        start = updateWorkInProgressHook().memoizedState;\n      return [\n        \"boolean\" === typeof booleanOrThenable\n          ? booleanOrThenable\n          : useThenable(booleanOrThenable),\n        start\n      ];\n    }\n    function useHostTransitionStatus() {\n      return readContext(HostTransitionContext);\n    }\n    function mountId() {\n      var hook = mountWorkInProgressHook(),\n        identifierPrefix = workInProgressRoot.identifierPrefix;\n      if (isHydrating) {\n        var treeId = treeContextOverflow;\n        var idWithLeadingBit = treeContextId;\n        treeId =\n          (\n            idWithLeadingBit & ~(1 << (32 - clz32(idWithLeadingBit) - 1))\n          ).toString(32) + treeId;\n        identifierPrefix = \"\\u00ab\" + identifierPrefix + \"R\" + treeId;\n        treeId = localIdCounter++;\n        0 < treeId && (identifierPrefix += \"H\" + treeId.toString(32));\n        identifierPrefix += \"\\u00bb\";\n      } else\n        (treeId = globalClientIdCounter++),\n          (identifierPrefix =\n            \"\\u00ab\" + identifierPrefix + \"r\" + treeId.toString(32) + \"\\u00bb\");\n      return (hook.memoizedState = identifierPrefix);\n    }\n    function mountRefresh() {\n      return (mountWorkInProgressHook().memoizedState = refreshCache.bind(\n        null,\n        currentlyRenderingFiber\n      ));\n    }\n    function refreshCache(fiber, seedKey) {\n      for (var provider = fiber.return; null !== provider; ) {\n        switch (provider.tag) {\n          case 24:\n          case 3:\n            var lane = requestUpdateLane(provider);\n            fiber = createUpdate(lane);\n            var root = enqueueUpdate(provider, fiber, lane);\n            null !== root &&\n              (scheduleUpdateOnFiber(root, provider, lane),\n              entangleTransitions(root, provider, lane));\n            provider = createCache();\n            null !== seedKey &&\n              void 0 !== seedKey &&\n              null !== root &&\n              console.error(\n                \"The seed argument is not enabled outside experimental channels.\"\n              );\n            fiber.payload = { cache: provider };\n            return;\n        }\n        provider = provider.return;\n      }\n    }\n    function dispatchReducerAction(fiber, queue, action) {\n      var args = arguments;\n      \"function\" === typeof args[3] &&\n        console.error(\n          \"State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().\"\n        );\n      args = requestUpdateLane(fiber);\n      var update = {\n        lane: args,\n        revertLane: 0,\n        action: action,\n        hasEagerState: !1,\n        eagerState: null,\n        next: null\n      };\n      isRenderPhaseUpdate(fiber)\n        ? enqueueRenderPhaseUpdate(queue, update)\n        : ((update = enqueueConcurrentHookUpdate(fiber, queue, update, args)),\n          null !== update &&\n            (scheduleUpdateOnFiber(update, fiber, args),\n            entangleTransitionUpdate(update, queue, args)));\n      markStateUpdateScheduled(fiber, args);\n    }\n    function dispatchSetState(fiber, queue, action) {\n      var args = arguments;\n      \"function\" === typeof args[3] &&\n        console.error(\n          \"State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().\"\n        );\n      args = requestUpdateLane(fiber);\n      dispatchSetStateInternal(fiber, queue, action, args);\n      markStateUpdateScheduled(fiber, args);\n    }\n    function dispatchSetStateInternal(fiber, queue, action, lane) {\n      var update = {\n        lane: lane,\n        revertLane: 0,\n        action: action,\n        hasEagerState: !1,\n        eagerState: null,\n        next: null\n      };\n      if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);\n      else {\n        var alternate = fiber.alternate;\n        if (\n          0 === fiber.lanes &&\n          (null === alternate || 0 === alternate.lanes) &&\n          ((alternate = queue.lastRenderedReducer), null !== alternate)\n        ) {\n          var prevDispatcher = ReactSharedInternals.H;\n          ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            var currentState = queue.lastRenderedState,\n              eagerState = alternate(currentState, action);\n            update.hasEagerState = !0;\n            update.eagerState = eagerState;\n            if (objectIs(eagerState, currentState))\n              return (\n                enqueueUpdate$1(fiber, queue, update, 0),\n                null === workInProgressRoot &&\n                  finishQueueingConcurrentUpdates(),\n                !1\n              );\n          } catch (error) {\n          } finally {\n            ReactSharedInternals.H = prevDispatcher;\n          }\n        }\n        action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n        if (null !== action)\n          return (\n            scheduleUpdateOnFiber(action, fiber, lane),\n            entangleTransitionUpdate(action, queue, lane),\n            !0\n          );\n      }\n      return !1;\n    }\n    function dispatchOptimisticSetState(\n      fiber,\n      throwIfDuringRender,\n      queue,\n      action\n    ) {\n      null === ReactSharedInternals.T &&\n        0 === currentEntangledLane &&\n        console.error(\n          \"An optimistic state update occurred outside a transition or action. To fix, move the update to an action, or wrap with startTransition.\"\n        );\n      action = {\n        lane: 2,\n        revertLane: requestTransitionLane(),\n        action: action,\n        hasEagerState: !1,\n        eagerState: null,\n        next: null\n      };\n      if (isRenderPhaseUpdate(fiber)) {\n        if (throwIfDuringRender)\n          throw Error(\"Cannot update optimistic state while rendering.\");\n        console.error(\"Cannot call startTransition while rendering.\");\n      } else\n        (throwIfDuringRender = enqueueConcurrentHookUpdate(\n          fiber,\n          queue,\n          action,\n          2\n        )),\n          null !== throwIfDuringRender &&\n            scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);\n      markStateUpdateScheduled(fiber, 2);\n    }\n    function isRenderPhaseUpdate(fiber) {\n      var alternate = fiber.alternate;\n      return (\n        fiber === currentlyRenderingFiber ||\n        (null !== alternate && alternate === currentlyRenderingFiber)\n      );\n    }\n    function enqueueRenderPhaseUpdate(queue, update) {\n      didScheduleRenderPhaseUpdateDuringThisPass =\n        didScheduleRenderPhaseUpdate = !0;\n      var pending = queue.pending;\n      null === pending\n        ? (update.next = update)\n        : ((update.next = pending.next), (pending.next = update));\n      queue.pending = update;\n    }\n    function entangleTransitionUpdate(root, queue, lane) {\n      if (0 !== (lane & 4194048)) {\n        var queueLanes = queue.lanes;\n        queueLanes &= root.pendingLanes;\n        lane |= queueLanes;\n        queue.lanes = lane;\n        markRootEntangled(root, lane);\n      }\n    }\n    function pushDebugInfo(debugInfo) {\n      var previousDebugInfo = currentDebugInfo;\n      null != debugInfo &&\n        (currentDebugInfo =\n          null === previousDebugInfo\n            ? debugInfo\n            : previousDebugInfo.concat(debugInfo));\n      return previousDebugInfo;\n    }\n    function validateFragmentProps(element, fiber, returnFiber) {\n      for (var keys = Object.keys(element.props), i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (\"children\" !== key && \"key\" !== key) {\n          null === fiber &&\n            ((fiber = createFiberFromElement(element, returnFiber.mode, 0)),\n            (fiber._debugInfo = currentDebugInfo),\n            (fiber.return = returnFiber));\n          runWithFiberInDEV(\n            fiber,\n            function (erroredKey) {\n              console.error(\n                \"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",\n                erroredKey\n              );\n            },\n            key\n          );\n          break;\n        }\n      }\n    }\n    function unwrapThenable(thenable) {\n      var index = thenableIndexCounter;\n      thenableIndexCounter += 1;\n      null === thenableState && (thenableState = createThenableState());\n      return trackUsedThenable(thenableState, thenable, index);\n    }\n    function coerceRef(workInProgress, element) {\n      element = element.props.ref;\n      workInProgress.ref = void 0 !== element ? element : null;\n    }\n    function throwOnInvalidObjectType(returnFiber, newChild) {\n      if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE)\n        throw Error(\n          'A React Element from an older version of React was rendered. This is not supported. It can happen if:\\n- Multiple copies of the \"react\" package is used.\\n- A library pre-bundled an old copy of \"react\" or \"react/jsx-runtime\".\\n- A compiler tries to \"inline\" JSX instead of using the runtime.'\n        );\n      returnFiber = Object.prototype.toString.call(newChild);\n      throw Error(\n        \"Objects are not valid as a React child (found: \" +\n          (\"[object Object]\" === returnFiber\n            ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\"\n            : returnFiber) +\n          \"). If you meant to render a collection of children, use an array instead.\"\n      );\n    }\n    function warnOnFunctionType(returnFiber, invalidChild) {\n      var parentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n      ownerHasFunctionTypeWarning[parentName] ||\n        ((ownerHasFunctionTypeWarning[parentName] = !0),\n        (invalidChild =\n          invalidChild.displayName || invalidChild.name || \"Component\"),\n        3 === returnFiber.tag\n          ? console.error(\n              \"Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\\n  root.render(%s)\",\n              invalidChild,\n              invalidChild,\n              invalidChild\n            )\n          : console.error(\n              \"Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\\n  <%s>{%s}</%s>\",\n              invalidChild,\n              invalidChild,\n              parentName,\n              invalidChild,\n              parentName\n            ));\n    }\n    function warnOnSymbolType(returnFiber, invalidChild) {\n      var parentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n      ownerHasSymbolTypeWarning[parentName] ||\n        ((ownerHasSymbolTypeWarning[parentName] = !0),\n        (invalidChild = String(invalidChild)),\n        3 === returnFiber.tag\n          ? console.error(\n              \"Symbols are not valid as a React child.\\n  root.render(%s)\",\n              invalidChild\n            )\n          : console.error(\n              \"Symbols are not valid as a React child.\\n  <%s>%s</%s>\",\n              parentName,\n              invalidChild,\n              parentName\n            ));\n    }\n    function createChildReconciler(shouldTrackSideEffects) {\n      function deleteChild(returnFiber, childToDelete) {\n        if (shouldTrackSideEffects) {\n          var deletions = returnFiber.deletions;\n          null === deletions\n            ? ((returnFiber.deletions = [childToDelete]),\n              (returnFiber.flags |= 16))\n            : deletions.push(childToDelete);\n        }\n      }\n      function deleteRemainingChildren(returnFiber, currentFirstChild) {\n        if (!shouldTrackSideEffects) return null;\n        for (; null !== currentFirstChild; )\n          deleteChild(returnFiber, currentFirstChild),\n            (currentFirstChild = currentFirstChild.sibling);\n        return null;\n      }\n      function mapRemainingChildren(currentFirstChild) {\n        for (var existingChildren = new Map(); null !== currentFirstChild; )\n          null !== currentFirstChild.key\n            ? existingChildren.set(currentFirstChild.key, currentFirstChild)\n            : existingChildren.set(currentFirstChild.index, currentFirstChild),\n            (currentFirstChild = currentFirstChild.sibling);\n        return existingChildren;\n      }\n      function useFiber(fiber, pendingProps) {\n        fiber = createWorkInProgress(fiber, pendingProps);\n        fiber.index = 0;\n        fiber.sibling = null;\n        return fiber;\n      }\n      function placeChild(newFiber, lastPlacedIndex, newIndex) {\n        newFiber.index = newIndex;\n        if (!shouldTrackSideEffects)\n          return (newFiber.flags |= 1048576), lastPlacedIndex;\n        newIndex = newFiber.alternate;\n        if (null !== newIndex)\n          return (\n            (newIndex = newIndex.index),\n            newIndex < lastPlacedIndex\n              ? ((newFiber.flags |= 67108866), lastPlacedIndex)\n              : newIndex\n          );\n        newFiber.flags |= 67108866;\n        return lastPlacedIndex;\n      }\n      function placeSingleChild(newFiber) {\n        shouldTrackSideEffects &&\n          null === newFiber.alternate &&\n          (newFiber.flags |= 67108866);\n        return newFiber;\n      }\n      function updateTextNode(returnFiber, current, textContent, lanes) {\n        if (null === current || 6 !== current.tag)\n          return (\n            (current = createFiberFromText(\n              textContent,\n              returnFiber.mode,\n              lanes\n            )),\n            (current.return = returnFiber),\n            (current._debugOwner = returnFiber),\n            (current._debugTask = returnFiber._debugTask),\n            (current._debugInfo = currentDebugInfo),\n            current\n          );\n        current = useFiber(current, textContent);\n        current.return = returnFiber;\n        current._debugInfo = currentDebugInfo;\n        return current;\n      }\n      function updateElement(returnFiber, current, element, lanes) {\n        var elementType = element.type;\n        if (elementType === REACT_FRAGMENT_TYPE)\n          return (\n            (current = updateFragment(\n              returnFiber,\n              current,\n              element.props.children,\n              lanes,\n              element.key\n            )),\n            validateFragmentProps(element, current, returnFiber),\n            current\n          );\n        if (\n          null !== current &&\n          (current.elementType === elementType ||\n            isCompatibleFamilyForHotReloading(current, element) ||\n            (\"object\" === typeof elementType &&\n              null !== elementType &&\n              elementType.$$typeof === REACT_LAZY_TYPE &&\n              callLazyInitInDEV(elementType) === current.type))\n        )\n          return (\n            (current = useFiber(current, element.props)),\n            coerceRef(current, element),\n            (current.return = returnFiber),\n            (current._debugOwner = element._owner),\n            (current._debugInfo = currentDebugInfo),\n            current\n          );\n        current = createFiberFromElement(element, returnFiber.mode, lanes);\n        coerceRef(current, element);\n        current.return = returnFiber;\n        current._debugInfo = currentDebugInfo;\n        return current;\n      }\n      function updatePortal(returnFiber, current, portal, lanes) {\n        if (\n          null === current ||\n          4 !== current.tag ||\n          current.stateNode.containerInfo !== portal.containerInfo ||\n          current.stateNode.implementation !== portal.implementation\n        )\n          return (\n            (current = createFiberFromPortal(portal, returnFiber.mode, lanes)),\n            (current.return = returnFiber),\n            (current._debugInfo = currentDebugInfo),\n            current\n          );\n        current = useFiber(current, portal.children || []);\n        current.return = returnFiber;\n        current._debugInfo = currentDebugInfo;\n        return current;\n      }\n      function updateFragment(returnFiber, current, fragment, lanes, key) {\n        if (null === current || 7 !== current.tag)\n          return (\n            (current = createFiberFromFragment(\n              fragment,\n              returnFiber.mode,\n              lanes,\n              key\n            )),\n            (current.return = returnFiber),\n            (current._debugOwner = returnFiber),\n            (current._debugTask = returnFiber._debugTask),\n            (current._debugInfo = currentDebugInfo),\n            current\n          );\n        current = useFiber(current, fragment);\n        current.return = returnFiber;\n        current._debugInfo = currentDebugInfo;\n        return current;\n      }\n      function createChild(returnFiber, newChild, lanes) {\n        if (\n          (\"string\" === typeof newChild && \"\" !== newChild) ||\n          \"number\" === typeof newChild ||\n          \"bigint\" === typeof newChild\n        )\n          return (\n            (newChild = createFiberFromText(\n              \"\" + newChild,\n              returnFiber.mode,\n              lanes\n            )),\n            (newChild.return = returnFiber),\n            (newChild._debugOwner = returnFiber),\n            (newChild._debugTask = returnFiber._debugTask),\n            (newChild._debugInfo = currentDebugInfo),\n            newChild\n          );\n        if (\"object\" === typeof newChild && null !== newChild) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              return (\n                (lanes = createFiberFromElement(\n                  newChild,\n                  returnFiber.mode,\n                  lanes\n                )),\n                coerceRef(lanes, newChild),\n                (lanes.return = returnFiber),\n                (returnFiber = pushDebugInfo(newChild._debugInfo)),\n                (lanes._debugInfo = currentDebugInfo),\n                (currentDebugInfo = returnFiber),\n                lanes\n              );\n            case REACT_PORTAL_TYPE:\n              return (\n                (newChild = createFiberFromPortal(\n                  newChild,\n                  returnFiber.mode,\n                  lanes\n                )),\n                (newChild.return = returnFiber),\n                (newChild._debugInfo = currentDebugInfo),\n                newChild\n              );\n            case REACT_LAZY_TYPE:\n              var _prevDebugInfo = pushDebugInfo(newChild._debugInfo);\n              newChild = callLazyInitInDEV(newChild);\n              returnFiber = createChild(returnFiber, newChild, lanes);\n              currentDebugInfo = _prevDebugInfo;\n              return returnFiber;\n          }\n          if (isArrayImpl(newChild) || getIteratorFn(newChild))\n            return (\n              (lanes = createFiberFromFragment(\n                newChild,\n                returnFiber.mode,\n                lanes,\n                null\n              )),\n              (lanes.return = returnFiber),\n              (lanes._debugOwner = returnFiber),\n              (lanes._debugTask = returnFiber._debugTask),\n              (returnFiber = pushDebugInfo(newChild._debugInfo)),\n              (lanes._debugInfo = currentDebugInfo),\n              (currentDebugInfo = returnFiber),\n              lanes\n            );\n          if (\"function\" === typeof newChild.then)\n            return (\n              (_prevDebugInfo = pushDebugInfo(newChild._debugInfo)),\n              (returnFiber = createChild(\n                returnFiber,\n                unwrapThenable(newChild),\n                lanes\n              )),\n              (currentDebugInfo = _prevDebugInfo),\n              returnFiber\n            );\n          if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n            return createChild(\n              returnFiber,\n              readContextDuringReconciliation(returnFiber, newChild),\n              lanes\n            );\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n        \"function\" === typeof newChild &&\n          warnOnFunctionType(returnFiber, newChild);\n        \"symbol\" === typeof newChild && warnOnSymbolType(returnFiber, newChild);\n        return null;\n      }\n      function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n        var key = null !== oldFiber ? oldFiber.key : null;\n        if (\n          (\"string\" === typeof newChild && \"\" !== newChild) ||\n          \"number\" === typeof newChild ||\n          \"bigint\" === typeof newChild\n        )\n          return null !== key\n            ? null\n            : updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\n        if (\"object\" === typeof newChild && null !== newChild) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              return newChild.key === key\n                ? ((key = pushDebugInfo(newChild._debugInfo)),\n                  (returnFiber = updateElement(\n                    returnFiber,\n                    oldFiber,\n                    newChild,\n                    lanes\n                  )),\n                  (currentDebugInfo = key),\n                  returnFiber)\n                : null;\n            case REACT_PORTAL_TYPE:\n              return newChild.key === key\n                ? updatePortal(returnFiber, oldFiber, newChild, lanes)\n                : null;\n            case REACT_LAZY_TYPE:\n              return (\n                (key = pushDebugInfo(newChild._debugInfo)),\n                (newChild = callLazyInitInDEV(newChild)),\n                (returnFiber = updateSlot(\n                  returnFiber,\n                  oldFiber,\n                  newChild,\n                  lanes\n                )),\n                (currentDebugInfo = key),\n                returnFiber\n              );\n          }\n          if (isArrayImpl(newChild) || getIteratorFn(newChild)) {\n            if (null !== key) return null;\n            key = pushDebugInfo(newChild._debugInfo);\n            returnFiber = updateFragment(\n              returnFiber,\n              oldFiber,\n              newChild,\n              lanes,\n              null\n            );\n            currentDebugInfo = key;\n            return returnFiber;\n          }\n          if (\"function\" === typeof newChild.then)\n            return (\n              (key = pushDebugInfo(newChild._debugInfo)),\n              (returnFiber = updateSlot(\n                returnFiber,\n                oldFiber,\n                unwrapThenable(newChild),\n                lanes\n              )),\n              (currentDebugInfo = key),\n              returnFiber\n            );\n          if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n            return updateSlot(\n              returnFiber,\n              oldFiber,\n              readContextDuringReconciliation(returnFiber, newChild),\n              lanes\n            );\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n        \"function\" === typeof newChild &&\n          warnOnFunctionType(returnFiber, newChild);\n        \"symbol\" === typeof newChild && warnOnSymbolType(returnFiber, newChild);\n        return null;\n      }\n      function updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        newChild,\n        lanes\n      ) {\n        if (\n          (\"string\" === typeof newChild && \"\" !== newChild) ||\n          \"number\" === typeof newChild ||\n          \"bigint\" === typeof newChild\n        )\n          return (\n            (existingChildren = existingChildren.get(newIdx) || null),\n            updateTextNode(returnFiber, existingChildren, \"\" + newChild, lanes)\n          );\n        if (\"object\" === typeof newChild && null !== newChild) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              return (\n                (newIdx =\n                  existingChildren.get(\n                    null === newChild.key ? newIdx : newChild.key\n                  ) || null),\n                (existingChildren = pushDebugInfo(newChild._debugInfo)),\n                (returnFiber = updateElement(\n                  returnFiber,\n                  newIdx,\n                  newChild,\n                  lanes\n                )),\n                (currentDebugInfo = existingChildren),\n                returnFiber\n              );\n            case REACT_PORTAL_TYPE:\n              return (\n                (existingChildren =\n                  existingChildren.get(\n                    null === newChild.key ? newIdx : newChild.key\n                  ) || null),\n                updatePortal(returnFiber, existingChildren, newChild, lanes)\n              );\n            case REACT_LAZY_TYPE:\n              var _prevDebugInfo7 = pushDebugInfo(newChild._debugInfo);\n              newChild = callLazyInitInDEV(newChild);\n              returnFiber = updateFromMap(\n                existingChildren,\n                returnFiber,\n                newIdx,\n                newChild,\n                lanes\n              );\n              currentDebugInfo = _prevDebugInfo7;\n              return returnFiber;\n          }\n          if (isArrayImpl(newChild) || getIteratorFn(newChild))\n            return (\n              (newIdx = existingChildren.get(newIdx) || null),\n              (existingChildren = pushDebugInfo(newChild._debugInfo)),\n              (returnFiber = updateFragment(\n                returnFiber,\n                newIdx,\n                newChild,\n                lanes,\n                null\n              )),\n              (currentDebugInfo = existingChildren),\n              returnFiber\n            );\n          if (\"function\" === typeof newChild.then)\n            return (\n              (_prevDebugInfo7 = pushDebugInfo(newChild._debugInfo)),\n              (returnFiber = updateFromMap(\n                existingChildren,\n                returnFiber,\n                newIdx,\n                unwrapThenable(newChild),\n                lanes\n              )),\n              (currentDebugInfo = _prevDebugInfo7),\n              returnFiber\n            );\n          if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n            return updateFromMap(\n              existingChildren,\n              returnFiber,\n              newIdx,\n              readContextDuringReconciliation(returnFiber, newChild),\n              lanes\n            );\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n        \"function\" === typeof newChild &&\n          warnOnFunctionType(returnFiber, newChild);\n        \"symbol\" === typeof newChild && warnOnSymbolType(returnFiber, newChild);\n        return null;\n      }\n      function warnOnInvalidKey(returnFiber, workInProgress, child, knownKeys) {\n        if (\"object\" !== typeof child || null === child) return knownKeys;\n        switch (child.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            warnForMissingKey(returnFiber, workInProgress, child);\n            var key = child.key;\n            if (\"string\" !== typeof key) break;\n            if (null === knownKeys) {\n              knownKeys = new Set();\n              knownKeys.add(key);\n              break;\n            }\n            if (!knownKeys.has(key)) {\n              knownKeys.add(key);\n              break;\n            }\n            runWithFiberInDEV(workInProgress, function () {\n              console.error(\n                \"Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \\u2014 the behavior is unsupported and could change in a future version.\",\n                key\n              );\n            });\n            break;\n          case REACT_LAZY_TYPE:\n            (child = callLazyInitInDEV(child)),\n              warnOnInvalidKey(returnFiber, workInProgress, child, knownKeys);\n        }\n        return knownKeys;\n      }\n      function reconcileChildrenArray(\n        returnFiber,\n        currentFirstChild,\n        newChildren,\n        lanes\n      ) {\n        for (\n          var knownKeys = null,\n            resultingFirstChild = null,\n            previousNewFiber = null,\n            oldFiber = currentFirstChild,\n            newIdx = (currentFirstChild = 0),\n            nextOldFiber = null;\n          null !== oldFiber && newIdx < newChildren.length;\n          newIdx++\n        ) {\n          oldFiber.index > newIdx\n            ? ((nextOldFiber = oldFiber), (oldFiber = null))\n            : (nextOldFiber = oldFiber.sibling);\n          var newFiber = updateSlot(\n            returnFiber,\n            oldFiber,\n            newChildren[newIdx],\n            lanes\n          );\n          if (null === newFiber) {\n            null === oldFiber && (oldFiber = nextOldFiber);\n            break;\n          }\n          knownKeys = warnOnInvalidKey(\n            returnFiber,\n            newFiber,\n            newChildren[newIdx],\n            knownKeys\n          );\n          shouldTrackSideEffects &&\n            oldFiber &&\n            null === newFiber.alternate &&\n            deleteChild(returnFiber, oldFiber);\n          currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n          null === previousNewFiber\n            ? (resultingFirstChild = newFiber)\n            : (previousNewFiber.sibling = newFiber);\n          previousNewFiber = newFiber;\n          oldFiber = nextOldFiber;\n        }\n        if (newIdx === newChildren.length)\n          return (\n            deleteRemainingChildren(returnFiber, oldFiber),\n            isHydrating && pushTreeFork(returnFiber, newIdx),\n            resultingFirstChild\n          );\n        if (null === oldFiber) {\n          for (; newIdx < newChildren.length; newIdx++)\n            (oldFiber = createChild(returnFiber, newChildren[newIdx], lanes)),\n              null !== oldFiber &&\n                ((knownKeys = warnOnInvalidKey(\n                  returnFiber,\n                  oldFiber,\n                  newChildren[newIdx],\n                  knownKeys\n                )),\n                (currentFirstChild = placeChild(\n                  oldFiber,\n                  currentFirstChild,\n                  newIdx\n                )),\n                null === previousNewFiber\n                  ? (resultingFirstChild = oldFiber)\n                  : (previousNewFiber.sibling = oldFiber),\n                (previousNewFiber = oldFiber));\n          isHydrating && pushTreeFork(returnFiber, newIdx);\n          return resultingFirstChild;\n        }\n        for (\n          oldFiber = mapRemainingChildren(oldFiber);\n          newIdx < newChildren.length;\n          newIdx++\n        )\n          (nextOldFiber = updateFromMap(\n            oldFiber,\n            returnFiber,\n            newIdx,\n            newChildren[newIdx],\n            lanes\n          )),\n            null !== nextOldFiber &&\n              ((knownKeys = warnOnInvalidKey(\n                returnFiber,\n                nextOldFiber,\n                newChildren[newIdx],\n                knownKeys\n              )),\n              shouldTrackSideEffects &&\n                null !== nextOldFiber.alternate &&\n                oldFiber.delete(\n                  null === nextOldFiber.key ? newIdx : nextOldFiber.key\n                ),\n              (currentFirstChild = placeChild(\n                nextOldFiber,\n                currentFirstChild,\n                newIdx\n              )),\n              null === previousNewFiber\n                ? (resultingFirstChild = nextOldFiber)\n                : (previousNewFiber.sibling = nextOldFiber),\n              (previousNewFiber = nextOldFiber));\n        shouldTrackSideEffects &&\n          oldFiber.forEach(function (child) {\n            return deleteChild(returnFiber, child);\n          });\n        isHydrating && pushTreeFork(returnFiber, newIdx);\n        return resultingFirstChild;\n      }\n      function reconcileChildrenIterator(\n        returnFiber,\n        currentFirstChild,\n        newChildren,\n        lanes\n      ) {\n        if (null == newChildren)\n          throw Error(\"An iterable object provided no iterator.\");\n        for (\n          var resultingFirstChild = null,\n            previousNewFiber = null,\n            oldFiber = currentFirstChild,\n            newIdx = (currentFirstChild = 0),\n            nextOldFiber = null,\n            knownKeys = null,\n            step = newChildren.next();\n          null !== oldFiber && !step.done;\n          newIdx++, step = newChildren.next()\n        ) {\n          oldFiber.index > newIdx\n            ? ((nextOldFiber = oldFiber), (oldFiber = null))\n            : (nextOldFiber = oldFiber.sibling);\n          var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n          if (null === newFiber) {\n            null === oldFiber && (oldFiber = nextOldFiber);\n            break;\n          }\n          knownKeys = warnOnInvalidKey(\n            returnFiber,\n            newFiber,\n            step.value,\n            knownKeys\n          );\n          shouldTrackSideEffects &&\n            oldFiber &&\n            null === newFiber.alternate &&\n            deleteChild(returnFiber, oldFiber);\n          currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n          null === previousNewFiber\n            ? (resultingFirstChild = newFiber)\n            : (previousNewFiber.sibling = newFiber);\n          previousNewFiber = newFiber;\n          oldFiber = nextOldFiber;\n        }\n        if (step.done)\n          return (\n            deleteRemainingChildren(returnFiber, oldFiber),\n            isHydrating && pushTreeFork(returnFiber, newIdx),\n            resultingFirstChild\n          );\n        if (null === oldFiber) {\n          for (; !step.done; newIdx++, step = newChildren.next())\n            (oldFiber = createChild(returnFiber, step.value, lanes)),\n              null !== oldFiber &&\n                ((knownKeys = warnOnInvalidKey(\n                  returnFiber,\n                  oldFiber,\n                  step.value,\n                  knownKeys\n                )),\n                (currentFirstChild = placeChild(\n                  oldFiber,\n                  currentFirstChild,\n                  newIdx\n                )),\n                null === previousNewFiber\n                  ? (resultingFirstChild = oldFiber)\n                  : (previousNewFiber.sibling = oldFiber),\n                (previousNewFiber = oldFiber));\n          isHydrating && pushTreeFork(returnFiber, newIdx);\n          return resultingFirstChild;\n        }\n        for (\n          oldFiber = mapRemainingChildren(oldFiber);\n          !step.done;\n          newIdx++, step = newChildren.next()\n        )\n          (nextOldFiber = updateFromMap(\n            oldFiber,\n            returnFiber,\n            newIdx,\n            step.value,\n            lanes\n          )),\n            null !== nextOldFiber &&\n              ((knownKeys = warnOnInvalidKey(\n                returnFiber,\n                nextOldFiber,\n                step.value,\n                knownKeys\n              )),\n              shouldTrackSideEffects &&\n                null !== nextOldFiber.alternate &&\n                oldFiber.delete(\n                  null === nextOldFiber.key ? newIdx : nextOldFiber.key\n                ),\n              (currentFirstChild = placeChild(\n                nextOldFiber,\n                currentFirstChild,\n                newIdx\n              )),\n              null === previousNewFiber\n                ? (resultingFirstChild = nextOldFiber)\n                : (previousNewFiber.sibling = nextOldFiber),\n              (previousNewFiber = nextOldFiber));\n        shouldTrackSideEffects &&\n          oldFiber.forEach(function (child) {\n            return deleteChild(returnFiber, child);\n          });\n        isHydrating && pushTreeFork(returnFiber, newIdx);\n        return resultingFirstChild;\n      }\n      function reconcileChildFibersImpl(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        lanes\n      ) {\n        \"object\" === typeof newChild &&\n          null !== newChild &&\n          newChild.type === REACT_FRAGMENT_TYPE &&\n          null === newChild.key &&\n          (validateFragmentProps(newChild, null, returnFiber),\n          (newChild = newChild.props.children));\n        if (\"object\" === typeof newChild && null !== newChild) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              var prevDebugInfo = pushDebugInfo(newChild._debugInfo);\n              a: {\n                for (var key = newChild.key; null !== currentFirstChild; ) {\n                  if (currentFirstChild.key === key) {\n                    key = newChild.type;\n                    if (key === REACT_FRAGMENT_TYPE) {\n                      if (7 === currentFirstChild.tag) {\n                        deleteRemainingChildren(\n                          returnFiber,\n                          currentFirstChild.sibling\n                        );\n                        lanes = useFiber(\n                          currentFirstChild,\n                          newChild.props.children\n                        );\n                        lanes.return = returnFiber;\n                        lanes._debugOwner = newChild._owner;\n                        lanes._debugInfo = currentDebugInfo;\n                        validateFragmentProps(newChild, lanes, returnFiber);\n                        returnFiber = lanes;\n                        break a;\n                      }\n                    } else if (\n                      currentFirstChild.elementType === key ||\n                      isCompatibleFamilyForHotReloading(\n                        currentFirstChild,\n                        newChild\n                      ) ||\n                      (\"object\" === typeof key &&\n                        null !== key &&\n                        key.$$typeof === REACT_LAZY_TYPE &&\n                        callLazyInitInDEV(key) === currentFirstChild.type)\n                    ) {\n                      deleteRemainingChildren(\n                        returnFiber,\n                        currentFirstChild.sibling\n                      );\n                      lanes = useFiber(currentFirstChild, newChild.props);\n                      coerceRef(lanes, newChild);\n                      lanes.return = returnFiber;\n                      lanes._debugOwner = newChild._owner;\n                      lanes._debugInfo = currentDebugInfo;\n                      returnFiber = lanes;\n                      break a;\n                    }\n                    deleteRemainingChildren(returnFiber, currentFirstChild);\n                    break;\n                  } else deleteChild(returnFiber, currentFirstChild);\n                  currentFirstChild = currentFirstChild.sibling;\n                }\n                newChild.type === REACT_FRAGMENT_TYPE\n                  ? ((lanes = createFiberFromFragment(\n                      newChild.props.children,\n                      returnFiber.mode,\n                      lanes,\n                      newChild.key\n                    )),\n                    (lanes.return = returnFiber),\n                    (lanes._debugOwner = returnFiber),\n                    (lanes._debugTask = returnFiber._debugTask),\n                    (lanes._debugInfo = currentDebugInfo),\n                    validateFragmentProps(newChild, lanes, returnFiber),\n                    (returnFiber = lanes))\n                  : ((lanes = createFiberFromElement(\n                      newChild,\n                      returnFiber.mode,\n                      lanes\n                    )),\n                    coerceRef(lanes, newChild),\n                    (lanes.return = returnFiber),\n                    (lanes._debugInfo = currentDebugInfo),\n                    (returnFiber = lanes));\n              }\n              returnFiber = placeSingleChild(returnFiber);\n              currentDebugInfo = prevDebugInfo;\n              return returnFiber;\n            case REACT_PORTAL_TYPE:\n              a: {\n                prevDebugInfo = newChild;\n                for (\n                  newChild = prevDebugInfo.key;\n                  null !== currentFirstChild;\n\n                ) {\n                  if (currentFirstChild.key === newChild)\n                    if (\n                      4 === currentFirstChild.tag &&\n                      currentFirstChild.stateNode.containerInfo ===\n                        prevDebugInfo.containerInfo &&\n                      currentFirstChild.stateNode.implementation ===\n                        prevDebugInfo.implementation\n                    ) {\n                      deleteRemainingChildren(\n                        returnFiber,\n                        currentFirstChild.sibling\n                      );\n                      lanes = useFiber(\n                        currentFirstChild,\n                        prevDebugInfo.children || []\n                      );\n                      lanes.return = returnFiber;\n                      returnFiber = lanes;\n                      break a;\n                    } else {\n                      deleteRemainingChildren(returnFiber, currentFirstChild);\n                      break;\n                    }\n                  else deleteChild(returnFiber, currentFirstChild);\n                  currentFirstChild = currentFirstChild.sibling;\n                }\n                lanes = createFiberFromPortal(\n                  prevDebugInfo,\n                  returnFiber.mode,\n                  lanes\n                );\n                lanes.return = returnFiber;\n                returnFiber = lanes;\n              }\n              return placeSingleChild(returnFiber);\n            case REACT_LAZY_TYPE:\n              return (\n                (prevDebugInfo = pushDebugInfo(newChild._debugInfo)),\n                (newChild = callLazyInitInDEV(newChild)),\n                (returnFiber = reconcileChildFibersImpl(\n                  returnFiber,\n                  currentFirstChild,\n                  newChild,\n                  lanes\n                )),\n                (currentDebugInfo = prevDebugInfo),\n                returnFiber\n              );\n          }\n          if (isArrayImpl(newChild))\n            return (\n              (prevDebugInfo = pushDebugInfo(newChild._debugInfo)),\n              (returnFiber = reconcileChildrenArray(\n                returnFiber,\n                currentFirstChild,\n                newChild,\n                lanes\n              )),\n              (currentDebugInfo = prevDebugInfo),\n              returnFiber\n            );\n          if (getIteratorFn(newChild)) {\n            prevDebugInfo = pushDebugInfo(newChild._debugInfo);\n            key = getIteratorFn(newChild);\n            if (\"function\" !== typeof key)\n              throw Error(\n                \"An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.\"\n              );\n            var newChildren = key.call(newChild);\n            if (newChildren === newChild) {\n              if (\n                0 !== returnFiber.tag ||\n                \"[object GeneratorFunction]\" !==\n                  Object.prototype.toString.call(returnFiber.type) ||\n                \"[object Generator]\" !==\n                  Object.prototype.toString.call(newChildren)\n              )\n                didWarnAboutGenerators ||\n                  console.error(\n                    \"Using Iterators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. You can also use an Iterable that can iterate multiple times over the same items.\"\n                  ),\n                  (didWarnAboutGenerators = !0);\n            } else\n              newChild.entries !== key ||\n                didWarnAboutMaps ||\n                (console.error(\n                  \"Using Maps as children is not supported. Use an array of keyed ReactElements instead.\"\n                ),\n                (didWarnAboutMaps = !0));\n            returnFiber = reconcileChildrenIterator(\n              returnFiber,\n              currentFirstChild,\n              newChildren,\n              lanes\n            );\n            currentDebugInfo = prevDebugInfo;\n            return returnFiber;\n          }\n          if (\"function\" === typeof newChild.then)\n            return (\n              (prevDebugInfo = pushDebugInfo(newChild._debugInfo)),\n              (returnFiber = reconcileChildFibersImpl(\n                returnFiber,\n                currentFirstChild,\n                unwrapThenable(newChild),\n                lanes\n              )),\n              (currentDebugInfo = prevDebugInfo),\n              returnFiber\n            );\n          if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n            return reconcileChildFibersImpl(\n              returnFiber,\n              currentFirstChild,\n              readContextDuringReconciliation(returnFiber, newChild),\n              lanes\n            );\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n        if (\n          (\"string\" === typeof newChild && \"\" !== newChild) ||\n          \"number\" === typeof newChild ||\n          \"bigint\" === typeof newChild\n        )\n          return (\n            (prevDebugInfo = \"\" + newChild),\n            null !== currentFirstChild && 6 === currentFirstChild.tag\n              ? (deleteRemainingChildren(\n                  returnFiber,\n                  currentFirstChild.sibling\n                ),\n                (lanes = useFiber(currentFirstChild, prevDebugInfo)),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes))\n              : (deleteRemainingChildren(returnFiber, currentFirstChild),\n                (lanes = createFiberFromText(\n                  prevDebugInfo,\n                  returnFiber.mode,\n                  lanes\n                )),\n                (lanes.return = returnFiber),\n                (lanes._debugOwner = returnFiber),\n                (lanes._debugTask = returnFiber._debugTask),\n                (lanes._debugInfo = currentDebugInfo),\n                (returnFiber = lanes)),\n            placeSingleChild(returnFiber)\n          );\n        \"function\" === typeof newChild &&\n          warnOnFunctionType(returnFiber, newChild);\n        \"symbol\" === typeof newChild && warnOnSymbolType(returnFiber, newChild);\n        return deleteRemainingChildren(returnFiber, currentFirstChild);\n      }\n      return function (returnFiber, currentFirstChild, newChild, lanes) {\n        var prevDebugInfo = currentDebugInfo;\n        currentDebugInfo = null;\n        try {\n          thenableIndexCounter = 0;\n          var firstChildFiber = reconcileChildFibersImpl(\n            returnFiber,\n            currentFirstChild,\n            newChild,\n            lanes\n          );\n          thenableState = null;\n          return firstChildFiber;\n        } catch (x) {\n          if (x === SuspenseException || x === SuspenseActionException) throw x;\n          var fiber = createFiber(29, x, null, returnFiber.mode);\n          fiber.lanes = lanes;\n          fiber.return = returnFiber;\n          var debugInfo = (fiber._debugInfo = currentDebugInfo);\n          fiber._debugOwner = returnFiber._debugOwner;\n          fiber._debugTask = returnFiber._debugTask;\n          if (null != debugInfo)\n            for (var i = debugInfo.length - 1; 0 <= i; i--)\n              if (\"string\" === typeof debugInfo[i].stack) {\n                fiber._debugOwner = debugInfo[i];\n                fiber._debugTask = debugInfo[i].debugTask;\n                break;\n              }\n          return fiber;\n        } finally {\n          currentDebugInfo = prevDebugInfo;\n        }\n      };\n    }\n    function pushPrimaryTreeSuspenseHandler(handler) {\n      var current = handler.alternate;\n      push(\n        suspenseStackCursor,\n        suspenseStackCursor.current & SubtreeSuspenseContextMask,\n        handler\n      );\n      push(suspenseHandlerStackCursor, handler, handler);\n      null === shellBoundary &&\n        (null === current || null !== currentTreeHiddenStackCursor.current\n          ? (shellBoundary = handler)\n          : null !== current.memoizedState && (shellBoundary = handler));\n    }\n    function pushOffscreenSuspenseHandler(fiber) {\n      if (22 === fiber.tag) {\n        if (\n          (push(suspenseStackCursor, suspenseStackCursor.current, fiber),\n          push(suspenseHandlerStackCursor, fiber, fiber),\n          null === shellBoundary)\n        ) {\n          var current = fiber.alternate;\n          null !== current &&\n            null !== current.memoizedState &&\n            (shellBoundary = fiber);\n        }\n      } else reuseSuspenseHandlerOnStack(fiber);\n    }\n    function reuseSuspenseHandlerOnStack(fiber) {\n      push(suspenseStackCursor, suspenseStackCursor.current, fiber);\n      push(\n        suspenseHandlerStackCursor,\n        suspenseHandlerStackCursor.current,\n        fiber\n      );\n    }\n    function popSuspenseHandler(fiber) {\n      pop(suspenseHandlerStackCursor, fiber);\n      shellBoundary === fiber && (shellBoundary = null);\n      pop(suspenseStackCursor, fiber);\n    }\n    function findFirstSuspended(row) {\n      for (var node = row; null !== node; ) {\n        if (13 === node.tag) {\n          var state = node.memoizedState;\n          if (\n            null !== state &&\n            ((state = state.dehydrated),\n            null === state ||\n              state.data === SUSPENSE_PENDING_START_DATA ||\n              isSuspenseInstanceFallback(state))\n          )\n            return node;\n        } else if (\n          19 === node.tag &&\n          void 0 !== node.memoizedProps.revealOrder\n        ) {\n          if (0 !== (node.flags & 128)) return node;\n        } else if (null !== node.child) {\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n        if (node === row) break;\n        for (; null === node.sibling; ) {\n          if (null === node.return || node.return === row) return null;\n          node = node.return;\n        }\n        node.sibling.return = node.return;\n        node = node.sibling;\n      }\n      return null;\n    }\n    function warnOnInvalidCallback(callback) {\n      if (null !== callback && \"function\" !== typeof callback) {\n        var key = String(callback);\n        didWarnOnInvalidCallback.has(key) ||\n          (didWarnOnInvalidCallback.add(key),\n          console.error(\n            \"Expected the last optional `callback` argument to be a function. Instead received: %s.\",\n            callback\n          ));\n      }\n    }\n    function applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      nextProps\n    ) {\n      var prevState = workInProgress.memoizedState,\n        partialState = getDerivedStateFromProps(nextProps, prevState);\n      if (workInProgress.mode & StrictLegacyMode) {\n        setIsStrictModeForDevtools(!0);\n        try {\n          partialState = getDerivedStateFromProps(nextProps, prevState);\n        } finally {\n          setIsStrictModeForDevtools(!1);\n        }\n      }\n      void 0 === partialState &&\n        ((ctor = getComponentNameFromType(ctor) || \"Component\"),\n        didWarnAboutUndefinedDerivedState.has(ctor) ||\n          (didWarnAboutUndefinedDerivedState.add(ctor),\n          console.error(\n            \"%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.\",\n            ctor\n          )));\n      prevState =\n        null === partialState || void 0 === partialState\n          ? prevState\n          : assign({}, prevState, partialState);\n      workInProgress.memoizedState = prevState;\n      0 === workInProgress.lanes &&\n        (workInProgress.updateQueue.baseState = prevState);\n    }\n    function checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext\n    ) {\n      var instance = workInProgress.stateNode;\n      if (\"function\" === typeof instance.shouldComponentUpdate) {\n        oldProps = instance.shouldComponentUpdate(\n          newProps,\n          newState,\n          nextContext\n        );\n        if (workInProgress.mode & StrictLegacyMode) {\n          setIsStrictModeForDevtools(!0);\n          try {\n            oldProps = instance.shouldComponentUpdate(\n              newProps,\n              newState,\n              nextContext\n            );\n          } finally {\n            setIsStrictModeForDevtools(!1);\n          }\n        }\n        void 0 === oldProps &&\n          console.error(\n            \"%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.\",\n            getComponentNameFromType(ctor) || \"Component\"\n          );\n        return oldProps;\n      }\n      return ctor.prototype && ctor.prototype.isPureReactComponent\n        ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n        : !0;\n    }\n    function callComponentWillReceiveProps(\n      workInProgress,\n      instance,\n      newProps,\n      nextContext\n    ) {\n      var oldState = instance.state;\n      \"function\" === typeof instance.componentWillReceiveProps &&\n        instance.componentWillReceiveProps(newProps, nextContext);\n      \"function\" === typeof instance.UNSAFE_componentWillReceiveProps &&\n        instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n      instance.state !== oldState &&\n        ((workInProgress =\n          getComponentNameFromFiber(workInProgress) || \"Component\"),\n        didWarnAboutStateAssignmentForComponent.has(workInProgress) ||\n          (didWarnAboutStateAssignmentForComponent.add(workInProgress),\n          console.error(\n            \"%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.\",\n            workInProgress\n          )),\n        classComponentUpdater.enqueueReplaceState(\n          instance,\n          instance.state,\n          null\n        ));\n    }\n    function resolveClassComponentProps(Component, baseProps) {\n      var newProps = baseProps;\n      if (\"ref\" in baseProps) {\n        newProps = {};\n        for (var propName in baseProps)\n          \"ref\" !== propName && (newProps[propName] = baseProps[propName]);\n      }\n      if ((Component = Component.defaultProps)) {\n        newProps === baseProps && (newProps = assign({}, newProps));\n        for (var _propName in Component)\n          void 0 === newProps[_propName] &&\n            (newProps[_propName] = Component[_propName]);\n      }\n      return newProps;\n    }\n    function defaultOnUncaughtError(error) {\n      reportGlobalError(error);\n      console.warn(\n        \"%s\\n\\n%s\\n\",\n        componentName\n          ? \"An error occurred in the <\" + componentName + \"> component.\"\n          : \"An error occurred in one of your React components.\",\n        \"Consider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://react.dev/link/error-boundaries to learn more about error boundaries.\"\n      );\n    }\n    function defaultOnCaughtError(error) {\n      var componentNameMessage = componentName\n          ? \"The above error occurred in the <\" + componentName + \"> component.\"\n          : \"The above error occurred in one of your React components.\",\n        recreateMessage =\n          \"React will try to recreate this component tree from scratch using the error boundary you provided, \" +\n          ((errorBoundaryName || \"Anonymous\") + \".\");\n      if (\n        \"object\" === typeof error &&\n        null !== error &&\n        \"string\" === typeof error.environmentName\n      ) {\n        var JSCompiler_inline_result = error.environmentName;\n        error = [\n          \"%o\\n\\n%s\\n\\n%s\\n\",\n          error,\n          componentNameMessage,\n          recreateMessage\n        ].slice(0);\n        \"string\" === typeof error[0]\n          ? error.splice(\n              0,\n              1,\n              badgeFormat + error[0],\n              badgeStyle,\n              pad + JSCompiler_inline_result + pad,\n              resetStyle\n            )\n          : error.splice(\n              0,\n              0,\n              badgeFormat,\n              badgeStyle,\n              pad + JSCompiler_inline_result + pad,\n              resetStyle\n            );\n        error.unshift(console);\n        JSCompiler_inline_result = bind.apply(console.error, error);\n        JSCompiler_inline_result();\n      } else\n        console.error(\n          \"%o\\n\\n%s\\n\\n%s\\n\",\n          error,\n          componentNameMessage,\n          recreateMessage\n        );\n    }\n    function defaultOnRecoverableError(error) {\n      reportGlobalError(error);\n    }\n    function logUncaughtError(root, errorInfo) {\n      try {\n        componentName = errorInfo.source\n          ? getComponentNameFromFiber(errorInfo.source)\n          : null;\n        errorBoundaryName = null;\n        var error = errorInfo.value;\n        if (null !== ReactSharedInternals.actQueue)\n          ReactSharedInternals.thrownErrors.push(error);\n        else {\n          var onUncaughtError = root.onUncaughtError;\n          onUncaughtError(error, { componentStack: errorInfo.stack });\n        }\n      } catch (e$5) {\n        setTimeout(function () {\n          throw e$5;\n        });\n      }\n    }\n    function logCaughtError(root, boundary, errorInfo) {\n      try {\n        componentName = errorInfo.source\n          ? getComponentNameFromFiber(errorInfo.source)\n          : null;\n        errorBoundaryName = getComponentNameFromFiber(boundary);\n        var onCaughtError = root.onCaughtError;\n        onCaughtError(errorInfo.value, {\n          componentStack: errorInfo.stack,\n          errorBoundary: 1 === boundary.tag ? boundary.stateNode : null\n        });\n      } catch (e$6) {\n        setTimeout(function () {\n          throw e$6;\n        });\n      }\n    }\n    function createRootErrorUpdate(root, errorInfo, lane) {\n      lane = createUpdate(lane);\n      lane.tag = CaptureUpdate;\n      lane.payload = { element: null };\n      lane.callback = function () {\n        runWithFiberInDEV(errorInfo.source, logUncaughtError, root, errorInfo);\n      };\n      return lane;\n    }\n    function createClassErrorUpdate(lane) {\n      lane = createUpdate(lane);\n      lane.tag = CaptureUpdate;\n      return lane;\n    }\n    function initializeClassErrorUpdate(update, root, fiber, errorInfo) {\n      var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n      if (\"function\" === typeof getDerivedStateFromError) {\n        var error = errorInfo.value;\n        update.payload = function () {\n          return getDerivedStateFromError(error);\n        };\n        update.callback = function () {\n          markFailedErrorBoundaryForHotReloading(fiber);\n          runWithFiberInDEV(\n            errorInfo.source,\n            logCaughtError,\n            root,\n            fiber,\n            errorInfo\n          );\n        };\n      }\n      var inst = fiber.stateNode;\n      null !== inst &&\n        \"function\" === typeof inst.componentDidCatch &&\n        (update.callback = function () {\n          markFailedErrorBoundaryForHotReloading(fiber);\n          runWithFiberInDEV(\n            errorInfo.source,\n            logCaughtError,\n            root,\n            fiber,\n            errorInfo\n          );\n          \"function\" !== typeof getDerivedStateFromError &&\n            (null === legacyErrorBoundariesThatAlreadyFailed\n              ? (legacyErrorBoundariesThatAlreadyFailed = new Set([this]))\n              : legacyErrorBoundariesThatAlreadyFailed.add(this));\n          callComponentDidCatchInDEV(this, errorInfo);\n          \"function\" === typeof getDerivedStateFromError ||\n            (0 === (fiber.lanes & 2) &&\n              console.error(\n                \"%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.\",\n                getComponentNameFromFiber(fiber) || \"Unknown\"\n              ));\n        });\n    }\n    function throwException(\n      root,\n      returnFiber,\n      sourceFiber,\n      value,\n      rootRenderLanes\n    ) {\n      sourceFiber.flags |= 32768;\n      isDevToolsPresent && restorePendingUpdaters(root, rootRenderLanes);\n      if (\n        null !== value &&\n        \"object\" === typeof value &&\n        \"function\" === typeof value.then\n      ) {\n        returnFiber = sourceFiber.alternate;\n        null !== returnFiber &&\n          propagateParentContextChanges(\n            returnFiber,\n            sourceFiber,\n            rootRenderLanes,\n            !0\n          );\n        isHydrating && (didSuspendOrErrorDEV = !0);\n        sourceFiber = suspenseHandlerStackCursor.current;\n        if (null !== sourceFiber) {\n          switch (sourceFiber.tag) {\n            case 13:\n              return (\n                null === shellBoundary\n                  ? renderDidSuspendDelayIfPossible()\n                  : null === sourceFiber.alternate &&\n                    workInProgressRootExitStatus === RootInProgress &&\n                    (workInProgressRootExitStatus = RootSuspended),\n                (sourceFiber.flags &= -257),\n                (sourceFiber.flags |= 65536),\n                (sourceFiber.lanes = rootRenderLanes),\n                value === noopSuspenseyCommitThenable\n                  ? (sourceFiber.flags |= 16384)\n                  : ((returnFiber = sourceFiber.updateQueue),\n                    null === returnFiber\n                      ? (sourceFiber.updateQueue = new Set([value]))\n                      : returnFiber.add(value),\n                    attachPingListener(root, value, rootRenderLanes)),\n                !1\n              );\n            case 22:\n              return (\n                (sourceFiber.flags |= 65536),\n                value === noopSuspenseyCommitThenable\n                  ? (sourceFiber.flags |= 16384)\n                  : ((returnFiber = sourceFiber.updateQueue),\n                    null === returnFiber\n                      ? ((returnFiber = {\n                          transitions: null,\n                          markerInstances: null,\n                          retryQueue: new Set([value])\n                        }),\n                        (sourceFiber.updateQueue = returnFiber))\n                      : ((sourceFiber = returnFiber.retryQueue),\n                        null === sourceFiber\n                          ? (returnFiber.retryQueue = new Set([value]))\n                          : sourceFiber.add(value)),\n                    attachPingListener(root, value, rootRenderLanes)),\n                !1\n              );\n          }\n          throw Error(\n            \"Unexpected Suspense handler tag (\" +\n              sourceFiber.tag +\n              \"). This is a bug in React.\"\n          );\n        }\n        attachPingListener(root, value, rootRenderLanes);\n        renderDidSuspendDelayIfPossible();\n        return !1;\n      }\n      if (isHydrating)\n        return (\n          (didSuspendOrErrorDEV = !0),\n          (returnFiber = suspenseHandlerStackCursor.current),\n          null !== returnFiber\n            ? (0 === (returnFiber.flags & 65536) && (returnFiber.flags |= 256),\n              (returnFiber.flags |= 65536),\n              (returnFiber.lanes = rootRenderLanes),\n              value !== HydrationMismatchException &&\n                queueHydrationError(\n                  createCapturedValueAtFiber(\n                    Error(\n                      \"There was an error while hydrating but React was able to recover by instead client rendering from the nearest Suspense boundary.\",\n                      { cause: value }\n                    ),\n                    sourceFiber\n                  )\n                ))\n            : (value !== HydrationMismatchException &&\n                queueHydrationError(\n                  createCapturedValueAtFiber(\n                    Error(\n                      \"There was an error while hydrating but React was able to recover by instead client rendering the entire root.\",\n                      { cause: value }\n                    ),\n                    sourceFiber\n                  )\n                ),\n              (root = root.current.alternate),\n              (root.flags |= 65536),\n              (rootRenderLanes &= -rootRenderLanes),\n              (root.lanes |= rootRenderLanes),\n              (value = createCapturedValueAtFiber(value, sourceFiber)),\n              (rootRenderLanes = createRootErrorUpdate(\n                root.stateNode,\n                value,\n                rootRenderLanes\n              )),\n              enqueueCapturedUpdate(root, rootRenderLanes),\n              workInProgressRootExitStatus !== RootSuspendedWithDelay &&\n                (workInProgressRootExitStatus = RootErrored)),\n          !1\n        );\n      var error = createCapturedValueAtFiber(\n        Error(\n          \"There was an error during concurrent rendering but React was able to recover by instead synchronously rendering the entire root.\",\n          { cause: value }\n        ),\n        sourceFiber\n      );\n      null === workInProgressRootConcurrentErrors\n        ? (workInProgressRootConcurrentErrors = [error])\n        : workInProgressRootConcurrentErrors.push(error);\n      workInProgressRootExitStatus !== RootSuspendedWithDelay &&\n        (workInProgressRootExitStatus = RootErrored);\n      if (null === returnFiber) return !0;\n      value = createCapturedValueAtFiber(value, sourceFiber);\n      sourceFiber = returnFiber;\n      do {\n        switch (sourceFiber.tag) {\n          case 3:\n            return (\n              (sourceFiber.flags |= 65536),\n              (root = rootRenderLanes & -rootRenderLanes),\n              (sourceFiber.lanes |= root),\n              (root = createRootErrorUpdate(\n                sourceFiber.stateNode,\n                value,\n                root\n              )),\n              enqueueCapturedUpdate(sourceFiber, root),\n              !1\n            );\n          case 1:\n            if (\n              ((returnFiber = sourceFiber.type),\n              (error = sourceFiber.stateNode),\n              0 === (sourceFiber.flags & 128) &&\n                (\"function\" === typeof returnFiber.getDerivedStateFromError ||\n                  (null !== error &&\n                    \"function\" === typeof error.componentDidCatch &&\n                    (null === legacyErrorBoundariesThatAlreadyFailed ||\n                      !legacyErrorBoundariesThatAlreadyFailed.has(error)))))\n            )\n              return (\n                (sourceFiber.flags |= 65536),\n                (rootRenderLanes &= -rootRenderLanes),\n                (sourceFiber.lanes |= rootRenderLanes),\n                (rootRenderLanes = createClassErrorUpdate(rootRenderLanes)),\n                initializeClassErrorUpdate(\n                  rootRenderLanes,\n                  root,\n                  sourceFiber,\n                  value\n                ),\n                enqueueCapturedUpdate(sourceFiber, rootRenderLanes),\n                !1\n              );\n        }\n        sourceFiber = sourceFiber.return;\n      } while (null !== sourceFiber);\n      return !1;\n    }\n    function reconcileChildren(\n      current,\n      workInProgress,\n      nextChildren,\n      renderLanes\n    ) {\n      workInProgress.child =\n        null === current\n          ? mountChildFibers(workInProgress, null, nextChildren, renderLanes)\n          : reconcileChildFibers(\n              workInProgress,\n              current.child,\n              nextChildren,\n              renderLanes\n            );\n    }\n    function updateForwardRef(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes\n    ) {\n      Component = Component.render;\n      var ref = workInProgress.ref;\n      if (\"ref\" in nextProps) {\n        var propsWithoutRef = {};\n        for (var key in nextProps)\n          \"ref\" !== key && (propsWithoutRef[key] = nextProps[key]);\n      } else propsWithoutRef = nextProps;\n      prepareToReadContext(workInProgress);\n      markComponentRenderStarted(workInProgress);\n      nextProps = renderWithHooks(\n        current,\n        workInProgress,\n        Component,\n        propsWithoutRef,\n        ref,\n        renderLanes\n      );\n      key = checkDidRenderIdHook();\n      markComponentRenderStopped();\n      if (null !== current && !didReceiveUpdate)\n        return (\n          bailoutHooks(current, workInProgress, renderLanes),\n          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n        );\n      isHydrating && key && pushMaterializedTreeId(workInProgress);\n      workInProgress.flags |= 1;\n      reconcileChildren(current, workInProgress, nextProps, renderLanes);\n      return workInProgress.child;\n    }\n    function updateMemoComponent(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes\n    ) {\n      if (null === current) {\n        var type = Component.type;\n        if (\n          \"function\" === typeof type &&\n          !shouldConstruct(type) &&\n          void 0 === type.defaultProps &&\n          null === Component.compare\n        )\n          return (\n            (Component = resolveFunctionForHotReloading(type)),\n            (workInProgress.tag = 15),\n            (workInProgress.type = Component),\n            validateFunctionComponentInDev(workInProgress, type),\n            updateSimpleMemoComponent(\n              current,\n              workInProgress,\n              Component,\n              nextProps,\n              renderLanes\n            )\n          );\n        current = createFiberFromTypeAndProps(\n          Component.type,\n          null,\n          nextProps,\n          workInProgress,\n          workInProgress.mode,\n          renderLanes\n        );\n        current.ref = workInProgress.ref;\n        current.return = workInProgress;\n        return (workInProgress.child = current);\n      }\n      type = current.child;\n      if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n        var prevProps = type.memoizedProps;\n        Component = Component.compare;\n        Component = null !== Component ? Component : shallowEqual;\n        if (\n          Component(prevProps, nextProps) &&\n          current.ref === workInProgress.ref\n        )\n          return bailoutOnAlreadyFinishedWork(\n            current,\n            workInProgress,\n            renderLanes\n          );\n      }\n      workInProgress.flags |= 1;\n      current = createWorkInProgress(type, nextProps);\n      current.ref = workInProgress.ref;\n      current.return = workInProgress;\n      return (workInProgress.child = current);\n    }\n    function updateSimpleMemoComponent(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes\n    ) {\n      if (null !== current) {\n        var prevProps = current.memoizedProps;\n        if (\n          shallowEqual(prevProps, nextProps) &&\n          current.ref === workInProgress.ref &&\n          workInProgress.type === current.type\n        )\n          if (\n            ((didReceiveUpdate = !1),\n            (workInProgress.pendingProps = nextProps = prevProps),\n            checkScheduledUpdateOrContext(current, renderLanes))\n          )\n            0 !== (current.flags & 131072) && (didReceiveUpdate = !0);\n          else\n            return (\n              (workInProgress.lanes = current.lanes),\n              bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n            );\n      }\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        Component,\n        nextProps,\n        renderLanes\n      );\n    }\n    function updateOffscreenComponent(current, workInProgress, renderLanes) {\n      var nextProps = workInProgress.pendingProps,\n        nextChildren = nextProps.children,\n        prevState = null !== current ? current.memoizedState : null;\n      if (\"hidden\" === nextProps.mode) {\n        if (0 !== (workInProgress.flags & 128)) {\n          nextProps =\n            null !== prevState\n              ? prevState.baseLanes | renderLanes\n              : renderLanes;\n          if (null !== current) {\n            nextChildren = workInProgress.child = current.child;\n            for (prevState = 0; null !== nextChildren; )\n              (prevState =\n                prevState | nextChildren.lanes | nextChildren.childLanes),\n                (nextChildren = nextChildren.sibling);\n            workInProgress.childLanes = prevState & ~nextProps;\n          } else (workInProgress.childLanes = 0), (workInProgress.child = null);\n          return deferHiddenOffscreenComponent(\n            current,\n            workInProgress,\n            nextProps,\n            renderLanes\n          );\n        }\n        if (0 !== (renderLanes & 536870912))\n          (workInProgress.memoizedState = { baseLanes: 0, cachePool: null }),\n            null !== current &&\n              pushTransition(\n                workInProgress,\n                null !== prevState ? prevState.cachePool : null\n              ),\n            null !== prevState\n              ? pushHiddenContext(workInProgress, prevState)\n              : reuseHiddenContextOnStack(workInProgress),\n            pushOffscreenSuspenseHandler(workInProgress);\n        else\n          return (\n            (workInProgress.lanes = workInProgress.childLanes = 536870912),\n            deferHiddenOffscreenComponent(\n              current,\n              workInProgress,\n              null !== prevState\n                ? prevState.baseLanes | renderLanes\n                : renderLanes,\n              renderLanes\n            )\n          );\n      } else\n        null !== prevState\n          ? (pushTransition(workInProgress, prevState.cachePool),\n            pushHiddenContext(workInProgress, prevState),\n            reuseSuspenseHandlerOnStack(workInProgress),\n            (workInProgress.memoizedState = null))\n          : (null !== current && pushTransition(workInProgress, null),\n            reuseHiddenContextOnStack(workInProgress),\n            reuseSuspenseHandlerOnStack(workInProgress));\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function deferHiddenOffscreenComponent(\n      current,\n      workInProgress,\n      nextBaseLanes,\n      renderLanes\n    ) {\n      var JSCompiler_inline_result = peekCacheFromPool();\n      JSCompiler_inline_result =\n        null === JSCompiler_inline_result\n          ? null\n          : {\n              parent: CacheContext._currentValue,\n              pool: JSCompiler_inline_result\n            };\n      workInProgress.memoizedState = {\n        baseLanes: nextBaseLanes,\n        cachePool: JSCompiler_inline_result\n      };\n      null !== current && pushTransition(workInProgress, null);\n      reuseHiddenContextOnStack(workInProgress);\n      pushOffscreenSuspenseHandler(workInProgress);\n      null !== current &&\n        propagateParentContextChanges(current, workInProgress, renderLanes, !0);\n      return null;\n    }\n    function markRef(current, workInProgress) {\n      var ref = workInProgress.ref;\n      if (null === ref)\n        null !== current &&\n          null !== current.ref &&\n          (workInProgress.flags |= 4194816);\n      else {\n        if (\"function\" !== typeof ref && \"object\" !== typeof ref)\n          throw Error(\n            \"Expected ref to be a function, an object returned by React.createRef(), or undefined/null.\"\n          );\n        if (null === current || current.ref !== ref)\n          workInProgress.flags |= 4194816;\n      }\n    }\n    function updateFunctionComponent(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes\n    ) {\n      if (\n        Component.prototype &&\n        \"function\" === typeof Component.prototype.render\n      ) {\n        var componentName = getComponentNameFromType(Component) || \"Unknown\";\n        didWarnAboutBadClass[componentName] ||\n          (console.error(\n            \"The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.\",\n            componentName,\n            componentName\n          ),\n          (didWarnAboutBadClass[componentName] = !0));\n      }\n      workInProgress.mode & StrictLegacyMode &&\n        ReactStrictModeWarnings.recordLegacyContextWarning(\n          workInProgress,\n          null\n        );\n      null === current &&\n        (validateFunctionComponentInDev(workInProgress, workInProgress.type),\n        Component.contextTypes &&\n          ((componentName = getComponentNameFromType(Component) || \"Unknown\"),\n          didWarnAboutContextTypes[componentName] ||\n            ((didWarnAboutContextTypes[componentName] = !0),\n            console.error(\n              \"%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with React.useContext() instead. (https://react.dev/link/legacy-context)\",\n              componentName\n            ))));\n      prepareToReadContext(workInProgress);\n      markComponentRenderStarted(workInProgress);\n      Component = renderWithHooks(\n        current,\n        workInProgress,\n        Component,\n        nextProps,\n        void 0,\n        renderLanes\n      );\n      nextProps = checkDidRenderIdHook();\n      markComponentRenderStopped();\n      if (null !== current && !didReceiveUpdate)\n        return (\n          bailoutHooks(current, workInProgress, renderLanes),\n          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n        );\n      isHydrating && nextProps && pushMaterializedTreeId(workInProgress);\n      workInProgress.flags |= 1;\n      reconcileChildren(current, workInProgress, Component, renderLanes);\n      return workInProgress.child;\n    }\n    function replayFunctionComponent(\n      current,\n      workInProgress,\n      nextProps,\n      Component,\n      secondArg,\n      renderLanes\n    ) {\n      prepareToReadContext(workInProgress);\n      markComponentRenderStarted(workInProgress);\n      hookTypesUpdateIndexDev = -1;\n      ignorePreviousDependencies =\n        null !== current && current.type !== workInProgress.type;\n      workInProgress.updateQueue = null;\n      nextProps = renderWithHooksAgain(\n        workInProgress,\n        Component,\n        nextProps,\n        secondArg\n      );\n      finishRenderingHooks(current, workInProgress);\n      Component = checkDidRenderIdHook();\n      markComponentRenderStopped();\n      if (null !== current && !didReceiveUpdate)\n        return (\n          bailoutHooks(current, workInProgress, renderLanes),\n          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n        );\n      isHydrating && Component && pushMaterializedTreeId(workInProgress);\n      workInProgress.flags |= 1;\n      reconcileChildren(current, workInProgress, nextProps, renderLanes);\n      return workInProgress.child;\n    }\n    function updateClassComponent(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes\n    ) {\n      switch (shouldErrorImpl(workInProgress)) {\n        case !1:\n          var _instance = workInProgress.stateNode,\n            state = new workInProgress.type(\n              workInProgress.memoizedProps,\n              _instance.context\n            ).state;\n          _instance.updater.enqueueSetState(_instance, state, null);\n          break;\n        case !0:\n          workInProgress.flags |= 128;\n          workInProgress.flags |= 65536;\n          _instance = Error(\"Simulated error coming from DevTools\");\n          var lane = renderLanes & -renderLanes;\n          workInProgress.lanes |= lane;\n          state = workInProgressRoot;\n          if (null === state)\n            throw Error(\n              \"Expected a work-in-progress root. This is a bug in React. Please file an issue.\"\n            );\n          lane = createClassErrorUpdate(lane);\n          initializeClassErrorUpdate(\n            lane,\n            state,\n            workInProgress,\n            createCapturedValueAtFiber(_instance, workInProgress)\n          );\n          enqueueCapturedUpdate(workInProgress, lane);\n      }\n      prepareToReadContext(workInProgress);\n      if (null === workInProgress.stateNode) {\n        state = emptyContextObject;\n        _instance = Component.contextType;\n        \"contextType\" in Component &&\n          null !== _instance &&\n          (void 0 === _instance || _instance.$$typeof !== REACT_CONTEXT_TYPE) &&\n          !didWarnAboutInvalidateContextType.has(Component) &&\n          (didWarnAboutInvalidateContextType.add(Component),\n          (lane =\n            void 0 === _instance\n              ? \" However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.\"\n              : \"object\" !== typeof _instance\n                ? \" However, it is set to a \" + typeof _instance + \".\"\n                : _instance.$$typeof === REACT_CONSUMER_TYPE\n                  ? \" Did you accidentally pass the Context.Consumer instead?\"\n                  : \" However, it is set to an object with keys {\" +\n                    Object.keys(_instance).join(\", \") +\n                    \"}.\"),\n          console.error(\n            \"%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s\",\n            getComponentNameFromType(Component) || \"Component\",\n            lane\n          ));\n        \"object\" === typeof _instance &&\n          null !== _instance &&\n          (state = readContext(_instance));\n        _instance = new Component(nextProps, state);\n        if (workInProgress.mode & StrictLegacyMode) {\n          setIsStrictModeForDevtools(!0);\n          try {\n            _instance = new Component(nextProps, state);\n          } finally {\n            setIsStrictModeForDevtools(!1);\n          }\n        }\n        state = workInProgress.memoizedState =\n          null !== _instance.state && void 0 !== _instance.state\n            ? _instance.state\n            : null;\n        _instance.updater = classComponentUpdater;\n        workInProgress.stateNode = _instance;\n        _instance._reactInternals = workInProgress;\n        _instance._reactInternalInstance = fakeInternalInstance;\n        \"function\" === typeof Component.getDerivedStateFromProps &&\n          null === state &&\n          ((state = getComponentNameFromType(Component) || \"Component\"),\n          didWarnAboutUninitializedState.has(state) ||\n            (didWarnAboutUninitializedState.add(state),\n            console.error(\n              \"`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.\",\n              state,\n              null === _instance.state ? \"null\" : \"undefined\",\n              state\n            )));\n        if (\n          \"function\" === typeof Component.getDerivedStateFromProps ||\n          \"function\" === typeof _instance.getSnapshotBeforeUpdate\n        ) {\n          var foundWillUpdateName = (lane = state = null);\n          \"function\" === typeof _instance.componentWillMount &&\n          !0 !== _instance.componentWillMount.__suppressDeprecationWarning\n            ? (state = \"componentWillMount\")\n            : \"function\" === typeof _instance.UNSAFE_componentWillMount &&\n              (state = \"UNSAFE_componentWillMount\");\n          \"function\" === typeof _instance.componentWillReceiveProps &&\n          !0 !==\n            _instance.componentWillReceiveProps.__suppressDeprecationWarning\n            ? (lane = \"componentWillReceiveProps\")\n            : \"function\" ===\n                typeof _instance.UNSAFE_componentWillReceiveProps &&\n              (lane = \"UNSAFE_componentWillReceiveProps\");\n          \"function\" === typeof _instance.componentWillUpdate &&\n          !0 !== _instance.componentWillUpdate.__suppressDeprecationWarning\n            ? (foundWillUpdateName = \"componentWillUpdate\")\n            : \"function\" === typeof _instance.UNSAFE_componentWillUpdate &&\n              (foundWillUpdateName = \"UNSAFE_componentWillUpdate\");\n          if (null !== state || null !== lane || null !== foundWillUpdateName) {\n            _instance = getComponentNameFromType(Component) || \"Component\";\n            var newApiName =\n              \"function\" === typeof Component.getDerivedStateFromProps\n                ? \"getDerivedStateFromProps()\"\n                : \"getSnapshotBeforeUpdate()\";\n            didWarnAboutLegacyLifecyclesAndDerivedState.has(_instance) ||\n              (didWarnAboutLegacyLifecyclesAndDerivedState.add(_instance),\n              console.error(\n                \"Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\nhttps://react.dev/link/unsafe-component-lifecycles\",\n                _instance,\n                newApiName,\n                null !== state ? \"\\n  \" + state : \"\",\n                null !== lane ? \"\\n  \" + lane : \"\",\n                null !== foundWillUpdateName ? \"\\n  \" + foundWillUpdateName : \"\"\n              ));\n          }\n        }\n        _instance = workInProgress.stateNode;\n        state = getComponentNameFromType(Component) || \"Component\";\n        _instance.render ||\n          (Component.prototype &&\n          \"function\" === typeof Component.prototype.render\n            ? console.error(\n                \"No `render` method found on the %s instance: did you accidentally return an object from the constructor?\",\n                state\n              )\n            : console.error(\n                \"No `render` method found on the %s instance: you may have forgotten to define `render`.\",\n                state\n              ));\n        !_instance.getInitialState ||\n          _instance.getInitialState.isReactClassApproved ||\n          _instance.state ||\n          console.error(\n            \"getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?\",\n            state\n          );\n        _instance.getDefaultProps &&\n          !_instance.getDefaultProps.isReactClassApproved &&\n          console.error(\n            \"getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.\",\n            state\n          );\n        _instance.contextType &&\n          console.error(\n            \"contextType was defined as an instance property on %s. Use a static property to define contextType instead.\",\n            state\n          );\n        Component.childContextTypes &&\n          !didWarnAboutChildContextTypes.has(Component) &&\n          (didWarnAboutChildContextTypes.add(Component),\n          console.error(\n            \"%s uses the legacy childContextTypes API which was removed in React 19. Use React.createContext() instead. (https://react.dev/link/legacy-context)\",\n            state\n          ));\n        Component.contextTypes &&\n          !didWarnAboutContextTypes$1.has(Component) &&\n          (didWarnAboutContextTypes$1.add(Component),\n          console.error(\n            \"%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with static contextType instead. (https://react.dev/link/legacy-context)\",\n            state\n          ));\n        \"function\" === typeof _instance.componentShouldUpdate &&\n          console.error(\n            \"%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.\",\n            state\n          );\n        Component.prototype &&\n          Component.prototype.isPureReactComponent &&\n          \"undefined\" !== typeof _instance.shouldComponentUpdate &&\n          console.error(\n            \"%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.\",\n            getComponentNameFromType(Component) || \"A pure component\"\n          );\n        \"function\" === typeof _instance.componentDidUnmount &&\n          console.error(\n            \"%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?\",\n            state\n          );\n        \"function\" === typeof _instance.componentDidReceiveProps &&\n          console.error(\n            \"%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().\",\n            state\n          );\n        \"function\" === typeof _instance.componentWillRecieveProps &&\n          console.error(\n            \"%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?\",\n            state\n          );\n        \"function\" === typeof _instance.UNSAFE_componentWillRecieveProps &&\n          console.error(\n            \"%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?\",\n            state\n          );\n        lane = _instance.props !== nextProps;\n        void 0 !== _instance.props &&\n          lane &&\n          console.error(\n            \"When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.\",\n            state\n          );\n        _instance.defaultProps &&\n          console.error(\n            \"Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.\",\n            state,\n            state\n          );\n        \"function\" !== typeof _instance.getSnapshotBeforeUpdate ||\n          \"function\" === typeof _instance.componentDidUpdate ||\n          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(Component) ||\n          (didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(Component),\n          console.error(\n            \"%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.\",\n            getComponentNameFromType(Component)\n          ));\n        \"function\" === typeof _instance.getDerivedStateFromProps &&\n          console.error(\n            \"%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.\",\n            state\n          );\n        \"function\" === typeof _instance.getDerivedStateFromError &&\n          console.error(\n            \"%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.\",\n            state\n          );\n        \"function\" === typeof Component.getSnapshotBeforeUpdate &&\n          console.error(\n            \"%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.\",\n            state\n          );\n        (lane = _instance.state) &&\n          (\"object\" !== typeof lane || isArrayImpl(lane)) &&\n          console.error(\"%s.state: must be set to an object or null\", state);\n        \"function\" === typeof _instance.getChildContext &&\n          \"object\" !== typeof Component.childContextTypes &&\n          console.error(\n            \"%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().\",\n            state\n          );\n        _instance = workInProgress.stateNode;\n        _instance.props = nextProps;\n        _instance.state = workInProgress.memoizedState;\n        _instance.refs = {};\n        initializeUpdateQueue(workInProgress);\n        state = Component.contextType;\n        _instance.context =\n          \"object\" === typeof state && null !== state\n            ? readContext(state)\n            : emptyContextObject;\n        _instance.state === nextProps &&\n          ((state = getComponentNameFromType(Component) || \"Component\"),\n          didWarnAboutDirectlyAssigningPropsToState.has(state) ||\n            (didWarnAboutDirectlyAssigningPropsToState.add(state),\n            console.error(\n              \"%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.\",\n              state\n            )));\n        workInProgress.mode & StrictLegacyMode &&\n          ReactStrictModeWarnings.recordLegacyContextWarning(\n            workInProgress,\n            _instance\n          );\n        ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(\n          workInProgress,\n          _instance\n        );\n        _instance.state = workInProgress.memoizedState;\n        state = Component.getDerivedStateFromProps;\n        \"function\" === typeof state &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            state,\n            nextProps\n          ),\n          (_instance.state = workInProgress.memoizedState));\n        \"function\" === typeof Component.getDerivedStateFromProps ||\n          \"function\" === typeof _instance.getSnapshotBeforeUpdate ||\n          (\"function\" !== typeof _instance.UNSAFE_componentWillMount &&\n            \"function\" !== typeof _instance.componentWillMount) ||\n          ((state = _instance.state),\n          \"function\" === typeof _instance.componentWillMount &&\n            _instance.componentWillMount(),\n          \"function\" === typeof _instance.UNSAFE_componentWillMount &&\n            _instance.UNSAFE_componentWillMount(),\n          state !== _instance.state &&\n            (console.error(\n              \"%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.\",\n              getComponentNameFromFiber(workInProgress) || \"Component\"\n            ),\n            classComponentUpdater.enqueueReplaceState(\n              _instance,\n              _instance.state,\n              null\n            )),\n          processUpdateQueue(workInProgress, nextProps, _instance, renderLanes),\n          suspendIfUpdateReadFromEntangledAsyncAction(),\n          (_instance.state = workInProgress.memoizedState));\n        \"function\" === typeof _instance.componentDidMount &&\n          (workInProgress.flags |= 4194308);\n        (workInProgress.mode & StrictEffectsMode) !== NoMode &&\n          (workInProgress.flags |= 134217728);\n        _instance = !0;\n      } else if (null === current) {\n        _instance = workInProgress.stateNode;\n        var unresolvedOldProps = workInProgress.memoizedProps;\n        lane = resolveClassComponentProps(Component, unresolvedOldProps);\n        _instance.props = lane;\n        var oldContext = _instance.context;\n        foundWillUpdateName = Component.contextType;\n        state = emptyContextObject;\n        \"object\" === typeof foundWillUpdateName &&\n          null !== foundWillUpdateName &&\n          (state = readContext(foundWillUpdateName));\n        newApiName = Component.getDerivedStateFromProps;\n        foundWillUpdateName =\n          \"function\" === typeof newApiName ||\n          \"function\" === typeof _instance.getSnapshotBeforeUpdate;\n        unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;\n        foundWillUpdateName ||\n          (\"function\" !== typeof _instance.UNSAFE_componentWillReceiveProps &&\n            \"function\" !== typeof _instance.componentWillReceiveProps) ||\n          ((unresolvedOldProps || oldContext !== state) &&\n            callComponentWillReceiveProps(\n              workInProgress,\n              _instance,\n              nextProps,\n              state\n            ));\n        hasForceUpdate = !1;\n        var oldState = workInProgress.memoizedState;\n        _instance.state = oldState;\n        processUpdateQueue(workInProgress, nextProps, _instance, renderLanes);\n        suspendIfUpdateReadFromEntangledAsyncAction();\n        oldContext = workInProgress.memoizedState;\n        unresolvedOldProps || oldState !== oldContext || hasForceUpdate\n          ? (\"function\" === typeof newApiName &&\n              (applyDerivedStateFromProps(\n                workInProgress,\n                Component,\n                newApiName,\n                nextProps\n              ),\n              (oldContext = workInProgress.memoizedState)),\n            (lane =\n              hasForceUpdate ||\n              checkShouldComponentUpdate(\n                workInProgress,\n                Component,\n                lane,\n                nextProps,\n                oldState,\n                oldContext,\n                state\n              ))\n              ? (foundWillUpdateName ||\n                  (\"function\" !== typeof _instance.UNSAFE_componentWillMount &&\n                    \"function\" !== typeof _instance.componentWillMount) ||\n                  (\"function\" === typeof _instance.componentWillMount &&\n                    _instance.componentWillMount(),\n                  \"function\" === typeof _instance.UNSAFE_componentWillMount &&\n                    _instance.UNSAFE_componentWillMount()),\n                \"function\" === typeof _instance.componentDidMount &&\n                  (workInProgress.flags |= 4194308),\n                (workInProgress.mode & StrictEffectsMode) !== NoMode &&\n                  (workInProgress.flags |= 134217728))\n              : (\"function\" === typeof _instance.componentDidMount &&\n                  (workInProgress.flags |= 4194308),\n                (workInProgress.mode & StrictEffectsMode) !== NoMode &&\n                  (workInProgress.flags |= 134217728),\n                (workInProgress.memoizedProps = nextProps),\n                (workInProgress.memoizedState = oldContext)),\n            (_instance.props = nextProps),\n            (_instance.state = oldContext),\n            (_instance.context = state),\n            (_instance = lane))\n          : (\"function\" === typeof _instance.componentDidMount &&\n              (workInProgress.flags |= 4194308),\n            (workInProgress.mode & StrictEffectsMode) !== NoMode &&\n              (workInProgress.flags |= 134217728),\n            (_instance = !1));\n      } else {\n        _instance = workInProgress.stateNode;\n        cloneUpdateQueue(current, workInProgress);\n        state = workInProgress.memoizedProps;\n        foundWillUpdateName = resolveClassComponentProps(Component, state);\n        _instance.props = foundWillUpdateName;\n        newApiName = workInProgress.pendingProps;\n        oldState = _instance.context;\n        oldContext = Component.contextType;\n        lane = emptyContextObject;\n        \"object\" === typeof oldContext &&\n          null !== oldContext &&\n          (lane = readContext(oldContext));\n        unresolvedOldProps = Component.getDerivedStateFromProps;\n        (oldContext =\n          \"function\" === typeof unresolvedOldProps ||\n          \"function\" === typeof _instance.getSnapshotBeforeUpdate) ||\n          (\"function\" !== typeof _instance.UNSAFE_componentWillReceiveProps &&\n            \"function\" !== typeof _instance.componentWillReceiveProps) ||\n          ((state !== newApiName || oldState !== lane) &&\n            callComponentWillReceiveProps(\n              workInProgress,\n              _instance,\n              nextProps,\n              lane\n            ));\n        hasForceUpdate = !1;\n        oldState = workInProgress.memoizedState;\n        _instance.state = oldState;\n        processUpdateQueue(workInProgress, nextProps, _instance, renderLanes);\n        suspendIfUpdateReadFromEntangledAsyncAction();\n        var newState = workInProgress.memoizedState;\n        state !== newApiName ||\n        oldState !== newState ||\n        hasForceUpdate ||\n        (null !== current &&\n          null !== current.dependencies &&\n          checkIfContextChanged(current.dependencies))\n          ? (\"function\" === typeof unresolvedOldProps &&\n              (applyDerivedStateFromProps(\n                workInProgress,\n                Component,\n                unresolvedOldProps,\n                nextProps\n              ),\n              (newState = workInProgress.memoizedState)),\n            (foundWillUpdateName =\n              hasForceUpdate ||\n              checkShouldComponentUpdate(\n                workInProgress,\n                Component,\n                foundWillUpdateName,\n                nextProps,\n                oldState,\n                newState,\n                lane\n              ) ||\n              (null !== current &&\n                null !== current.dependencies &&\n                checkIfContextChanged(current.dependencies)))\n              ? (oldContext ||\n                  (\"function\" !== typeof _instance.UNSAFE_componentWillUpdate &&\n                    \"function\" !== typeof _instance.componentWillUpdate) ||\n                  (\"function\" === typeof _instance.componentWillUpdate &&\n                    _instance.componentWillUpdate(nextProps, newState, lane),\n                  \"function\" === typeof _instance.UNSAFE_componentWillUpdate &&\n                    _instance.UNSAFE_componentWillUpdate(\n                      nextProps,\n                      newState,\n                      lane\n                    )),\n                \"function\" === typeof _instance.componentDidUpdate &&\n                  (workInProgress.flags |= 4),\n                \"function\" === typeof _instance.getSnapshotBeforeUpdate &&\n                  (workInProgress.flags |= 1024))\n              : (\"function\" !== typeof _instance.componentDidUpdate ||\n                  (state === current.memoizedProps &&\n                    oldState === current.memoizedState) ||\n                  (workInProgress.flags |= 4),\n                \"function\" !== typeof _instance.getSnapshotBeforeUpdate ||\n                  (state === current.memoizedProps &&\n                    oldState === current.memoizedState) ||\n                  (workInProgress.flags |= 1024),\n                (workInProgress.memoizedProps = nextProps),\n                (workInProgress.memoizedState = newState)),\n            (_instance.props = nextProps),\n            (_instance.state = newState),\n            (_instance.context = lane),\n            (_instance = foundWillUpdateName))\n          : (\"function\" !== typeof _instance.componentDidUpdate ||\n              (state === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 4),\n            \"function\" !== typeof _instance.getSnapshotBeforeUpdate ||\n              (state === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 1024),\n            (_instance = !1));\n      }\n      lane = _instance;\n      markRef(current, workInProgress);\n      state = 0 !== (workInProgress.flags & 128);\n      if (lane || state) {\n        lane = workInProgress.stateNode;\n        setCurrentFiber(workInProgress);\n        if (state && \"function\" !== typeof Component.getDerivedStateFromError)\n          (Component = null), (profilerStartTime = -1);\n        else {\n          markComponentRenderStarted(workInProgress);\n          Component = callRenderInDEV(lane);\n          if (workInProgress.mode & StrictLegacyMode) {\n            setIsStrictModeForDevtools(!0);\n            try {\n              callRenderInDEV(lane);\n            } finally {\n              setIsStrictModeForDevtools(!1);\n            }\n          }\n          markComponentRenderStopped();\n        }\n        workInProgress.flags |= 1;\n        null !== current && state\n          ? ((workInProgress.child = reconcileChildFibers(\n              workInProgress,\n              current.child,\n              null,\n              renderLanes\n            )),\n            (workInProgress.child = reconcileChildFibers(\n              workInProgress,\n              null,\n              Component,\n              renderLanes\n            )))\n          : reconcileChildren(current, workInProgress, Component, renderLanes);\n        workInProgress.memoizedState = lane.state;\n        current = workInProgress.child;\n      } else\n        current = bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes\n        );\n      renderLanes = workInProgress.stateNode;\n      _instance &&\n        renderLanes.props !== nextProps &&\n        (didWarnAboutReassigningProps ||\n          console.error(\n            \"It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.\",\n            getComponentNameFromFiber(workInProgress) || \"a component\"\n          ),\n        (didWarnAboutReassigningProps = !0));\n      return current;\n    }\n    function mountHostRootWithoutHydrating(\n      current,\n      workInProgress,\n      nextChildren,\n      renderLanes\n    ) {\n      resetHydrationState();\n      workInProgress.flags |= 256;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function validateFunctionComponentInDev(workInProgress, Component) {\n      Component &&\n        Component.childContextTypes &&\n        console.error(\n          \"childContextTypes cannot be defined on a function component.\\n  %s.childContextTypes = ...\",\n          Component.displayName || Component.name || \"Component\"\n        );\n      \"function\" === typeof Component.getDerivedStateFromProps &&\n        ((workInProgress = getComponentNameFromType(Component) || \"Unknown\"),\n        didWarnAboutGetDerivedStateOnFunctionComponent[workInProgress] ||\n          (console.error(\n            \"%s: Function components do not support getDerivedStateFromProps.\",\n            workInProgress\n          ),\n          (didWarnAboutGetDerivedStateOnFunctionComponent[workInProgress] =\n            !0)));\n      \"object\" === typeof Component.contextType &&\n        null !== Component.contextType &&\n        ((Component = getComponentNameFromType(Component) || \"Unknown\"),\n        didWarnAboutContextTypeOnFunctionComponent[Component] ||\n          (console.error(\n            \"%s: Function components do not support contextType.\",\n            Component\n          ),\n          (didWarnAboutContextTypeOnFunctionComponent[Component] = !0)));\n    }\n    function mountSuspenseOffscreenState(renderLanes) {\n      return { baseLanes: renderLanes, cachePool: getSuspendedCache() };\n    }\n    function getRemainingWorkInPrimaryTree(\n      current,\n      primaryTreeDidDefer,\n      renderLanes\n    ) {\n      current = null !== current ? current.childLanes & ~renderLanes : 0;\n      primaryTreeDidDefer && (current |= workInProgressDeferredLane);\n      return current;\n    }\n    function updateSuspenseComponent(current, workInProgress, renderLanes) {\n      var JSCompiler_object_inline_digest_2451;\n      var JSCompiler_object_inline_stack_2452 = workInProgress.pendingProps;\n      shouldSuspendImpl(workInProgress) && (workInProgress.flags |= 128);\n      var JSCompiler_object_inline_componentStack_2453 = !1;\n      var didSuspend = 0 !== (workInProgress.flags & 128);\n      (JSCompiler_object_inline_digest_2451 = didSuspend) ||\n        (JSCompiler_object_inline_digest_2451 =\n          null !== current && null === current.memoizedState\n            ? !1\n            : 0 !== (suspenseStackCursor.current & ForceSuspenseFallback));\n      JSCompiler_object_inline_digest_2451 &&\n        ((JSCompiler_object_inline_componentStack_2453 = !0),\n        (workInProgress.flags &= -129));\n      JSCompiler_object_inline_digest_2451 = 0 !== (workInProgress.flags & 32);\n      workInProgress.flags &= -33;\n      if (null === current) {\n        if (isHydrating) {\n          JSCompiler_object_inline_componentStack_2453\n            ? pushPrimaryTreeSuspenseHandler(workInProgress)\n            : reuseSuspenseHandlerOnStack(workInProgress);\n          if (isHydrating) {\n            var JSCompiler_object_inline_message_2450 = nextHydratableInstance;\n            var JSCompiler_temp;\n            if (!(JSCompiler_temp = !JSCompiler_object_inline_message_2450)) {\n              c: {\n                var instance = JSCompiler_object_inline_message_2450;\n                for (\n                  JSCompiler_temp = rootOrSingletonContext;\n                  8 !== instance.nodeType;\n\n                ) {\n                  if (!JSCompiler_temp) {\n                    JSCompiler_temp = null;\n                    break c;\n                  }\n                  instance = getNextHydratable(instance.nextSibling);\n                  if (null === instance) {\n                    JSCompiler_temp = null;\n                    break c;\n                  }\n                }\n                JSCompiler_temp = instance;\n              }\n              null !== JSCompiler_temp\n                ? (warnIfNotHydrating(),\n                  (workInProgress.memoizedState = {\n                    dehydrated: JSCompiler_temp,\n                    treeContext:\n                      null !== treeContextProvider\n                        ? { id: treeContextId, overflow: treeContextOverflow }\n                        : null,\n                    retryLane: 536870912,\n                    hydrationErrors: null\n                  }),\n                  (instance = createFiber(18, null, null, NoMode)),\n                  (instance.stateNode = JSCompiler_temp),\n                  (instance.return = workInProgress),\n                  (workInProgress.child = instance),\n                  (hydrationParentFiber = workInProgress),\n                  (nextHydratableInstance = null),\n                  (JSCompiler_temp = !0))\n                : (JSCompiler_temp = !1);\n              JSCompiler_temp = !JSCompiler_temp;\n            }\n            JSCompiler_temp &&\n              (warnNonHydratedInstance(\n                workInProgress,\n                JSCompiler_object_inline_message_2450\n              ),\n              throwOnHydrationMismatch(workInProgress));\n          }\n          JSCompiler_object_inline_message_2450 = workInProgress.memoizedState;\n          if (\n            null !== JSCompiler_object_inline_message_2450 &&\n            ((JSCompiler_object_inline_message_2450 =\n              JSCompiler_object_inline_message_2450.dehydrated),\n            null !== JSCompiler_object_inline_message_2450)\n          )\n            return (\n              isSuspenseInstanceFallback(JSCompiler_object_inline_message_2450)\n                ? (workInProgress.lanes = 32)\n                : (workInProgress.lanes = 536870912),\n              null\n            );\n          popSuspenseHandler(workInProgress);\n        }\n        JSCompiler_object_inline_message_2450 =\n          JSCompiler_object_inline_stack_2452.children;\n        JSCompiler_object_inline_stack_2452 =\n          JSCompiler_object_inline_stack_2452.fallback;\n        if (JSCompiler_object_inline_componentStack_2453)\n          return (\n            reuseSuspenseHandlerOnStack(workInProgress),\n            (JSCompiler_object_inline_componentStack_2453 =\n              workInProgress.mode),\n            (JSCompiler_object_inline_message_2450 =\n              mountWorkInProgressOffscreenFiber(\n                {\n                  mode: \"hidden\",\n                  children: JSCompiler_object_inline_message_2450\n                },\n                JSCompiler_object_inline_componentStack_2453\n              )),\n            (JSCompiler_object_inline_stack_2452 = createFiberFromFragment(\n              JSCompiler_object_inline_stack_2452,\n              JSCompiler_object_inline_componentStack_2453,\n              renderLanes,\n              null\n            )),\n            (JSCompiler_object_inline_message_2450.return = workInProgress),\n            (JSCompiler_object_inline_stack_2452.return = workInProgress),\n            (JSCompiler_object_inline_message_2450.sibling =\n              JSCompiler_object_inline_stack_2452),\n            (workInProgress.child = JSCompiler_object_inline_message_2450),\n            (JSCompiler_object_inline_componentStack_2453 =\n              workInProgress.child),\n            (JSCompiler_object_inline_componentStack_2453.memoizedState =\n              mountSuspenseOffscreenState(renderLanes)),\n            (JSCompiler_object_inline_componentStack_2453.childLanes =\n              getRemainingWorkInPrimaryTree(\n                current,\n                JSCompiler_object_inline_digest_2451,\n                renderLanes\n              )),\n            (workInProgress.memoizedState = SUSPENDED_MARKER),\n            JSCompiler_object_inline_stack_2452\n          );\n        pushPrimaryTreeSuspenseHandler(workInProgress);\n        return mountSuspensePrimaryChildren(\n          workInProgress,\n          JSCompiler_object_inline_message_2450\n        );\n      }\n      var prevState = current.memoizedState;\n      if (\n        null !== prevState &&\n        ((JSCompiler_object_inline_message_2450 = prevState.dehydrated),\n        null !== JSCompiler_object_inline_message_2450)\n      ) {\n        if (didSuspend)\n          workInProgress.flags & 256\n            ? (pushPrimaryTreeSuspenseHandler(workInProgress),\n              (workInProgress.flags &= -257),\n              (workInProgress = retrySuspenseComponentWithoutHydrating(\n                current,\n                workInProgress,\n                renderLanes\n              )))\n            : null !== workInProgress.memoizedState\n              ? (reuseSuspenseHandlerOnStack(workInProgress),\n                (workInProgress.child = current.child),\n                (workInProgress.flags |= 128),\n                (workInProgress = null))\n              : (reuseSuspenseHandlerOnStack(workInProgress),\n                (JSCompiler_object_inline_componentStack_2453 =\n                  JSCompiler_object_inline_stack_2452.fallback),\n                (JSCompiler_object_inline_message_2450 = workInProgress.mode),\n                (JSCompiler_object_inline_stack_2452 =\n                  mountWorkInProgressOffscreenFiber(\n                    {\n                      mode: \"visible\",\n                      children: JSCompiler_object_inline_stack_2452.children\n                    },\n                    JSCompiler_object_inline_message_2450\n                  )),\n                (JSCompiler_object_inline_componentStack_2453 =\n                  createFiberFromFragment(\n                    JSCompiler_object_inline_componentStack_2453,\n                    JSCompiler_object_inline_message_2450,\n                    renderLanes,\n                    null\n                  )),\n                (JSCompiler_object_inline_componentStack_2453.flags |= 2),\n                (JSCompiler_object_inline_stack_2452.return = workInProgress),\n                (JSCompiler_object_inline_componentStack_2453.return =\n                  workInProgress),\n                (JSCompiler_object_inline_stack_2452.sibling =\n                  JSCompiler_object_inline_componentStack_2453),\n                (workInProgress.child = JSCompiler_object_inline_stack_2452),\n                reconcileChildFibers(\n                  workInProgress,\n                  current.child,\n                  null,\n                  renderLanes\n                ),\n                (JSCompiler_object_inline_stack_2452 = workInProgress.child),\n                (JSCompiler_object_inline_stack_2452.memoizedState =\n                  mountSuspenseOffscreenState(renderLanes)),\n                (JSCompiler_object_inline_stack_2452.childLanes =\n                  getRemainingWorkInPrimaryTree(\n                    current,\n                    JSCompiler_object_inline_digest_2451,\n                    renderLanes\n                  )),\n                (workInProgress.memoizedState = SUSPENDED_MARKER),\n                (workInProgress =\n                  JSCompiler_object_inline_componentStack_2453));\n        else if (\n          (pushPrimaryTreeSuspenseHandler(workInProgress),\n          isHydrating &&\n            console.error(\n              \"We should not be hydrating here. This is a bug in React. Please file a bug.\"\n            ),\n          isSuspenseInstanceFallback(JSCompiler_object_inline_message_2450))\n        ) {\n          JSCompiler_object_inline_digest_2451 =\n            JSCompiler_object_inline_message_2450.nextSibling &&\n            JSCompiler_object_inline_message_2450.nextSibling.dataset;\n          if (JSCompiler_object_inline_digest_2451) {\n            JSCompiler_temp = JSCompiler_object_inline_digest_2451.dgst;\n            var message = JSCompiler_object_inline_digest_2451.msg;\n            instance = JSCompiler_object_inline_digest_2451.stck;\n            var componentStack = JSCompiler_object_inline_digest_2451.cstck;\n          }\n          JSCompiler_object_inline_message_2450 = message;\n          JSCompiler_object_inline_digest_2451 = JSCompiler_temp;\n          JSCompiler_object_inline_stack_2452 = instance;\n          JSCompiler_temp = JSCompiler_object_inline_componentStack_2453 =\n            componentStack;\n          JSCompiler_object_inline_componentStack_2453 =\n            JSCompiler_object_inline_message_2450\n              ? Error(JSCompiler_object_inline_message_2450)\n              : Error(\n                  \"The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.\"\n                );\n          JSCompiler_object_inline_componentStack_2453.stack =\n            JSCompiler_object_inline_stack_2452 || \"\";\n          JSCompiler_object_inline_componentStack_2453.digest =\n            JSCompiler_object_inline_digest_2451;\n          JSCompiler_object_inline_digest_2451 =\n            void 0 === JSCompiler_temp ? null : JSCompiler_temp;\n          JSCompiler_object_inline_stack_2452 = {\n            value: JSCompiler_object_inline_componentStack_2453,\n            source: null,\n            stack: JSCompiler_object_inline_digest_2451\n          };\n          \"string\" === typeof JSCompiler_object_inline_digest_2451 &&\n            CapturedStacks.set(\n              JSCompiler_object_inline_componentStack_2453,\n              JSCompiler_object_inline_stack_2452\n            );\n          queueHydrationError(JSCompiler_object_inline_stack_2452);\n          workInProgress = retrySuspenseComponentWithoutHydrating(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        } else if (\n          (didReceiveUpdate ||\n            propagateParentContextChanges(\n              current,\n              workInProgress,\n              renderLanes,\n              !1\n            ),\n          (JSCompiler_object_inline_digest_2451 =\n            0 !== (renderLanes & current.childLanes)),\n          didReceiveUpdate || JSCompiler_object_inline_digest_2451)\n        ) {\n          JSCompiler_object_inline_digest_2451 = workInProgressRoot;\n          if (\n            null !== JSCompiler_object_inline_digest_2451 &&\n            ((JSCompiler_object_inline_stack_2452 = renderLanes & -renderLanes),\n            (JSCompiler_object_inline_stack_2452 =\n              0 !== (JSCompiler_object_inline_stack_2452 & 42)\n                ? 1\n                : getBumpedLaneForHydrationByLane(\n                    JSCompiler_object_inline_stack_2452\n                  )),\n            (JSCompiler_object_inline_stack_2452 =\n              0 !==\n              (JSCompiler_object_inline_stack_2452 &\n                (JSCompiler_object_inline_digest_2451.suspendedLanes |\n                  renderLanes))\n                ? 0\n                : JSCompiler_object_inline_stack_2452),\n            0 !== JSCompiler_object_inline_stack_2452 &&\n              JSCompiler_object_inline_stack_2452 !== prevState.retryLane)\n          )\n            throw (\n              ((prevState.retryLane = JSCompiler_object_inline_stack_2452),\n              enqueueConcurrentRenderForLane(\n                current,\n                JSCompiler_object_inline_stack_2452\n              ),\n              scheduleUpdateOnFiber(\n                JSCompiler_object_inline_digest_2451,\n                current,\n                JSCompiler_object_inline_stack_2452\n              ),\n              SelectiveHydrationException)\n            );\n          JSCompiler_object_inline_message_2450.data ===\n            SUSPENSE_PENDING_START_DATA || renderDidSuspendDelayIfPossible();\n          workInProgress = retrySuspenseComponentWithoutHydrating(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        } else\n          JSCompiler_object_inline_message_2450.data ===\n          SUSPENSE_PENDING_START_DATA\n            ? ((workInProgress.flags |= 192),\n              (workInProgress.child = current.child),\n              (workInProgress = null))\n            : ((current = prevState.treeContext),\n              (nextHydratableInstance = getNextHydratable(\n                JSCompiler_object_inline_message_2450.nextSibling\n              )),\n              (hydrationParentFiber = workInProgress),\n              (isHydrating = !0),\n              (hydrationErrors = null),\n              (didSuspendOrErrorDEV = !1),\n              (hydrationDiffRootDEV = null),\n              (rootOrSingletonContext = !1),\n              null !== current &&\n                (warnIfNotHydrating(),\n                (idStack[idStackIndex++] = treeContextId),\n                (idStack[idStackIndex++] = treeContextOverflow),\n                (idStack[idStackIndex++] = treeContextProvider),\n                (treeContextId = current.id),\n                (treeContextOverflow = current.overflow),\n                (treeContextProvider = workInProgress)),\n              (workInProgress = mountSuspensePrimaryChildren(\n                workInProgress,\n                JSCompiler_object_inline_stack_2452.children\n              )),\n              (workInProgress.flags |= 4096));\n        return workInProgress;\n      }\n      if (JSCompiler_object_inline_componentStack_2453)\n        return (\n          reuseSuspenseHandlerOnStack(workInProgress),\n          (JSCompiler_object_inline_componentStack_2453 =\n            JSCompiler_object_inline_stack_2452.fallback),\n          (JSCompiler_object_inline_message_2450 = workInProgress.mode),\n          (JSCompiler_temp = current.child),\n          (instance = JSCompiler_temp.sibling),\n          (JSCompiler_object_inline_stack_2452 = createWorkInProgress(\n            JSCompiler_temp,\n            {\n              mode: \"hidden\",\n              children: JSCompiler_object_inline_stack_2452.children\n            }\n          )),\n          (JSCompiler_object_inline_stack_2452.subtreeFlags =\n            JSCompiler_temp.subtreeFlags & 65011712),\n          null !== instance\n            ? (JSCompiler_object_inline_componentStack_2453 =\n                createWorkInProgress(\n                  instance,\n                  JSCompiler_object_inline_componentStack_2453\n                ))\n            : ((JSCompiler_object_inline_componentStack_2453 =\n                createFiberFromFragment(\n                  JSCompiler_object_inline_componentStack_2453,\n                  JSCompiler_object_inline_message_2450,\n                  renderLanes,\n                  null\n                )),\n              (JSCompiler_object_inline_componentStack_2453.flags |= 2)),\n          (JSCompiler_object_inline_componentStack_2453.return =\n            workInProgress),\n          (JSCompiler_object_inline_stack_2452.return = workInProgress),\n          (JSCompiler_object_inline_stack_2452.sibling =\n            JSCompiler_object_inline_componentStack_2453),\n          (workInProgress.child = JSCompiler_object_inline_stack_2452),\n          (JSCompiler_object_inline_stack_2452 =\n            JSCompiler_object_inline_componentStack_2453),\n          (JSCompiler_object_inline_componentStack_2453 = workInProgress.child),\n          (JSCompiler_object_inline_message_2450 = current.child.memoizedState),\n          null === JSCompiler_object_inline_message_2450\n            ? (JSCompiler_object_inline_message_2450 =\n                mountSuspenseOffscreenState(renderLanes))\n            : ((JSCompiler_temp =\n                JSCompiler_object_inline_message_2450.cachePool),\n              null !== JSCompiler_temp\n                ? ((instance = CacheContext._currentValue),\n                  (JSCompiler_temp =\n                    JSCompiler_temp.parent !== instance\n                      ? { parent: instance, pool: instance }\n                      : JSCompiler_temp))\n                : (JSCompiler_temp = getSuspendedCache()),\n              (JSCompiler_object_inline_message_2450 = {\n                baseLanes:\n                  JSCompiler_object_inline_message_2450.baseLanes | renderLanes,\n                cachePool: JSCompiler_temp\n              })),\n          (JSCompiler_object_inline_componentStack_2453.memoizedState =\n            JSCompiler_object_inline_message_2450),\n          (JSCompiler_object_inline_componentStack_2453.childLanes =\n            getRemainingWorkInPrimaryTree(\n              current,\n              JSCompiler_object_inline_digest_2451,\n              renderLanes\n            )),\n          (workInProgress.memoizedState = SUSPENDED_MARKER),\n          JSCompiler_object_inline_stack_2452\n        );\n      pushPrimaryTreeSuspenseHandler(workInProgress);\n      renderLanes = current.child;\n      current = renderLanes.sibling;\n      renderLanes = createWorkInProgress(renderLanes, {\n        mode: \"visible\",\n        children: JSCompiler_object_inline_stack_2452.children\n      });\n      renderLanes.return = workInProgress;\n      renderLanes.sibling = null;\n      null !== current &&\n        ((JSCompiler_object_inline_digest_2451 = workInProgress.deletions),\n        null === JSCompiler_object_inline_digest_2451\n          ? ((workInProgress.deletions = [current]),\n            (workInProgress.flags |= 16))\n          : JSCompiler_object_inline_digest_2451.push(current));\n      workInProgress.child = renderLanes;\n      workInProgress.memoizedState = null;\n      return renderLanes;\n    }\n    function mountSuspensePrimaryChildren(workInProgress, primaryChildren) {\n      primaryChildren = mountWorkInProgressOffscreenFiber(\n        { mode: \"visible\", children: primaryChildren },\n        workInProgress.mode\n      );\n      primaryChildren.return = workInProgress;\n      return (workInProgress.child = primaryChildren);\n    }\n    function mountWorkInProgressOffscreenFiber(offscreenProps, mode) {\n      offscreenProps = createFiber(22, offscreenProps, null, mode);\n      offscreenProps.lanes = 0;\n      offscreenProps.stateNode = {\n        _visibility: OffscreenVisible,\n        _pendingMarkers: null,\n        _retryCache: null,\n        _transitions: null\n      };\n      return offscreenProps;\n    }\n    function retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes\n    ) {\n      reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n      current = mountSuspensePrimaryChildren(\n        workInProgress,\n        workInProgress.pendingProps.children\n      );\n      current.flags |= 2;\n      workInProgress.memoizedState = null;\n      return current;\n    }\n    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n      fiber.lanes |= renderLanes;\n      var alternate = fiber.alternate;\n      null !== alternate && (alternate.lanes |= renderLanes);\n      scheduleContextWorkOnParentPath(\n        fiber.return,\n        renderLanes,\n        propagationRoot\n      );\n    }\n    function validateSuspenseListNestedChild(childSlot, index) {\n      var isAnArray = isArrayImpl(childSlot);\n      childSlot = !isAnArray && \"function\" === typeof getIteratorFn(childSlot);\n      return isAnArray || childSlot\n        ? ((isAnArray = isAnArray ? \"array\" : \"iterable\"),\n          console.error(\n            \"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>\",\n            isAnArray,\n            index,\n            isAnArray\n          ),\n          !1)\n        : !0;\n    }\n    function initSuspenseListRenderState(\n      workInProgress,\n      isBackwards,\n      tail,\n      lastContentRow,\n      tailMode\n    ) {\n      var renderState = workInProgress.memoizedState;\n      null === renderState\n        ? (workInProgress.memoizedState = {\n            isBackwards: isBackwards,\n            rendering: null,\n            renderingStartTime: 0,\n            last: lastContentRow,\n            tail: tail,\n            tailMode: tailMode\n          })\n        : ((renderState.isBackwards = isBackwards),\n          (renderState.rendering = null),\n          (renderState.renderingStartTime = 0),\n          (renderState.last = lastContentRow),\n          (renderState.tail = tail),\n          (renderState.tailMode = tailMode));\n    }\n    function updateSuspenseListComponent(current, workInProgress, renderLanes) {\n      var nextProps = workInProgress.pendingProps,\n        revealOrder = nextProps.revealOrder,\n        tailMode = nextProps.tail;\n      nextProps = nextProps.children;\n      if (\n        void 0 !== revealOrder &&\n        \"forwards\" !== revealOrder &&\n        \"backwards\" !== revealOrder &&\n        \"together\" !== revealOrder &&\n        !didWarnAboutRevealOrder[revealOrder]\n      )\n        if (\n          ((didWarnAboutRevealOrder[revealOrder] = !0),\n          \"string\" === typeof revealOrder)\n        )\n          switch (revealOrder.toLowerCase()) {\n            case \"together\":\n            case \"forwards\":\n            case \"backwards\":\n              console.error(\n                '\"%s\" is not a valid value for revealOrder on <SuspenseList />. Use lowercase \"%s\" instead.',\n                revealOrder,\n                revealOrder.toLowerCase()\n              );\n              break;\n            case \"forward\":\n            case \"backward\":\n              console.error(\n                '\"%s\" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use \"%ss\" instead.',\n                revealOrder,\n                revealOrder.toLowerCase()\n              );\n              break;\n            default:\n              console.error(\n                '\"%s\" is not a supported revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?',\n                revealOrder\n              );\n          }\n        else\n          console.error(\n            '%s is not a supported value for revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?',\n            revealOrder\n          );\n      void 0 === tailMode ||\n        didWarnAboutTailOptions[tailMode] ||\n        (\"collapsed\" !== tailMode && \"hidden\" !== tailMode\n          ? ((didWarnAboutTailOptions[tailMode] = !0),\n            console.error(\n              '\"%s\" is not a supported value for tail on <SuspenseList />. Did you mean \"collapsed\" or \"hidden\"?',\n              tailMode\n            ))\n          : \"forwards\" !== revealOrder &&\n            \"backwards\" !== revealOrder &&\n            ((didWarnAboutTailOptions[tailMode] = !0),\n            console.error(\n              '<SuspenseList tail=\"%s\" /> is only valid if revealOrder is \"forwards\" or \"backwards\". Did you mean to specify revealOrder=\"forwards\"?',\n              tailMode\n            )));\n      a: if (\n        (\"forwards\" === revealOrder || \"backwards\" === revealOrder) &&\n        void 0 !== nextProps &&\n        null !== nextProps &&\n        !1 !== nextProps\n      )\n        if (isArrayImpl(nextProps))\n          for (var i = 0; i < nextProps.length; i++) {\n            if (!validateSuspenseListNestedChild(nextProps[i], i)) break a;\n          }\n        else if (((i = getIteratorFn(nextProps)), \"function\" === typeof i)) {\n          if ((i = i.call(nextProps)))\n            for (var step = i.next(), _i = 0; !step.done; step = i.next()) {\n              if (!validateSuspenseListNestedChild(step.value, _i)) break a;\n              _i++;\n            }\n        } else\n          console.error(\n            'A single row was passed to a <SuspenseList revealOrder=\"%s\" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?',\n            revealOrder\n          );\n      reconcileChildren(current, workInProgress, nextProps, renderLanes);\n      nextProps = suspenseStackCursor.current;\n      if (0 !== (nextProps & ForceSuspenseFallback))\n        (nextProps =\n          (nextProps & SubtreeSuspenseContextMask) | ForceSuspenseFallback),\n          (workInProgress.flags |= 128);\n      else {\n        if (null !== current && 0 !== (current.flags & 128))\n          a: for (current = workInProgress.child; null !== current; ) {\n            if (13 === current.tag)\n              null !== current.memoizedState &&\n                scheduleSuspenseWorkOnFiber(\n                  current,\n                  renderLanes,\n                  workInProgress\n                );\n            else if (19 === current.tag)\n              scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n            else if (null !== current.child) {\n              current.child.return = current;\n              current = current.child;\n              continue;\n            }\n            if (current === workInProgress) break a;\n            for (; null === current.sibling; ) {\n              if (null === current.return || current.return === workInProgress)\n                break a;\n              current = current.return;\n            }\n            current.sibling.return = current.return;\n            current = current.sibling;\n          }\n        nextProps &= SubtreeSuspenseContextMask;\n      }\n      push(suspenseStackCursor, nextProps, workInProgress);\n      switch (revealOrder) {\n        case \"forwards\":\n          renderLanes = workInProgress.child;\n          for (revealOrder = null; null !== renderLanes; )\n            (current = renderLanes.alternate),\n              null !== current &&\n                null === findFirstSuspended(current) &&\n                (revealOrder = renderLanes),\n              (renderLanes = renderLanes.sibling);\n          renderLanes = revealOrder;\n          null === renderLanes\n            ? ((revealOrder = workInProgress.child),\n              (workInProgress.child = null))\n            : ((revealOrder = renderLanes.sibling),\n              (renderLanes.sibling = null));\n          initSuspenseListRenderState(\n            workInProgress,\n            !1,\n            revealOrder,\n            renderLanes,\n            tailMode\n          );\n          break;\n        case \"backwards\":\n          renderLanes = null;\n          revealOrder = workInProgress.child;\n          for (workInProgress.child = null; null !== revealOrder; ) {\n            current = revealOrder.alternate;\n            if (null !== current && null === findFirstSuspended(current)) {\n              workInProgress.child = revealOrder;\n              break;\n            }\n            current = revealOrder.sibling;\n            revealOrder.sibling = renderLanes;\n            renderLanes = revealOrder;\n            revealOrder = current;\n          }\n          initSuspenseListRenderState(\n            workInProgress,\n            !0,\n            renderLanes,\n            null,\n            tailMode\n          );\n          break;\n        case \"together\":\n          initSuspenseListRenderState(workInProgress, !1, null, null, void 0);\n          break;\n        default:\n          workInProgress.memoizedState = null;\n      }\n      return workInProgress.child;\n    }\n    function bailoutOnAlreadyFinishedWork(\n      current,\n      workInProgress,\n      renderLanes\n    ) {\n      null !== current && (workInProgress.dependencies = current.dependencies);\n      profilerStartTime = -1;\n      workInProgressRootSkippedLanes |= workInProgress.lanes;\n      if (0 === (renderLanes & workInProgress.childLanes))\n        if (null !== current) {\n          if (\n            (propagateParentContextChanges(\n              current,\n              workInProgress,\n              renderLanes,\n              !1\n            ),\n            0 === (renderLanes & workInProgress.childLanes))\n          )\n            return null;\n        } else return null;\n      if (null !== current && workInProgress.child !== current.child)\n        throw Error(\"Resuming work not yet implemented.\");\n      if (null !== workInProgress.child) {\n        current = workInProgress.child;\n        renderLanes = createWorkInProgress(current, current.pendingProps);\n        workInProgress.child = renderLanes;\n        for (renderLanes.return = workInProgress; null !== current.sibling; )\n          (current = current.sibling),\n            (renderLanes = renderLanes.sibling =\n              createWorkInProgress(current, current.pendingProps)),\n            (renderLanes.return = workInProgress);\n        renderLanes.sibling = null;\n      }\n      return workInProgress.child;\n    }\n    function checkScheduledUpdateOrContext(current, renderLanes) {\n      if (0 !== (current.lanes & renderLanes)) return !0;\n      current = current.dependencies;\n      return null !== current && checkIfContextChanged(current) ? !0 : !1;\n    }\n    function attemptEarlyBailoutIfNoScheduledUpdate(\n      current,\n      workInProgress,\n      renderLanes\n    ) {\n      switch (workInProgress.tag) {\n        case 3:\n          pushHostContainer(\n            workInProgress,\n            workInProgress.stateNode.containerInfo\n          );\n          pushProvider(\n            workInProgress,\n            CacheContext,\n            current.memoizedState.cache\n          );\n          resetHydrationState();\n          break;\n        case 27:\n        case 5:\n          pushHostContext(workInProgress);\n          break;\n        case 4:\n          pushHostContainer(\n            workInProgress,\n            workInProgress.stateNode.containerInfo\n          );\n          break;\n        case 10:\n          pushProvider(\n            workInProgress,\n            workInProgress.type,\n            workInProgress.memoizedProps.value\n          );\n          break;\n        case 12:\n          0 !== (renderLanes & workInProgress.childLanes) &&\n            (workInProgress.flags |= 4);\n          workInProgress.flags |= 2048;\n          var stateNode = workInProgress.stateNode;\n          stateNode.effectDuration = -0;\n          stateNode.passiveEffectDuration = -0;\n          break;\n        case 13:\n          stateNode = workInProgress.memoizedState;\n          if (null !== stateNode) {\n            if (null !== stateNode.dehydrated)\n              return (\n                pushPrimaryTreeSuspenseHandler(workInProgress),\n                (workInProgress.flags |= 128),\n                null\n              );\n            if (0 !== (renderLanes & workInProgress.child.childLanes))\n              return updateSuspenseComponent(\n                current,\n                workInProgress,\n                renderLanes\n              );\n            pushPrimaryTreeSuspenseHandler(workInProgress);\n            current = bailoutOnAlreadyFinishedWork(\n              current,\n              workInProgress,\n              renderLanes\n            );\n            return null !== current ? current.sibling : null;\n          }\n          pushPrimaryTreeSuspenseHandler(workInProgress);\n          break;\n        case 19:\n          var didSuspendBefore = 0 !== (current.flags & 128);\n          stateNode = 0 !== (renderLanes & workInProgress.childLanes);\n          stateNode ||\n            (propagateParentContextChanges(\n              current,\n              workInProgress,\n              renderLanes,\n              !1\n            ),\n            (stateNode = 0 !== (renderLanes & workInProgress.childLanes)));\n          if (didSuspendBefore) {\n            if (stateNode)\n              return updateSuspenseListComponent(\n                current,\n                workInProgress,\n                renderLanes\n              );\n            workInProgress.flags |= 128;\n          }\n          didSuspendBefore = workInProgress.memoizedState;\n          null !== didSuspendBefore &&\n            ((didSuspendBefore.rendering = null),\n            (didSuspendBefore.tail = null),\n            (didSuspendBefore.lastEffect = null));\n          push(\n            suspenseStackCursor,\n            suspenseStackCursor.current,\n            workInProgress\n          );\n          if (stateNode) break;\n          else return null;\n        case 22:\n        case 23:\n          return (\n            (workInProgress.lanes = 0),\n            updateOffscreenComponent(current, workInProgress, renderLanes)\n          );\n        case 24:\n          pushProvider(\n            workInProgress,\n            CacheContext,\n            current.memoizedState.cache\n          );\n      }\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n    function beginWork(current, workInProgress, renderLanes) {\n      if (workInProgress._debugNeedsRemount && null !== current) {\n        renderLanes = createFiberFromTypeAndProps(\n          workInProgress.type,\n          workInProgress.key,\n          workInProgress.pendingProps,\n          workInProgress._debugOwner || null,\n          workInProgress.mode,\n          workInProgress.lanes\n        );\n        renderLanes._debugStack = workInProgress._debugStack;\n        renderLanes._debugTask = workInProgress._debugTask;\n        var returnFiber = workInProgress.return;\n        if (null === returnFiber) throw Error(\"Cannot swap the root fiber.\");\n        current.alternate = null;\n        workInProgress.alternate = null;\n        renderLanes.index = workInProgress.index;\n        renderLanes.sibling = workInProgress.sibling;\n        renderLanes.return = workInProgress.return;\n        renderLanes.ref = workInProgress.ref;\n        renderLanes._debugInfo = workInProgress._debugInfo;\n        if (workInProgress === returnFiber.child)\n          returnFiber.child = renderLanes;\n        else {\n          var prevSibling = returnFiber.child;\n          if (null === prevSibling)\n            throw Error(\"Expected parent to have a child.\");\n          for (; prevSibling.sibling !== workInProgress; )\n            if (((prevSibling = prevSibling.sibling), null === prevSibling))\n              throw Error(\"Expected to find the previous sibling.\");\n          prevSibling.sibling = renderLanes;\n        }\n        workInProgress = returnFiber.deletions;\n        null === workInProgress\n          ? ((returnFiber.deletions = [current]), (returnFiber.flags |= 16))\n          : workInProgress.push(current);\n        renderLanes.flags |= 2;\n        return renderLanes;\n      }\n      if (null !== current)\n        if (\n          current.memoizedProps !== workInProgress.pendingProps ||\n          workInProgress.type !== current.type\n        )\n          didReceiveUpdate = !0;\n        else {\n          if (\n            !checkScheduledUpdateOrContext(current, renderLanes) &&\n            0 === (workInProgress.flags & 128)\n          )\n            return (\n              (didReceiveUpdate = !1),\n              attemptEarlyBailoutIfNoScheduledUpdate(\n                current,\n                workInProgress,\n                renderLanes\n              )\n            );\n          didReceiveUpdate = 0 !== (current.flags & 131072) ? !0 : !1;\n        }\n      else {\n        didReceiveUpdate = !1;\n        if ((returnFiber = isHydrating))\n          warnIfNotHydrating(),\n            (returnFiber = 0 !== (workInProgress.flags & 1048576));\n        returnFiber &&\n          ((returnFiber = workInProgress.index),\n          warnIfNotHydrating(),\n          pushTreeId(workInProgress, treeForkCount, returnFiber));\n      }\n      workInProgress.lanes = 0;\n      switch (workInProgress.tag) {\n        case 16:\n          a: if (\n            ((returnFiber = workInProgress.pendingProps),\n            (current = callLazyInitInDEV(workInProgress.elementType)),\n            (workInProgress.type = current),\n            \"function\" === typeof current)\n          )\n            shouldConstruct(current)\n              ? ((returnFiber = resolveClassComponentProps(\n                  current,\n                  returnFiber\n                )),\n                (workInProgress.tag = 1),\n                (workInProgress.type = current =\n                  resolveFunctionForHotReloading(current)),\n                (workInProgress = updateClassComponent(\n                  null,\n                  workInProgress,\n                  current,\n                  returnFiber,\n                  renderLanes\n                )))\n              : ((workInProgress.tag = 0),\n                validateFunctionComponentInDev(workInProgress, current),\n                (workInProgress.type = current =\n                  resolveFunctionForHotReloading(current)),\n                (workInProgress = updateFunctionComponent(\n                  null,\n                  workInProgress,\n                  current,\n                  returnFiber,\n                  renderLanes\n                )));\n          else {\n            if (void 0 !== current && null !== current)\n              if (\n                ((prevSibling = current.$$typeof),\n                prevSibling === REACT_FORWARD_REF_TYPE)\n              ) {\n                workInProgress.tag = 11;\n                workInProgress.type = current =\n                  resolveForwardRefForHotReloading(current);\n                workInProgress = updateForwardRef(\n                  null,\n                  workInProgress,\n                  current,\n                  returnFiber,\n                  renderLanes\n                );\n                break a;\n              } else if (prevSibling === REACT_MEMO_TYPE) {\n                workInProgress.tag = 14;\n                workInProgress = updateMemoComponent(\n                  null,\n                  workInProgress,\n                  current,\n                  returnFiber,\n                  renderLanes\n                );\n                break a;\n              }\n            workInProgress = \"\";\n            null !== current &&\n              \"object\" === typeof current &&\n              current.$$typeof === REACT_LAZY_TYPE &&\n              (workInProgress =\n                \" Did you wrap a component in React.lazy() more than once?\");\n            current = getComponentNameFromType(current) || current;\n            throw Error(\n              \"Element type is invalid. Received a promise that resolves to: \" +\n                current +\n                \". Lazy element type must resolve to a class or function.\" +\n                workInProgress\n            );\n          }\n          return workInProgress;\n        case 0:\n          return updateFunctionComponent(\n            current,\n            workInProgress,\n            workInProgress.type,\n            workInProgress.pendingProps,\n            renderLanes\n          );\n        case 1:\n          return (\n            (returnFiber = workInProgress.type),\n            (prevSibling = resolveClassComponentProps(\n              returnFiber,\n              workInProgress.pendingProps\n            )),\n            updateClassComponent(\n              current,\n              workInProgress,\n              returnFiber,\n              prevSibling,\n              renderLanes\n            )\n          );\n        case 3:\n          a: {\n            pushHostContainer(\n              workInProgress,\n              workInProgress.stateNode.containerInfo\n            );\n            if (null === current)\n              throw Error(\n                \"Should have a current fiber. This is a bug in React.\"\n              );\n            returnFiber = workInProgress.pendingProps;\n            var prevState = workInProgress.memoizedState;\n            prevSibling = prevState.element;\n            cloneUpdateQueue(current, workInProgress);\n            processUpdateQueue(workInProgress, returnFiber, null, renderLanes);\n            var nextState = workInProgress.memoizedState;\n            returnFiber = nextState.cache;\n            pushProvider(workInProgress, CacheContext, returnFiber);\n            returnFiber !== prevState.cache &&\n              propagateContextChanges(\n                workInProgress,\n                [CacheContext],\n                renderLanes,\n                !0\n              );\n            suspendIfUpdateReadFromEntangledAsyncAction();\n            returnFiber = nextState.element;\n            if (prevState.isDehydrated)\n              if (\n                ((prevState = {\n                  element: returnFiber,\n                  isDehydrated: !1,\n                  cache: nextState.cache\n                }),\n                (workInProgress.updateQueue.baseState = prevState),\n                (workInProgress.memoizedState = prevState),\n                workInProgress.flags & 256)\n              ) {\n                workInProgress = mountHostRootWithoutHydrating(\n                  current,\n                  workInProgress,\n                  returnFiber,\n                  renderLanes\n                );\n                break a;\n              } else if (returnFiber !== prevSibling) {\n                prevSibling = createCapturedValueAtFiber(\n                  Error(\n                    \"This root received an early update, before anything was able hydrate. Switched the entire root to client rendering.\"\n                  ),\n                  workInProgress\n                );\n                queueHydrationError(prevSibling);\n                workInProgress = mountHostRootWithoutHydrating(\n                  current,\n                  workInProgress,\n                  returnFiber,\n                  renderLanes\n                );\n                break a;\n              } else {\n                current = workInProgress.stateNode.containerInfo;\n                switch (current.nodeType) {\n                  case 9:\n                    current = current.body;\n                    break;\n                  default:\n                    current =\n                      \"HTML\" === current.nodeName\n                        ? current.ownerDocument.body\n                        : current;\n                }\n                nextHydratableInstance = getNextHydratable(current.firstChild);\n                hydrationParentFiber = workInProgress;\n                isHydrating = !0;\n                hydrationErrors = null;\n                didSuspendOrErrorDEV = !1;\n                hydrationDiffRootDEV = null;\n                rootOrSingletonContext = !0;\n                current = mountChildFibers(\n                  workInProgress,\n                  null,\n                  returnFiber,\n                  renderLanes\n                );\n                for (workInProgress.child = current; current; )\n                  (current.flags = (current.flags & -3) | 4096),\n                    (current = current.sibling);\n              }\n            else {\n              resetHydrationState();\n              if (returnFiber === prevSibling) {\n                workInProgress = bailoutOnAlreadyFinishedWork(\n                  current,\n                  workInProgress,\n                  renderLanes\n                );\n                break a;\n              }\n              reconcileChildren(\n                current,\n                workInProgress,\n                returnFiber,\n                renderLanes\n              );\n            }\n            workInProgress = workInProgress.child;\n          }\n          return workInProgress;\n        case 26:\n          return (\n            markRef(current, workInProgress),\n            null === current\n              ? (current = getResource(\n                  workInProgress.type,\n                  null,\n                  workInProgress.pendingProps,\n                  null\n                ))\n                ? (workInProgress.memoizedState = current)\n                : isHydrating ||\n                  ((current = workInProgress.type),\n                  (renderLanes = workInProgress.pendingProps),\n                  (returnFiber = requiredContext(\n                    rootInstanceStackCursor.current\n                  )),\n                  (returnFiber =\n                    getOwnerDocumentFromRootContainer(\n                      returnFiber\n                    ).createElement(current)),\n                  (returnFiber[internalInstanceKey] = workInProgress),\n                  (returnFiber[internalPropsKey] = renderLanes),\n                  setInitialProperties(returnFiber, current, renderLanes),\n                  markNodeAsHoistable(returnFiber),\n                  (workInProgress.stateNode = returnFiber))\n              : (workInProgress.memoizedState = getResource(\n                  workInProgress.type,\n                  current.memoizedProps,\n                  workInProgress.pendingProps,\n                  current.memoizedState\n                )),\n            null\n          );\n        case 27:\n          return (\n            pushHostContext(workInProgress),\n            null === current &&\n              isHydrating &&\n              ((returnFiber = requiredContext(rootInstanceStackCursor.current)),\n              (prevSibling = getHostContext()),\n              (returnFiber = workInProgress.stateNode =\n                resolveSingletonInstance(\n                  workInProgress.type,\n                  workInProgress.pendingProps,\n                  returnFiber,\n                  prevSibling,\n                  !1\n                )),\n              didSuspendOrErrorDEV ||\n                ((prevSibling = diffHydratedProperties(\n                  returnFiber,\n                  workInProgress.type,\n                  workInProgress.pendingProps,\n                  prevSibling\n                )),\n                null !== prevSibling &&\n                  (buildHydrationDiffNode(workInProgress, 0).serverProps =\n                    prevSibling)),\n              (hydrationParentFiber = workInProgress),\n              (rootOrSingletonContext = !0),\n              (prevSibling = nextHydratableInstance),\n              isSingletonScope(workInProgress.type)\n                ? ((previousHydratableOnEnteringScopedSingleton = prevSibling),\n                  (nextHydratableInstance = getNextHydratable(\n                    returnFiber.firstChild\n                  )))\n                : (nextHydratableInstance = prevSibling)),\n            reconcileChildren(\n              current,\n              workInProgress,\n              workInProgress.pendingProps.children,\n              renderLanes\n            ),\n            markRef(current, workInProgress),\n            null === current && (workInProgress.flags |= 4194304),\n            workInProgress.child\n          );\n        case 5:\n          return (\n            null === current &&\n              isHydrating &&\n              ((prevState = getHostContext()),\n              (returnFiber = validateDOMNesting(\n                workInProgress.type,\n                prevState.ancestorInfo\n              )),\n              (prevSibling = nextHydratableInstance),\n              (nextState = !prevSibling) ||\n                ((nextState = canHydrateInstance(\n                  prevSibling,\n                  workInProgress.type,\n                  workInProgress.pendingProps,\n                  rootOrSingletonContext\n                )),\n                null !== nextState\n                  ? ((workInProgress.stateNode = nextState),\n                    didSuspendOrErrorDEV ||\n                      ((prevState = diffHydratedProperties(\n                        nextState,\n                        workInProgress.type,\n                        workInProgress.pendingProps,\n                        prevState\n                      )),\n                      null !== prevState &&\n                        (buildHydrationDiffNode(workInProgress, 0).serverProps =\n                          prevState)),\n                    (hydrationParentFiber = workInProgress),\n                    (nextHydratableInstance = getNextHydratable(\n                      nextState.firstChild\n                    )),\n                    (rootOrSingletonContext = !1),\n                    (prevState = !0))\n                  : (prevState = !1),\n                (nextState = !prevState)),\n              nextState &&\n                (returnFiber &&\n                  warnNonHydratedInstance(workInProgress, prevSibling),\n                throwOnHydrationMismatch(workInProgress))),\n            pushHostContext(workInProgress),\n            (prevSibling = workInProgress.type),\n            (prevState = workInProgress.pendingProps),\n            (nextState = null !== current ? current.memoizedProps : null),\n            (returnFiber = prevState.children),\n            shouldSetTextContent(prevSibling, prevState)\n              ? (returnFiber = null)\n              : null !== nextState &&\n                shouldSetTextContent(prevSibling, nextState) &&\n                (workInProgress.flags |= 32),\n            null !== workInProgress.memoizedState &&\n              ((prevSibling = renderWithHooks(\n                current,\n                workInProgress,\n                TransitionAwareHostComponent,\n                null,\n                null,\n                renderLanes\n              )),\n              (HostTransitionContext._currentValue = prevSibling)),\n            markRef(current, workInProgress),\n            reconcileChildren(\n              current,\n              workInProgress,\n              returnFiber,\n              renderLanes\n            ),\n            workInProgress.child\n          );\n        case 6:\n          return (\n            null === current &&\n              isHydrating &&\n              ((current = workInProgress.pendingProps),\n              (renderLanes = getHostContext()),\n              (returnFiber = renderLanes.ancestorInfo.current),\n              (current =\n                null != returnFiber\n                  ? validateTextNesting(\n                      current,\n                      returnFiber.tag,\n                      renderLanes.ancestorInfo.implicitRootScope\n                    )\n                  : !0),\n              (renderLanes = nextHydratableInstance),\n              (returnFiber = !renderLanes) ||\n                ((returnFiber = canHydrateTextInstance(\n                  renderLanes,\n                  workInProgress.pendingProps,\n                  rootOrSingletonContext\n                )),\n                null !== returnFiber\n                  ? ((workInProgress.stateNode = returnFiber),\n                    (hydrationParentFiber = workInProgress),\n                    (nextHydratableInstance = null),\n                    (returnFiber = !0))\n                  : (returnFiber = !1),\n                (returnFiber = !returnFiber)),\n              returnFiber &&\n                (current &&\n                  warnNonHydratedInstance(workInProgress, renderLanes),\n                throwOnHydrationMismatch(workInProgress))),\n            null\n          );\n        case 13:\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        case 4:\n          return (\n            pushHostContainer(\n              workInProgress,\n              workInProgress.stateNode.containerInfo\n            ),\n            (returnFiber = workInProgress.pendingProps),\n            null === current\n              ? (workInProgress.child = reconcileChildFibers(\n                  workInProgress,\n                  null,\n                  returnFiber,\n                  renderLanes\n                ))\n              : reconcileChildren(\n                  current,\n                  workInProgress,\n                  returnFiber,\n                  renderLanes\n                ),\n            workInProgress.child\n          );\n        case 11:\n          return updateForwardRef(\n            current,\n            workInProgress,\n            workInProgress.type,\n            workInProgress.pendingProps,\n            renderLanes\n          );\n        case 7:\n          return (\n            reconcileChildren(\n              current,\n              workInProgress,\n              workInProgress.pendingProps,\n              renderLanes\n            ),\n            workInProgress.child\n          );\n        case 8:\n          return (\n            reconcileChildren(\n              current,\n              workInProgress,\n              workInProgress.pendingProps.children,\n              renderLanes\n            ),\n            workInProgress.child\n          );\n        case 12:\n          return (\n            (workInProgress.flags |= 4),\n            (workInProgress.flags |= 2048),\n            (returnFiber = workInProgress.stateNode),\n            (returnFiber.effectDuration = -0),\n            (returnFiber.passiveEffectDuration = -0),\n            reconcileChildren(\n              current,\n              workInProgress,\n              workInProgress.pendingProps.children,\n              renderLanes\n            ),\n            workInProgress.child\n          );\n        case 10:\n          return (\n            (returnFiber = workInProgress.type),\n            (prevSibling = workInProgress.pendingProps),\n            (prevState = prevSibling.value),\n            \"value\" in prevSibling ||\n              hasWarnedAboutUsingNoValuePropOnContextProvider ||\n              ((hasWarnedAboutUsingNoValuePropOnContextProvider = !0),\n              console.error(\n                \"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\"\n              )),\n            pushProvider(workInProgress, returnFiber, prevState),\n            reconcileChildren(\n              current,\n              workInProgress,\n              prevSibling.children,\n              renderLanes\n            ),\n            workInProgress.child\n          );\n        case 9:\n          return (\n            (prevSibling = workInProgress.type._context),\n            (returnFiber = workInProgress.pendingProps.children),\n            \"function\" !== typeof returnFiber &&\n              console.error(\n                \"A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.\"\n              ),\n            prepareToReadContext(workInProgress),\n            (prevSibling = readContext(prevSibling)),\n            markComponentRenderStarted(workInProgress),\n            (returnFiber = callComponentInDEV(\n              returnFiber,\n              prevSibling,\n              void 0\n            )),\n            markComponentRenderStopped(),\n            (workInProgress.flags |= 1),\n            reconcileChildren(\n              current,\n              workInProgress,\n              returnFiber,\n              renderLanes\n            ),\n            workInProgress.child\n          );\n        case 14:\n          return updateMemoComponent(\n            current,\n            workInProgress,\n            workInProgress.type,\n            workInProgress.pendingProps,\n            renderLanes\n          );\n        case 15:\n          return updateSimpleMemoComponent(\n            current,\n            workInProgress,\n            workInProgress.type,\n            workInProgress.pendingProps,\n            renderLanes\n          );\n        case 19:\n          return updateSuspenseListComponent(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        case 31:\n          return (\n            (returnFiber = workInProgress.pendingProps),\n            (renderLanes = workInProgress.mode),\n            (returnFiber = {\n              mode: returnFiber.mode,\n              children: returnFiber.children\n            }),\n            null === current\n              ? ((current = mountWorkInProgressOffscreenFiber(\n                  returnFiber,\n                  renderLanes\n                )),\n                (current.ref = workInProgress.ref),\n                (workInProgress.child = current),\n                (current.return = workInProgress),\n                (workInProgress = current))\n              : ((current = createWorkInProgress(current.child, returnFiber)),\n                (current.ref = workInProgress.ref),\n                (workInProgress.child = current),\n                (current.return = workInProgress),\n                (workInProgress = current)),\n            workInProgress\n          );\n        case 22:\n          return updateOffscreenComponent(current, workInProgress, renderLanes);\n        case 24:\n          return (\n            prepareToReadContext(workInProgress),\n            (returnFiber = readContext(CacheContext)),\n            null === current\n              ? ((prevSibling = peekCacheFromPool()),\n                null === prevSibling &&\n                  ((prevSibling = workInProgressRoot),\n                  (prevState = createCache()),\n                  (prevSibling.pooledCache = prevState),\n                  retainCache(prevState),\n                  null !== prevState &&\n                    (prevSibling.pooledCacheLanes |= renderLanes),\n                  (prevSibling = prevState)),\n                (workInProgress.memoizedState = {\n                  parent: returnFiber,\n                  cache: prevSibling\n                }),\n                initializeUpdateQueue(workInProgress),\n                pushProvider(workInProgress, CacheContext, prevSibling))\n              : (0 !== (current.lanes & renderLanes) &&\n                  (cloneUpdateQueue(current, workInProgress),\n                  processUpdateQueue(workInProgress, null, null, renderLanes),\n                  suspendIfUpdateReadFromEntangledAsyncAction()),\n                (prevSibling = current.memoizedState),\n                (prevState = workInProgress.memoizedState),\n                prevSibling.parent !== returnFiber\n                  ? ((prevSibling = {\n                      parent: returnFiber,\n                      cache: returnFiber\n                    }),\n                    (workInProgress.memoizedState = prevSibling),\n                    0 === workInProgress.lanes &&\n                      (workInProgress.memoizedState =\n                        workInProgress.updateQueue.baseState =\n                          prevSibling),\n                    pushProvider(workInProgress, CacheContext, returnFiber))\n                  : ((returnFiber = prevState.cache),\n                    pushProvider(workInProgress, CacheContext, returnFiber),\n                    returnFiber !== prevSibling.cache &&\n                      propagateContextChanges(\n                        workInProgress,\n                        [CacheContext],\n                        renderLanes,\n                        !0\n                      ))),\n            reconcileChildren(\n              current,\n              workInProgress,\n              workInProgress.pendingProps.children,\n              renderLanes\n            ),\n            workInProgress.child\n          );\n        case 29:\n          throw workInProgress.pendingProps;\n      }\n      throw Error(\n        \"Unknown unit of work tag (\" +\n          workInProgress.tag +\n          \"). This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n    function markUpdate(workInProgress) {\n      workInProgress.flags |= 4;\n    }\n    function preloadResourceAndSuspendIfNeeded(workInProgress, resource) {\n      if (\n        \"stylesheet\" !== resource.type ||\n        (resource.state.loading & Inserted) !== NotLoaded\n      )\n        workInProgress.flags &= -16777217;\n      else if (\n        ((workInProgress.flags |= 16777216), !preloadResource(resource))\n      ) {\n        resource = suspenseHandlerStackCursor.current;\n        if (\n          null !== resource &&\n          ((workInProgressRootRenderLanes & 4194048) ===\n          workInProgressRootRenderLanes\n            ? null !== shellBoundary\n            : ((workInProgressRootRenderLanes & 62914560) !==\n                workInProgressRootRenderLanes &&\n                0 === (workInProgressRootRenderLanes & 536870912)) ||\n              resource !== shellBoundary)\n        )\n          throw (\n            ((suspendedThenable = noopSuspenseyCommitThenable),\n            SuspenseyCommitException)\n          );\n        workInProgress.flags |= 8192;\n      }\n    }\n    function scheduleRetryEffect(workInProgress, retryQueue) {\n      null !== retryQueue && (workInProgress.flags |= 4);\n      workInProgress.flags & 16384 &&\n        ((retryQueue =\n          22 !== workInProgress.tag ? claimNextRetryLane() : 536870912),\n        (workInProgress.lanes |= retryQueue),\n        (workInProgressSuspendedRetryLanes |= retryQueue));\n    }\n    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n      if (!isHydrating)\n        switch (renderState.tailMode) {\n          case \"hidden\":\n            hasRenderedATailFallback = renderState.tail;\n            for (var lastTailNode = null; null !== hasRenderedATailFallback; )\n              null !== hasRenderedATailFallback.alternate &&\n                (lastTailNode = hasRenderedATailFallback),\n                (hasRenderedATailFallback = hasRenderedATailFallback.sibling);\n            null === lastTailNode\n              ? (renderState.tail = null)\n              : (lastTailNode.sibling = null);\n            break;\n          case \"collapsed\":\n            lastTailNode = renderState.tail;\n            for (var _lastTailNode = null; null !== lastTailNode; )\n              null !== lastTailNode.alternate && (_lastTailNode = lastTailNode),\n                (lastTailNode = lastTailNode.sibling);\n            null === _lastTailNode\n              ? hasRenderedATailFallback || null === renderState.tail\n                ? (renderState.tail = null)\n                : (renderState.tail.sibling = null)\n              : (_lastTailNode.sibling = null);\n        }\n    }\n    function bubbleProperties(completedWork) {\n      var didBailout =\n          null !== completedWork.alternate &&\n          completedWork.alternate.child === completedWork.child,\n        newChildLanes = 0,\n        subtreeFlags = 0;\n      if (didBailout)\n        if ((completedWork.mode & ProfileMode) !== NoMode) {\n          for (\n            var _treeBaseDuration = completedWork.selfBaseDuration,\n              _child2 = completedWork.child;\n            null !== _child2;\n\n          )\n            (newChildLanes |= _child2.lanes | _child2.childLanes),\n              (subtreeFlags |= _child2.subtreeFlags & 65011712),\n              (subtreeFlags |= _child2.flags & 65011712),\n              (_treeBaseDuration += _child2.treeBaseDuration),\n              (_child2 = _child2.sibling);\n          completedWork.treeBaseDuration = _treeBaseDuration;\n        } else\n          for (\n            _treeBaseDuration = completedWork.child;\n            null !== _treeBaseDuration;\n\n          )\n            (newChildLanes |=\n              _treeBaseDuration.lanes | _treeBaseDuration.childLanes),\n              (subtreeFlags |= _treeBaseDuration.subtreeFlags & 65011712),\n              (subtreeFlags |= _treeBaseDuration.flags & 65011712),\n              (_treeBaseDuration.return = completedWork),\n              (_treeBaseDuration = _treeBaseDuration.sibling);\n      else if ((completedWork.mode & ProfileMode) !== NoMode) {\n        _treeBaseDuration = completedWork.actualDuration;\n        _child2 = completedWork.selfBaseDuration;\n        for (var child = completedWork.child; null !== child; )\n          (newChildLanes |= child.lanes | child.childLanes),\n            (subtreeFlags |= child.subtreeFlags),\n            (subtreeFlags |= child.flags),\n            (_treeBaseDuration += child.actualDuration),\n            (_child2 += child.treeBaseDuration),\n            (child = child.sibling);\n        completedWork.actualDuration = _treeBaseDuration;\n        completedWork.treeBaseDuration = _child2;\n      } else\n        for (\n          _treeBaseDuration = completedWork.child;\n          null !== _treeBaseDuration;\n\n        )\n          (newChildLanes |=\n            _treeBaseDuration.lanes | _treeBaseDuration.childLanes),\n            (subtreeFlags |= _treeBaseDuration.subtreeFlags),\n            (subtreeFlags |= _treeBaseDuration.flags),\n            (_treeBaseDuration.return = completedWork),\n            (_treeBaseDuration = _treeBaseDuration.sibling);\n      completedWork.subtreeFlags |= subtreeFlags;\n      completedWork.childLanes = newChildLanes;\n      return didBailout;\n    }\n    function completeWork(current, workInProgress, renderLanes) {\n      var newProps = workInProgress.pendingProps;\n      popTreeContext(workInProgress);\n      switch (workInProgress.tag) {\n        case 31:\n        case 16:\n        case 15:\n        case 0:\n        case 11:\n        case 7:\n        case 8:\n        case 12:\n        case 9:\n        case 14:\n          return bubbleProperties(workInProgress), null;\n        case 1:\n          return bubbleProperties(workInProgress), null;\n        case 3:\n          renderLanes = workInProgress.stateNode;\n          newProps = null;\n          null !== current && (newProps = current.memoizedState.cache);\n          workInProgress.memoizedState.cache !== newProps &&\n            (workInProgress.flags |= 2048);\n          popProvider(CacheContext, workInProgress);\n          popHostContainer(workInProgress);\n          renderLanes.pendingContext &&\n            ((renderLanes.context = renderLanes.pendingContext),\n            (renderLanes.pendingContext = null));\n          if (null === current || null === current.child)\n            popHydrationState(workInProgress)\n              ? (emitPendingHydrationWarnings(), markUpdate(workInProgress))\n              : null === current ||\n                (current.memoizedState.isDehydrated &&\n                  0 === (workInProgress.flags & 256)) ||\n                ((workInProgress.flags |= 1024),\n                upgradeHydrationErrorsToRecoverable());\n          bubbleProperties(workInProgress);\n          return null;\n        case 26:\n          return (\n            (renderLanes = workInProgress.memoizedState),\n            null === current\n              ? (markUpdate(workInProgress),\n                null !== renderLanes\n                  ? (bubbleProperties(workInProgress),\n                    preloadResourceAndSuspendIfNeeded(\n                      workInProgress,\n                      renderLanes\n                    ))\n                  : (bubbleProperties(workInProgress),\n                    (workInProgress.flags &= -16777217)))\n              : renderLanes\n                ? renderLanes !== current.memoizedState\n                  ? (markUpdate(workInProgress),\n                    bubbleProperties(workInProgress),\n                    preloadResourceAndSuspendIfNeeded(\n                      workInProgress,\n                      renderLanes\n                    ))\n                  : (bubbleProperties(workInProgress),\n                    (workInProgress.flags &= -16777217))\n                : (current.memoizedProps !== newProps &&\n                    markUpdate(workInProgress),\n                  bubbleProperties(workInProgress),\n                  (workInProgress.flags &= -16777217)),\n            null\n          );\n        case 27:\n          popHostContext(workInProgress);\n          renderLanes = requiredContext(rootInstanceStackCursor.current);\n          var _type = workInProgress.type;\n          if (null !== current && null != workInProgress.stateNode)\n            current.memoizedProps !== newProps && markUpdate(workInProgress);\n          else {\n            if (!newProps) {\n              if (null === workInProgress.stateNode)\n                throw Error(\n                  \"We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.\"\n                );\n              bubbleProperties(workInProgress);\n              return null;\n            }\n            current = getHostContext();\n            popHydrationState(workInProgress)\n              ? prepareToHydrateHostInstance(workInProgress, current)\n              : ((current = resolveSingletonInstance(\n                  _type,\n                  newProps,\n                  renderLanes,\n                  current,\n                  !0\n                )),\n                (workInProgress.stateNode = current),\n                markUpdate(workInProgress));\n          }\n          bubbleProperties(workInProgress);\n          return null;\n        case 5:\n          popHostContext(workInProgress);\n          renderLanes = workInProgress.type;\n          if (null !== current && null != workInProgress.stateNode)\n            current.memoizedProps !== newProps && markUpdate(workInProgress);\n          else {\n            if (!newProps) {\n              if (null === workInProgress.stateNode)\n                throw Error(\n                  \"We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.\"\n                );\n              bubbleProperties(workInProgress);\n              return null;\n            }\n            _type = getHostContext();\n            if (popHydrationState(workInProgress))\n              prepareToHydrateHostInstance(workInProgress, _type);\n            else {\n              current = requiredContext(rootInstanceStackCursor.current);\n              validateDOMNesting(renderLanes, _type.ancestorInfo);\n              _type = _type.context;\n              current = getOwnerDocumentFromRootContainer(current);\n              switch (_type) {\n                case HostContextNamespaceSvg:\n                  current = current.createElementNS(SVG_NAMESPACE, renderLanes);\n                  break;\n                case HostContextNamespaceMath:\n                  current = current.createElementNS(\n                    MATH_NAMESPACE,\n                    renderLanes\n                  );\n                  break;\n                default:\n                  switch (renderLanes) {\n                    case \"svg\":\n                      current = current.createElementNS(\n                        SVG_NAMESPACE,\n                        renderLanes\n                      );\n                      break;\n                    case \"math\":\n                      current = current.createElementNS(\n                        MATH_NAMESPACE,\n                        renderLanes\n                      );\n                      break;\n                    case \"script\":\n                      current = current.createElement(\"div\");\n                      current.innerHTML = \"<script>\\x3c/script>\";\n                      current = current.removeChild(current.firstChild);\n                      break;\n                    case \"select\":\n                      current =\n                        \"string\" === typeof newProps.is\n                          ? current.createElement(\"select\", { is: newProps.is })\n                          : current.createElement(\"select\");\n                      newProps.multiple\n                        ? (current.multiple = !0)\n                        : newProps.size && (current.size = newProps.size);\n                      break;\n                    default:\n                      (current =\n                        \"string\" === typeof newProps.is\n                          ? current.createElement(renderLanes, {\n                              is: newProps.is\n                            })\n                          : current.createElement(renderLanes)),\n                        -1 === renderLanes.indexOf(\"-\") &&\n                          (renderLanes !== renderLanes.toLowerCase() &&\n                            console.error(\n                              \"<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.\",\n                              renderLanes\n                            ),\n                          \"[object HTMLUnknownElement]\" !==\n                            Object.prototype.toString.call(current) ||\n                            hasOwnProperty.call(\n                              warnedUnknownTags,\n                              renderLanes\n                            ) ||\n                            ((warnedUnknownTags[renderLanes] = !0),\n                            console.error(\n                              \"The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.\",\n                              renderLanes\n                            )));\n                  }\n              }\n              current[internalInstanceKey] = workInProgress;\n              current[internalPropsKey] = newProps;\n              a: for (_type = workInProgress.child; null !== _type; ) {\n                if (5 === _type.tag || 6 === _type.tag)\n                  current.appendChild(_type.stateNode);\n                else if (\n                  4 !== _type.tag &&\n                  27 !== _type.tag &&\n                  null !== _type.child\n                ) {\n                  _type.child.return = _type;\n                  _type = _type.child;\n                  continue;\n                }\n                if (_type === workInProgress) break a;\n                for (; null === _type.sibling; ) {\n                  if (null === _type.return || _type.return === workInProgress)\n                    break a;\n                  _type = _type.return;\n                }\n                _type.sibling.return = _type.return;\n                _type = _type.sibling;\n              }\n              workInProgress.stateNode = current;\n              a: switch (\n                (setInitialProperties(current, renderLanes, newProps),\n                renderLanes)\n              ) {\n                case \"button\":\n                case \"input\":\n                case \"select\":\n                case \"textarea\":\n                  current = !!newProps.autoFocus;\n                  break a;\n                case \"img\":\n                  current = !0;\n                  break a;\n                default:\n                  current = !1;\n              }\n              current && markUpdate(workInProgress);\n            }\n          }\n          bubbleProperties(workInProgress);\n          workInProgress.flags &= -16777217;\n          return null;\n        case 6:\n          if (current && null != workInProgress.stateNode)\n            current.memoizedProps !== newProps && markUpdate(workInProgress);\n          else {\n            if (\n              \"string\" !== typeof newProps &&\n              null === workInProgress.stateNode\n            )\n              throw Error(\n                \"We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.\"\n              );\n            current = requiredContext(rootInstanceStackCursor.current);\n            renderLanes = getHostContext();\n            if (popHydrationState(workInProgress)) {\n              current = workInProgress.stateNode;\n              renderLanes = workInProgress.memoizedProps;\n              _type = !didSuspendOrErrorDEV;\n              newProps = null;\n              var returnFiber = hydrationParentFiber;\n              if (null !== returnFiber)\n                switch (returnFiber.tag) {\n                  case 3:\n                    _type &&\n                      ((_type = diffHydratedTextForDevWarnings(\n                        current,\n                        renderLanes,\n                        newProps\n                      )),\n                      null !== _type &&\n                        (buildHydrationDiffNode(workInProgress, 0).serverProps =\n                          _type));\n                    break;\n                  case 27:\n                  case 5:\n                    (newProps = returnFiber.memoizedProps),\n                      _type &&\n                        ((_type = diffHydratedTextForDevWarnings(\n                          current,\n                          renderLanes,\n                          newProps\n                        )),\n                        null !== _type &&\n                          (buildHydrationDiffNode(\n                            workInProgress,\n                            0\n                          ).serverProps = _type));\n                }\n              current[internalInstanceKey] = workInProgress;\n              current =\n                current.nodeValue === renderLanes ||\n                (null !== newProps &&\n                  !0 === newProps.suppressHydrationWarning) ||\n                checkForUnmatchedText(current.nodeValue, renderLanes)\n                  ? !0\n                  : !1;\n              current || throwOnHydrationMismatch(workInProgress);\n            } else\n              (_type = renderLanes.ancestorInfo.current),\n                null != _type &&\n                  validateTextNesting(\n                    newProps,\n                    _type.tag,\n                    renderLanes.ancestorInfo.implicitRootScope\n                  ),\n                (current =\n                  getOwnerDocumentFromRootContainer(current).createTextNode(\n                    newProps\n                  )),\n                (current[internalInstanceKey] = workInProgress),\n                (workInProgress.stateNode = current);\n          }\n          bubbleProperties(workInProgress);\n          return null;\n        case 13:\n          newProps = workInProgress.memoizedState;\n          if (\n            null === current ||\n            (null !== current.memoizedState &&\n              null !== current.memoizedState.dehydrated)\n          ) {\n            _type = popHydrationState(workInProgress);\n            if (null !== newProps && null !== newProps.dehydrated) {\n              if (null === current) {\n                if (!_type)\n                  throw Error(\n                    \"A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.\"\n                  );\n                _type = workInProgress.memoizedState;\n                _type = null !== _type ? _type.dehydrated : null;\n                if (!_type)\n                  throw Error(\n                    \"Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.\"\n                  );\n                _type[internalInstanceKey] = workInProgress;\n                bubbleProperties(workInProgress);\n                (workInProgress.mode & ProfileMode) !== NoMode &&\n                  null !== newProps &&\n                  ((_type = workInProgress.child),\n                  null !== _type &&\n                    (workInProgress.treeBaseDuration -=\n                      _type.treeBaseDuration));\n              } else\n                emitPendingHydrationWarnings(),\n                  resetHydrationState(),\n                  0 === (workInProgress.flags & 128) &&\n                    (workInProgress.memoizedState = null),\n                  (workInProgress.flags |= 4),\n                  bubbleProperties(workInProgress),\n                  (workInProgress.mode & ProfileMode) !== NoMode &&\n                    null !== newProps &&\n                    ((_type = workInProgress.child),\n                    null !== _type &&\n                      (workInProgress.treeBaseDuration -=\n                        _type.treeBaseDuration));\n              _type = !1;\n            } else\n              (_type = upgradeHydrationErrorsToRecoverable()),\n                null !== current &&\n                  null !== current.memoizedState &&\n                  (current.memoizedState.hydrationErrors = _type),\n                (_type = !0);\n            if (!_type) {\n              if (workInProgress.flags & 256)\n                return popSuspenseHandler(workInProgress), workInProgress;\n              popSuspenseHandler(workInProgress);\n              return null;\n            }\n          }\n          popSuspenseHandler(workInProgress);\n          if (0 !== (workInProgress.flags & 128))\n            return (\n              (workInProgress.lanes = renderLanes),\n              (workInProgress.mode & ProfileMode) !== NoMode &&\n                transferActualDuration(workInProgress),\n              workInProgress\n            );\n          renderLanes = null !== newProps;\n          current = null !== current && null !== current.memoizedState;\n          renderLanes &&\n            ((newProps = workInProgress.child),\n            (_type = null),\n            null !== newProps.alternate &&\n              null !== newProps.alternate.memoizedState &&\n              null !== newProps.alternate.memoizedState.cachePool &&\n              (_type = newProps.alternate.memoizedState.cachePool.pool),\n            (returnFiber = null),\n            null !== newProps.memoizedState &&\n              null !== newProps.memoizedState.cachePool &&\n              (returnFiber = newProps.memoizedState.cachePool.pool),\n            returnFiber !== _type && (newProps.flags |= 2048));\n          renderLanes !== current &&\n            renderLanes &&\n            (workInProgress.child.flags |= 8192);\n          scheduleRetryEffect(workInProgress, workInProgress.updateQueue);\n          bubbleProperties(workInProgress);\n          (workInProgress.mode & ProfileMode) !== NoMode &&\n            renderLanes &&\n            ((current = workInProgress.child),\n            null !== current &&\n              (workInProgress.treeBaseDuration -= current.treeBaseDuration));\n          return null;\n        case 4:\n          return (\n            popHostContainer(workInProgress),\n            null === current &&\n              listenToAllSupportedEvents(\n                workInProgress.stateNode.containerInfo\n              ),\n            bubbleProperties(workInProgress),\n            null\n          );\n        case 10:\n          return (\n            popProvider(workInProgress.type, workInProgress),\n            bubbleProperties(workInProgress),\n            null\n          );\n        case 19:\n          pop(suspenseStackCursor, workInProgress);\n          _type = workInProgress.memoizedState;\n          if (null === _type) return bubbleProperties(workInProgress), null;\n          newProps = 0 !== (workInProgress.flags & 128);\n          returnFiber = _type.rendering;\n          if (null === returnFiber)\n            if (newProps) cutOffTailIfNeeded(_type, !1);\n            else {\n              if (\n                workInProgressRootExitStatus !== RootInProgress ||\n                (null !== current && 0 !== (current.flags & 128))\n              )\n                for (current = workInProgress.child; null !== current; ) {\n                  returnFiber = findFirstSuspended(current);\n                  if (null !== returnFiber) {\n                    workInProgress.flags |= 128;\n                    cutOffTailIfNeeded(_type, !1);\n                    current = returnFiber.updateQueue;\n                    workInProgress.updateQueue = current;\n                    scheduleRetryEffect(workInProgress, current);\n                    workInProgress.subtreeFlags = 0;\n                    current = renderLanes;\n                    for (\n                      renderLanes = workInProgress.child;\n                      null !== renderLanes;\n\n                    )\n                      resetWorkInProgress(renderLanes, current),\n                        (renderLanes = renderLanes.sibling);\n                    push(\n                      suspenseStackCursor,\n                      (suspenseStackCursor.current &\n                        SubtreeSuspenseContextMask) |\n                        ForceSuspenseFallback,\n                      workInProgress\n                    );\n                    return workInProgress.child;\n                  }\n                  current = current.sibling;\n                }\n              null !== _type.tail &&\n                now$1() > workInProgressRootRenderTargetTime &&\n                ((workInProgress.flags |= 128),\n                (newProps = !0),\n                cutOffTailIfNeeded(_type, !1),\n                (workInProgress.lanes = 4194304));\n            }\n          else {\n            if (!newProps)\n              if (\n                ((current = findFirstSuspended(returnFiber)), null !== current)\n              ) {\n                if (\n                  ((workInProgress.flags |= 128),\n                  (newProps = !0),\n                  (current = current.updateQueue),\n                  (workInProgress.updateQueue = current),\n                  scheduleRetryEffect(workInProgress, current),\n                  cutOffTailIfNeeded(_type, !0),\n                  null === _type.tail &&\n                    \"hidden\" === _type.tailMode &&\n                    !returnFiber.alternate &&\n                    !isHydrating)\n                )\n                  return bubbleProperties(workInProgress), null;\n              } else\n                2 * now$1() - _type.renderingStartTime >\n                  workInProgressRootRenderTargetTime &&\n                  536870912 !== renderLanes &&\n                  ((workInProgress.flags |= 128),\n                  (newProps = !0),\n                  cutOffTailIfNeeded(_type, !1),\n                  (workInProgress.lanes = 4194304));\n            _type.isBackwards\n              ? ((returnFiber.sibling = workInProgress.child),\n                (workInProgress.child = returnFiber))\n              : ((current = _type.last),\n                null !== current\n                  ? (current.sibling = returnFiber)\n                  : (workInProgress.child = returnFiber),\n                (_type.last = returnFiber));\n          }\n          if (null !== _type.tail)\n            return (\n              (current = _type.tail),\n              (_type.rendering = current),\n              (_type.tail = current.sibling),\n              (_type.renderingStartTime = now$1()),\n              (current.sibling = null),\n              (renderLanes = suspenseStackCursor.current),\n              (renderLanes = newProps\n                ? (renderLanes & SubtreeSuspenseContextMask) |\n                  ForceSuspenseFallback\n                : renderLanes & SubtreeSuspenseContextMask),\n              push(suspenseStackCursor, renderLanes, workInProgress),\n              current\n            );\n          bubbleProperties(workInProgress);\n          return null;\n        case 22:\n        case 23:\n          return (\n            popSuspenseHandler(workInProgress),\n            popHiddenContext(workInProgress),\n            (newProps = null !== workInProgress.memoizedState),\n            null !== current\n              ? (null !== current.memoizedState) !== newProps &&\n                (workInProgress.flags |= 8192)\n              : newProps && (workInProgress.flags |= 8192),\n            newProps\n              ? 0 !== (renderLanes & 536870912) &&\n                0 === (workInProgress.flags & 128) &&\n                (bubbleProperties(workInProgress),\n                workInProgress.subtreeFlags & 6 &&\n                  (workInProgress.flags |= 8192))\n              : bubbleProperties(workInProgress),\n            (renderLanes = workInProgress.updateQueue),\n            null !== renderLanes &&\n              scheduleRetryEffect(workInProgress, renderLanes.retryQueue),\n            (renderLanes = null),\n            null !== current &&\n              null !== current.memoizedState &&\n              null !== current.memoizedState.cachePool &&\n              (renderLanes = current.memoizedState.cachePool.pool),\n            (newProps = null),\n            null !== workInProgress.memoizedState &&\n              null !== workInProgress.memoizedState.cachePool &&\n              (newProps = workInProgress.memoizedState.cachePool.pool),\n            newProps !== renderLanes && (workInProgress.flags |= 2048),\n            null !== current && pop(resumedCache, workInProgress),\n            null\n          );\n        case 24:\n          return (\n            (renderLanes = null),\n            null !== current && (renderLanes = current.memoizedState.cache),\n            workInProgress.memoizedState.cache !== renderLanes &&\n              (workInProgress.flags |= 2048),\n            popProvider(CacheContext, workInProgress),\n            bubbleProperties(workInProgress),\n            null\n          );\n        case 25:\n          return null;\n        case 30:\n          return null;\n      }\n      throw Error(\n        \"Unknown unit of work tag (\" +\n          workInProgress.tag +\n          \"). This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n    function unwindWork(current, workInProgress) {\n      popTreeContext(workInProgress);\n      switch (workInProgress.tag) {\n        case 1:\n          return (\n            (current = workInProgress.flags),\n            current & 65536\n              ? ((workInProgress.flags = (current & -65537) | 128),\n                (workInProgress.mode & ProfileMode) !== NoMode &&\n                  transferActualDuration(workInProgress),\n                workInProgress)\n              : null\n          );\n        case 3:\n          return (\n            popProvider(CacheContext, workInProgress),\n            popHostContainer(workInProgress),\n            (current = workInProgress.flags),\n            0 !== (current & 65536) && 0 === (current & 128)\n              ? ((workInProgress.flags = (current & -65537) | 128),\n                workInProgress)\n              : null\n          );\n        case 26:\n        case 27:\n        case 5:\n          return popHostContext(workInProgress), null;\n        case 13:\n          popSuspenseHandler(workInProgress);\n          current = workInProgress.memoizedState;\n          if (null !== current && null !== current.dehydrated) {\n            if (null === workInProgress.alternate)\n              throw Error(\n                \"Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.\"\n              );\n            resetHydrationState();\n          }\n          current = workInProgress.flags;\n          return current & 65536\n            ? ((workInProgress.flags = (current & -65537) | 128),\n              (workInProgress.mode & ProfileMode) !== NoMode &&\n                transferActualDuration(workInProgress),\n              workInProgress)\n            : null;\n        case 19:\n          return pop(suspenseStackCursor, workInProgress), null;\n        case 4:\n          return popHostContainer(workInProgress), null;\n        case 10:\n          return popProvider(workInProgress.type, workInProgress), null;\n        case 22:\n        case 23:\n          return (\n            popSuspenseHandler(workInProgress),\n            popHiddenContext(workInProgress),\n            null !== current && pop(resumedCache, workInProgress),\n            (current = workInProgress.flags),\n            current & 65536\n              ? ((workInProgress.flags = (current & -65537) | 128),\n                (workInProgress.mode & ProfileMode) !== NoMode &&\n                  transferActualDuration(workInProgress),\n                workInProgress)\n              : null\n          );\n        case 24:\n          return popProvider(CacheContext, workInProgress), null;\n        case 25:\n          return null;\n        default:\n          return null;\n      }\n    }\n    function unwindInterruptedWork(current, interruptedWork) {\n      popTreeContext(interruptedWork);\n      switch (interruptedWork.tag) {\n        case 3:\n          popProvider(CacheContext, interruptedWork);\n          popHostContainer(interruptedWork);\n          break;\n        case 26:\n        case 27:\n        case 5:\n          popHostContext(interruptedWork);\n          break;\n        case 4:\n          popHostContainer(interruptedWork);\n          break;\n        case 13:\n          popSuspenseHandler(interruptedWork);\n          break;\n        case 19:\n          pop(suspenseStackCursor, interruptedWork);\n          break;\n        case 10:\n          popProvider(interruptedWork.type, interruptedWork);\n          break;\n        case 22:\n        case 23:\n          popSuspenseHandler(interruptedWork);\n          popHiddenContext(interruptedWork);\n          null !== current && pop(resumedCache, interruptedWork);\n          break;\n        case 24:\n          popProvider(CacheContext, interruptedWork);\n      }\n    }\n    function shouldProfile(current) {\n      return (current.mode & ProfileMode) !== NoMode;\n    }\n    function commitHookLayoutEffects(finishedWork, hookFlags) {\n      shouldProfile(finishedWork)\n        ? (startEffectTimer(),\n          commitHookEffectListMount(hookFlags, finishedWork),\n          recordEffectDuration())\n        : commitHookEffectListMount(hookFlags, finishedWork);\n    }\n    function commitHookLayoutUnmountEffects(\n      finishedWork,\n      nearestMountedAncestor,\n      hookFlags\n    ) {\n      shouldProfile(finishedWork)\n        ? (startEffectTimer(),\n          commitHookEffectListUnmount(\n            hookFlags,\n            finishedWork,\n            nearestMountedAncestor\n          ),\n          recordEffectDuration())\n        : commitHookEffectListUnmount(\n            hookFlags,\n            finishedWork,\n            nearestMountedAncestor\n          );\n    }\n    function commitHookEffectListMount(flags, finishedWork) {\n      try {\n        var updateQueue = finishedWork.updateQueue,\n          lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n        if (null !== lastEffect) {\n          var firstEffect = lastEffect.next;\n          updateQueue = firstEffect;\n          do {\n            if (\n              (updateQueue.tag & flags) === flags &&\n              ((flags & Passive) !== NoFlags\n                ? null !== injectedProfilingHooks &&\n                  \"function\" ===\n                    typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted &&\n                  injectedProfilingHooks.markComponentPassiveEffectMountStarted(\n                    finishedWork\n                  )\n                : (flags & Layout) !== NoFlags &&\n                  null !== injectedProfilingHooks &&\n                  \"function\" ===\n                    typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted &&\n                  injectedProfilingHooks.markComponentLayoutEffectMountStarted(\n                    finishedWork\n                  ),\n              (lastEffect = void 0),\n              (flags & Insertion) !== NoFlags &&\n                (isRunningInsertionEffect = !0),\n              (lastEffect = runWithFiberInDEV(\n                finishedWork,\n                callCreateInDEV,\n                updateQueue\n              )),\n              (flags & Insertion) !== NoFlags &&\n                (isRunningInsertionEffect = !1),\n              (flags & Passive) !== NoFlags\n                ? null !== injectedProfilingHooks &&\n                  \"function\" ===\n                    typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped &&\n                  injectedProfilingHooks.markComponentPassiveEffectMountStopped()\n                : (flags & Layout) !== NoFlags &&\n                  null !== injectedProfilingHooks &&\n                  \"function\" ===\n                    typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped &&\n                  injectedProfilingHooks.markComponentLayoutEffectMountStopped(),\n              void 0 !== lastEffect && \"function\" !== typeof lastEffect)\n            ) {\n              var hookName = void 0;\n              hookName =\n                0 !== (updateQueue.tag & Layout)\n                  ? \"useLayoutEffect\"\n                  : 0 !== (updateQueue.tag & Insertion)\n                    ? \"useInsertionEffect\"\n                    : \"useEffect\";\n              var addendum = void 0;\n              addendum =\n                null === lastEffect\n                  ? \" You returned null. If your effect does not require clean up, return undefined (or nothing).\"\n                  : \"function\" === typeof lastEffect.then\n                    ? \"\\n\\nIt looks like you wrote \" +\n                      hookName +\n                      \"(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\\n\\n\" +\n                      hookName +\n                      \"(() => {\\n  async function fetchData() {\\n    // You can await here\\n    const response = await MyAPI.getData(someId);\\n    // ...\\n  }\\n  fetchData();\\n}, [someId]); // Or [] if effect doesn't need props or state\\n\\nLearn more about data fetching with Hooks: https://react.dev/link/hooks-data-fetching\"\n                    : \" You returned: \" + lastEffect;\n              runWithFiberInDEV(\n                finishedWork,\n                function (n, a) {\n                  console.error(\n                    \"%s must not return anything besides a function, which is used for clean-up.%s\",\n                    n,\n                    a\n                  );\n                },\n                hookName,\n                addendum\n              );\n            }\n            updateQueue = updateQueue.next;\n          } while (updateQueue !== firstEffect);\n        }\n      } catch (error) {\n        captureCommitPhaseError(finishedWork, finishedWork.return, error);\n      }\n    }\n    function commitHookEffectListUnmount(\n      flags,\n      finishedWork,\n      nearestMountedAncestor\n    ) {\n      try {\n        var updateQueue = finishedWork.updateQueue,\n          lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n        if (null !== lastEffect) {\n          var firstEffect = lastEffect.next;\n          updateQueue = firstEffect;\n          do {\n            if ((updateQueue.tag & flags) === flags) {\n              var inst = updateQueue.inst,\n                destroy = inst.destroy;\n              void 0 !== destroy &&\n                ((inst.destroy = void 0),\n                (flags & Passive) !== NoFlags\n                  ? null !== injectedProfilingHooks &&\n                    \"function\" ===\n                      typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted &&\n                    injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(\n                      finishedWork\n                    )\n                  : (flags & Layout) !== NoFlags &&\n                    null !== injectedProfilingHooks &&\n                    \"function\" ===\n                      typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted &&\n                    injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(\n                      finishedWork\n                    ),\n                (flags & Insertion) !== NoFlags &&\n                  (isRunningInsertionEffect = !0),\n                (lastEffect = finishedWork),\n                runWithFiberInDEV(\n                  lastEffect,\n                  callDestroyInDEV,\n                  lastEffect,\n                  nearestMountedAncestor,\n                  destroy\n                ),\n                (flags & Insertion) !== NoFlags &&\n                  (isRunningInsertionEffect = !1),\n                (flags & Passive) !== NoFlags\n                  ? null !== injectedProfilingHooks &&\n                    \"function\" ===\n                      typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped &&\n                    injectedProfilingHooks.markComponentPassiveEffectUnmountStopped()\n                  : (flags & Layout) !== NoFlags &&\n                    null !== injectedProfilingHooks &&\n                    \"function\" ===\n                      typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped &&\n                    injectedProfilingHooks.markComponentLayoutEffectUnmountStopped());\n            }\n            updateQueue = updateQueue.next;\n          } while (updateQueue !== firstEffect);\n        }\n      } catch (error) {\n        captureCommitPhaseError(finishedWork, finishedWork.return, error);\n      }\n    }\n    function commitHookPassiveMountEffects(finishedWork, hookFlags) {\n      shouldProfile(finishedWork)\n        ? (startEffectTimer(),\n          commitHookEffectListMount(hookFlags, finishedWork),\n          recordEffectDuration())\n        : commitHookEffectListMount(hookFlags, finishedWork);\n    }\n    function commitHookPassiveUnmountEffects(\n      finishedWork,\n      nearestMountedAncestor,\n      hookFlags\n    ) {\n      shouldProfile(finishedWork)\n        ? (startEffectTimer(),\n          commitHookEffectListUnmount(\n            hookFlags,\n            finishedWork,\n            nearestMountedAncestor\n          ),\n          recordEffectDuration())\n        : commitHookEffectListUnmount(\n            hookFlags,\n            finishedWork,\n            nearestMountedAncestor\n          );\n    }\n    function commitClassCallbacks(finishedWork) {\n      var updateQueue = finishedWork.updateQueue;\n      if (null !== updateQueue) {\n        var instance = finishedWork.stateNode;\n        finishedWork.type.defaultProps ||\n          \"ref\" in finishedWork.memoizedProps ||\n          didWarnAboutReassigningProps ||\n          (instance.props !== finishedWork.memoizedProps &&\n            console.error(\n              \"Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\",\n              getComponentNameFromFiber(finishedWork) || \"instance\"\n            ),\n          instance.state !== finishedWork.memoizedState &&\n            console.error(\n              \"Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\",\n              getComponentNameFromFiber(finishedWork) || \"instance\"\n            ));\n        try {\n          runWithFiberInDEV(\n            finishedWork,\n            commitCallbacks,\n            updateQueue,\n            instance\n          );\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n    }\n    function callGetSnapshotBeforeUpdates(instance, prevProps, prevState) {\n      return instance.getSnapshotBeforeUpdate(prevProps, prevState);\n    }\n    function commitClassSnapshot(finishedWork, current) {\n      var prevProps = current.memoizedProps,\n        prevState = current.memoizedState;\n      current = finishedWork.stateNode;\n      finishedWork.type.defaultProps ||\n        \"ref\" in finishedWork.memoizedProps ||\n        didWarnAboutReassigningProps ||\n        (current.props !== finishedWork.memoizedProps &&\n          console.error(\n            \"Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\",\n            getComponentNameFromFiber(finishedWork) || \"instance\"\n          ),\n        current.state !== finishedWork.memoizedState &&\n          console.error(\n            \"Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\",\n            getComponentNameFromFiber(finishedWork) || \"instance\"\n          ));\n      try {\n        var resolvedPrevProps = resolveClassComponentProps(\n          finishedWork.type,\n          prevProps,\n          finishedWork.elementType === finishedWork.type\n        );\n        var snapshot = runWithFiberInDEV(\n          finishedWork,\n          callGetSnapshotBeforeUpdates,\n          current,\n          resolvedPrevProps,\n          prevState\n        );\n        prevProps = didWarnAboutUndefinedSnapshotBeforeUpdate;\n        void 0 !== snapshot ||\n          prevProps.has(finishedWork.type) ||\n          (prevProps.add(finishedWork.type),\n          runWithFiberInDEV(finishedWork, function () {\n            console.error(\n              \"%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.\",\n              getComponentNameFromFiber(finishedWork)\n            );\n          }));\n        current.__reactInternalSnapshotBeforeUpdate = snapshot;\n      } catch (error) {\n        captureCommitPhaseError(finishedWork, finishedWork.return, error);\n      }\n    }\n    function safelyCallComponentWillUnmount(\n      current,\n      nearestMountedAncestor,\n      instance\n    ) {\n      instance.props = resolveClassComponentProps(\n        current.type,\n        current.memoizedProps\n      );\n      instance.state = current.memoizedState;\n      shouldProfile(current)\n        ? (startEffectTimer(),\n          runWithFiberInDEV(\n            current,\n            callComponentWillUnmountInDEV,\n            current,\n            nearestMountedAncestor,\n            instance\n          ),\n          recordEffectDuration())\n        : runWithFiberInDEV(\n            current,\n            callComponentWillUnmountInDEV,\n            current,\n            nearestMountedAncestor,\n            instance\n          );\n    }\n    function commitAttachRef(finishedWork) {\n      var ref = finishedWork.ref;\n      if (null !== ref) {\n        switch (finishedWork.tag) {\n          case 26:\n          case 27:\n          case 5:\n            var instanceToUse = finishedWork.stateNode;\n            break;\n          case 30:\n            instanceToUse = finishedWork.stateNode;\n            break;\n          default:\n            instanceToUse = finishedWork.stateNode;\n        }\n        if (\"function\" === typeof ref)\n          if (shouldProfile(finishedWork))\n            try {\n              startEffectTimer(),\n                (finishedWork.refCleanup = ref(instanceToUse));\n            } finally {\n              recordEffectDuration();\n            }\n          else finishedWork.refCleanup = ref(instanceToUse);\n        else\n          \"string\" === typeof ref\n            ? console.error(\"String refs are no longer supported.\")\n            : ref.hasOwnProperty(\"current\") ||\n              console.error(\n                \"Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().\",\n                getComponentNameFromFiber(finishedWork)\n              ),\n            (ref.current = instanceToUse);\n      }\n    }\n    function safelyAttachRef(current, nearestMountedAncestor) {\n      try {\n        runWithFiberInDEV(current, commitAttachRef, current);\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n    }\n    function safelyDetachRef(current, nearestMountedAncestor) {\n      var ref = current.ref,\n        refCleanup = current.refCleanup;\n      if (null !== ref)\n        if (\"function\" === typeof refCleanup)\n          try {\n            if (shouldProfile(current))\n              try {\n                startEffectTimer(), runWithFiberInDEV(current, refCleanup);\n              } finally {\n                recordEffectDuration(current);\n              }\n            else runWithFiberInDEV(current, refCleanup);\n          } catch (error) {\n            captureCommitPhaseError(current, nearestMountedAncestor, error);\n          } finally {\n            (current.refCleanup = null),\n              (current = current.alternate),\n              null != current && (current.refCleanup = null);\n          }\n        else if (\"function\" === typeof ref)\n          try {\n            if (shouldProfile(current))\n              try {\n                startEffectTimer(), runWithFiberInDEV(current, ref, null);\n              } finally {\n                recordEffectDuration(current);\n              }\n            else runWithFiberInDEV(current, ref, null);\n          } catch (error$7) {\n            captureCommitPhaseError(current, nearestMountedAncestor, error$7);\n          }\n        else ref.current = null;\n    }\n    function commitProfiler(\n      finishedWork,\n      current,\n      commitStartTime,\n      effectDuration\n    ) {\n      var _finishedWork$memoize = finishedWork.memoizedProps,\n        id = _finishedWork$memoize.id,\n        onCommit = _finishedWork$memoize.onCommit;\n      _finishedWork$memoize = _finishedWork$memoize.onRender;\n      current = null === current ? \"mount\" : \"update\";\n      currentUpdateIsNested && (current = \"nested-update\");\n      \"function\" === typeof _finishedWork$memoize &&\n        _finishedWork$memoize(\n          id,\n          current,\n          finishedWork.actualDuration,\n          finishedWork.treeBaseDuration,\n          finishedWork.actualStartTime,\n          commitStartTime\n        );\n      \"function\" === typeof onCommit &&\n        onCommit(\n          finishedWork.memoizedProps.id,\n          current,\n          effectDuration,\n          commitStartTime\n        );\n    }\n    function commitProfilerPostCommitImpl(\n      finishedWork,\n      current,\n      commitStartTime,\n      passiveEffectDuration\n    ) {\n      var _finishedWork$memoize2 = finishedWork.memoizedProps;\n      finishedWork = _finishedWork$memoize2.id;\n      _finishedWork$memoize2 = _finishedWork$memoize2.onPostCommit;\n      current = null === current ? \"mount\" : \"update\";\n      currentUpdateIsNested && (current = \"nested-update\");\n      \"function\" === typeof _finishedWork$memoize2 &&\n        _finishedWork$memoize2(\n          finishedWork,\n          current,\n          passiveEffectDuration,\n          commitStartTime\n        );\n    }\n    function commitHostMount(finishedWork) {\n      var type = finishedWork.type,\n        props = finishedWork.memoizedProps,\n        instance = finishedWork.stateNode;\n      try {\n        runWithFiberInDEV(\n          finishedWork,\n          commitMount,\n          instance,\n          type,\n          props,\n          finishedWork\n        );\n      } catch (error) {\n        captureCommitPhaseError(finishedWork, finishedWork.return, error);\n      }\n    }\n    function commitHostUpdate(finishedWork, newProps, oldProps) {\n      try {\n        runWithFiberInDEV(\n          finishedWork,\n          commitUpdate,\n          finishedWork.stateNode,\n          finishedWork.type,\n          oldProps,\n          newProps,\n          finishedWork\n        );\n      } catch (error) {\n        captureCommitPhaseError(finishedWork, finishedWork.return, error);\n      }\n    }\n    function isHostParent(fiber) {\n      return (\n        5 === fiber.tag ||\n        3 === fiber.tag ||\n        26 === fiber.tag ||\n        (27 === fiber.tag && isSingletonScope(fiber.type)) ||\n        4 === fiber.tag\n      );\n    }\n    function getHostSibling(fiber) {\n      a: for (;;) {\n        for (; null === fiber.sibling; ) {\n          if (null === fiber.return || isHostParent(fiber.return)) return null;\n          fiber = fiber.return;\n        }\n        fiber.sibling.return = fiber.return;\n        for (\n          fiber = fiber.sibling;\n          5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;\n\n        ) {\n          if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;\n          if (fiber.flags & 2) continue a;\n          if (null === fiber.child || 4 === fiber.tag) continue a;\n          else (fiber.child.return = fiber), (fiber = fiber.child);\n        }\n        if (!(fiber.flags & 2)) return fiber.stateNode;\n      }\n    }\n    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n      var tag = node.tag;\n      if (5 === tag || 6 === tag)\n        (node = node.stateNode),\n          before\n            ? (9 === parent.nodeType\n                ? parent.body\n                : \"HTML\" === parent.nodeName\n                  ? parent.ownerDocument.body\n                  : parent\n              ).insertBefore(node, before)\n            : ((before =\n                9 === parent.nodeType\n                  ? parent.body\n                  : \"HTML\" === parent.nodeName\n                    ? parent.ownerDocument.body\n                    : parent),\n              before.appendChild(node),\n              (parent = parent._reactRootContainer),\n              (null !== parent && void 0 !== parent) ||\n                null !== before.onclick ||\n                (before.onclick = noop$1));\n      else if (\n        4 !== tag &&\n        (27 === tag &&\n          isSingletonScope(node.type) &&\n          ((parent = node.stateNode), (before = null)),\n        (node = node.child),\n        null !== node)\n      )\n        for (\n          insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n            node = node.sibling;\n          null !== node;\n\n        )\n          insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n            (node = node.sibling);\n    }\n    function insertOrAppendPlacementNode(node, before, parent) {\n      var tag = node.tag;\n      if (5 === tag || 6 === tag)\n        (node = node.stateNode),\n          before ? parent.insertBefore(node, before) : parent.appendChild(node);\n      else if (\n        4 !== tag &&\n        (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode),\n        (node = node.child),\n        null !== node)\n      )\n        for (\n          insertOrAppendPlacementNode(node, before, parent),\n            node = node.sibling;\n          null !== node;\n\n        )\n          insertOrAppendPlacementNode(node, before, parent),\n            (node = node.sibling);\n    }\n    function commitPlacement(finishedWork) {\n      for (\n        var hostParentFiber, parentFiber = finishedWork.return;\n        null !== parentFiber;\n\n      ) {\n        if (isHostParent(parentFiber)) {\n          hostParentFiber = parentFiber;\n          break;\n        }\n        parentFiber = parentFiber.return;\n      }\n      if (null == hostParentFiber)\n        throw Error(\n          \"Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.\"\n        );\n      switch (hostParentFiber.tag) {\n        case 27:\n          hostParentFiber = hostParentFiber.stateNode;\n          parentFiber = getHostSibling(finishedWork);\n          insertOrAppendPlacementNode(\n            finishedWork,\n            parentFiber,\n            hostParentFiber\n          );\n          break;\n        case 5:\n          parentFiber = hostParentFiber.stateNode;\n          hostParentFiber.flags & 32 &&\n            (resetTextContent(parentFiber), (hostParentFiber.flags &= -33));\n          hostParentFiber = getHostSibling(finishedWork);\n          insertOrAppendPlacementNode(\n            finishedWork,\n            hostParentFiber,\n            parentFiber\n          );\n          break;\n        case 3:\n        case 4:\n          hostParentFiber = hostParentFiber.stateNode.containerInfo;\n          parentFiber = getHostSibling(finishedWork);\n          insertOrAppendPlacementNodeIntoContainer(\n            finishedWork,\n            parentFiber,\n            hostParentFiber\n          );\n          break;\n        default:\n          throw Error(\n            \"Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.\"\n          );\n      }\n    }\n    function commitHostSingletonAcquisition(finishedWork) {\n      var singleton = finishedWork.stateNode,\n        props = finishedWork.memoizedProps;\n      try {\n        runWithFiberInDEV(\n          finishedWork,\n          acquireSingletonInstance,\n          finishedWork.type,\n          props,\n          singleton,\n          finishedWork\n        );\n      } catch (error) {\n        captureCommitPhaseError(finishedWork, finishedWork.return, error);\n      }\n    }\n    function commitBeforeMutationEffects(root, firstChild) {\n      root = root.containerInfo;\n      eventsEnabled = _enabled;\n      root = getActiveElementDeep(root);\n      if (hasSelectionCapabilities(root)) {\n        if (\"selectionStart\" in root)\n          var JSCompiler_temp = {\n            start: root.selectionStart,\n            end: root.selectionEnd\n          };\n        else\n          a: {\n            JSCompiler_temp =\n              ((JSCompiler_temp = root.ownerDocument) &&\n                JSCompiler_temp.defaultView) ||\n              window;\n            var selection =\n              JSCompiler_temp.getSelection && JSCompiler_temp.getSelection();\n            if (selection && 0 !== selection.rangeCount) {\n              JSCompiler_temp = selection.anchorNode;\n              var anchorOffset = selection.anchorOffset,\n                focusNode = selection.focusNode;\n              selection = selection.focusOffset;\n              try {\n                JSCompiler_temp.nodeType, focusNode.nodeType;\n              } catch (e$2) {\n                JSCompiler_temp = null;\n                break a;\n              }\n              var length = 0,\n                start = -1,\n                end = -1,\n                indexWithinAnchor = 0,\n                indexWithinFocus = 0,\n                node = root,\n                parentNode = null;\n              b: for (;;) {\n                for (var next; ; ) {\n                  node !== JSCompiler_temp ||\n                    (0 !== anchorOffset && 3 !== node.nodeType) ||\n                    (start = length + anchorOffset);\n                  node !== focusNode ||\n                    (0 !== selection && 3 !== node.nodeType) ||\n                    (end = length + selection);\n                  3 === node.nodeType && (length += node.nodeValue.length);\n                  if (null === (next = node.firstChild)) break;\n                  parentNode = node;\n                  node = next;\n                }\n                for (;;) {\n                  if (node === root) break b;\n                  parentNode === JSCompiler_temp &&\n                    ++indexWithinAnchor === anchorOffset &&\n                    (start = length);\n                  parentNode === focusNode &&\n                    ++indexWithinFocus === selection &&\n                    (end = length);\n                  if (null !== (next = node.nextSibling)) break;\n                  node = parentNode;\n                  parentNode = node.parentNode;\n                }\n                node = next;\n              }\n              JSCompiler_temp =\n                -1 === start || -1 === end ? null : { start: start, end: end };\n            } else JSCompiler_temp = null;\n          }\n        JSCompiler_temp = JSCompiler_temp || { start: 0, end: 0 };\n      } else JSCompiler_temp = null;\n      selectionInformation = {\n        focusedElem: root,\n        selectionRange: JSCompiler_temp\n      };\n      _enabled = !1;\n      for (nextEffect = firstChild; null !== nextEffect; )\n        if (\n          ((firstChild = nextEffect),\n          (root = firstChild.child),\n          0 !== (firstChild.subtreeFlags & 1024) && null !== root)\n        )\n          (root.return = firstChild), (nextEffect = root);\n        else\n          for (; null !== nextEffect; ) {\n            root = firstChild = nextEffect;\n            JSCompiler_temp = root.alternate;\n            anchorOffset = root.flags;\n            switch (root.tag) {\n              case 0:\n                break;\n              case 11:\n              case 15:\n                break;\n              case 1:\n                0 !== (anchorOffset & 1024) &&\n                  null !== JSCompiler_temp &&\n                  commitClassSnapshot(root, JSCompiler_temp);\n                break;\n              case 3:\n                if (0 !== (anchorOffset & 1024))\n                  if (\n                    ((root = root.stateNode.containerInfo),\n                    (JSCompiler_temp = root.nodeType),\n                    9 === JSCompiler_temp)\n                  )\n                    clearContainerSparingly(root);\n                  else if (1 === JSCompiler_temp)\n                    switch (root.nodeName) {\n                      case \"HEAD\":\n                      case \"HTML\":\n                      case \"BODY\":\n                        clearContainerSparingly(root);\n                        break;\n                      default:\n                        root.textContent = \"\";\n                    }\n                break;\n              case 5:\n              case 26:\n              case 27:\n              case 6:\n              case 4:\n              case 17:\n                break;\n              default:\n                if (0 !== (anchorOffset & 1024))\n                  throw Error(\n                    \"This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.\"\n                  );\n            }\n            root = firstChild.sibling;\n            if (null !== root) {\n              root.return = firstChild.return;\n              nextEffect = root;\n              break;\n            }\n            nextEffect = firstChild.return;\n          }\n    }\n    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {\n      var flags = finishedWork.flags;\n      switch (finishedWork.tag) {\n        case 0:\n        case 11:\n        case 15:\n          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n          flags & 4 &&\n            commitHookLayoutEffects(finishedWork, Layout | HasEffect);\n          break;\n        case 1:\n          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n          if (flags & 4)\n            if (((finishedRoot = finishedWork.stateNode), null === current))\n              finishedWork.type.defaultProps ||\n                \"ref\" in finishedWork.memoizedProps ||\n                didWarnAboutReassigningProps ||\n                (finishedRoot.props !== finishedWork.memoizedProps &&\n                  console.error(\n                    \"Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\",\n                    getComponentNameFromFiber(finishedWork) || \"instance\"\n                  ),\n                finishedRoot.state !== finishedWork.memoizedState &&\n                  console.error(\n                    \"Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\",\n                    getComponentNameFromFiber(finishedWork) || \"instance\"\n                  )),\n                shouldProfile(finishedWork)\n                  ? (startEffectTimer(),\n                    runWithFiberInDEV(\n                      finishedWork,\n                      callComponentDidMountInDEV,\n                      finishedWork,\n                      finishedRoot\n                    ),\n                    recordEffectDuration())\n                  : runWithFiberInDEV(\n                      finishedWork,\n                      callComponentDidMountInDEV,\n                      finishedWork,\n                      finishedRoot\n                    );\n            else {\n              var prevProps = resolveClassComponentProps(\n                finishedWork.type,\n                current.memoizedProps\n              );\n              current = current.memoizedState;\n              finishedWork.type.defaultProps ||\n                \"ref\" in finishedWork.memoizedProps ||\n                didWarnAboutReassigningProps ||\n                (finishedRoot.props !== finishedWork.memoizedProps &&\n                  console.error(\n                    \"Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\",\n                    getComponentNameFromFiber(finishedWork) || \"instance\"\n                  ),\n                finishedRoot.state !== finishedWork.memoizedState &&\n                  console.error(\n                    \"Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\",\n                    getComponentNameFromFiber(finishedWork) || \"instance\"\n                  ));\n              shouldProfile(finishedWork)\n                ? (startEffectTimer(),\n                  runWithFiberInDEV(\n                    finishedWork,\n                    callComponentDidUpdateInDEV,\n                    finishedWork,\n                    finishedRoot,\n                    prevProps,\n                    current,\n                    finishedRoot.__reactInternalSnapshotBeforeUpdate\n                  ),\n                  recordEffectDuration())\n                : runWithFiberInDEV(\n                    finishedWork,\n                    callComponentDidUpdateInDEV,\n                    finishedWork,\n                    finishedRoot,\n                    prevProps,\n                    current,\n                    finishedRoot.__reactInternalSnapshotBeforeUpdate\n                  );\n            }\n          flags & 64 && commitClassCallbacks(finishedWork);\n          flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n          break;\n        case 3:\n          current = pushNestedEffectDurations();\n          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n          if (\n            flags & 64 &&\n            ((flags = finishedWork.updateQueue), null !== flags)\n          ) {\n            prevProps = null;\n            if (null !== finishedWork.child)\n              switch (finishedWork.child.tag) {\n                case 27:\n                case 5:\n                  prevProps = finishedWork.child.stateNode;\n                  break;\n                case 1:\n                  prevProps = finishedWork.child.stateNode;\n              }\n            try {\n              runWithFiberInDEV(\n                finishedWork,\n                commitCallbacks,\n                flags,\n                prevProps\n              );\n            } catch (error) {\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\n            }\n          }\n          finishedRoot.effectDuration += popNestedEffectDurations(current);\n          break;\n        case 27:\n          null === current &&\n            flags & 4 &&\n            commitHostSingletonAcquisition(finishedWork);\n        case 26:\n        case 5:\n          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n          null === current && flags & 4 && commitHostMount(finishedWork);\n          flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n          break;\n        case 12:\n          if (flags & 4) {\n            flags = pushNestedEffectDurations();\n            recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n            finishedRoot = finishedWork.stateNode;\n            finishedRoot.effectDuration += bubbleNestedEffectDurations(flags);\n            try {\n              runWithFiberInDEV(\n                finishedWork,\n                commitProfiler,\n                finishedWork,\n                current,\n                commitStartTime,\n                finishedRoot.effectDuration\n              );\n            } catch (error) {\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\n            }\n          } else recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n          break;\n        case 13:\n          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n          flags & 4 &&\n            commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n          flags & 64 &&\n            ((finishedRoot = finishedWork.memoizedState),\n            null !== finishedRoot &&\n              ((finishedRoot = finishedRoot.dehydrated),\n              null !== finishedRoot &&\n                ((finishedWork = retryDehydratedSuspenseBoundary.bind(\n                  null,\n                  finishedWork\n                )),\n                registerSuspenseInstanceRetry(finishedRoot, finishedWork))));\n          break;\n        case 22:\n          flags =\n            null !== finishedWork.memoizedState || offscreenSubtreeIsHidden;\n          if (!flags) {\n            current =\n              (null !== current && null !== current.memoizedState) ||\n              offscreenSubtreeWasHidden;\n            prevProps = offscreenSubtreeIsHidden;\n            var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n            offscreenSubtreeIsHidden = flags;\n            (offscreenSubtreeWasHidden = current) &&\n            !prevOffscreenSubtreeWasHidden\n              ? recursivelyTraverseReappearLayoutEffects(\n                  finishedRoot,\n                  finishedWork,\n                  0 !== (finishedWork.subtreeFlags & 8772)\n                )\n              : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n            offscreenSubtreeIsHidden = prevProps;\n            offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n          }\n          break;\n        case 30:\n          break;\n        default:\n          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      }\n    }\n    function detachFiberAfterEffects(fiber) {\n      var alternate = fiber.alternate;\n      null !== alternate &&\n        ((fiber.alternate = null), detachFiberAfterEffects(alternate));\n      fiber.child = null;\n      fiber.deletions = null;\n      fiber.sibling = null;\n      5 === fiber.tag &&\n        ((alternate = fiber.stateNode),\n        null !== alternate && detachDeletedInstance(alternate));\n      fiber.stateNode = null;\n      fiber._debugOwner = null;\n      fiber.return = null;\n      fiber.dependencies = null;\n      fiber.memoizedProps = null;\n      fiber.memoizedState = null;\n      fiber.pendingProps = null;\n      fiber.stateNode = null;\n      fiber.updateQueue = null;\n    }\n    function recursivelyTraverseDeletionEffects(\n      finishedRoot,\n      nearestMountedAncestor,\n      parent\n    ) {\n      for (parent = parent.child; null !== parent; )\n        commitDeletionEffectsOnFiber(\n          finishedRoot,\n          nearestMountedAncestor,\n          parent\n        ),\n          (parent = parent.sibling);\n    }\n    function commitDeletionEffectsOnFiber(\n      finishedRoot,\n      nearestMountedAncestor,\n      deletedFiber\n    ) {\n      if (\n        injectedHook &&\n        \"function\" === typeof injectedHook.onCommitFiberUnmount\n      )\n        try {\n          injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);\n        } catch (err) {\n          hasLoggedError ||\n            ((hasLoggedError = !0),\n            console.error(\n              \"React instrumentation encountered an error: %s\",\n              err\n            ));\n        }\n      switch (deletedFiber.tag) {\n        case 26:\n          offscreenSubtreeWasHidden ||\n            safelyDetachRef(deletedFiber, nearestMountedAncestor);\n          recursivelyTraverseDeletionEffects(\n            finishedRoot,\n            nearestMountedAncestor,\n            deletedFiber\n          );\n          deletedFiber.memoizedState\n            ? deletedFiber.memoizedState.count--\n            : deletedFiber.stateNode &&\n              ((deletedFiber = deletedFiber.stateNode),\n              deletedFiber.parentNode.removeChild(deletedFiber));\n          break;\n        case 27:\n          offscreenSubtreeWasHidden ||\n            safelyDetachRef(deletedFiber, nearestMountedAncestor);\n          var prevHostParent = hostParent,\n            prevHostParentIsContainer = hostParentIsContainer;\n          isSingletonScope(deletedFiber.type) &&\n            ((hostParent = deletedFiber.stateNode),\n            (hostParentIsContainer = !1));\n          recursivelyTraverseDeletionEffects(\n            finishedRoot,\n            nearestMountedAncestor,\n            deletedFiber\n          );\n          runWithFiberInDEV(\n            deletedFiber,\n            releaseSingletonInstance,\n            deletedFiber.stateNode\n          );\n          hostParent = prevHostParent;\n          hostParentIsContainer = prevHostParentIsContainer;\n          break;\n        case 5:\n          offscreenSubtreeWasHidden ||\n            safelyDetachRef(deletedFiber, nearestMountedAncestor);\n        case 6:\n          prevHostParent = hostParent;\n          prevHostParentIsContainer = hostParentIsContainer;\n          hostParent = null;\n          recursivelyTraverseDeletionEffects(\n            finishedRoot,\n            nearestMountedAncestor,\n            deletedFiber\n          );\n          hostParent = prevHostParent;\n          hostParentIsContainer = prevHostParentIsContainer;\n          if (null !== hostParent)\n            if (hostParentIsContainer)\n              try {\n                runWithFiberInDEV(\n                  deletedFiber,\n                  removeChildFromContainer,\n                  hostParent,\n                  deletedFiber.stateNode\n                );\n              } catch (error) {\n                captureCommitPhaseError(\n                  deletedFiber,\n                  nearestMountedAncestor,\n                  error\n                );\n              }\n            else\n              try {\n                runWithFiberInDEV(\n                  deletedFiber,\n                  removeChild,\n                  hostParent,\n                  deletedFiber.stateNode\n                );\n              } catch (error) {\n                captureCommitPhaseError(\n                  deletedFiber,\n                  nearestMountedAncestor,\n                  error\n                );\n              }\n          break;\n        case 18:\n          null !== hostParent &&\n            (hostParentIsContainer\n              ? ((finishedRoot = hostParent),\n                clearSuspenseBoundary(\n                  9 === finishedRoot.nodeType\n                    ? finishedRoot.body\n                    : \"HTML\" === finishedRoot.nodeName\n                      ? finishedRoot.ownerDocument.body\n                      : finishedRoot,\n                  deletedFiber.stateNode\n                ),\n                retryIfBlockedOn(finishedRoot))\n              : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));\n          break;\n        case 4:\n          prevHostParent = hostParent;\n          prevHostParentIsContainer = hostParentIsContainer;\n          hostParent = deletedFiber.stateNode.containerInfo;\n          hostParentIsContainer = !0;\n          recursivelyTraverseDeletionEffects(\n            finishedRoot,\n            nearestMountedAncestor,\n            deletedFiber\n          );\n          hostParent = prevHostParent;\n          hostParentIsContainer = prevHostParentIsContainer;\n          break;\n        case 0:\n        case 11:\n        case 14:\n        case 15:\n          offscreenSubtreeWasHidden ||\n            commitHookEffectListUnmount(\n              Insertion,\n              deletedFiber,\n              nearestMountedAncestor\n            );\n          offscreenSubtreeWasHidden ||\n            commitHookLayoutUnmountEffects(\n              deletedFiber,\n              nearestMountedAncestor,\n              Layout\n            );\n          recursivelyTraverseDeletionEffects(\n            finishedRoot,\n            nearestMountedAncestor,\n            deletedFiber\n          );\n          break;\n        case 1:\n          offscreenSubtreeWasHidden ||\n            (safelyDetachRef(deletedFiber, nearestMountedAncestor),\n            (prevHostParent = deletedFiber.stateNode),\n            \"function\" === typeof prevHostParent.componentWillUnmount &&\n              safelyCallComponentWillUnmount(\n                deletedFiber,\n                nearestMountedAncestor,\n                prevHostParent\n              ));\n          recursivelyTraverseDeletionEffects(\n            finishedRoot,\n            nearestMountedAncestor,\n            deletedFiber\n          );\n          break;\n        case 21:\n          recursivelyTraverseDeletionEffects(\n            finishedRoot,\n            nearestMountedAncestor,\n            deletedFiber\n          );\n          break;\n        case 22:\n          offscreenSubtreeWasHidden =\n            (prevHostParent = offscreenSubtreeWasHidden) ||\n            null !== deletedFiber.memoizedState;\n          recursivelyTraverseDeletionEffects(\n            finishedRoot,\n            nearestMountedAncestor,\n            deletedFiber\n          );\n          offscreenSubtreeWasHidden = prevHostParent;\n          break;\n        default:\n          recursivelyTraverseDeletionEffects(\n            finishedRoot,\n            nearestMountedAncestor,\n            deletedFiber\n          );\n      }\n    }\n    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {\n      if (\n        null === finishedWork.memoizedState &&\n        ((finishedRoot = finishedWork.alternate),\n        null !== finishedRoot &&\n          ((finishedRoot = finishedRoot.memoizedState),\n          null !== finishedRoot &&\n            ((finishedRoot = finishedRoot.dehydrated), null !== finishedRoot)))\n      )\n        try {\n          runWithFiberInDEV(\n            finishedWork,\n            commitHydratedSuspenseInstance,\n            finishedRoot\n          );\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n    }\n    function getRetryCache(finishedWork) {\n      switch (finishedWork.tag) {\n        case 13:\n        case 19:\n          var retryCache = finishedWork.stateNode;\n          null === retryCache &&\n            (retryCache = finishedWork.stateNode = new PossiblyWeakSet());\n          return retryCache;\n        case 22:\n          return (\n            (finishedWork = finishedWork.stateNode),\n            (retryCache = finishedWork._retryCache),\n            null === retryCache &&\n              (retryCache = finishedWork._retryCache = new PossiblyWeakSet()),\n            retryCache\n          );\n        default:\n          throw Error(\n            \"Unexpected Suspense handler tag (\" +\n              finishedWork.tag +\n              \"). This is a bug in React.\"\n          );\n      }\n    }\n    function attachSuspenseRetryListeners(finishedWork, wakeables) {\n      var retryCache = getRetryCache(finishedWork);\n      wakeables.forEach(function (wakeable) {\n        var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n        if (!retryCache.has(wakeable)) {\n          retryCache.add(wakeable);\n          if (isDevToolsPresent)\n            if (null !== inProgressLanes && null !== inProgressRoot)\n              restorePendingUpdaters(inProgressRoot, inProgressLanes);\n            else\n              throw Error(\n                \"Expected finished root and lanes to be set. This is a bug in React.\"\n              );\n          wakeable.then(retry, retry);\n        }\n      });\n    }\n    function recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {\n      var deletions = parentFiber.deletions;\n      if (null !== deletions)\n        for (var i = 0; i < deletions.length; i++) {\n          var root = root$jscomp$0,\n            returnFiber = parentFiber,\n            deletedFiber = deletions[i],\n            parent = returnFiber;\n          a: for (; null !== parent; ) {\n            switch (parent.tag) {\n              case 27:\n                if (isSingletonScope(parent.type)) {\n                  hostParent = parent.stateNode;\n                  hostParentIsContainer = !1;\n                  break a;\n                }\n                break;\n              case 5:\n                hostParent = parent.stateNode;\n                hostParentIsContainer = !1;\n                break a;\n              case 3:\n              case 4:\n                hostParent = parent.stateNode.containerInfo;\n                hostParentIsContainer = !0;\n                break a;\n            }\n            parent = parent.return;\n          }\n          if (null === hostParent)\n            throw Error(\n              \"Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.\"\n            );\n          commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\n          hostParent = null;\n          hostParentIsContainer = !1;\n          root = deletedFiber;\n          returnFiber = root.alternate;\n          null !== returnFiber && (returnFiber.return = null);\n          root.return = null;\n        }\n      if (parentFiber.subtreeFlags & 13878)\n        for (parentFiber = parentFiber.child; null !== parentFiber; )\n          commitMutationEffectsOnFiber(parentFiber, root$jscomp$0),\n            (parentFiber = parentFiber.sibling);\n    }\n    function commitMutationEffectsOnFiber(finishedWork, root) {\n      var current = finishedWork.alternate,\n        flags = finishedWork.flags;\n      switch (finishedWork.tag) {\n        case 0:\n        case 11:\n        case 14:\n        case 15:\n          recursivelyTraverseMutationEffects(root, finishedWork);\n          commitReconciliationEffects(finishedWork);\n          flags & 4 &&\n            (commitHookEffectListUnmount(\n              Insertion | HasEffect,\n              finishedWork,\n              finishedWork.return\n            ),\n            commitHookEffectListMount(Insertion | HasEffect, finishedWork),\n            commitHookLayoutUnmountEffects(\n              finishedWork,\n              finishedWork.return,\n              Layout | HasEffect\n            ));\n          break;\n        case 1:\n          recursivelyTraverseMutationEffects(root, finishedWork);\n          commitReconciliationEffects(finishedWork);\n          flags & 512 &&\n            (offscreenSubtreeWasHidden ||\n              null === current ||\n              safelyDetachRef(current, current.return));\n          flags & 64 &&\n            offscreenSubtreeIsHidden &&\n            ((finishedWork = finishedWork.updateQueue),\n            null !== finishedWork &&\n              ((flags = finishedWork.callbacks),\n              null !== flags &&\n                ((current = finishedWork.shared.hiddenCallbacks),\n                (finishedWork.shared.hiddenCallbacks =\n                  null === current ? flags : current.concat(flags)))));\n          break;\n        case 26:\n          var hoistableRoot = currentHoistableRoot;\n          recursivelyTraverseMutationEffects(root, finishedWork);\n          commitReconciliationEffects(finishedWork);\n          flags & 512 &&\n            (offscreenSubtreeWasHidden ||\n              null === current ||\n              safelyDetachRef(current, current.return));\n          if (flags & 4)\n            if (\n              ((root = null !== current ? current.memoizedState : null),\n              (flags = finishedWork.memoizedState),\n              null === current)\n            )\n              if (null === flags)\n                if (null === finishedWork.stateNode) {\n                  a: {\n                    flags = finishedWork.type;\n                    current = finishedWork.memoizedProps;\n                    root = hoistableRoot.ownerDocument || hoistableRoot;\n                    b: switch (flags) {\n                      case \"title\":\n                        hoistableRoot = root.getElementsByTagName(\"title\")[0];\n                        if (\n                          !hoistableRoot ||\n                          hoistableRoot[internalHoistableMarker] ||\n                          hoistableRoot[internalInstanceKey] ||\n                          hoistableRoot.namespaceURI === SVG_NAMESPACE ||\n                          hoistableRoot.hasAttribute(\"itemprop\")\n                        )\n                          (hoistableRoot = root.createElement(flags)),\n                            root.head.insertBefore(\n                              hoistableRoot,\n                              root.querySelector(\"head > title\")\n                            );\n                        setInitialProperties(hoistableRoot, flags, current);\n                        hoistableRoot[internalInstanceKey] = finishedWork;\n                        markNodeAsHoistable(hoistableRoot);\n                        flags = hoistableRoot;\n                        break a;\n                      case \"link\":\n                        var maybeNodes = getHydratableHoistableCache(\n                          \"link\",\n                          \"href\",\n                          root\n                        ).get(flags + (current.href || \"\"));\n                        if (maybeNodes)\n                          for (var i = 0; i < maybeNodes.length; i++)\n                            if (\n                              ((hoistableRoot = maybeNodes[i]),\n                              hoistableRoot.getAttribute(\"href\") ===\n                                (null == current.href || \"\" === current.href\n                                  ? null\n                                  : current.href) &&\n                                hoistableRoot.getAttribute(\"rel\") ===\n                                  (null == current.rel ? null : current.rel) &&\n                                hoistableRoot.getAttribute(\"title\") ===\n                                  (null == current.title\n                                    ? null\n                                    : current.title) &&\n                                hoistableRoot.getAttribute(\"crossorigin\") ===\n                                  (null == current.crossOrigin\n                                    ? null\n                                    : current.crossOrigin))\n                            ) {\n                              maybeNodes.splice(i, 1);\n                              break b;\n                            }\n                        hoistableRoot = root.createElement(flags);\n                        setInitialProperties(hoistableRoot, flags, current);\n                        root.head.appendChild(hoistableRoot);\n                        break;\n                      case \"meta\":\n                        if (\n                          (maybeNodes = getHydratableHoistableCache(\n                            \"meta\",\n                            \"content\",\n                            root\n                          ).get(flags + (current.content || \"\")))\n                        )\n                          for (i = 0; i < maybeNodes.length; i++)\n                            if (\n                              ((hoistableRoot = maybeNodes[i]),\n                              checkAttributeStringCoercion(\n                                current.content,\n                                \"content\"\n                              ),\n                              hoistableRoot.getAttribute(\"content\") ===\n                                (null == current.content\n                                  ? null\n                                  : \"\" + current.content) &&\n                                hoistableRoot.getAttribute(\"name\") ===\n                                  (null == current.name\n                                    ? null\n                                    : current.name) &&\n                                hoistableRoot.getAttribute(\"property\") ===\n                                  (null == current.property\n                                    ? null\n                                    : current.property) &&\n                                hoistableRoot.getAttribute(\"http-equiv\") ===\n                                  (null == current.httpEquiv\n                                    ? null\n                                    : current.httpEquiv) &&\n                                hoistableRoot.getAttribute(\"charset\") ===\n                                  (null == current.charSet\n                                    ? null\n                                    : current.charSet))\n                            ) {\n                              maybeNodes.splice(i, 1);\n                              break b;\n                            }\n                        hoistableRoot = root.createElement(flags);\n                        setInitialProperties(hoistableRoot, flags, current);\n                        root.head.appendChild(hoistableRoot);\n                        break;\n                      default:\n                        throw Error(\n                          'getNodesForType encountered a type it did not expect: \"' +\n                            flags +\n                            '\". This is a bug in React.'\n                        );\n                    }\n                    hoistableRoot[internalInstanceKey] = finishedWork;\n                    markNodeAsHoistable(hoistableRoot);\n                    flags = hoistableRoot;\n                  }\n                  finishedWork.stateNode = flags;\n                } else\n                  mountHoistable(\n                    hoistableRoot,\n                    finishedWork.type,\n                    finishedWork.stateNode\n                  );\n              else\n                finishedWork.stateNode = acquireResource(\n                  hoistableRoot,\n                  flags,\n                  finishedWork.memoizedProps\n                );\n            else\n              root !== flags\n                ? (null === root\n                    ? null !== current.stateNode &&\n                      ((current = current.stateNode),\n                      current.parentNode.removeChild(current))\n                    : root.count--,\n                  null === flags\n                    ? mountHoistable(\n                        hoistableRoot,\n                        finishedWork.type,\n                        finishedWork.stateNode\n                      )\n                    : acquireResource(\n                        hoistableRoot,\n                        flags,\n                        finishedWork.memoizedProps\n                      ))\n                : null === flags &&\n                  null !== finishedWork.stateNode &&\n                  commitHostUpdate(\n                    finishedWork,\n                    finishedWork.memoizedProps,\n                    current.memoizedProps\n                  );\n          break;\n        case 27:\n          recursivelyTraverseMutationEffects(root, finishedWork);\n          commitReconciliationEffects(finishedWork);\n          flags & 512 &&\n            (offscreenSubtreeWasHidden ||\n              null === current ||\n              safelyDetachRef(current, current.return));\n          null !== current &&\n            flags & 4 &&\n            commitHostUpdate(\n              finishedWork,\n              finishedWork.memoizedProps,\n              current.memoizedProps\n            );\n          break;\n        case 5:\n          recursivelyTraverseMutationEffects(root, finishedWork);\n          commitReconciliationEffects(finishedWork);\n          flags & 512 &&\n            (offscreenSubtreeWasHidden ||\n              null === current ||\n              safelyDetachRef(current, current.return));\n          if (finishedWork.flags & 32) {\n            root = finishedWork.stateNode;\n            try {\n              runWithFiberInDEV(finishedWork, resetTextContent, root);\n            } catch (error) {\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\n            }\n          }\n          flags & 4 &&\n            null != finishedWork.stateNode &&\n            ((root = finishedWork.memoizedProps),\n            commitHostUpdate(\n              finishedWork,\n              root,\n              null !== current ? current.memoizedProps : root\n            ));\n          flags & 1024 &&\n            ((needsFormReset = !0),\n            \"form\" !== finishedWork.type &&\n              console.error(\n                \"Unexpected host component type. Expected a form. This is a bug in React.\"\n              ));\n          break;\n        case 6:\n          recursivelyTraverseMutationEffects(root, finishedWork);\n          commitReconciliationEffects(finishedWork);\n          if (flags & 4) {\n            if (null === finishedWork.stateNode)\n              throw Error(\n                \"This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.\"\n              );\n            flags = finishedWork.memoizedProps;\n            current = null !== current ? current.memoizedProps : flags;\n            root = finishedWork.stateNode;\n            try {\n              runWithFiberInDEV(\n                finishedWork,\n                commitTextUpdate,\n                root,\n                current,\n                flags\n              );\n            } catch (error) {\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\n            }\n          }\n          break;\n        case 3:\n          hoistableRoot = pushNestedEffectDurations();\n          tagCaches = null;\n          maybeNodes = currentHoistableRoot;\n          currentHoistableRoot = getHoistableRoot(root.containerInfo);\n          recursivelyTraverseMutationEffects(root, finishedWork);\n          currentHoistableRoot = maybeNodes;\n          commitReconciliationEffects(finishedWork);\n          if (\n            flags & 4 &&\n            null !== current &&\n            current.memoizedState.isDehydrated\n          )\n            try {\n              runWithFiberInDEV(\n                finishedWork,\n                commitHydratedContainer,\n                root.containerInfo\n              );\n            } catch (error) {\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\n            }\n          needsFormReset &&\n            ((needsFormReset = !1), recursivelyResetForms(finishedWork));\n          root.effectDuration += popNestedEffectDurations(hoistableRoot);\n          break;\n        case 4:\n          flags = currentHoistableRoot;\n          currentHoistableRoot = getHoistableRoot(\n            finishedWork.stateNode.containerInfo\n          );\n          recursivelyTraverseMutationEffects(root, finishedWork);\n          commitReconciliationEffects(finishedWork);\n          currentHoistableRoot = flags;\n          break;\n        case 12:\n          flags = pushNestedEffectDurations();\n          recursivelyTraverseMutationEffects(root, finishedWork);\n          commitReconciliationEffects(finishedWork);\n          finishedWork.stateNode.effectDuration +=\n            bubbleNestedEffectDurations(flags);\n          break;\n        case 13:\n          recursivelyTraverseMutationEffects(root, finishedWork);\n          commitReconciliationEffects(finishedWork);\n          finishedWork.child.flags & 8192 &&\n            (null !== finishedWork.memoizedState) !==\n              (null !== current && null !== current.memoizedState) &&\n            (globalMostRecentFallbackTime = now$1());\n          flags & 4 &&\n            ((flags = finishedWork.updateQueue),\n            null !== flags &&\n              ((finishedWork.updateQueue = null),\n              attachSuspenseRetryListeners(finishedWork, flags)));\n          break;\n        case 22:\n          hoistableRoot = null !== finishedWork.memoizedState;\n          var wasHidden = null !== current && null !== current.memoizedState,\n            prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,\n            prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n          offscreenSubtreeIsHidden =\n            prevOffscreenSubtreeIsHidden || hoistableRoot;\n          offscreenSubtreeWasHidden =\n            prevOffscreenSubtreeWasHidden || wasHidden;\n          recursivelyTraverseMutationEffects(root, finishedWork);\n          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n          offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;\n          commitReconciliationEffects(finishedWork);\n          if (flags & 8192)\n            a: for (\n              root = finishedWork.stateNode,\n                root._visibility = hoistableRoot\n                  ? root._visibility & ~OffscreenVisible\n                  : root._visibility | OffscreenVisible,\n                hoistableRoot &&\n                  (null === current ||\n                    wasHidden ||\n                    offscreenSubtreeIsHidden ||\n                    offscreenSubtreeWasHidden ||\n                    recursivelyTraverseDisappearLayoutEffects(finishedWork)),\n                current = null,\n                root = finishedWork;\n              ;\n\n            ) {\n              if (5 === root.tag || 26 === root.tag) {\n                if (null === current) {\n                  wasHidden = current = root;\n                  try {\n                    (maybeNodes = wasHidden.stateNode),\n                      hoistableRoot\n                        ? runWithFiberInDEV(wasHidden, hideInstance, maybeNodes)\n                        : runWithFiberInDEV(\n                            wasHidden,\n                            unhideInstance,\n                            wasHidden.stateNode,\n                            wasHidden.memoizedProps\n                          );\n                  } catch (error) {\n                    captureCommitPhaseError(wasHidden, wasHidden.return, error);\n                  }\n                }\n              } else if (6 === root.tag) {\n                if (null === current) {\n                  wasHidden = root;\n                  try {\n                    (i = wasHidden.stateNode),\n                      hoistableRoot\n                        ? runWithFiberInDEV(wasHidden, hideTextInstance, i)\n                        : runWithFiberInDEV(\n                            wasHidden,\n                            unhideTextInstance,\n                            i,\n                            wasHidden.memoizedProps\n                          );\n                  } catch (error) {\n                    captureCommitPhaseError(wasHidden, wasHidden.return, error);\n                  }\n                }\n              } else if (\n                ((22 !== root.tag && 23 !== root.tag) ||\n                  null === root.memoizedState ||\n                  root === finishedWork) &&\n                null !== root.child\n              ) {\n                root.child.return = root;\n                root = root.child;\n                continue;\n              }\n              if (root === finishedWork) break a;\n              for (; null === root.sibling; ) {\n                if (null === root.return || root.return === finishedWork)\n                  break a;\n                current === root && (current = null);\n                root = root.return;\n              }\n              current === root && (current = null);\n              root.sibling.return = root.return;\n              root = root.sibling;\n            }\n          flags & 4 &&\n            ((flags = finishedWork.updateQueue),\n            null !== flags &&\n              ((current = flags.retryQueue),\n              null !== current &&\n                ((flags.retryQueue = null),\n                attachSuspenseRetryListeners(finishedWork, current))));\n          break;\n        case 19:\n          recursivelyTraverseMutationEffects(root, finishedWork);\n          commitReconciliationEffects(finishedWork);\n          flags & 4 &&\n            ((flags = finishedWork.updateQueue),\n            null !== flags &&\n              ((finishedWork.updateQueue = null),\n              attachSuspenseRetryListeners(finishedWork, flags)));\n          break;\n        case 30:\n          break;\n        case 21:\n          break;\n        default:\n          recursivelyTraverseMutationEffects(root, finishedWork),\n            commitReconciliationEffects(finishedWork);\n      }\n    }\n    function commitReconciliationEffects(finishedWork) {\n      var flags = finishedWork.flags;\n      if (flags & 2) {\n        try {\n          runWithFiberInDEV(finishedWork, commitPlacement, finishedWork);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n        finishedWork.flags &= -3;\n      }\n      flags & 4096 && (finishedWork.flags &= -4097);\n    }\n    function recursivelyResetForms(parentFiber) {\n      if (parentFiber.subtreeFlags & 1024)\n        for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n          var fiber = parentFiber;\n          recursivelyResetForms(fiber);\n          5 === fiber.tag && fiber.flags & 1024 && fiber.stateNode.reset();\n          parentFiber = parentFiber.sibling;\n        }\n    }\n    function recursivelyTraverseLayoutEffects(root, parentFiber) {\n      if (parentFiber.subtreeFlags & 8772)\n        for (parentFiber = parentFiber.child; null !== parentFiber; )\n          commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber),\n            (parentFiber = parentFiber.sibling);\n    }\n    function disappearLayoutEffects(finishedWork) {\n      switch (finishedWork.tag) {\n        case 0:\n        case 11:\n        case 14:\n        case 15:\n          commitHookLayoutUnmountEffects(\n            finishedWork,\n            finishedWork.return,\n            Layout\n          );\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\n          break;\n        case 1:\n          safelyDetachRef(finishedWork, finishedWork.return);\n          var instance = finishedWork.stateNode;\n          \"function\" === typeof instance.componentWillUnmount &&\n            safelyCallComponentWillUnmount(\n              finishedWork,\n              finishedWork.return,\n              instance\n            );\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\n          break;\n        case 27:\n          runWithFiberInDEV(\n            finishedWork,\n            releaseSingletonInstance,\n            finishedWork.stateNode\n          );\n        case 26:\n        case 5:\n          safelyDetachRef(finishedWork, finishedWork.return);\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\n          break;\n        case 22:\n          null === finishedWork.memoizedState &&\n            recursivelyTraverseDisappearLayoutEffects(finishedWork);\n          break;\n        case 30:\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\n          break;\n        default:\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\n      }\n    }\n    function recursivelyTraverseDisappearLayoutEffects(parentFiber) {\n      for (parentFiber = parentFiber.child; null !== parentFiber; )\n        disappearLayoutEffects(parentFiber),\n          (parentFiber = parentFiber.sibling);\n    }\n    function reappearLayoutEffects(\n      finishedRoot,\n      current,\n      finishedWork,\n      includeWorkInProgressEffects\n    ) {\n      var flags = finishedWork.flags;\n      switch (finishedWork.tag) {\n        case 0:\n        case 11:\n        case 15:\n          recursivelyTraverseReappearLayoutEffects(\n            finishedRoot,\n            finishedWork,\n            includeWorkInProgressEffects\n          );\n          commitHookLayoutEffects(finishedWork, Layout);\n          break;\n        case 1:\n          recursivelyTraverseReappearLayoutEffects(\n            finishedRoot,\n            finishedWork,\n            includeWorkInProgressEffects\n          );\n          current = finishedWork.stateNode;\n          \"function\" === typeof current.componentDidMount &&\n            runWithFiberInDEV(\n              finishedWork,\n              callComponentDidMountInDEV,\n              finishedWork,\n              current\n            );\n          current = finishedWork.updateQueue;\n          if (null !== current) {\n            finishedRoot = finishedWork.stateNode;\n            try {\n              runWithFiberInDEV(\n                finishedWork,\n                commitHiddenCallbacks,\n                current,\n                finishedRoot\n              );\n            } catch (error) {\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\n            }\n          }\n          includeWorkInProgressEffects &&\n            flags & 64 &&\n            commitClassCallbacks(finishedWork);\n          safelyAttachRef(finishedWork, finishedWork.return);\n          break;\n        case 27:\n          commitHostSingletonAcquisition(finishedWork);\n        case 26:\n        case 5:\n          recursivelyTraverseReappearLayoutEffects(\n            finishedRoot,\n            finishedWork,\n            includeWorkInProgressEffects\n          );\n          includeWorkInProgressEffects &&\n            null === current &&\n            flags & 4 &&\n            commitHostMount(finishedWork);\n          safelyAttachRef(finishedWork, finishedWork.return);\n          break;\n        case 12:\n          if (includeWorkInProgressEffects && flags & 4) {\n            flags = pushNestedEffectDurations();\n            recursivelyTraverseReappearLayoutEffects(\n              finishedRoot,\n              finishedWork,\n              includeWorkInProgressEffects\n            );\n            includeWorkInProgressEffects = finishedWork.stateNode;\n            includeWorkInProgressEffects.effectDuration +=\n              bubbleNestedEffectDurations(flags);\n            try {\n              runWithFiberInDEV(\n                finishedWork,\n                commitProfiler,\n                finishedWork,\n                current,\n                commitStartTime,\n                includeWorkInProgressEffects.effectDuration\n              );\n            } catch (error) {\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\n            }\n          } else\n            recursivelyTraverseReappearLayoutEffects(\n              finishedRoot,\n              finishedWork,\n              includeWorkInProgressEffects\n            );\n          break;\n        case 13:\n          recursivelyTraverseReappearLayoutEffects(\n            finishedRoot,\n            finishedWork,\n            includeWorkInProgressEffects\n          );\n          includeWorkInProgressEffects &&\n            flags & 4 &&\n            commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n          break;\n        case 22:\n          null === finishedWork.memoizedState &&\n            recursivelyTraverseReappearLayoutEffects(\n              finishedRoot,\n              finishedWork,\n              includeWorkInProgressEffects\n            );\n          safelyAttachRef(finishedWork, finishedWork.return);\n          break;\n        case 30:\n          break;\n        default:\n          recursivelyTraverseReappearLayoutEffects(\n            finishedRoot,\n            finishedWork,\n            includeWorkInProgressEffects\n          );\n      }\n    }\n    function recursivelyTraverseReappearLayoutEffects(\n      finishedRoot,\n      parentFiber,\n      includeWorkInProgressEffects\n    ) {\n      includeWorkInProgressEffects =\n        includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);\n      for (parentFiber = parentFiber.child; null !== parentFiber; )\n        reappearLayoutEffects(\n          finishedRoot,\n          parentFiber.alternate,\n          parentFiber,\n          includeWorkInProgressEffects\n        ),\n          (parentFiber = parentFiber.sibling);\n    }\n    function commitOffscreenPassiveMountEffects(current, finishedWork) {\n      var previousCache = null;\n      null !== current &&\n        null !== current.memoizedState &&\n        null !== current.memoizedState.cachePool &&\n        (previousCache = current.memoizedState.cachePool.pool);\n      current = null;\n      null !== finishedWork.memoizedState &&\n        null !== finishedWork.memoizedState.cachePool &&\n        (current = finishedWork.memoizedState.cachePool.pool);\n      current !== previousCache &&\n        (null != current && retainCache(current),\n        null != previousCache && releaseCache(previousCache));\n    }\n    function commitCachePassiveMountEffect(current, finishedWork) {\n      current = null;\n      null !== finishedWork.alternate &&\n        (current = finishedWork.alternate.memoizedState.cache);\n      finishedWork = finishedWork.memoizedState.cache;\n      finishedWork !== current &&\n        (retainCache(finishedWork), null != current && releaseCache(current));\n    }\n    function recursivelyTraversePassiveMountEffects(\n      root,\n      parentFiber,\n      committedLanes,\n      committedTransitions\n    ) {\n      if (parentFiber.subtreeFlags & 10256)\n        for (parentFiber = parentFiber.child; null !== parentFiber; )\n          commitPassiveMountOnFiber(\n            root,\n            parentFiber,\n            committedLanes,\n            committedTransitions\n          ),\n            (parentFiber = parentFiber.sibling);\n    }\n    function commitPassiveMountOnFiber(\n      finishedRoot,\n      finishedWork,\n      committedLanes,\n      committedTransitions\n    ) {\n      var flags = finishedWork.flags;\n      switch (finishedWork.tag) {\n        case 0:\n        case 11:\n        case 15:\n          recursivelyTraversePassiveMountEffects(\n            finishedRoot,\n            finishedWork,\n            committedLanes,\n            committedTransitions\n          );\n          flags & 2048 &&\n            commitHookPassiveMountEffects(finishedWork, Passive | HasEffect);\n          break;\n        case 1:\n          recursivelyTraversePassiveMountEffects(\n            finishedRoot,\n            finishedWork,\n            committedLanes,\n            committedTransitions\n          );\n          break;\n        case 3:\n          var prevEffectDuration = pushNestedEffectDurations();\n          recursivelyTraversePassiveMountEffects(\n            finishedRoot,\n            finishedWork,\n            committedLanes,\n            committedTransitions\n          );\n          flags & 2048 &&\n            ((committedLanes = null),\n            null !== finishedWork.alternate &&\n              (committedLanes = finishedWork.alternate.memoizedState.cache),\n            (finishedWork = finishedWork.memoizedState.cache),\n            finishedWork !== committedLanes &&\n              (retainCache(finishedWork),\n              null != committedLanes && releaseCache(committedLanes)));\n          finishedRoot.passiveEffectDuration +=\n            popNestedEffectDurations(prevEffectDuration);\n          break;\n        case 12:\n          if (flags & 2048) {\n            flags = pushNestedEffectDurations();\n            recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            );\n            finishedRoot = finishedWork.stateNode;\n            finishedRoot.passiveEffectDuration +=\n              bubbleNestedEffectDurations(flags);\n            try {\n              runWithFiberInDEV(\n                finishedWork,\n                commitProfilerPostCommitImpl,\n                finishedWork,\n                finishedWork.alternate,\n                commitStartTime,\n                finishedRoot.passiveEffectDuration\n              );\n            } catch (error) {\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\n            }\n          } else\n            recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            );\n          break;\n        case 13:\n          recursivelyTraversePassiveMountEffects(\n            finishedRoot,\n            finishedWork,\n            committedLanes,\n            committedTransitions\n          );\n          break;\n        case 23:\n          break;\n        case 22:\n          prevEffectDuration = finishedWork.stateNode;\n          var _current = finishedWork.alternate;\n          null !== finishedWork.memoizedState\n            ? prevEffectDuration._visibility & OffscreenPassiveEffectsConnected\n              ? recursivelyTraversePassiveMountEffects(\n                  finishedRoot,\n                  finishedWork,\n                  committedLanes,\n                  committedTransitions\n                )\n              : recursivelyTraverseAtomicPassiveEffects(\n                  finishedRoot,\n                  finishedWork\n                )\n            : prevEffectDuration._visibility & OffscreenPassiveEffectsConnected\n              ? recursivelyTraversePassiveMountEffects(\n                  finishedRoot,\n                  finishedWork,\n                  committedLanes,\n                  committedTransitions\n                )\n              : ((prevEffectDuration._visibility |=\n                  OffscreenPassiveEffectsConnected),\n                recursivelyTraverseReconnectPassiveEffects(\n                  finishedRoot,\n                  finishedWork,\n                  committedLanes,\n                  committedTransitions,\n                  0 !== (finishedWork.subtreeFlags & 10256)\n                ));\n          flags & 2048 &&\n            commitOffscreenPassiveMountEffects(_current, finishedWork);\n          break;\n        case 24:\n          recursivelyTraversePassiveMountEffects(\n            finishedRoot,\n            finishedWork,\n            committedLanes,\n            committedTransitions\n          );\n          flags & 2048 &&\n            commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n          break;\n        default:\n          recursivelyTraversePassiveMountEffects(\n            finishedRoot,\n            finishedWork,\n            committedLanes,\n            committedTransitions\n          );\n      }\n    }\n    function recursivelyTraverseReconnectPassiveEffects(\n      finishedRoot,\n      parentFiber,\n      committedLanes,\n      committedTransitions,\n      includeWorkInProgressEffects\n    ) {\n      includeWorkInProgressEffects =\n        includeWorkInProgressEffects &&\n        0 !== (parentFiber.subtreeFlags & 10256);\n      for (parentFiber = parentFiber.child; null !== parentFiber; )\n        reconnectPassiveEffects(\n          finishedRoot,\n          parentFiber,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        ),\n          (parentFiber = parentFiber.sibling);\n    }\n    function reconnectPassiveEffects(\n      finishedRoot,\n      finishedWork,\n      committedLanes,\n      committedTransitions,\n      includeWorkInProgressEffects\n    ) {\n      var flags = finishedWork.flags;\n      switch (finishedWork.tag) {\n        case 0:\n        case 11:\n        case 15:\n          recursivelyTraverseReconnectPassiveEffects(\n            finishedRoot,\n            finishedWork,\n            committedLanes,\n            committedTransitions,\n            includeWorkInProgressEffects\n          );\n          commitHookPassiveMountEffects(finishedWork, Passive);\n          break;\n        case 23:\n          break;\n        case 22:\n          var _instance2 = finishedWork.stateNode;\n          null !== finishedWork.memoizedState\n            ? _instance2._visibility & OffscreenPassiveEffectsConnected\n              ? recursivelyTraverseReconnectPassiveEffects(\n                  finishedRoot,\n                  finishedWork,\n                  committedLanes,\n                  committedTransitions,\n                  includeWorkInProgressEffects\n                )\n              : recursivelyTraverseAtomicPassiveEffects(\n                  finishedRoot,\n                  finishedWork\n                )\n            : ((_instance2._visibility |= OffscreenPassiveEffectsConnected),\n              recursivelyTraverseReconnectPassiveEffects(\n                finishedRoot,\n                finishedWork,\n                committedLanes,\n                committedTransitions,\n                includeWorkInProgressEffects\n              ));\n          includeWorkInProgressEffects &&\n            flags & 2048 &&\n            commitOffscreenPassiveMountEffects(\n              finishedWork.alternate,\n              finishedWork\n            );\n          break;\n        case 24:\n          recursivelyTraverseReconnectPassiveEffects(\n            finishedRoot,\n            finishedWork,\n            committedLanes,\n            committedTransitions,\n            includeWorkInProgressEffects\n          );\n          includeWorkInProgressEffects &&\n            flags & 2048 &&\n            commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n          break;\n        default:\n          recursivelyTraverseReconnectPassiveEffects(\n            finishedRoot,\n            finishedWork,\n            committedLanes,\n            committedTransitions,\n            includeWorkInProgressEffects\n          );\n      }\n    }\n    function recursivelyTraverseAtomicPassiveEffects(\n      finishedRoot$jscomp$0,\n      parentFiber\n    ) {\n      if (parentFiber.subtreeFlags & 10256)\n        for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n          var finishedRoot = finishedRoot$jscomp$0,\n            finishedWork = parentFiber,\n            flags = finishedWork.flags;\n          switch (finishedWork.tag) {\n            case 22:\n              recursivelyTraverseAtomicPassiveEffects(\n                finishedRoot,\n                finishedWork\n              );\n              flags & 2048 &&\n                commitOffscreenPassiveMountEffects(\n                  finishedWork.alternate,\n                  finishedWork\n                );\n              break;\n            case 24:\n              recursivelyTraverseAtomicPassiveEffects(\n                finishedRoot,\n                finishedWork\n              );\n              flags & 2048 &&\n                commitCachePassiveMountEffect(\n                  finishedWork.alternate,\n                  finishedWork\n                );\n              break;\n            default:\n              recursivelyTraverseAtomicPassiveEffects(\n                finishedRoot,\n                finishedWork\n              );\n          }\n          parentFiber = parentFiber.sibling;\n        }\n    }\n    function recursivelyAccumulateSuspenseyCommit(parentFiber) {\n      if (parentFiber.subtreeFlags & suspenseyCommitFlag)\n        for (parentFiber = parentFiber.child; null !== parentFiber; )\n          accumulateSuspenseyCommitOnFiber(parentFiber),\n            (parentFiber = parentFiber.sibling);\n    }\n    function accumulateSuspenseyCommitOnFiber(fiber) {\n      switch (fiber.tag) {\n        case 26:\n          recursivelyAccumulateSuspenseyCommit(fiber);\n          fiber.flags & suspenseyCommitFlag &&\n            null !== fiber.memoizedState &&\n            suspendResource(\n              currentHoistableRoot,\n              fiber.memoizedState,\n              fiber.memoizedProps\n            );\n          break;\n        case 5:\n          recursivelyAccumulateSuspenseyCommit(fiber);\n          break;\n        case 3:\n        case 4:\n          var previousHoistableRoot = currentHoistableRoot;\n          currentHoistableRoot = getHoistableRoot(\n            fiber.stateNode.containerInfo\n          );\n          recursivelyAccumulateSuspenseyCommit(fiber);\n          currentHoistableRoot = previousHoistableRoot;\n          break;\n        case 22:\n          null === fiber.memoizedState &&\n            ((previousHoistableRoot = fiber.alternate),\n            null !== previousHoistableRoot &&\n            null !== previousHoistableRoot.memoizedState\n              ? ((previousHoistableRoot = suspenseyCommitFlag),\n                (suspenseyCommitFlag = 16777216),\n                recursivelyAccumulateSuspenseyCommit(fiber),\n                (suspenseyCommitFlag = previousHoistableRoot))\n              : recursivelyAccumulateSuspenseyCommit(fiber));\n          break;\n        default:\n          recursivelyAccumulateSuspenseyCommit(fiber);\n      }\n    }\n    function detachAlternateSiblings(parentFiber) {\n      var previousFiber = parentFiber.alternate;\n      if (\n        null !== previousFiber &&\n        ((parentFiber = previousFiber.child), null !== parentFiber)\n      ) {\n        previousFiber.child = null;\n        do\n          (previousFiber = parentFiber.sibling),\n            (parentFiber.sibling = null),\n            (parentFiber = previousFiber);\n        while (null !== parentFiber);\n      }\n    }\n    function recursivelyTraversePassiveUnmountEffects(parentFiber) {\n      var deletions = parentFiber.deletions;\n      if (0 !== (parentFiber.flags & 16)) {\n        if (null !== deletions)\n          for (var i = 0; i < deletions.length; i++) {\n            var childToDelete = deletions[i];\n            nextEffect = childToDelete;\n            commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n              childToDelete,\n              parentFiber\n            );\n          }\n        detachAlternateSiblings(parentFiber);\n      }\n      if (parentFiber.subtreeFlags & 10256)\n        for (parentFiber = parentFiber.child; null !== parentFiber; )\n          commitPassiveUnmountOnFiber(parentFiber),\n            (parentFiber = parentFiber.sibling);\n    }\n    function commitPassiveUnmountOnFiber(finishedWork) {\n      switch (finishedWork.tag) {\n        case 0:\n        case 11:\n        case 15:\n          recursivelyTraversePassiveUnmountEffects(finishedWork);\n          finishedWork.flags & 2048 &&\n            commitHookPassiveUnmountEffects(\n              finishedWork,\n              finishedWork.return,\n              Passive | HasEffect\n            );\n          break;\n        case 3:\n          var prevEffectDuration = pushNestedEffectDurations();\n          recursivelyTraversePassiveUnmountEffects(finishedWork);\n          finishedWork.stateNode.passiveEffectDuration +=\n            popNestedEffectDurations(prevEffectDuration);\n          break;\n        case 12:\n          prevEffectDuration = pushNestedEffectDurations();\n          recursivelyTraversePassiveUnmountEffects(finishedWork);\n          finishedWork.stateNode.passiveEffectDuration +=\n            bubbleNestedEffectDurations(prevEffectDuration);\n          break;\n        case 22:\n          prevEffectDuration = finishedWork.stateNode;\n          null !== finishedWork.memoizedState &&\n          prevEffectDuration._visibility & OffscreenPassiveEffectsConnected &&\n          (null === finishedWork.return || 13 !== finishedWork.return.tag)\n            ? ((prevEffectDuration._visibility &=\n                ~OffscreenPassiveEffectsConnected),\n              recursivelyTraverseDisconnectPassiveEffects(finishedWork))\n            : recursivelyTraversePassiveUnmountEffects(finishedWork);\n          break;\n        default:\n          recursivelyTraversePassiveUnmountEffects(finishedWork);\n      }\n    }\n    function recursivelyTraverseDisconnectPassiveEffects(parentFiber) {\n      var deletions = parentFiber.deletions;\n      if (0 !== (parentFiber.flags & 16)) {\n        if (null !== deletions)\n          for (var i = 0; i < deletions.length; i++) {\n            var childToDelete = deletions[i];\n            nextEffect = childToDelete;\n            commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n              childToDelete,\n              parentFiber\n            );\n          }\n        detachAlternateSiblings(parentFiber);\n      }\n      for (parentFiber = parentFiber.child; null !== parentFiber; )\n        disconnectPassiveEffect(parentFiber),\n          (parentFiber = parentFiber.sibling);\n    }\n    function disconnectPassiveEffect(finishedWork) {\n      switch (finishedWork.tag) {\n        case 0:\n        case 11:\n        case 15:\n          commitHookPassiveUnmountEffects(\n            finishedWork,\n            finishedWork.return,\n            Passive\n          );\n          recursivelyTraverseDisconnectPassiveEffects(finishedWork);\n          break;\n        case 22:\n          var instance = finishedWork.stateNode;\n          instance._visibility & OffscreenPassiveEffectsConnected &&\n            ((instance._visibility &= ~OffscreenPassiveEffectsConnected),\n            recursivelyTraverseDisconnectPassiveEffects(finishedWork));\n          break;\n        default:\n          recursivelyTraverseDisconnectPassiveEffects(finishedWork);\n      }\n    }\n    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n      deletedSubtreeRoot,\n      nearestMountedAncestor\n    ) {\n      for (; null !== nextEffect; ) {\n        var fiber = nextEffect,\n          current = fiber;\n        switch (current.tag) {\n          case 0:\n          case 11:\n          case 15:\n            commitHookPassiveUnmountEffects(\n              current,\n              nearestMountedAncestor,\n              Passive\n            );\n            break;\n          case 23:\n          case 22:\n            null !== current.memoizedState &&\n              null !== current.memoizedState.cachePool &&\n              ((current = current.memoizedState.cachePool.pool),\n              null != current && retainCache(current));\n            break;\n          case 24:\n            releaseCache(current.memoizedState.cache);\n        }\n        current = fiber.child;\n        if (null !== current) (current.return = fiber), (nextEffect = current);\n        else\n          a: for (fiber = deletedSubtreeRoot; null !== nextEffect; ) {\n            current = nextEffect;\n            var sibling = current.sibling,\n              returnFiber = current.return;\n            detachFiberAfterEffects(current);\n            if (current === fiber) {\n              nextEffect = null;\n              break a;\n            }\n            if (null !== sibling) {\n              sibling.return = returnFiber;\n              nextEffect = sibling;\n              break a;\n            }\n            nextEffect = returnFiber;\n          }\n      }\n    }\n    function onCommitRoot() {\n      commitHooks.forEach(function (commitHook) {\n        return commitHook();\n      });\n    }\n    function isConcurrentActEnvironment() {\n      var isReactActEnvironmentGlobal =\n        \"undefined\" !== typeof IS_REACT_ACT_ENVIRONMENT\n          ? IS_REACT_ACT_ENVIRONMENT\n          : void 0;\n      isReactActEnvironmentGlobal ||\n        null === ReactSharedInternals.actQueue ||\n        console.error(\n          \"The current testing environment is not configured to support act(...)\"\n        );\n      return isReactActEnvironmentGlobal;\n    }\n    function requestUpdateLane(fiber) {\n      if (\n        (executionContext & RenderContext) !== NoContext &&\n        0 !== workInProgressRootRenderLanes\n      )\n        return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;\n      var transition = ReactSharedInternals.T;\n      return null !== transition\n        ? (transition._updatedFibers || (transition._updatedFibers = new Set()),\n          transition._updatedFibers.add(fiber),\n          (fiber = currentEntangledLane),\n          0 !== fiber ? fiber : requestTransitionLane())\n        : resolveUpdatePriority();\n    }\n    function requestDeferredLane() {\n      0 === workInProgressDeferredLane &&\n        (workInProgressDeferredLane =\n          0 === (workInProgressRootRenderLanes & 536870912) || isHydrating\n            ? claimNextTransitionLane()\n            : 536870912);\n      var suspenseHandler = suspenseHandlerStackCursor.current;\n      null !== suspenseHandler && (suspenseHandler.flags |= 32);\n      return workInProgressDeferredLane;\n    }\n    function scheduleUpdateOnFiber(root, fiber, lane) {\n      isRunningInsertionEffect &&\n        console.error(\"useInsertionEffect must not schedule updates.\");\n      isFlushingPassiveEffects && (didScheduleUpdateDuringPassiveEffects = !0);\n      if (\n        (root === workInProgressRoot &&\n          (workInProgressSuspendedReason === SuspendedOnData ||\n            workInProgressSuspendedReason === SuspendedOnAction)) ||\n        null !== root.cancelPendingCommit\n      )\n        prepareFreshStack(root, 0),\n          markRootSuspended(\n            root,\n            workInProgressRootRenderLanes,\n            workInProgressDeferredLane,\n            !1\n          );\n      markRootUpdated$1(root, lane);\n      if (\n        0 !== (executionContext & RenderContext) &&\n        root === workInProgressRoot\n      ) {\n        if (isRendering)\n          switch (fiber.tag) {\n            case 0:\n            case 11:\n            case 15:\n              root =\n                (workInProgress && getComponentNameFromFiber(workInProgress)) ||\n                \"Unknown\";\n              didWarnAboutUpdateInRenderForAnotherComponent.has(root) ||\n                (didWarnAboutUpdateInRenderForAnotherComponent.add(root),\n                (fiber = getComponentNameFromFiber(fiber) || \"Unknown\"),\n                console.error(\n                  \"Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://react.dev/link/setstate-in-render\",\n                  fiber,\n                  root,\n                  root\n                ));\n              break;\n            case 1:\n              didWarnAboutUpdateInRender ||\n                (console.error(\n                  \"Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.\"\n                ),\n                (didWarnAboutUpdateInRender = !0));\n          }\n      } else\n        isDevToolsPresent && addFiberToLanesMap(root, fiber, lane),\n          warnIfUpdatesNotWrappedWithActDEV(fiber),\n          root === workInProgressRoot &&\n            ((executionContext & RenderContext) === NoContext &&\n              (workInProgressRootInterleavedUpdatedLanes |= lane),\n            workInProgressRootExitStatus === RootSuspendedWithDelay &&\n              markRootSuspended(\n                root,\n                workInProgressRootRenderLanes,\n                workInProgressDeferredLane,\n                !1\n              )),\n          ensureRootIsScheduled(root);\n    }\n    function performWorkOnRoot(root, lanes, forceSync) {\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext)\n        throw Error(\"Should not already be working.\");\n      var shouldTimeSlice =\n          (!forceSync &&\n            0 === (lanes & 124) &&\n            0 === (lanes & root.expiredLanes)) ||\n          checkIfRootIsPrerendering(root, lanes),\n        exitStatus = shouldTimeSlice\n          ? renderRootConcurrent(root, lanes)\n          : renderRootSync(root, lanes, !0),\n        renderWasConcurrent = shouldTimeSlice;\n      do {\n        if (exitStatus === RootInProgress) {\n          workInProgressRootIsPrerendering &&\n            !shouldTimeSlice &&\n            markRootSuspended(root, lanes, 0, !1);\n          break;\n        } else {\n          forceSync = root.current.alternate;\n          if (\n            renderWasConcurrent &&\n            !isRenderConsistentWithExternalStores(forceSync)\n          ) {\n            exitStatus = renderRootSync(root, lanes, !1);\n            renderWasConcurrent = !1;\n            continue;\n          }\n          if (exitStatus === RootErrored) {\n            renderWasConcurrent = lanes;\n            if (root.errorRecoveryDisabledLanes & renderWasConcurrent)\n              var errorRetryLanes = 0;\n            else\n              (errorRetryLanes = root.pendingLanes & -536870913),\n                (errorRetryLanes =\n                  0 !== errorRetryLanes\n                    ? errorRetryLanes\n                    : errorRetryLanes & 536870912\n                      ? 536870912\n                      : 0);\n            if (0 !== errorRetryLanes) {\n              lanes = errorRetryLanes;\n              a: {\n                exitStatus = root;\n                var errorRetryLanes$jscomp$0 = errorRetryLanes;\n                errorRetryLanes = workInProgressRootConcurrentErrors;\n                var wasRootDehydrated =\n                  exitStatus.current.memoizedState.isDehydrated;\n                wasRootDehydrated &&\n                  (prepareFreshStack(\n                    exitStatus,\n                    errorRetryLanes$jscomp$0\n                  ).flags |= 256);\n                errorRetryLanes$jscomp$0 = renderRootSync(\n                  exitStatus,\n                  errorRetryLanes$jscomp$0,\n                  !1\n                );\n                if (errorRetryLanes$jscomp$0 !== RootErrored) {\n                  if (\n                    workInProgressRootDidAttachPingListener &&\n                    !wasRootDehydrated\n                  ) {\n                    exitStatus.errorRecoveryDisabledLanes |=\n                      renderWasConcurrent;\n                    workInProgressRootInterleavedUpdatedLanes |=\n                      renderWasConcurrent;\n                    exitStatus = RootSuspendedWithDelay;\n                    break a;\n                  }\n                  exitStatus = workInProgressRootRecoverableErrors;\n                  workInProgressRootRecoverableErrors = errorRetryLanes;\n                  null !== exitStatus &&\n                    (null === workInProgressRootRecoverableErrors\n                      ? (workInProgressRootRecoverableErrors = exitStatus)\n                      : workInProgressRootRecoverableErrors.push.apply(\n                          workInProgressRootRecoverableErrors,\n                          exitStatus\n                        ));\n                }\n                exitStatus = errorRetryLanes$jscomp$0;\n              }\n              renderWasConcurrent = !1;\n              if (exitStatus !== RootErrored) continue;\n            }\n          }\n          if (exitStatus === RootFatalErrored) {\n            prepareFreshStack(root, 0);\n            markRootSuspended(root, lanes, 0, !0);\n            break;\n          }\n          a: {\n            shouldTimeSlice = root;\n            switch (exitStatus) {\n              case RootInProgress:\n              case RootFatalErrored:\n                throw Error(\"Root did not complete. This is a bug in React.\");\n              case RootSuspendedWithDelay:\n                if ((lanes & 4194048) !== lanes) break;\n              case RootSuspendedAtTheShell:\n                markRootSuspended(\n                  shouldTimeSlice,\n                  lanes,\n                  workInProgressDeferredLane,\n                  !workInProgressRootDidSkipSuspendedSiblings\n                );\n                break a;\n              case RootErrored:\n                workInProgressRootRecoverableErrors = null;\n                break;\n              case RootSuspended:\n              case RootCompleted:\n                break;\n              default:\n                throw Error(\"Unknown root exit status.\");\n            }\n            if (null !== ReactSharedInternals.actQueue)\n              commitRoot(\n                shouldTimeSlice,\n                forceSync,\n                lanes,\n                workInProgressRootRecoverableErrors,\n                workInProgressTransitions,\n                workInProgressRootDidIncludeRecursiveRenderUpdate,\n                workInProgressDeferredLane,\n                workInProgressRootInterleavedUpdatedLanes,\n                workInProgressSuspendedRetryLanes\n              );\n            else {\n              if (\n                (lanes & 62914560) === lanes &&\n                ((renderWasConcurrent =\n                  globalMostRecentFallbackTime +\n                  FALLBACK_THROTTLE_MS -\n                  now$1()),\n                10 < renderWasConcurrent)\n              ) {\n                markRootSuspended(\n                  shouldTimeSlice,\n                  lanes,\n                  workInProgressDeferredLane,\n                  !workInProgressRootDidSkipSuspendedSiblings\n                );\n                if (0 !== getNextLanes(shouldTimeSlice, 0, !0)) break a;\n                shouldTimeSlice.timeoutHandle = scheduleTimeout(\n                  commitRootWhenReady.bind(\n                    null,\n                    shouldTimeSlice,\n                    forceSync,\n                    workInProgressRootRecoverableErrors,\n                    workInProgressTransitions,\n                    workInProgressRootDidIncludeRecursiveRenderUpdate,\n                    lanes,\n                    workInProgressDeferredLane,\n                    workInProgressRootInterleavedUpdatedLanes,\n                    workInProgressSuspendedRetryLanes,\n                    workInProgressRootDidSkipSuspendedSiblings,\n                    exitStatus,\n                    THROTTLED_COMMIT,\n                    renderStartTime,\n                    0\n                  ),\n                  renderWasConcurrent\n                );\n                break a;\n              }\n              commitRootWhenReady(\n                shouldTimeSlice,\n                forceSync,\n                workInProgressRootRecoverableErrors,\n                workInProgressTransitions,\n                workInProgressRootDidIncludeRecursiveRenderUpdate,\n                lanes,\n                workInProgressDeferredLane,\n                workInProgressRootInterleavedUpdatedLanes,\n                workInProgressSuspendedRetryLanes,\n                workInProgressRootDidSkipSuspendedSiblings,\n                exitStatus,\n                IMMEDIATE_COMMIT,\n                renderStartTime,\n                0\n              );\n            }\n          }\n        }\n        break;\n      } while (1);\n      ensureRootIsScheduled(root);\n    }\n    function commitRootWhenReady(\n      root,\n      finishedWork,\n      recoverableErrors,\n      transitions,\n      didIncludeRenderPhaseUpdate,\n      lanes,\n      spawnedLane,\n      updatedLanes,\n      suspendedRetryLanes,\n      didSkipSuspendedSiblings,\n      exitStatus,\n      suspendedCommitReason,\n      completedRenderStartTime,\n      completedRenderEndTime\n    ) {\n      root.timeoutHandle = noTimeout;\n      suspendedCommitReason = finishedWork.subtreeFlags;\n      if (\n        suspendedCommitReason & 8192 ||\n        16785408 === (suspendedCommitReason & 16785408)\n      )\n        if (\n          ((suspendedState = { stylesheets: null, count: 0, unsuspend: noop }),\n          accumulateSuspenseyCommitOnFiber(finishedWork),\n          (suspendedCommitReason = waitForCommitToBeReady()),\n          null !== suspendedCommitReason)\n        ) {\n          root.cancelPendingCommit = suspendedCommitReason(\n            commitRoot.bind(\n              null,\n              root,\n              finishedWork,\n              lanes,\n              recoverableErrors,\n              transitions,\n              didIncludeRenderPhaseUpdate,\n              spawnedLane,\n              updatedLanes,\n              suspendedRetryLanes,\n              exitStatus,\n              SUSPENDED_COMMIT,\n              completedRenderStartTime,\n              completedRenderEndTime\n            )\n          );\n          markRootSuspended(\n            root,\n            lanes,\n            spawnedLane,\n            !didSkipSuspendedSiblings\n          );\n          return;\n        }\n      commitRoot(\n        root,\n        finishedWork,\n        lanes,\n        recoverableErrors,\n        transitions,\n        didIncludeRenderPhaseUpdate,\n        spawnedLane,\n        updatedLanes,\n        suspendedRetryLanes\n      );\n    }\n    function isRenderConsistentWithExternalStores(finishedWork) {\n      for (var node = finishedWork; ; ) {\n        var tag = node.tag;\n        if (\n          (0 === tag || 11 === tag || 15 === tag) &&\n          node.flags & 16384 &&\n          ((tag = node.updateQueue),\n          null !== tag && ((tag = tag.stores), null !== tag))\n        )\n          for (var i = 0; i < tag.length; i++) {\n            var check = tag[i],\n              getSnapshot = check.getSnapshot;\n            check = check.value;\n            try {\n              if (!objectIs(getSnapshot(), check)) return !1;\n            } catch (error) {\n              return !1;\n            }\n          }\n        tag = node.child;\n        if (node.subtreeFlags & 16384 && null !== tag)\n          (tag.return = node), (node = tag);\n        else {\n          if (node === finishedWork) break;\n          for (; null === node.sibling; ) {\n            if (null === node.return || node.return === finishedWork) return !0;\n            node = node.return;\n          }\n          node.sibling.return = node.return;\n          node = node.sibling;\n        }\n      }\n      return !0;\n    }\n    function markRootSuspended(\n      root,\n      suspendedLanes,\n      spawnedLane,\n      didAttemptEntireTree\n    ) {\n      suspendedLanes &= ~workInProgressRootPingedLanes;\n      suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;\n      root.suspendedLanes |= suspendedLanes;\n      root.pingedLanes &= ~suspendedLanes;\n      didAttemptEntireTree && (root.warmLanes |= suspendedLanes);\n      didAttemptEntireTree = root.expirationTimes;\n      for (var lanes = suspendedLanes; 0 < lanes; ) {\n        var index = 31 - clz32(lanes),\n          lane = 1 << index;\n        didAttemptEntireTree[index] = -1;\n        lanes &= ~lane;\n      }\n      0 !== spawnedLane &&\n        markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);\n    }\n    function flushSyncWork$1() {\n      return (executionContext & (RenderContext | CommitContext)) === NoContext\n        ? (flushSyncWorkAcrossRoots_impl(0, !1), !1)\n        : !0;\n    }\n    function resetWorkInProgressStack() {\n      if (null !== workInProgress) {\n        if (workInProgressSuspendedReason === NotSuspended)\n          var interruptedWork = workInProgress.return;\n        else\n          (interruptedWork = workInProgress),\n            resetContextDependencies(),\n            resetHooksOnUnwind(interruptedWork),\n            (thenableState = null),\n            (thenableIndexCounter = 0),\n            (interruptedWork = workInProgress);\n        for (; null !== interruptedWork; )\n          unwindInterruptedWork(interruptedWork.alternate, interruptedWork),\n            (interruptedWork = interruptedWork.return);\n        workInProgress = null;\n      }\n    }\n    function prepareFreshStack(root, lanes) {\n      var timeoutHandle = root.timeoutHandle;\n      timeoutHandle !== noTimeout &&\n        ((root.timeoutHandle = noTimeout), cancelTimeout(timeoutHandle));\n      timeoutHandle = root.cancelPendingCommit;\n      null !== timeoutHandle &&\n        ((root.cancelPendingCommit = null), timeoutHandle());\n      resetWorkInProgressStack();\n      workInProgressRoot = root;\n      workInProgress = timeoutHandle = createWorkInProgress(root.current, null);\n      workInProgressRootRenderLanes = lanes;\n      workInProgressSuspendedReason = NotSuspended;\n      workInProgressThrownValue = null;\n      workInProgressRootDidSkipSuspendedSiblings = !1;\n      workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);\n      workInProgressRootDidAttachPingListener = !1;\n      workInProgressRootExitStatus = RootInProgress;\n      workInProgressSuspendedRetryLanes =\n        workInProgressDeferredLane =\n        workInProgressRootPingedLanes =\n        workInProgressRootInterleavedUpdatedLanes =\n        workInProgressRootSkippedLanes =\n          0;\n      workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =\n        null;\n      workInProgressRootDidIncludeRecursiveRenderUpdate = !1;\n      0 !== (lanes & 8) && (lanes |= lanes & 32);\n      var allEntangledLanes = root.entangledLanes;\n      if (0 !== allEntangledLanes)\n        for (\n          root = root.entanglements, allEntangledLanes &= lanes;\n          0 < allEntangledLanes;\n\n        ) {\n          var index = 31 - clz32(allEntangledLanes),\n            lane = 1 << index;\n          lanes |= root[index];\n          allEntangledLanes &= ~lane;\n        }\n      entangledRenderLanes = lanes;\n      finishQueueingConcurrentUpdates();\n      lanes = getCurrentTime();\n      1e3 < lanes - lastResetTime &&\n        ((ReactSharedInternals.recentlyCreatedOwnerStacks = 0),\n        (lastResetTime = lanes));\n      ReactStrictModeWarnings.discardPendingWarnings();\n      return timeoutHandle;\n    }\n    function handleThrow(root, thrownValue) {\n      currentlyRenderingFiber = null;\n      ReactSharedInternals.H = ContextOnlyDispatcher;\n      ReactSharedInternals.getCurrentStack = null;\n      isRendering = !1;\n      current = null;\n      thrownValue === SuspenseException ||\n      thrownValue === SuspenseActionException\n        ? ((thrownValue = getSuspendedThenable()),\n          (workInProgressSuspendedReason = SuspendedOnImmediate))\n        : thrownValue === SuspenseyCommitException\n          ? ((thrownValue = getSuspendedThenable()),\n            (workInProgressSuspendedReason = SuspendedOnInstance))\n          : (workInProgressSuspendedReason =\n              thrownValue === SelectiveHydrationException\n                ? SuspendedOnHydration\n                : null !== thrownValue &&\n                    \"object\" === typeof thrownValue &&\n                    \"function\" === typeof thrownValue.then\n                  ? SuspendedOnDeprecatedThrowPromise\n                  : SuspendedOnError);\n      workInProgressThrownValue = thrownValue;\n      var erroredWork = workInProgress;\n      if (null === erroredWork)\n        (workInProgressRootExitStatus = RootFatalErrored),\n          logUncaughtError(\n            root,\n            createCapturedValueAtFiber(thrownValue, root.current)\n          );\n      else\n        switch (\n          (erroredWork.mode & ProfileMode &&\n            stopProfilerTimerIfRunningAndRecordDuration(erroredWork),\n          markComponentRenderStopped(),\n          workInProgressSuspendedReason)\n        ) {\n          case SuspendedOnError:\n            null !== injectedProfilingHooks &&\n              \"function\" ===\n                typeof injectedProfilingHooks.markComponentErrored &&\n              injectedProfilingHooks.markComponentErrored(\n                erroredWork,\n                thrownValue,\n                workInProgressRootRenderLanes\n              );\n            break;\n          case SuspendedOnData:\n          case SuspendedOnAction:\n          case SuspendedOnImmediate:\n          case SuspendedOnDeprecatedThrowPromise:\n          case SuspendedAndReadyToContinue:\n            null !== injectedProfilingHooks &&\n              \"function\" ===\n                typeof injectedProfilingHooks.markComponentSuspended &&\n              injectedProfilingHooks.markComponentSuspended(\n                erroredWork,\n                thrownValue,\n                workInProgressRootRenderLanes\n              );\n        }\n    }\n    function pushDispatcher() {\n      var prevDispatcher = ReactSharedInternals.H;\n      ReactSharedInternals.H = ContextOnlyDispatcher;\n      return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;\n    }\n    function pushAsyncDispatcher() {\n      var prevAsyncDispatcher = ReactSharedInternals.A;\n      ReactSharedInternals.A = DefaultAsyncDispatcher;\n      return prevAsyncDispatcher;\n    }\n    function renderDidSuspendDelayIfPossible() {\n      workInProgressRootExitStatus = RootSuspendedWithDelay;\n      workInProgressRootDidSkipSuspendedSiblings ||\n        ((workInProgressRootRenderLanes & 4194048) !==\n          workInProgressRootRenderLanes &&\n          null !== suspenseHandlerStackCursor.current) ||\n        (workInProgressRootIsPrerendering = !0);\n      (0 === (workInProgressRootSkippedLanes & 134217727) &&\n        0 === (workInProgressRootInterleavedUpdatedLanes & 134217727)) ||\n        null === workInProgressRoot ||\n        markRootSuspended(\n          workInProgressRoot,\n          workInProgressRootRenderLanes,\n          workInProgressDeferredLane,\n          !1\n        );\n    }\n    function renderRootSync(root, lanes, shouldYieldForPrerendering) {\n      var prevExecutionContext = executionContext;\n      executionContext |= RenderContext;\n      var prevDispatcher = pushDispatcher(),\n        prevAsyncDispatcher = pushAsyncDispatcher();\n      if (\n        workInProgressRoot !== root ||\n        workInProgressRootRenderLanes !== lanes\n      ) {\n        if (isDevToolsPresent) {\n          var memoizedUpdaters = root.memoizedUpdaters;\n          0 < memoizedUpdaters.size &&\n            (restorePendingUpdaters(root, workInProgressRootRenderLanes),\n            memoizedUpdaters.clear());\n          movePendingFibersToMemoized(root, lanes);\n        }\n        workInProgressTransitions = null;\n        prepareFreshStack(root, lanes);\n      }\n      markRenderStarted(lanes);\n      lanes = !1;\n      memoizedUpdaters = workInProgressRootExitStatus;\n      a: do\n        try {\n          if (\n            workInProgressSuspendedReason !== NotSuspended &&\n            null !== workInProgress\n          ) {\n            var unitOfWork = workInProgress,\n              thrownValue = workInProgressThrownValue;\n            switch (workInProgressSuspendedReason) {\n              case SuspendedOnHydration:\n                resetWorkInProgressStack();\n                memoizedUpdaters = RootSuspendedAtTheShell;\n                break a;\n              case SuspendedOnImmediate:\n              case SuspendedOnData:\n              case SuspendedOnAction:\n              case SuspendedOnDeprecatedThrowPromise:\n                null === suspenseHandlerStackCursor.current && (lanes = !0);\n                var reason = workInProgressSuspendedReason;\n                workInProgressSuspendedReason = NotSuspended;\n                workInProgressThrownValue = null;\n                throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n                if (\n                  shouldYieldForPrerendering &&\n                  workInProgressRootIsPrerendering\n                ) {\n                  memoizedUpdaters = RootInProgress;\n                  break a;\n                }\n                break;\n              default:\n                (reason = workInProgressSuspendedReason),\n                  (workInProgressSuspendedReason = NotSuspended),\n                  (workInProgressThrownValue = null),\n                  throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n            }\n          }\n          workLoopSync();\n          memoizedUpdaters = workInProgressRootExitStatus;\n          break;\n        } catch (thrownValue$8) {\n          handleThrow(root, thrownValue$8);\n        }\n      while (1);\n      lanes && root.shellSuspendCounter++;\n      resetContextDependencies();\n      executionContext = prevExecutionContext;\n      ReactSharedInternals.H = prevDispatcher;\n      ReactSharedInternals.A = prevAsyncDispatcher;\n      markRenderStopped();\n      null === workInProgress &&\n        ((workInProgressRoot = null),\n        (workInProgressRootRenderLanes = 0),\n        finishQueueingConcurrentUpdates());\n      return memoizedUpdaters;\n    }\n    function workLoopSync() {\n      for (; null !== workInProgress; ) performUnitOfWork(workInProgress);\n    }\n    function renderRootConcurrent(root, lanes) {\n      var prevExecutionContext = executionContext;\n      executionContext |= RenderContext;\n      var prevDispatcher = pushDispatcher(),\n        prevAsyncDispatcher = pushAsyncDispatcher();\n      if (\n        workInProgressRoot !== root ||\n        workInProgressRootRenderLanes !== lanes\n      ) {\n        if (isDevToolsPresent) {\n          var memoizedUpdaters = root.memoizedUpdaters;\n          0 < memoizedUpdaters.size &&\n            (restorePendingUpdaters(root, workInProgressRootRenderLanes),\n            memoizedUpdaters.clear());\n          movePendingFibersToMemoized(root, lanes);\n        }\n        workInProgressTransitions = null;\n        workInProgressRootRenderTargetTime = now$1() + RENDER_TIMEOUT_MS;\n        prepareFreshStack(root, lanes);\n      } else\n        workInProgressRootIsPrerendering = checkIfRootIsPrerendering(\n          root,\n          lanes\n        );\n      markRenderStarted(lanes);\n      a: do\n        try {\n          if (\n            workInProgressSuspendedReason !== NotSuspended &&\n            null !== workInProgress\n          )\n            b: switch (\n              ((lanes = workInProgress),\n              (memoizedUpdaters = workInProgressThrownValue),\n              workInProgressSuspendedReason)\n            ) {\n              case SuspendedOnError:\n                workInProgressSuspendedReason = NotSuspended;\n                workInProgressThrownValue = null;\n                throwAndUnwindWorkLoop(\n                  root,\n                  lanes,\n                  memoizedUpdaters,\n                  SuspendedOnError\n                );\n                break;\n              case SuspendedOnData:\n              case SuspendedOnAction:\n                if (isThenableResolved(memoizedUpdaters)) {\n                  workInProgressSuspendedReason = NotSuspended;\n                  workInProgressThrownValue = null;\n                  replaySuspendedUnitOfWork(lanes);\n                  break;\n                }\n                lanes = function () {\n                  (workInProgressSuspendedReason !== SuspendedOnData &&\n                    workInProgressSuspendedReason !== SuspendedOnAction) ||\n                    workInProgressRoot !== root ||\n                    (workInProgressSuspendedReason =\n                      SuspendedAndReadyToContinue);\n                  ensureRootIsScheduled(root);\n                };\n                memoizedUpdaters.then(lanes, lanes);\n                break a;\n              case SuspendedOnImmediate:\n                workInProgressSuspendedReason = SuspendedAndReadyToContinue;\n                break a;\n              case SuspendedOnInstance:\n                workInProgressSuspendedReason =\n                  SuspendedOnInstanceAndReadyToContinue;\n                break a;\n              case SuspendedAndReadyToContinue:\n                isThenableResolved(memoizedUpdaters)\n                  ? ((workInProgressSuspendedReason = NotSuspended),\n                    (workInProgressThrownValue = null),\n                    replaySuspendedUnitOfWork(lanes))\n                  : ((workInProgressSuspendedReason = NotSuspended),\n                    (workInProgressThrownValue = null),\n                    throwAndUnwindWorkLoop(\n                      root,\n                      lanes,\n                      memoizedUpdaters,\n                      SuspendedAndReadyToContinue\n                    ));\n                break;\n              case SuspendedOnInstanceAndReadyToContinue:\n                var resource = null;\n                switch (workInProgress.tag) {\n                  case 26:\n                    resource = workInProgress.memoizedState;\n                  case 5:\n                  case 27:\n                    var hostFiber = workInProgress;\n                    if (resource ? preloadResource(resource) : 1) {\n                      workInProgressSuspendedReason = NotSuspended;\n                      workInProgressThrownValue = null;\n                      var sibling = hostFiber.sibling;\n                      if (null !== sibling) workInProgress = sibling;\n                      else {\n                        var returnFiber = hostFiber.return;\n                        null !== returnFiber\n                          ? ((workInProgress = returnFiber),\n                            completeUnitOfWork(returnFiber))\n                          : (workInProgress = null);\n                      }\n                      break b;\n                    }\n                    break;\n                  default:\n                    console.error(\n                      \"Unexpected type of fiber triggered a suspensey commit. This is a bug in React.\"\n                    );\n                }\n                workInProgressSuspendedReason = NotSuspended;\n                workInProgressThrownValue = null;\n                throwAndUnwindWorkLoop(\n                  root,\n                  lanes,\n                  memoizedUpdaters,\n                  SuspendedOnInstanceAndReadyToContinue\n                );\n                break;\n              case SuspendedOnDeprecatedThrowPromise:\n                workInProgressSuspendedReason = NotSuspended;\n                workInProgressThrownValue = null;\n                throwAndUnwindWorkLoop(\n                  root,\n                  lanes,\n                  memoizedUpdaters,\n                  SuspendedOnDeprecatedThrowPromise\n                );\n                break;\n              case SuspendedOnHydration:\n                resetWorkInProgressStack();\n                workInProgressRootExitStatus = RootSuspendedAtTheShell;\n                break a;\n              default:\n                throw Error(\n                  \"Unexpected SuspendedReason. This is a bug in React.\"\n                );\n            }\n          null !== ReactSharedInternals.actQueue\n            ? workLoopSync()\n            : workLoopConcurrentByScheduler();\n          break;\n        } catch (thrownValue$9) {\n          handleThrow(root, thrownValue$9);\n        }\n      while (1);\n      resetContextDependencies();\n      ReactSharedInternals.H = prevDispatcher;\n      ReactSharedInternals.A = prevAsyncDispatcher;\n      executionContext = prevExecutionContext;\n      if (null !== workInProgress)\n        return (\n          null !== injectedProfilingHooks &&\n            \"function\" === typeof injectedProfilingHooks.markRenderYielded &&\n            injectedProfilingHooks.markRenderYielded(),\n          RootInProgress\n        );\n      markRenderStopped();\n      workInProgressRoot = null;\n      workInProgressRootRenderLanes = 0;\n      finishQueueingConcurrentUpdates();\n      return workInProgressRootExitStatus;\n    }\n    function workLoopConcurrentByScheduler() {\n      for (; null !== workInProgress && !shouldYield(); )\n        performUnitOfWork(workInProgress);\n    }\n    function performUnitOfWork(unitOfWork) {\n      var current = unitOfWork.alternate;\n      (unitOfWork.mode & ProfileMode) !== NoMode\n        ? (startProfilerTimer(unitOfWork),\n          (current = runWithFiberInDEV(\n            unitOfWork,\n            beginWork,\n            current,\n            unitOfWork,\n            entangledRenderLanes\n          )),\n          stopProfilerTimerIfRunningAndRecordDuration(unitOfWork))\n        : (current = runWithFiberInDEV(\n            unitOfWork,\n            beginWork,\n            current,\n            unitOfWork,\n            entangledRenderLanes\n          ));\n      unitOfWork.memoizedProps = unitOfWork.pendingProps;\n      null === current\n        ? completeUnitOfWork(unitOfWork)\n        : (workInProgress = current);\n    }\n    function replaySuspendedUnitOfWork(unitOfWork) {\n      var next = runWithFiberInDEV(unitOfWork, replayBeginWork, unitOfWork);\n      unitOfWork.memoizedProps = unitOfWork.pendingProps;\n      null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n    }\n    function replayBeginWork(unitOfWork) {\n      var current = unitOfWork.alternate,\n        isProfilingMode = (unitOfWork.mode & ProfileMode) !== NoMode;\n      isProfilingMode && startProfilerTimer(unitOfWork);\n      switch (unitOfWork.tag) {\n        case 15:\n        case 0:\n          current = replayFunctionComponent(\n            current,\n            unitOfWork,\n            unitOfWork.pendingProps,\n            unitOfWork.type,\n            void 0,\n            workInProgressRootRenderLanes\n          );\n          break;\n        case 11:\n          current = replayFunctionComponent(\n            current,\n            unitOfWork,\n            unitOfWork.pendingProps,\n            unitOfWork.type.render,\n            unitOfWork.ref,\n            workInProgressRootRenderLanes\n          );\n          break;\n        case 5:\n          resetHooksOnUnwind(unitOfWork);\n        default:\n          unwindInterruptedWork(current, unitOfWork),\n            (unitOfWork = workInProgress =\n              resetWorkInProgress(unitOfWork, entangledRenderLanes)),\n            (current = beginWork(current, unitOfWork, entangledRenderLanes));\n      }\n      isProfilingMode &&\n        stopProfilerTimerIfRunningAndRecordDuration(unitOfWork);\n      return current;\n    }\n    function throwAndUnwindWorkLoop(\n      root,\n      unitOfWork,\n      thrownValue,\n      suspendedReason\n    ) {\n      resetContextDependencies();\n      resetHooksOnUnwind(unitOfWork);\n      thenableState = null;\n      thenableIndexCounter = 0;\n      var returnFiber = unitOfWork.return;\n      try {\n        if (\n          throwException(\n            root,\n            returnFiber,\n            unitOfWork,\n            thrownValue,\n            workInProgressRootRenderLanes\n          )\n        ) {\n          workInProgressRootExitStatus = RootFatalErrored;\n          logUncaughtError(\n            root,\n            createCapturedValueAtFiber(thrownValue, root.current)\n          );\n          workInProgress = null;\n          return;\n        }\n      } catch (error) {\n        if (null !== returnFiber) throw ((workInProgress = returnFiber), error);\n        workInProgressRootExitStatus = RootFatalErrored;\n        logUncaughtError(\n          root,\n          createCapturedValueAtFiber(thrownValue, root.current)\n        );\n        workInProgress = null;\n        return;\n      }\n      if (unitOfWork.flags & 32768) {\n        if (isHydrating || suspendedReason === SuspendedOnError) root = !0;\n        else if (\n          workInProgressRootIsPrerendering ||\n          0 !== (workInProgressRootRenderLanes & 536870912)\n        )\n          root = !1;\n        else if (\n          ((workInProgressRootDidSkipSuspendedSiblings = root = !0),\n          suspendedReason === SuspendedOnData ||\n            suspendedReason === SuspendedOnAction ||\n            suspendedReason === SuspendedOnImmediate ||\n            suspendedReason === SuspendedOnDeprecatedThrowPromise)\n        )\n          (suspendedReason = suspenseHandlerStackCursor.current),\n            null !== suspendedReason &&\n              13 === suspendedReason.tag &&\n              (suspendedReason.flags |= 16384);\n        unwindUnitOfWork(unitOfWork, root);\n      } else completeUnitOfWork(unitOfWork);\n    }\n    function completeUnitOfWork(unitOfWork) {\n      var completedWork = unitOfWork;\n      do {\n        if (0 !== (completedWork.flags & 32768)) {\n          unwindUnitOfWork(\n            completedWork,\n            workInProgressRootDidSkipSuspendedSiblings\n          );\n          return;\n        }\n        var current = completedWork.alternate;\n        unitOfWork = completedWork.return;\n        startProfilerTimer(completedWork);\n        current = runWithFiberInDEV(\n          completedWork,\n          completeWork,\n          current,\n          completedWork,\n          entangledRenderLanes\n        );\n        (completedWork.mode & ProfileMode) !== NoMode &&\n          stopProfilerTimerIfRunningAndRecordIncompleteDuration(completedWork);\n        if (null !== current) {\n          workInProgress = current;\n          return;\n        }\n        completedWork = completedWork.sibling;\n        if (null !== completedWork) {\n          workInProgress = completedWork;\n          return;\n        }\n        workInProgress = completedWork = unitOfWork;\n      } while (null !== completedWork);\n      workInProgressRootExitStatus === RootInProgress &&\n        (workInProgressRootExitStatus = RootCompleted);\n    }\n    function unwindUnitOfWork(unitOfWork, skipSiblings) {\n      do {\n        var next = unwindWork(unitOfWork.alternate, unitOfWork);\n        if (null !== next) {\n          next.flags &= 32767;\n          workInProgress = next;\n          return;\n        }\n        if ((unitOfWork.mode & ProfileMode) !== NoMode) {\n          stopProfilerTimerIfRunningAndRecordIncompleteDuration(unitOfWork);\n          next = unitOfWork.actualDuration;\n          for (var child = unitOfWork.child; null !== child; )\n            (next += child.actualDuration), (child = child.sibling);\n          unitOfWork.actualDuration = next;\n        }\n        next = unitOfWork.return;\n        null !== next &&\n          ((next.flags |= 32768),\n          (next.subtreeFlags = 0),\n          (next.deletions = null));\n        if (\n          !skipSiblings &&\n          ((unitOfWork = unitOfWork.sibling), null !== unitOfWork)\n        ) {\n          workInProgress = unitOfWork;\n          return;\n        }\n        workInProgress = unitOfWork = next;\n      } while (null !== unitOfWork);\n      workInProgressRootExitStatus = RootSuspendedAtTheShell;\n      workInProgress = null;\n    }\n    function commitRoot(\n      root,\n      finishedWork,\n      lanes,\n      recoverableErrors,\n      transitions,\n      didIncludeRenderPhaseUpdate,\n      spawnedLane,\n      updatedLanes,\n      suspendedRetryLanes\n    ) {\n      root.cancelPendingCommit = null;\n      do flushPendingEffects();\n      while (pendingEffectsStatus !== NO_PENDING_EFFECTS);\n      ReactStrictModeWarnings.flushLegacyContextWarning();\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext)\n        throw Error(\"Should not already be working.\");\n      null !== injectedProfilingHooks &&\n        \"function\" === typeof injectedProfilingHooks.markCommitStarted &&\n        injectedProfilingHooks.markCommitStarted(lanes);\n      if (null === finishedWork) markCommitStopped();\n      else {\n        0 === lanes &&\n          console.error(\n            \"finishedLanes should not be empty during a commit. This is a bug in React.\"\n          );\n        if (finishedWork === root.current)\n          throw Error(\n            \"Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.\"\n          );\n        didIncludeRenderPhaseUpdate =\n          finishedWork.lanes | finishedWork.childLanes;\n        didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;\n        markRootFinished(\n          root,\n          lanes,\n          didIncludeRenderPhaseUpdate,\n          spawnedLane,\n          updatedLanes,\n          suspendedRetryLanes\n        );\n        root === workInProgressRoot &&\n          ((workInProgress = workInProgressRoot = null),\n          (workInProgressRootRenderLanes = 0));\n        pendingFinishedWork = finishedWork;\n        pendingEffectsRoot = root;\n        pendingEffectsLanes = lanes;\n        pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;\n        pendingPassiveTransitions = transitions;\n        pendingRecoverableErrors = recoverableErrors;\n        0 !== (finishedWork.subtreeFlags & 10256) ||\n        0 !== (finishedWork.flags & 10256)\n          ? ((root.callbackNode = null),\n            (root.callbackPriority = 0),\n            scheduleCallback$1(NormalPriority$1, function () {\n              flushPassiveEffects(!0);\n              return null;\n            }))\n          : ((root.callbackNode = null), (root.callbackPriority = 0));\n        commitStartTime = now();\n        recoverableErrors = 0 !== (finishedWork.flags & 13878);\n        if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {\n          recoverableErrors = ReactSharedInternals.T;\n          ReactSharedInternals.T = null;\n          transitions = ReactDOMSharedInternals.p;\n          ReactDOMSharedInternals.p = DiscreteEventPriority;\n          spawnedLane = executionContext;\n          executionContext |= CommitContext;\n          try {\n            commitBeforeMutationEffects(root, finishedWork, lanes);\n          } finally {\n            (executionContext = spawnedLane),\n              (ReactDOMSharedInternals.p = transitions),\n              (ReactSharedInternals.T = recoverableErrors);\n          }\n        }\n        pendingEffectsStatus = PENDING_MUTATION_PHASE;\n        flushMutationEffects();\n        flushLayoutEffects();\n        flushSpawnedWork();\n      }\n    }\n    function flushMutationEffects() {\n      if (pendingEffectsStatus === PENDING_MUTATION_PHASE) {\n        pendingEffectsStatus = NO_PENDING_EFFECTS;\n        var root = pendingEffectsRoot,\n          finishedWork = pendingFinishedWork,\n          lanes = pendingEffectsLanes,\n          rootMutationHasEffect = 0 !== (finishedWork.flags & 13878);\n        if (\n          0 !== (finishedWork.subtreeFlags & 13878) ||\n          rootMutationHasEffect\n        ) {\n          rootMutationHasEffect = ReactSharedInternals.T;\n          ReactSharedInternals.T = null;\n          var previousPriority = ReactDOMSharedInternals.p;\n          ReactDOMSharedInternals.p = DiscreteEventPriority;\n          var prevExecutionContext = executionContext;\n          executionContext |= CommitContext;\n          try {\n            inProgressLanes = lanes;\n            inProgressRoot = root;\n            commitMutationEffectsOnFiber(finishedWork, root);\n            inProgressRoot = inProgressLanes = null;\n            lanes = selectionInformation;\n            var curFocusedElem = getActiveElementDeep(root.containerInfo),\n              priorFocusedElem = lanes.focusedElem,\n              priorSelectionRange = lanes.selectionRange;\n            if (\n              curFocusedElem !== priorFocusedElem &&\n              priorFocusedElem &&\n              priorFocusedElem.ownerDocument &&\n              containsNode(\n                priorFocusedElem.ownerDocument.documentElement,\n                priorFocusedElem\n              )\n            ) {\n              if (\n                null !== priorSelectionRange &&\n                hasSelectionCapabilities(priorFocusedElem)\n              ) {\n                var start = priorSelectionRange.start,\n                  end = priorSelectionRange.end;\n                void 0 === end && (end = start);\n                if (\"selectionStart\" in priorFocusedElem)\n                  (priorFocusedElem.selectionStart = start),\n                    (priorFocusedElem.selectionEnd = Math.min(\n                      end,\n                      priorFocusedElem.value.length\n                    ));\n                else {\n                  var doc = priorFocusedElem.ownerDocument || document,\n                    win = (doc && doc.defaultView) || window;\n                  if (win.getSelection) {\n                    var selection = win.getSelection(),\n                      length = priorFocusedElem.textContent.length,\n                      start$jscomp$0 = Math.min(\n                        priorSelectionRange.start,\n                        length\n                      ),\n                      end$jscomp$0 =\n                        void 0 === priorSelectionRange.end\n                          ? start$jscomp$0\n                          : Math.min(priorSelectionRange.end, length);\n                    !selection.extend &&\n                      start$jscomp$0 > end$jscomp$0 &&\n                      ((curFocusedElem = end$jscomp$0),\n                      (end$jscomp$0 = start$jscomp$0),\n                      (start$jscomp$0 = curFocusedElem));\n                    var startMarker = getNodeForCharacterOffset(\n                        priorFocusedElem,\n                        start$jscomp$0\n                      ),\n                      endMarker = getNodeForCharacterOffset(\n                        priorFocusedElem,\n                        end$jscomp$0\n                      );\n                    if (\n                      startMarker &&\n                      endMarker &&\n                      (1 !== selection.rangeCount ||\n                        selection.anchorNode !== startMarker.node ||\n                        selection.anchorOffset !== startMarker.offset ||\n                        selection.focusNode !== endMarker.node ||\n                        selection.focusOffset !== endMarker.offset)\n                    ) {\n                      var range = doc.createRange();\n                      range.setStart(startMarker.node, startMarker.offset);\n                      selection.removeAllRanges();\n                      start$jscomp$0 > end$jscomp$0\n                        ? (selection.addRange(range),\n                          selection.extend(endMarker.node, endMarker.offset))\n                        : (range.setEnd(endMarker.node, endMarker.offset),\n                          selection.addRange(range));\n                    }\n                  }\n                }\n              }\n              doc = [];\n              for (\n                selection = priorFocusedElem;\n                (selection = selection.parentNode);\n\n              )\n                1 === selection.nodeType &&\n                  doc.push({\n                    element: selection,\n                    left: selection.scrollLeft,\n                    top: selection.scrollTop\n                  });\n              \"function\" === typeof priorFocusedElem.focus &&\n                priorFocusedElem.focus();\n              for (\n                priorFocusedElem = 0;\n                priorFocusedElem < doc.length;\n                priorFocusedElem++\n              ) {\n                var info = doc[priorFocusedElem];\n                info.element.scrollLeft = info.left;\n                info.element.scrollTop = info.top;\n              }\n            }\n            _enabled = !!eventsEnabled;\n            selectionInformation = eventsEnabled = null;\n          } finally {\n            (executionContext = prevExecutionContext),\n              (ReactDOMSharedInternals.p = previousPriority),\n              (ReactSharedInternals.T = rootMutationHasEffect);\n          }\n        }\n        root.current = finishedWork;\n        pendingEffectsStatus = PENDING_LAYOUT_PHASE;\n      }\n    }\n    function flushLayoutEffects() {\n      if (pendingEffectsStatus === PENDING_LAYOUT_PHASE) {\n        pendingEffectsStatus = NO_PENDING_EFFECTS;\n        var root = pendingEffectsRoot,\n          finishedWork = pendingFinishedWork,\n          lanes = pendingEffectsLanes,\n          rootHasLayoutEffect = 0 !== (finishedWork.flags & 8772);\n        if (0 !== (finishedWork.subtreeFlags & 8772) || rootHasLayoutEffect) {\n          rootHasLayoutEffect = ReactSharedInternals.T;\n          ReactSharedInternals.T = null;\n          var previousPriority = ReactDOMSharedInternals.p;\n          ReactDOMSharedInternals.p = DiscreteEventPriority;\n          var prevExecutionContext = executionContext;\n          executionContext |= CommitContext;\n          try {\n            null !== injectedProfilingHooks &&\n              \"function\" ===\n                typeof injectedProfilingHooks.markLayoutEffectsStarted &&\n              injectedProfilingHooks.markLayoutEffectsStarted(lanes),\n              (inProgressLanes = lanes),\n              (inProgressRoot = root),\n              commitLayoutEffectOnFiber(\n                root,\n                finishedWork.alternate,\n                finishedWork\n              ),\n              (inProgressRoot = inProgressLanes = null),\n              null !== injectedProfilingHooks &&\n                \"function\" ===\n                  typeof injectedProfilingHooks.markLayoutEffectsStopped &&\n                injectedProfilingHooks.markLayoutEffectsStopped();\n          } finally {\n            (executionContext = prevExecutionContext),\n              (ReactDOMSharedInternals.p = previousPriority),\n              (ReactSharedInternals.T = rootHasLayoutEffect);\n          }\n        }\n        pendingEffectsStatus = PENDING_AFTER_MUTATION_PHASE;\n      }\n    }\n    function flushSpawnedWork() {\n      if (\n        pendingEffectsStatus === PENDING_SPAWNED_WORK ||\n        pendingEffectsStatus === PENDING_AFTER_MUTATION_PHASE\n      ) {\n        pendingEffectsStatus = NO_PENDING_EFFECTS;\n        requestPaint();\n        var root = pendingEffectsRoot,\n          finishedWork = pendingFinishedWork,\n          lanes = pendingEffectsLanes,\n          recoverableErrors = pendingRecoverableErrors,\n          rootDidHavePassiveEffects =\n            0 !== (finishedWork.subtreeFlags & 10256) ||\n            0 !== (finishedWork.flags & 10256);\n        rootDidHavePassiveEffects\n          ? (pendingEffectsStatus = PENDING_PASSIVE_PHASE)\n          : ((pendingEffectsStatus = NO_PENDING_EFFECTS),\n            (pendingFinishedWork = pendingEffectsRoot = null),\n            releaseRootPooledCache(root, root.pendingLanes),\n            (nestedPassiveUpdateCount = 0),\n            (rootWithPassiveNestedUpdates = null));\n        var remainingLanes = root.pendingLanes;\n        0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);\n        rootDidHavePassiveEffects || commitDoubleInvokeEffectsInDEV(root);\n        rootDidHavePassiveEffects = lanesToEventPriority(lanes);\n        finishedWork = finishedWork.stateNode;\n        if (\n          injectedHook &&\n          \"function\" === typeof injectedHook.onCommitFiberRoot\n        )\n          try {\n            var didError = 128 === (finishedWork.current.flags & 128);\n            switch (rootDidHavePassiveEffects) {\n              case DiscreteEventPriority:\n                var schedulerPriority = ImmediatePriority;\n                break;\n              case ContinuousEventPriority:\n                schedulerPriority = UserBlockingPriority;\n                break;\n              case DefaultEventPriority:\n                schedulerPriority = NormalPriority$1;\n                break;\n              case IdleEventPriority:\n                schedulerPriority = IdlePriority;\n                break;\n              default:\n                schedulerPriority = NormalPriority$1;\n            }\n            injectedHook.onCommitFiberRoot(\n              rendererID,\n              finishedWork,\n              schedulerPriority,\n              didError\n            );\n          } catch (err) {\n            hasLoggedError ||\n              ((hasLoggedError = !0),\n              console.error(\n                \"React instrumentation encountered an error: %s\",\n                err\n              ));\n          }\n        isDevToolsPresent && root.memoizedUpdaters.clear();\n        onCommitRoot();\n        if (null !== recoverableErrors) {\n          didError = ReactSharedInternals.T;\n          schedulerPriority = ReactDOMSharedInternals.p;\n          ReactDOMSharedInternals.p = DiscreteEventPriority;\n          ReactSharedInternals.T = null;\n          try {\n            var onRecoverableError = root.onRecoverableError;\n            for (\n              finishedWork = 0;\n              finishedWork < recoverableErrors.length;\n              finishedWork++\n            ) {\n              var recoverableError = recoverableErrors[finishedWork],\n                errorInfo = makeErrorInfo(recoverableError.stack);\n              runWithFiberInDEV(\n                recoverableError.source,\n                onRecoverableError,\n                recoverableError.value,\n                errorInfo\n              );\n            }\n          } finally {\n            (ReactSharedInternals.T = didError),\n              (ReactDOMSharedInternals.p = schedulerPriority);\n          }\n        }\n        0 !== (pendingEffectsLanes & 3) && flushPendingEffects();\n        ensureRootIsScheduled(root);\n        remainingLanes = root.pendingLanes;\n        0 !== (lanes & 4194090) && 0 !== (remainingLanes & 42)\n          ? ((nestedUpdateScheduled = !0),\n            root === rootWithNestedUpdates\n              ? nestedUpdateCount++\n              : ((nestedUpdateCount = 0), (rootWithNestedUpdates = root)))\n          : (nestedUpdateCount = 0);\n        flushSyncWorkAcrossRoots_impl(0, !1);\n        markCommitStopped();\n      }\n    }\n    function makeErrorInfo(componentStack) {\n      componentStack = { componentStack: componentStack };\n      Object.defineProperty(componentStack, \"digest\", {\n        get: function () {\n          console.error(\n            'You are accessing \"digest\" from the errorInfo object passed to onRecoverableError. This property is no longer provided as part of errorInfo but can be accessed as a property of the Error instance itself.'\n          );\n        }\n      });\n      return componentStack;\n    }\n    function releaseRootPooledCache(root, remainingLanes) {\n      0 === (root.pooledCacheLanes &= remainingLanes) &&\n        ((remainingLanes = root.pooledCache),\n        null != remainingLanes &&\n          ((root.pooledCache = null), releaseCache(remainingLanes)));\n    }\n    function flushPendingEffects(wasDelayedCommit) {\n      flushMutationEffects();\n      flushLayoutEffects();\n      flushSpawnedWork();\n      return flushPassiveEffects(wasDelayedCommit);\n    }\n    function flushPassiveEffects() {\n      if (pendingEffectsStatus !== PENDING_PASSIVE_PHASE) return !1;\n      var root = pendingEffectsRoot,\n        remainingLanes = pendingEffectsRemainingLanes;\n      pendingEffectsRemainingLanes = 0;\n      var renderPriority = lanesToEventPriority(pendingEffectsLanes),\n        priority =\n          0 === DefaultEventPriority || DefaultEventPriority > renderPriority\n            ? DefaultEventPriority\n            : renderPriority;\n      renderPriority = ReactSharedInternals.T;\n      var previousPriority = ReactDOMSharedInternals.p;\n      try {\n        ReactDOMSharedInternals.p = priority;\n        ReactSharedInternals.T = null;\n        priority = pendingPassiveTransitions;\n        pendingPassiveTransitions = null;\n        var root$jscomp$0 = pendingEffectsRoot,\n          lanes = pendingEffectsLanes;\n        pendingEffectsStatus = NO_PENDING_EFFECTS;\n        pendingFinishedWork = pendingEffectsRoot = null;\n        pendingEffectsLanes = 0;\n        if ((executionContext & (RenderContext | CommitContext)) !== NoContext)\n          throw Error(\"Cannot flush passive effects while already rendering.\");\n        isFlushingPassiveEffects = !0;\n        didScheduleUpdateDuringPassiveEffects = !1;\n        null !== injectedProfilingHooks &&\n          \"function\" ===\n            typeof injectedProfilingHooks.markPassiveEffectsStarted &&\n          injectedProfilingHooks.markPassiveEffectsStarted(lanes);\n        var prevExecutionContext = executionContext;\n        executionContext |= CommitContext;\n        commitPassiveUnmountOnFiber(root$jscomp$0.current);\n        commitPassiveMountOnFiber(\n          root$jscomp$0,\n          root$jscomp$0.current,\n          lanes,\n          priority\n        );\n        null !== injectedProfilingHooks &&\n          \"function\" ===\n            typeof injectedProfilingHooks.markPassiveEffectsStopped &&\n          injectedProfilingHooks.markPassiveEffectsStopped();\n        commitDoubleInvokeEffectsInDEV(root$jscomp$0);\n        executionContext = prevExecutionContext;\n        flushSyncWorkAcrossRoots_impl(0, !1);\n        didScheduleUpdateDuringPassiveEffects\n          ? root$jscomp$0 === rootWithPassiveNestedUpdates\n            ? nestedPassiveUpdateCount++\n            : ((nestedPassiveUpdateCount = 0),\n              (rootWithPassiveNestedUpdates = root$jscomp$0))\n          : (nestedPassiveUpdateCount = 0);\n        didScheduleUpdateDuringPassiveEffects = isFlushingPassiveEffects = !1;\n        if (\n          injectedHook &&\n          \"function\" === typeof injectedHook.onPostCommitFiberRoot\n        )\n          try {\n            injectedHook.onPostCommitFiberRoot(rendererID, root$jscomp$0);\n          } catch (err) {\n            hasLoggedError ||\n              ((hasLoggedError = !0),\n              console.error(\n                \"React instrumentation encountered an error: %s\",\n                err\n              ));\n          }\n        var stateNode = root$jscomp$0.current.stateNode;\n        stateNode.effectDuration = 0;\n        stateNode.passiveEffectDuration = 0;\n        return !0;\n      } finally {\n        (ReactDOMSharedInternals.p = previousPriority),\n          (ReactSharedInternals.T = renderPriority),\n          releaseRootPooledCache(root, remainingLanes);\n      }\n    }\n    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n      sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n      sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);\n      rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);\n      null !== rootFiber &&\n        (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));\n    }\n    function captureCommitPhaseError(\n      sourceFiber,\n      nearestMountedAncestor,\n      error\n    ) {\n      isRunningInsertionEffect = !1;\n      if (3 === sourceFiber.tag)\n        captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n      else {\n        for (; null !== nearestMountedAncestor; ) {\n          if (3 === nearestMountedAncestor.tag) {\n            captureCommitPhaseErrorOnRoot(\n              nearestMountedAncestor,\n              sourceFiber,\n              error\n            );\n            return;\n          }\n          if (1 === nearestMountedAncestor.tag) {\n            var instance = nearestMountedAncestor.stateNode;\n            if (\n              \"function\" ===\n                typeof nearestMountedAncestor.type.getDerivedStateFromError ||\n              (\"function\" === typeof instance.componentDidCatch &&\n                (null === legacyErrorBoundariesThatAlreadyFailed ||\n                  !legacyErrorBoundariesThatAlreadyFailed.has(instance)))\n            ) {\n              sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n              error = createClassErrorUpdate(2);\n              instance = enqueueUpdate(nearestMountedAncestor, error, 2);\n              null !== instance &&\n                (initializeClassErrorUpdate(\n                  error,\n                  instance,\n                  nearestMountedAncestor,\n                  sourceFiber\n                ),\n                markRootUpdated$1(instance, 2),\n                ensureRootIsScheduled(instance));\n              return;\n            }\n          }\n          nearestMountedAncestor = nearestMountedAncestor.return;\n        }\n        console.error(\n          \"Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Potential causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\\n\\nError message:\\n\\n%s\",\n          error\n        );\n      }\n    }\n    function attachPingListener(root, wakeable, lanes) {\n      var pingCache = root.pingCache;\n      if (null === pingCache) {\n        pingCache = root.pingCache = new PossiblyWeakMap();\n        var threadIDs = new Set();\n        pingCache.set(wakeable, threadIDs);\n      } else\n        (threadIDs = pingCache.get(wakeable)),\n          void 0 === threadIDs &&\n            ((threadIDs = new Set()), pingCache.set(wakeable, threadIDs));\n      threadIDs.has(lanes) ||\n        ((workInProgressRootDidAttachPingListener = !0),\n        threadIDs.add(lanes),\n        (pingCache = pingSuspendedRoot.bind(null, root, wakeable, lanes)),\n        isDevToolsPresent && restorePendingUpdaters(root, lanes),\n        wakeable.then(pingCache, pingCache));\n    }\n    function pingSuspendedRoot(root, wakeable, pingedLanes) {\n      var pingCache = root.pingCache;\n      null !== pingCache && pingCache.delete(wakeable);\n      root.pingedLanes |= root.suspendedLanes & pingedLanes;\n      root.warmLanes &= ~pingedLanes;\n      isConcurrentActEnvironment() &&\n        null === ReactSharedInternals.actQueue &&\n        console.error(\n          \"A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\\n\\nWhen testing, code that resolves suspended data should be wrapped into act(...):\\n\\nact(() => {\\n  /* finish loading suspended data */\\n});\\n/* assert on the output */\\n\\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act\"\n        );\n      workInProgressRoot === root &&\n        (workInProgressRootRenderLanes & pingedLanes) === pingedLanes &&\n        (workInProgressRootExitStatus === RootSuspendedWithDelay ||\n        (workInProgressRootExitStatus === RootSuspended &&\n          (workInProgressRootRenderLanes & 62914560) ===\n            workInProgressRootRenderLanes &&\n          now$1() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS)\n          ? (executionContext & RenderContext) === NoContext &&\n            prepareFreshStack(root, 0)\n          : (workInProgressRootPingedLanes |= pingedLanes),\n        workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes &&\n          (workInProgressSuspendedRetryLanes = 0));\n      ensureRootIsScheduled(root);\n    }\n    function retryTimedOutBoundary(boundaryFiber, retryLane) {\n      0 === retryLane && (retryLane = claimNextRetryLane());\n      boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n      null !== boundaryFiber &&\n        (markRootUpdated$1(boundaryFiber, retryLane),\n        ensureRootIsScheduled(boundaryFiber));\n    }\n    function retryDehydratedSuspenseBoundary(boundaryFiber) {\n      var suspenseState = boundaryFiber.memoizedState,\n        retryLane = 0;\n      null !== suspenseState && (retryLane = suspenseState.retryLane);\n      retryTimedOutBoundary(boundaryFiber, retryLane);\n    }\n    function resolveRetryWakeable(boundaryFiber, wakeable) {\n      var retryLane = 0;\n      switch (boundaryFiber.tag) {\n        case 13:\n          var retryCache = boundaryFiber.stateNode;\n          var suspenseState = boundaryFiber.memoizedState;\n          null !== suspenseState && (retryLane = suspenseState.retryLane);\n          break;\n        case 19:\n          retryCache = boundaryFiber.stateNode;\n          break;\n        case 22:\n          retryCache = boundaryFiber.stateNode._retryCache;\n          break;\n        default:\n          throw Error(\n            \"Pinged unknown suspense boundary type. This is probably a bug in React.\"\n          );\n      }\n      null !== retryCache && retryCache.delete(wakeable);\n      retryTimedOutBoundary(boundaryFiber, retryLane);\n    }\n    function recursivelyTraverseAndDoubleInvokeEffectsInDEV(\n      root$jscomp$0,\n      parentFiber,\n      isInStrictMode\n    ) {\n      if (0 !== (parentFiber.subtreeFlags & 67117056))\n        for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n          var root = root$jscomp$0,\n            fiber = parentFiber,\n            isStrictModeFiber = fiber.type === REACT_STRICT_MODE_TYPE;\n          isStrictModeFiber = isInStrictMode || isStrictModeFiber;\n          22 !== fiber.tag\n            ? fiber.flags & 67108864\n              ? isStrictModeFiber &&\n                runWithFiberInDEV(\n                  fiber,\n                  doubleInvokeEffectsOnFiber,\n                  root,\n                  fiber,\n                  (fiber.mode & NoStrictPassiveEffectsMode) === NoMode\n                )\n              : recursivelyTraverseAndDoubleInvokeEffectsInDEV(\n                  root,\n                  fiber,\n                  isStrictModeFiber\n                )\n            : null === fiber.memoizedState &&\n              (isStrictModeFiber && fiber.flags & 8192\n                ? runWithFiberInDEV(\n                    fiber,\n                    doubleInvokeEffectsOnFiber,\n                    root,\n                    fiber\n                  )\n                : fiber.subtreeFlags & 67108864 &&\n                  runWithFiberInDEV(\n                    fiber,\n                    recursivelyTraverseAndDoubleInvokeEffectsInDEV,\n                    root,\n                    fiber,\n                    isStrictModeFiber\n                  ));\n          parentFiber = parentFiber.sibling;\n        }\n    }\n    function doubleInvokeEffectsOnFiber(root, fiber) {\n      var shouldDoubleInvokePassiveEffects =\n        2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : !0;\n      setIsStrictModeForDevtools(!0);\n      try {\n        disappearLayoutEffects(fiber),\n          shouldDoubleInvokePassiveEffects && disconnectPassiveEffect(fiber),\n          reappearLayoutEffects(root, fiber.alternate, fiber, !1),\n          shouldDoubleInvokePassiveEffects &&\n            reconnectPassiveEffects(root, fiber, 0, null, !1, 0);\n      } finally {\n        setIsStrictModeForDevtools(!1);\n      }\n    }\n    function commitDoubleInvokeEffectsInDEV(root) {\n      var doubleInvokeEffects = !0;\n      root.current.mode & (StrictLegacyMode | StrictEffectsMode) ||\n        (doubleInvokeEffects = !1);\n      recursivelyTraverseAndDoubleInvokeEffectsInDEV(\n        root,\n        root.current,\n        doubleInvokeEffects\n      );\n    }\n    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\n      if ((executionContext & RenderContext) === NoContext) {\n        var tag = fiber.tag;\n        if (\n          3 === tag ||\n          1 === tag ||\n          0 === tag ||\n          11 === tag ||\n          14 === tag ||\n          15 === tag\n        ) {\n          tag = getComponentNameFromFiber(fiber) || \"ReactComponent\";\n          if (null !== didWarnStateUpdateForNotYetMountedComponent) {\n            if (didWarnStateUpdateForNotYetMountedComponent.has(tag)) return;\n            didWarnStateUpdateForNotYetMountedComponent.add(tag);\n          } else didWarnStateUpdateForNotYetMountedComponent = new Set([tag]);\n          runWithFiberInDEV(fiber, function () {\n            console.error(\n              \"Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.\"\n            );\n          });\n        }\n      }\n    }\n    function restorePendingUpdaters(root, lanes) {\n      isDevToolsPresent &&\n        root.memoizedUpdaters.forEach(function (schedulingFiber) {\n          addFiberToLanesMap(root, schedulingFiber, lanes);\n        });\n    }\n    function scheduleCallback$1(priorityLevel, callback) {\n      var actQueue = ReactSharedInternals.actQueue;\n      return null !== actQueue\n        ? (actQueue.push(callback), fakeActCallbackNode$1)\n        : scheduleCallback$3(priorityLevel, callback);\n    }\n    function warnIfUpdatesNotWrappedWithActDEV(fiber) {\n      isConcurrentActEnvironment() &&\n        null === ReactSharedInternals.actQueue &&\n        runWithFiberInDEV(fiber, function () {\n          console.error(\n            \"An update to %s inside a test was not wrapped in act(...).\\n\\nWhen testing, code that causes React state updates should be wrapped into act(...):\\n\\nact(() => {\\n  /* fire events that update state */\\n});\\n/* assert on the output */\\n\\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act\",\n            getComponentNameFromFiber(fiber)\n          );\n        });\n    }\n    function ensureRootIsScheduled(root) {\n      root !== lastScheduledRoot &&\n        null === root.next &&\n        (null === lastScheduledRoot\n          ? (firstScheduledRoot = lastScheduledRoot = root)\n          : (lastScheduledRoot = lastScheduledRoot.next = root));\n      mightHavePendingSyncWork = !0;\n      null !== ReactSharedInternals.actQueue\n        ? didScheduleMicrotask_act ||\n          ((didScheduleMicrotask_act = !0), scheduleImmediateRootScheduleTask())\n        : didScheduleMicrotask ||\n          ((didScheduleMicrotask = !0), scheduleImmediateRootScheduleTask());\n    }\n    function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {\n      if (!isFlushingWork && mightHavePendingSyncWork) {\n        isFlushingWork = !0;\n        do {\n          var didPerformSomeWork = !1;\n          for (var root = firstScheduledRoot; null !== root; ) {\n            if (!onlyLegacy)\n              if (0 !== syncTransitionLanes) {\n                var pendingLanes = root.pendingLanes;\n                if (0 === pendingLanes) var nextLanes = 0;\n                else {\n                  var suspendedLanes = root.suspendedLanes,\n                    pingedLanes = root.pingedLanes;\n                  nextLanes =\n                    (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;\n                  nextLanes &= pendingLanes & ~(suspendedLanes & ~pingedLanes);\n                  nextLanes =\n                    nextLanes & 201326741\n                      ? (nextLanes & 201326741) | 1\n                      : nextLanes\n                        ? nextLanes | 2\n                        : 0;\n                }\n                0 !== nextLanes &&\n                  ((didPerformSomeWork = !0),\n                  performSyncWorkOnRoot(root, nextLanes));\n              } else\n                (nextLanes = workInProgressRootRenderLanes),\n                  (nextLanes = getNextLanes(\n                    root,\n                    root === workInProgressRoot ? nextLanes : 0,\n                    null !== root.cancelPendingCommit ||\n                      root.timeoutHandle !== noTimeout\n                  )),\n                  0 === (nextLanes & 3) ||\n                    checkIfRootIsPrerendering(root, nextLanes) ||\n                    ((didPerformSomeWork = !0),\n                    performSyncWorkOnRoot(root, nextLanes));\n            root = root.next;\n          }\n        } while (didPerformSomeWork);\n        isFlushingWork = !1;\n      }\n    }\n    function processRootScheduleInImmediateTask() {\n      processRootScheduleInMicrotask();\n    }\n    function processRootScheduleInMicrotask() {\n      mightHavePendingSyncWork =\n        didScheduleMicrotask_act =\n        didScheduleMicrotask =\n          !1;\n      var syncTransitionLanes = 0;\n      0 !== currentEventTransitionLane &&\n        (shouldAttemptEagerTransition() &&\n          (syncTransitionLanes = currentEventTransitionLane),\n        (currentEventTransitionLane = 0));\n      for (\n        var currentTime = now$1(), prev = null, root = firstScheduledRoot;\n        null !== root;\n\n      ) {\n        var next = root.next,\n          nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);\n        if (0 === nextLanes)\n          (root.next = null),\n            null === prev ? (firstScheduledRoot = next) : (prev.next = next),\n            null === next && (lastScheduledRoot = prev);\n        else if (\n          ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))\n        )\n          mightHavePendingSyncWork = !0;\n        root = next;\n      }\n      flushSyncWorkAcrossRoots_impl(syncTransitionLanes, !1);\n    }\n    function scheduleTaskForRootDuringMicrotask(root, currentTime) {\n      for (\n        var suspendedLanes = root.suspendedLanes,\n          pingedLanes = root.pingedLanes,\n          expirationTimes = root.expirationTimes,\n          lanes = root.pendingLanes & -62914561;\n        0 < lanes;\n\n      ) {\n        var index = 31 - clz32(lanes),\n          lane = 1 << index,\n          expirationTime = expirationTimes[index];\n        if (-1 === expirationTime) {\n          if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes))\n            expirationTimes[index] = computeExpirationTime(lane, currentTime);\n        } else expirationTime <= currentTime && (root.expiredLanes |= lane);\n        lanes &= ~lane;\n      }\n      currentTime = workInProgressRoot;\n      suspendedLanes = workInProgressRootRenderLanes;\n      suspendedLanes = getNextLanes(\n        root,\n        root === currentTime ? suspendedLanes : 0,\n        null !== root.cancelPendingCommit || root.timeoutHandle !== noTimeout\n      );\n      pingedLanes = root.callbackNode;\n      if (\n        0 === suspendedLanes ||\n        (root === currentTime &&\n          (workInProgressSuspendedReason === SuspendedOnData ||\n            workInProgressSuspendedReason === SuspendedOnAction)) ||\n        null !== root.cancelPendingCommit\n      )\n        return (\n          null !== pingedLanes && cancelCallback(pingedLanes),\n          (root.callbackNode = null),\n          (root.callbackPriority = 0)\n        );\n      if (\n        0 === (suspendedLanes & 3) ||\n        checkIfRootIsPrerendering(root, suspendedLanes)\n      ) {\n        currentTime = suspendedLanes & -suspendedLanes;\n        if (\n          currentTime !== root.callbackPriority ||\n          (null !== ReactSharedInternals.actQueue &&\n            pingedLanes !== fakeActCallbackNode)\n        )\n          cancelCallback(pingedLanes);\n        else return currentTime;\n        switch (lanesToEventPriority(suspendedLanes)) {\n          case DiscreteEventPriority:\n          case ContinuousEventPriority:\n            suspendedLanes = UserBlockingPriority;\n            break;\n          case DefaultEventPriority:\n            suspendedLanes = NormalPriority$1;\n            break;\n          case IdleEventPriority:\n            suspendedLanes = IdlePriority;\n            break;\n          default:\n            suspendedLanes = NormalPriority$1;\n        }\n        pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);\n        null !== ReactSharedInternals.actQueue\n          ? (ReactSharedInternals.actQueue.push(pingedLanes),\n            (suspendedLanes = fakeActCallbackNode))\n          : (suspendedLanes = scheduleCallback$3(suspendedLanes, pingedLanes));\n        root.callbackPriority = currentTime;\n        root.callbackNode = suspendedLanes;\n        return currentTime;\n      }\n      null !== pingedLanes && cancelCallback(pingedLanes);\n      root.callbackPriority = 2;\n      root.callbackNode = null;\n      return 2;\n    }\n    function performWorkOnRootViaSchedulerTask(root, didTimeout) {\n      nestedUpdateScheduled = currentUpdateIsNested = !1;\n      if (\n        pendingEffectsStatus !== NO_PENDING_EFFECTS &&\n        pendingEffectsStatus !== PENDING_PASSIVE_PHASE\n      )\n        return (root.callbackNode = null), (root.callbackPriority = 0), null;\n      var originalCallbackNode = root.callbackNode;\n      if (flushPendingEffects(!0) && root.callbackNode !== originalCallbackNode)\n        return null;\n      var workInProgressRootRenderLanes$jscomp$0 =\n        workInProgressRootRenderLanes;\n      workInProgressRootRenderLanes$jscomp$0 = getNextLanes(\n        root,\n        root === workInProgressRoot\n          ? workInProgressRootRenderLanes$jscomp$0\n          : 0,\n        null !== root.cancelPendingCommit || root.timeoutHandle !== noTimeout\n      );\n      if (0 === workInProgressRootRenderLanes$jscomp$0) return null;\n      performWorkOnRoot(\n        root,\n        workInProgressRootRenderLanes$jscomp$0,\n        didTimeout\n      );\n      scheduleTaskForRootDuringMicrotask(root, now$1());\n      return null != root.callbackNode &&\n        root.callbackNode === originalCallbackNode\n        ? performWorkOnRootViaSchedulerTask.bind(null, root)\n        : null;\n    }\n    function performSyncWorkOnRoot(root, lanes) {\n      if (flushPendingEffects()) return null;\n      currentUpdateIsNested = nestedUpdateScheduled;\n      nestedUpdateScheduled = !1;\n      performWorkOnRoot(root, lanes, !0);\n    }\n    function cancelCallback(callbackNode) {\n      callbackNode !== fakeActCallbackNode &&\n        null !== callbackNode &&\n        cancelCallback$1(callbackNode);\n    }\n    function scheduleImmediateRootScheduleTask() {\n      null !== ReactSharedInternals.actQueue &&\n        ReactSharedInternals.actQueue.push(function () {\n          processRootScheduleInMicrotask();\n          return null;\n        });\n      scheduleMicrotask(function () {\n        (executionContext & (RenderContext | CommitContext)) !== NoContext\n          ? scheduleCallback$3(\n              ImmediatePriority,\n              processRootScheduleInImmediateTask\n            )\n          : processRootScheduleInMicrotask();\n      });\n    }\n    function requestTransitionLane() {\n      0 === currentEventTransitionLane &&\n        (currentEventTransitionLane = claimNextTransitionLane());\n      return currentEventTransitionLane;\n    }\n    function coerceFormActionProp(actionProp) {\n      if (\n        null == actionProp ||\n        \"symbol\" === typeof actionProp ||\n        \"boolean\" === typeof actionProp\n      )\n        return null;\n      if (\"function\" === typeof actionProp) return actionProp;\n      checkAttributeStringCoercion(actionProp, \"action\");\n      return sanitizeURL(\"\" + actionProp);\n    }\n    function createFormDataWithSubmitter(form, submitter) {\n      var temp = submitter.ownerDocument.createElement(\"input\");\n      temp.name = submitter.name;\n      temp.value = submitter.value;\n      form.id && temp.setAttribute(\"form\", form.id);\n      submitter.parentNode.insertBefore(temp, submitter);\n      form = new FormData(form);\n      temp.parentNode.removeChild(temp);\n      return form;\n    }\n    function extractEvents$1(\n      dispatchQueue,\n      domEventName,\n      maybeTargetInst,\n      nativeEvent,\n      nativeEventTarget\n    ) {\n      if (\n        \"submit\" === domEventName &&\n        maybeTargetInst &&\n        maybeTargetInst.stateNode === nativeEventTarget\n      ) {\n        var action = coerceFormActionProp(\n            (nativeEventTarget[internalPropsKey] || null).action\n          ),\n          submitter = nativeEvent.submitter;\n        submitter &&\n          ((domEventName = (domEventName = submitter[internalPropsKey] || null)\n            ? coerceFormActionProp(domEventName.formAction)\n            : submitter.getAttribute(\"formAction\")),\n          null !== domEventName &&\n            ((action = domEventName), (submitter = null)));\n        var event = new SyntheticEvent(\n          \"action\",\n          \"action\",\n          null,\n          nativeEvent,\n          nativeEventTarget\n        );\n        dispatchQueue.push({\n          event: event,\n          listeners: [\n            {\n              instance: null,\n              listener: function () {\n                if (nativeEvent.defaultPrevented) {\n                  if (0 !== currentEventTransitionLane) {\n                    var formData = submitter\n                        ? createFormDataWithSubmitter(\n                            nativeEventTarget,\n                            submitter\n                          )\n                        : new FormData(nativeEventTarget),\n                      pendingState = {\n                        pending: !0,\n                        data: formData,\n                        method: nativeEventTarget.method,\n                        action: action\n                      };\n                    Object.freeze(pendingState);\n                    startHostTransition(\n                      maybeTargetInst,\n                      pendingState,\n                      null,\n                      formData\n                    );\n                  }\n                } else\n                  \"function\" === typeof action &&\n                    (event.preventDefault(),\n                    (formData = submitter\n                      ? createFormDataWithSubmitter(\n                          nativeEventTarget,\n                          submitter\n                        )\n                      : new FormData(nativeEventTarget)),\n                    (pendingState = {\n                      pending: !0,\n                      data: formData,\n                      method: nativeEventTarget.method,\n                      action: action\n                    }),\n                    Object.freeze(pendingState),\n                    startHostTransition(\n                      maybeTargetInst,\n                      pendingState,\n                      action,\n                      formData\n                    ));\n              },\n              currentTarget: nativeEventTarget\n            }\n          ]\n        });\n      }\n    }\n    function executeDispatch(event, listener, currentTarget) {\n      event.currentTarget = currentTarget;\n      try {\n        listener(event);\n      } catch (error) {\n        reportGlobalError(error);\n      }\n      event.currentTarget = null;\n    }\n    function processDispatchQueue(dispatchQueue, eventSystemFlags) {\n      eventSystemFlags = 0 !== (eventSystemFlags & 4);\n      for (var i = 0; i < dispatchQueue.length; i++) {\n        var _dispatchQueue$i = dispatchQueue[i];\n        a: {\n          var previousInstance = void 0,\n            event = _dispatchQueue$i.event;\n          _dispatchQueue$i = _dispatchQueue$i.listeners;\n          if (eventSystemFlags)\n            for (\n              var i$jscomp$0 = _dispatchQueue$i.length - 1;\n              0 <= i$jscomp$0;\n              i$jscomp$0--\n            ) {\n              var _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0],\n                instance = _dispatchListeners$i.instance,\n                currentTarget = _dispatchListeners$i.currentTarget;\n              _dispatchListeners$i = _dispatchListeners$i.listener;\n              if (instance !== previousInstance && event.isPropagationStopped())\n                break a;\n              null !== instance\n                ? runWithFiberInDEV(\n                    instance,\n                    executeDispatch,\n                    event,\n                    _dispatchListeners$i,\n                    currentTarget\n                  )\n                : executeDispatch(event, _dispatchListeners$i, currentTarget);\n              previousInstance = instance;\n            }\n          else\n            for (\n              i$jscomp$0 = 0;\n              i$jscomp$0 < _dispatchQueue$i.length;\n              i$jscomp$0++\n            ) {\n              _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0];\n              instance = _dispatchListeners$i.instance;\n              currentTarget = _dispatchListeners$i.currentTarget;\n              _dispatchListeners$i = _dispatchListeners$i.listener;\n              if (instance !== previousInstance && event.isPropagationStopped())\n                break a;\n              null !== instance\n                ? runWithFiberInDEV(\n                    instance,\n                    executeDispatch,\n                    event,\n                    _dispatchListeners$i,\n                    currentTarget\n                  )\n                : executeDispatch(event, _dispatchListeners$i, currentTarget);\n              previousInstance = instance;\n            }\n        }\n      }\n    }\n    function listenToNonDelegatedEvent(domEventName, targetElement) {\n      nonDelegatedEvents.has(domEventName) ||\n        console.error(\n          'Did not expect a listenToNonDelegatedEvent() call for \"%s\". This is a bug in React. Please file an issue.',\n          domEventName\n        );\n      var listenerSet = targetElement[internalEventHandlersKey];\n      void 0 === listenerSet &&\n        (listenerSet = targetElement[internalEventHandlersKey] = new Set());\n      var listenerSetKey = domEventName + \"__bubble\";\n      listenerSet.has(listenerSetKey) ||\n        (addTrappedEventListener(targetElement, domEventName, 2, !1),\n        listenerSet.add(listenerSetKey));\n    }\n    function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {\n      nonDelegatedEvents.has(domEventName) &&\n        !isCapturePhaseListener &&\n        console.error(\n          'Did not expect a listenToNativeEvent() call for \"%s\" in the bubble phase. This is a bug in React. Please file an issue.',\n          domEventName\n        );\n      var eventSystemFlags = 0;\n      isCapturePhaseListener && (eventSystemFlags |= 4);\n      addTrappedEventListener(\n        target,\n        domEventName,\n        eventSystemFlags,\n        isCapturePhaseListener\n      );\n    }\n    function listenToAllSupportedEvents(rootContainerElement) {\n      if (!rootContainerElement[listeningMarker]) {\n        rootContainerElement[listeningMarker] = !0;\n        allNativeEvents.forEach(function (domEventName) {\n          \"selectionchange\" !== domEventName &&\n            (nonDelegatedEvents.has(domEventName) ||\n              listenToNativeEvent(domEventName, !1, rootContainerElement),\n            listenToNativeEvent(domEventName, !0, rootContainerElement));\n        });\n        var ownerDocument =\n          9 === rootContainerElement.nodeType\n            ? rootContainerElement\n            : rootContainerElement.ownerDocument;\n        null === ownerDocument ||\n          ownerDocument[listeningMarker] ||\n          ((ownerDocument[listeningMarker] = !0),\n          listenToNativeEvent(\"selectionchange\", !1, ownerDocument));\n      }\n    }\n    function addTrappedEventListener(\n      targetContainer,\n      domEventName,\n      eventSystemFlags,\n      isCapturePhaseListener\n    ) {\n      switch (getEventPriority(domEventName)) {\n        case DiscreteEventPriority:\n          var listenerWrapper = dispatchDiscreteEvent;\n          break;\n        case ContinuousEventPriority:\n          listenerWrapper = dispatchContinuousEvent;\n          break;\n        default:\n          listenerWrapper = dispatchEvent;\n      }\n      eventSystemFlags = listenerWrapper.bind(\n        null,\n        domEventName,\n        eventSystemFlags,\n        targetContainer\n      );\n      listenerWrapper = void 0;\n      !passiveBrowserEventsSupported ||\n        (\"touchstart\" !== domEventName &&\n          \"touchmove\" !== domEventName &&\n          \"wheel\" !== domEventName) ||\n        (listenerWrapper = !0);\n      isCapturePhaseListener\n        ? void 0 !== listenerWrapper\n          ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n              capture: !0,\n              passive: listenerWrapper\n            })\n          : targetContainer.addEventListener(domEventName, eventSystemFlags, !0)\n        : void 0 !== listenerWrapper\n          ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n              passive: listenerWrapper\n            })\n          : targetContainer.addEventListener(\n              domEventName,\n              eventSystemFlags,\n              !1\n            );\n    }\n    function dispatchEventForPluginEventSystem(\n      domEventName,\n      eventSystemFlags,\n      nativeEvent,\n      targetInst$jscomp$0,\n      targetContainer\n    ) {\n      var ancestorInst = targetInst$jscomp$0;\n      if (\n        0 === (eventSystemFlags & 1) &&\n        0 === (eventSystemFlags & 2) &&\n        null !== targetInst$jscomp$0\n      )\n        a: for (;;) {\n          if (null === targetInst$jscomp$0) return;\n          var nodeTag = targetInst$jscomp$0.tag;\n          if (3 === nodeTag || 4 === nodeTag) {\n            var container = targetInst$jscomp$0.stateNode.containerInfo;\n            if (container === targetContainer) break;\n            if (4 === nodeTag)\n              for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {\n                var grandTag = nodeTag.tag;\n                if (\n                  (3 === grandTag || 4 === grandTag) &&\n                  nodeTag.stateNode.containerInfo === targetContainer\n                )\n                  return;\n                nodeTag = nodeTag.return;\n              }\n            for (; null !== container; ) {\n              nodeTag = getClosestInstanceFromNode(container);\n              if (null === nodeTag) return;\n              grandTag = nodeTag.tag;\n              if (\n                5 === grandTag ||\n                6 === grandTag ||\n                26 === grandTag ||\n                27 === grandTag\n              ) {\n                targetInst$jscomp$0 = ancestorInst = nodeTag;\n                continue a;\n              }\n              container = container.parentNode;\n            }\n          }\n          targetInst$jscomp$0 = targetInst$jscomp$0.return;\n        }\n      batchedUpdates$1(function () {\n        var targetInst = ancestorInst,\n          nativeEventTarget = getEventTarget(nativeEvent),\n          dispatchQueue = [];\n        a: {\n          var reactName = topLevelEventsToReactNames.get(domEventName);\n          if (void 0 !== reactName) {\n            var SyntheticEventCtor = SyntheticEvent,\n              reactEventType = domEventName;\n            switch (domEventName) {\n              case \"keypress\":\n                if (0 === getEventCharCode(nativeEvent)) break a;\n              case \"keydown\":\n              case \"keyup\":\n                SyntheticEventCtor = SyntheticKeyboardEvent;\n                break;\n              case \"focusin\":\n                reactEventType = \"focus\";\n                SyntheticEventCtor = SyntheticFocusEvent;\n                break;\n              case \"focusout\":\n                reactEventType = \"blur\";\n                SyntheticEventCtor = SyntheticFocusEvent;\n                break;\n              case \"beforeblur\":\n              case \"afterblur\":\n                SyntheticEventCtor = SyntheticFocusEvent;\n                break;\n              case \"click\":\n                if (2 === nativeEvent.button) break a;\n              case \"auxclick\":\n              case \"dblclick\":\n              case \"mousedown\":\n              case \"mousemove\":\n              case \"mouseup\":\n              case \"mouseout\":\n              case \"mouseover\":\n              case \"contextmenu\":\n                SyntheticEventCtor = SyntheticMouseEvent;\n                break;\n              case \"drag\":\n              case \"dragend\":\n              case \"dragenter\":\n              case \"dragexit\":\n              case \"dragleave\":\n              case \"dragover\":\n              case \"dragstart\":\n              case \"drop\":\n                SyntheticEventCtor = SyntheticDragEvent;\n                break;\n              case \"touchcancel\":\n              case \"touchend\":\n              case \"touchmove\":\n              case \"touchstart\":\n                SyntheticEventCtor = SyntheticTouchEvent;\n                break;\n              case ANIMATION_END:\n              case ANIMATION_ITERATION:\n              case ANIMATION_START:\n                SyntheticEventCtor = SyntheticAnimationEvent;\n                break;\n              case TRANSITION_END:\n                SyntheticEventCtor = SyntheticTransitionEvent;\n                break;\n              case \"scroll\":\n              case \"scrollend\":\n                SyntheticEventCtor = SyntheticUIEvent;\n                break;\n              case \"wheel\":\n                SyntheticEventCtor = SyntheticWheelEvent;\n                break;\n              case \"copy\":\n              case \"cut\":\n              case \"paste\":\n                SyntheticEventCtor = SyntheticClipboardEvent;\n                break;\n              case \"gotpointercapture\":\n              case \"lostpointercapture\":\n              case \"pointercancel\":\n              case \"pointerdown\":\n              case \"pointermove\":\n              case \"pointerout\":\n              case \"pointerover\":\n              case \"pointerup\":\n                SyntheticEventCtor = SyntheticPointerEvent;\n                break;\n              case \"toggle\":\n              case \"beforetoggle\":\n                SyntheticEventCtor = SyntheticToggleEvent;\n            }\n            var inCapturePhase = 0 !== (eventSystemFlags & 4),\n              accumulateTargetOnly =\n                !inCapturePhase &&\n                (\"scroll\" === domEventName || \"scrollend\" === domEventName),\n              reactEventName = inCapturePhase\n                ? null !== reactName\n                  ? reactName + \"Capture\"\n                  : null\n                : reactName;\n            inCapturePhase = [];\n            for (\n              var instance = targetInst, lastHostComponent;\n              null !== instance;\n\n            ) {\n              var _instance2 = instance;\n              lastHostComponent = _instance2.stateNode;\n              _instance2 = _instance2.tag;\n              (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||\n                null === lastHostComponent ||\n                null === reactEventName ||\n                ((_instance2 = getListener(instance, reactEventName)),\n                null != _instance2 &&\n                  inCapturePhase.push(\n                    createDispatchListener(\n                      instance,\n                      _instance2,\n                      lastHostComponent\n                    )\n                  ));\n              if (accumulateTargetOnly) break;\n              instance = instance.return;\n            }\n            0 < inCapturePhase.length &&\n              ((reactName = new SyntheticEventCtor(\n                reactName,\n                reactEventType,\n                null,\n                nativeEvent,\n                nativeEventTarget\n              )),\n              dispatchQueue.push({\n                event: reactName,\n                listeners: inCapturePhase\n              }));\n          }\n        }\n        if (0 === (eventSystemFlags & 7)) {\n          a: {\n            reactName =\n              \"mouseover\" === domEventName || \"pointerover\" === domEventName;\n            SyntheticEventCtor =\n              \"mouseout\" === domEventName || \"pointerout\" === domEventName;\n            if (\n              reactName &&\n              nativeEvent !== currentReplayingEvent &&\n              (reactEventType =\n                nativeEvent.relatedTarget || nativeEvent.fromElement) &&\n              (getClosestInstanceFromNode(reactEventType) ||\n                reactEventType[internalContainerInstanceKey])\n            )\n              break a;\n            if (SyntheticEventCtor || reactName) {\n              reactName =\n                nativeEventTarget.window === nativeEventTarget\n                  ? nativeEventTarget\n                  : (reactName = nativeEventTarget.ownerDocument)\n                    ? reactName.defaultView || reactName.parentWindow\n                    : window;\n              if (SyntheticEventCtor) {\n                if (\n                  ((reactEventType =\n                    nativeEvent.relatedTarget || nativeEvent.toElement),\n                  (SyntheticEventCtor = targetInst),\n                  (reactEventType = reactEventType\n                    ? getClosestInstanceFromNode(reactEventType)\n                    : null),\n                  null !== reactEventType &&\n                    ((accumulateTargetOnly =\n                      getNearestMountedFiber(reactEventType)),\n                    (inCapturePhase = reactEventType.tag),\n                    reactEventType !== accumulateTargetOnly ||\n                      (5 !== inCapturePhase &&\n                        27 !== inCapturePhase &&\n                        6 !== inCapturePhase)))\n                )\n                  reactEventType = null;\n              } else (SyntheticEventCtor = null), (reactEventType = targetInst);\n              if (SyntheticEventCtor !== reactEventType) {\n                inCapturePhase = SyntheticMouseEvent;\n                _instance2 = \"onMouseLeave\";\n                reactEventName = \"onMouseEnter\";\n                instance = \"mouse\";\n                if (\n                  \"pointerout\" === domEventName ||\n                  \"pointerover\" === domEventName\n                )\n                  (inCapturePhase = SyntheticPointerEvent),\n                    (_instance2 = \"onPointerLeave\"),\n                    (reactEventName = \"onPointerEnter\"),\n                    (instance = \"pointer\");\n                accumulateTargetOnly =\n                  null == SyntheticEventCtor\n                    ? reactName\n                    : getNodeFromInstance(SyntheticEventCtor);\n                lastHostComponent =\n                  null == reactEventType\n                    ? reactName\n                    : getNodeFromInstance(reactEventType);\n                reactName = new inCapturePhase(\n                  _instance2,\n                  instance + \"leave\",\n                  SyntheticEventCtor,\n                  nativeEvent,\n                  nativeEventTarget\n                );\n                reactName.target = accumulateTargetOnly;\n                reactName.relatedTarget = lastHostComponent;\n                _instance2 = null;\n                getClosestInstanceFromNode(nativeEventTarget) === targetInst &&\n                  ((inCapturePhase = new inCapturePhase(\n                    reactEventName,\n                    instance + \"enter\",\n                    reactEventType,\n                    nativeEvent,\n                    nativeEventTarget\n                  )),\n                  (inCapturePhase.target = lastHostComponent),\n                  (inCapturePhase.relatedTarget = accumulateTargetOnly),\n                  (_instance2 = inCapturePhase));\n                accumulateTargetOnly = _instance2;\n                if (SyntheticEventCtor && reactEventType)\n                  b: {\n                    inCapturePhase = SyntheticEventCtor;\n                    reactEventName = reactEventType;\n                    instance = 0;\n                    for (\n                      lastHostComponent = inCapturePhase;\n                      lastHostComponent;\n                      lastHostComponent = getParent(lastHostComponent)\n                    )\n                      instance++;\n                    lastHostComponent = 0;\n                    for (\n                      _instance2 = reactEventName;\n                      _instance2;\n                      _instance2 = getParent(_instance2)\n                    )\n                      lastHostComponent++;\n                    for (; 0 < instance - lastHostComponent; )\n                      (inCapturePhase = getParent(inCapturePhase)), instance--;\n                    for (; 0 < lastHostComponent - instance; )\n                      (reactEventName = getParent(reactEventName)),\n                        lastHostComponent--;\n                    for (; instance--; ) {\n                      if (\n                        inCapturePhase === reactEventName ||\n                        (null !== reactEventName &&\n                          inCapturePhase === reactEventName.alternate)\n                      )\n                        break b;\n                      inCapturePhase = getParent(inCapturePhase);\n                      reactEventName = getParent(reactEventName);\n                    }\n                    inCapturePhase = null;\n                  }\n                else inCapturePhase = null;\n                null !== SyntheticEventCtor &&\n                  accumulateEnterLeaveListenersForEvent(\n                    dispatchQueue,\n                    reactName,\n                    SyntheticEventCtor,\n                    inCapturePhase,\n                    !1\n                  );\n                null !== reactEventType &&\n                  null !== accumulateTargetOnly &&\n                  accumulateEnterLeaveListenersForEvent(\n                    dispatchQueue,\n                    accumulateTargetOnly,\n                    reactEventType,\n                    inCapturePhase,\n                    !0\n                  );\n              }\n            }\n          }\n          a: {\n            reactName = targetInst ? getNodeFromInstance(targetInst) : window;\n            SyntheticEventCtor =\n              reactName.nodeName && reactName.nodeName.toLowerCase();\n            if (\n              \"select\" === SyntheticEventCtor ||\n              (\"input\" === SyntheticEventCtor && \"file\" === reactName.type)\n            )\n              var getTargetInstFunc = getTargetInstForChangeEvent;\n            else if (isTextInputElement(reactName))\n              if (isInputEventSupported)\n                getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n              else {\n                getTargetInstFunc = getTargetInstForInputEventPolyfill;\n                var handleEventFunc = handleEventsForInputEventPolyfill;\n              }\n            else\n              (SyntheticEventCtor = reactName.nodeName),\n                !SyntheticEventCtor ||\n                \"input\" !== SyntheticEventCtor.toLowerCase() ||\n                (\"checkbox\" !== reactName.type && \"radio\" !== reactName.type)\n                  ? targetInst &&\n                    isCustomElement(targetInst.elementType) &&\n                    (getTargetInstFunc = getTargetInstForChangeEvent)\n                  : (getTargetInstFunc = getTargetInstForClickEvent);\n            if (\n              getTargetInstFunc &&\n              (getTargetInstFunc = getTargetInstFunc(domEventName, targetInst))\n            ) {\n              createAndAccumulateChangeEvent(\n                dispatchQueue,\n                getTargetInstFunc,\n                nativeEvent,\n                nativeEventTarget\n              );\n              break a;\n            }\n            handleEventFunc &&\n              handleEventFunc(domEventName, reactName, targetInst);\n            \"focusout\" === domEventName &&\n              targetInst &&\n              \"number\" === reactName.type &&\n              null != targetInst.memoizedProps.value &&\n              setDefaultValue(reactName, \"number\", reactName.value);\n          }\n          handleEventFunc = targetInst\n            ? getNodeFromInstance(targetInst)\n            : window;\n          switch (domEventName) {\n            case \"focusin\":\n              if (\n                isTextInputElement(handleEventFunc) ||\n                \"true\" === handleEventFunc.contentEditable\n              )\n                (activeElement = handleEventFunc),\n                  (activeElementInst = targetInst),\n                  (lastSelection = null);\n              break;\n            case \"focusout\":\n              lastSelection = activeElementInst = activeElement = null;\n              break;\n            case \"mousedown\":\n              mouseDown = !0;\n              break;\n            case \"contextmenu\":\n            case \"mouseup\":\n            case \"dragend\":\n              mouseDown = !1;\n              constructSelectEvent(\n                dispatchQueue,\n                nativeEvent,\n                nativeEventTarget\n              );\n              break;\n            case \"selectionchange\":\n              if (skipSelectionChangeEvent) break;\n            case \"keydown\":\n            case \"keyup\":\n              constructSelectEvent(\n                dispatchQueue,\n                nativeEvent,\n                nativeEventTarget\n              );\n          }\n          var fallbackData;\n          if (canUseCompositionEvent)\n            b: {\n              switch (domEventName) {\n                case \"compositionstart\":\n                  var eventType = \"onCompositionStart\";\n                  break b;\n                case \"compositionend\":\n                  eventType = \"onCompositionEnd\";\n                  break b;\n                case \"compositionupdate\":\n                  eventType = \"onCompositionUpdate\";\n                  break b;\n              }\n              eventType = void 0;\n            }\n          else\n            isComposing\n              ? isFallbackCompositionEnd(domEventName, nativeEvent) &&\n                (eventType = \"onCompositionEnd\")\n              : \"keydown\" === domEventName &&\n                nativeEvent.keyCode === START_KEYCODE &&\n                (eventType = \"onCompositionStart\");\n          eventType &&\n            (useFallbackCompositionData &&\n              \"ko\" !== nativeEvent.locale &&\n              (isComposing || \"onCompositionStart\" !== eventType\n                ? \"onCompositionEnd\" === eventType &&\n                  isComposing &&\n                  (fallbackData = getData())\n                : ((root = nativeEventTarget),\n                  (startText = \"value\" in root ? root.value : root.textContent),\n                  (isComposing = !0))),\n            (handleEventFunc = accumulateTwoPhaseListeners(\n              targetInst,\n              eventType\n            )),\n            0 < handleEventFunc.length &&\n              ((eventType = new SyntheticCompositionEvent(\n                eventType,\n                domEventName,\n                null,\n                nativeEvent,\n                nativeEventTarget\n              )),\n              dispatchQueue.push({\n                event: eventType,\n                listeners: handleEventFunc\n              }),\n              fallbackData\n                ? (eventType.data = fallbackData)\n                : ((fallbackData = getDataFromCustomEvent(nativeEvent)),\n                  null !== fallbackData && (eventType.data = fallbackData))));\n          if (\n            (fallbackData = canUseTextInputEvent\n              ? getNativeBeforeInputChars(domEventName, nativeEvent)\n              : getFallbackBeforeInputChars(domEventName, nativeEvent))\n          )\n            (eventType = accumulateTwoPhaseListeners(\n              targetInst,\n              \"onBeforeInput\"\n            )),\n              0 < eventType.length &&\n                ((handleEventFunc = new SyntheticInputEvent(\n                  \"onBeforeInput\",\n                  \"beforeinput\",\n                  null,\n                  nativeEvent,\n                  nativeEventTarget\n                )),\n                dispatchQueue.push({\n                  event: handleEventFunc,\n                  listeners: eventType\n                }),\n                (handleEventFunc.data = fallbackData));\n          extractEvents$1(\n            dispatchQueue,\n            domEventName,\n            targetInst,\n            nativeEvent,\n            nativeEventTarget\n          );\n        }\n        processDispatchQueue(dispatchQueue, eventSystemFlags);\n      });\n    }\n    function createDispatchListener(instance, listener, currentTarget) {\n      return {\n        instance: instance,\n        listener: listener,\n        currentTarget: currentTarget\n      };\n    }\n    function accumulateTwoPhaseListeners(targetFiber, reactName) {\n      for (\n        var captureName = reactName + \"Capture\", listeners = [];\n        null !== targetFiber;\n\n      ) {\n        var _instance3 = targetFiber,\n          stateNode = _instance3.stateNode;\n        _instance3 = _instance3.tag;\n        (5 !== _instance3 && 26 !== _instance3 && 27 !== _instance3) ||\n          null === stateNode ||\n          ((_instance3 = getListener(targetFiber, captureName)),\n          null != _instance3 &&\n            listeners.unshift(\n              createDispatchListener(targetFiber, _instance3, stateNode)\n            ),\n          (_instance3 = getListener(targetFiber, reactName)),\n          null != _instance3 &&\n            listeners.push(\n              createDispatchListener(targetFiber, _instance3, stateNode)\n            ));\n        if (3 === targetFiber.tag) return listeners;\n        targetFiber = targetFiber.return;\n      }\n      return [];\n    }\n    function getParent(inst) {\n      if (null === inst) return null;\n      do inst = inst.return;\n      while (inst && 5 !== inst.tag && 27 !== inst.tag);\n      return inst ? inst : null;\n    }\n    function accumulateEnterLeaveListenersForEvent(\n      dispatchQueue,\n      event,\n      target,\n      common,\n      inCapturePhase\n    ) {\n      for (\n        var registrationName = event._reactName, listeners = [];\n        null !== target && target !== common;\n\n      ) {\n        var _instance4 = target,\n          alternate = _instance4.alternate,\n          stateNode = _instance4.stateNode;\n        _instance4 = _instance4.tag;\n        if (null !== alternate && alternate === common) break;\n        (5 !== _instance4 && 26 !== _instance4 && 27 !== _instance4) ||\n          null === stateNode ||\n          ((alternate = stateNode),\n          inCapturePhase\n            ? ((stateNode = getListener(target, registrationName)),\n              null != stateNode &&\n                listeners.unshift(\n                  createDispatchListener(target, stateNode, alternate)\n                ))\n            : inCapturePhase ||\n              ((stateNode = getListener(target, registrationName)),\n              null != stateNode &&\n                listeners.push(\n                  createDispatchListener(target, stateNode, alternate)\n                )));\n        target = target.return;\n      }\n      0 !== listeners.length &&\n        dispatchQueue.push({ event: event, listeners: listeners });\n    }\n    function validatePropertiesInDevelopment(type, props) {\n      validateProperties$2(type, props);\n      (\"input\" !== type && \"textarea\" !== type && \"select\" !== type) ||\n        null == props ||\n        null !== props.value ||\n        didWarnValueNull ||\n        ((didWarnValueNull = !0),\n        \"select\" === type && props.multiple\n          ? console.error(\n              \"`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.\",\n              type\n            )\n          : console.error(\n              \"`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.\",\n              type\n            ));\n      var eventRegistry = {\n        registrationNameDependencies: registrationNameDependencies,\n        possibleRegistrationNames: possibleRegistrationNames\n      };\n      isCustomElement(type) ||\n        \"string\" === typeof props.is ||\n        warnUnknownProperties(type, props, eventRegistry);\n      props.contentEditable &&\n        !props.suppressContentEditableWarning &&\n        null != props.children &&\n        console.error(\n          \"A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.\"\n        );\n    }\n    function warnForPropDifference(\n      propName,\n      serverValue,\n      clientValue,\n      serverDifferences\n    ) {\n      serverValue !== clientValue &&\n        ((clientValue = normalizeMarkupForTextOrAttribute(clientValue)),\n        normalizeMarkupForTextOrAttribute(serverValue) !== clientValue &&\n          (serverDifferences[propName] = serverValue));\n    }\n    function warnForExtraAttributes(\n      domElement,\n      attributeNames,\n      serverDifferences\n    ) {\n      attributeNames.forEach(function (attributeName) {\n        serverDifferences[getPropNameFromAttributeName(attributeName)] =\n          \"style\" === attributeName\n            ? getStylesObjectFromElement(domElement)\n            : domElement.getAttribute(attributeName);\n      });\n    }\n    function warnForInvalidEventListener(registrationName, listener) {\n      !1 === listener\n        ? console.error(\n            \"Expected `%s` listener to be a function, instead got `false`.\\n\\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.\",\n            registrationName,\n            registrationName,\n            registrationName\n          )\n        : console.error(\n            \"Expected `%s` listener to be a function, instead got a value of `%s` type.\",\n            registrationName,\n            typeof listener\n          );\n    }\n    function normalizeHTML(parent, html) {\n      parent =\n        parent.namespaceURI === MATH_NAMESPACE ||\n        parent.namespaceURI === SVG_NAMESPACE\n          ? parent.ownerDocument.createElementNS(\n              parent.namespaceURI,\n              parent.tagName\n            )\n          : parent.ownerDocument.createElement(parent.tagName);\n      parent.innerHTML = html;\n      return parent.innerHTML;\n    }\n    function normalizeMarkupForTextOrAttribute(markup) {\n      willCoercionThrow(markup) &&\n        (console.error(\n          \"The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before using it here.\",\n          typeName(markup)\n        ),\n        testStringCoercion(markup));\n      return (\"string\" === typeof markup ? markup : \"\" + markup)\n        .replace(NORMALIZE_NEWLINES_REGEX, \"\\n\")\n        .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, \"\");\n    }\n    function checkForUnmatchedText(serverText, clientText) {\n      clientText = normalizeMarkupForTextOrAttribute(clientText);\n      return normalizeMarkupForTextOrAttribute(serverText) === clientText\n        ? !0\n        : !1;\n    }\n    function noop$1() {}\n    function setProp(domElement, tag, key, value, props, prevValue) {\n      switch (key) {\n        case \"children\":\n          if (\"string\" === typeof value)\n            validateTextNesting(value, tag, !1),\n              \"body\" === tag ||\n                (\"textarea\" === tag && \"\" === value) ||\n                setTextContent(domElement, value);\n          else if (\"number\" === typeof value || \"bigint\" === typeof value)\n            validateTextNesting(\"\" + value, tag, !1),\n              \"body\" !== tag && setTextContent(domElement, \"\" + value);\n          break;\n        case \"className\":\n          setValueForKnownAttribute(domElement, \"class\", value);\n          break;\n        case \"tabIndex\":\n          setValueForKnownAttribute(domElement, \"tabindex\", value);\n          break;\n        case \"dir\":\n        case \"role\":\n        case \"viewBox\":\n        case \"width\":\n        case \"height\":\n          setValueForKnownAttribute(domElement, key, value);\n          break;\n        case \"style\":\n          setValueForStyles(domElement, value, prevValue);\n          break;\n        case \"data\":\n          if (\"object\" !== tag) {\n            setValueForKnownAttribute(domElement, \"data\", value);\n            break;\n          }\n        case \"src\":\n        case \"href\":\n          if (\"\" === value && (\"a\" !== tag || \"href\" !== key)) {\n            \"src\" === key\n              ? console.error(\n                  'An empty string (\"\") was passed to the %s attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to %s instead of an empty string.',\n                  key,\n                  key\n                )\n              : console.error(\n                  'An empty string (\"\") was passed to the %s attribute. To fix this, either do not render the element at all or pass null to %s instead of an empty string.',\n                  key,\n                  key\n                );\n            domElement.removeAttribute(key);\n            break;\n          }\n          if (\n            null == value ||\n            \"function\" === typeof value ||\n            \"symbol\" === typeof value ||\n            \"boolean\" === typeof value\n          ) {\n            domElement.removeAttribute(key);\n            break;\n          }\n          checkAttributeStringCoercion(value, key);\n          value = sanitizeURL(\"\" + value);\n          domElement.setAttribute(key, value);\n          break;\n        case \"action\":\n        case \"formAction\":\n          null != value &&\n            (\"form\" === tag\n              ? \"formAction\" === key\n                ? console.error(\n                    \"You can only pass the formAction prop to <input> or <button>. Use the action prop on <form>.\"\n                  )\n                : \"function\" === typeof value &&\n                  ((null == props.encType && null == props.method) ||\n                    didWarnFormActionMethod ||\n                    ((didWarnFormActionMethod = !0),\n                    console.error(\n                      \"Cannot specify a encType or method for a form that specifies a function as the action. React provides those automatically. They will get overridden.\"\n                    )),\n                  null == props.target ||\n                    didWarnFormActionTarget ||\n                    ((didWarnFormActionTarget = !0),\n                    console.error(\n                      \"Cannot specify a target for a form that specifies a function as the action. The function will always be executed in the same window.\"\n                    )))\n              : \"input\" === tag || \"button\" === tag\n                ? \"action\" === key\n                  ? console.error(\n                      \"You can only pass the action prop to <form>. Use the formAction prop on <input> or <button>.\"\n                    )\n                  : \"input\" !== tag ||\n                      \"submit\" === props.type ||\n                      \"image\" === props.type ||\n                      didWarnFormActionType\n                    ? \"button\" !== tag ||\n                      null == props.type ||\n                      \"submit\" === props.type ||\n                      didWarnFormActionType\n                      ? \"function\" === typeof value &&\n                        (null == props.name ||\n                          didWarnFormActionName ||\n                          ((didWarnFormActionName = !0),\n                          console.error(\n                            'Cannot specify a \"name\" prop for a button that specifies a function as a formAction. React needs it to encode which action should be invoked. It will get overridden.'\n                          )),\n                        (null == props.formEncType &&\n                          null == props.formMethod) ||\n                          didWarnFormActionMethod ||\n                          ((didWarnFormActionMethod = !0),\n                          console.error(\n                            \"Cannot specify a formEncType or formMethod for a button that specifies a function as a formAction. React provides those automatically. They will get overridden.\"\n                          )),\n                        null == props.formTarget ||\n                          didWarnFormActionTarget ||\n                          ((didWarnFormActionTarget = !0),\n                          console.error(\n                            \"Cannot specify a formTarget for a button that specifies a function as a formAction. The function will always be executed in the same window.\"\n                          )))\n                      : ((didWarnFormActionType = !0),\n                        console.error(\n                          'A button can only specify a formAction along with type=\"submit\" or no type.'\n                        ))\n                    : ((didWarnFormActionType = !0),\n                      console.error(\n                        'An input can only specify a formAction along with type=\"submit\" or type=\"image\".'\n                      ))\n                : \"action\" === key\n                  ? console.error(\n                      \"You can only pass the action prop to <form>.\"\n                    )\n                  : console.error(\n                      \"You can only pass the formAction prop to <input> or <button>.\"\n                    ));\n          if (\"function\" === typeof value) {\n            domElement.setAttribute(\n              key,\n              \"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')\"\n            );\n            break;\n          } else\n            \"function\" === typeof prevValue &&\n              (\"formAction\" === key\n                ? (\"input\" !== tag &&\n                    setProp(domElement, tag, \"name\", props.name, props, null),\n                  setProp(\n                    domElement,\n                    tag,\n                    \"formEncType\",\n                    props.formEncType,\n                    props,\n                    null\n                  ),\n                  setProp(\n                    domElement,\n                    tag,\n                    \"formMethod\",\n                    props.formMethod,\n                    props,\n                    null\n                  ),\n                  setProp(\n                    domElement,\n                    tag,\n                    \"formTarget\",\n                    props.formTarget,\n                    props,\n                    null\n                  ))\n                : (setProp(\n                    domElement,\n                    tag,\n                    \"encType\",\n                    props.encType,\n                    props,\n                    null\n                  ),\n                  setProp(domElement, tag, \"method\", props.method, props, null),\n                  setProp(\n                    domElement,\n                    tag,\n                    \"target\",\n                    props.target,\n                    props,\n                    null\n                  )));\n          if (\n            null == value ||\n            \"symbol\" === typeof value ||\n            \"boolean\" === typeof value\n          ) {\n            domElement.removeAttribute(key);\n            break;\n          }\n          checkAttributeStringCoercion(value, key);\n          value = sanitizeURL(\"\" + value);\n          domElement.setAttribute(key, value);\n          break;\n        case \"onClick\":\n          null != value &&\n            (\"function\" !== typeof value &&\n              warnForInvalidEventListener(key, value),\n            (domElement.onclick = noop$1));\n          break;\n        case \"onScroll\":\n          null != value &&\n            (\"function\" !== typeof value &&\n              warnForInvalidEventListener(key, value),\n            listenToNonDelegatedEvent(\"scroll\", domElement));\n          break;\n        case \"onScrollEnd\":\n          null != value &&\n            (\"function\" !== typeof value &&\n              warnForInvalidEventListener(key, value),\n            listenToNonDelegatedEvent(\"scrollend\", domElement));\n          break;\n        case \"dangerouslySetInnerHTML\":\n          if (null != value) {\n            if (\"object\" !== typeof value || !(\"__html\" in value))\n              throw Error(\n                \"`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.\"\n              );\n            key = value.__html;\n            if (null != key) {\n              if (null != props.children)\n                throw Error(\n                  \"Can only set one of `children` or `props.dangerouslySetInnerHTML`.\"\n                );\n              domElement.innerHTML = key;\n            }\n          }\n          break;\n        case \"multiple\":\n          domElement.multiple =\n            value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n          break;\n        case \"muted\":\n          domElement.muted =\n            value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n          break;\n        case \"suppressContentEditableWarning\":\n        case \"suppressHydrationWarning\":\n        case \"defaultValue\":\n        case \"defaultChecked\":\n        case \"innerHTML\":\n        case \"ref\":\n          break;\n        case \"autoFocus\":\n          break;\n        case \"xlinkHref\":\n          if (\n            null == value ||\n            \"function\" === typeof value ||\n            \"boolean\" === typeof value ||\n            \"symbol\" === typeof value\n          ) {\n            domElement.removeAttribute(\"xlink:href\");\n            break;\n          }\n          checkAttributeStringCoercion(value, key);\n          key = sanitizeURL(\"\" + value);\n          domElement.setAttributeNS(xlinkNamespace, \"xlink:href\", key);\n          break;\n        case \"contentEditable\":\n        case \"spellCheck\":\n        case \"draggable\":\n        case \"value\":\n        case \"autoReverse\":\n        case \"externalResourcesRequired\":\n        case \"focusable\":\n        case \"preserveAlpha\":\n          null != value &&\n          \"function\" !== typeof value &&\n          \"symbol\" !== typeof value\n            ? (checkAttributeStringCoercion(value, key),\n              domElement.setAttribute(key, \"\" + value))\n            : domElement.removeAttribute(key);\n          break;\n        case \"inert\":\n          \"\" !== value ||\n            didWarnForNewBooleanPropsWithEmptyValue[key] ||\n            ((didWarnForNewBooleanPropsWithEmptyValue[key] = !0),\n            console.error(\n              \"Received an empty string for a boolean attribute `%s`. This will treat the attribute as if it were false. Either pass `false` to silence this warning, or pass `true` if you used an empty string in earlier versions of React to indicate this attribute is true.\",\n              key\n            ));\n        case \"allowFullScreen\":\n        case \"async\":\n        case \"autoPlay\":\n        case \"controls\":\n        case \"default\":\n        case \"defer\":\n        case \"disabled\":\n        case \"disablePictureInPicture\":\n        case \"disableRemotePlayback\":\n        case \"formNoValidate\":\n        case \"hidden\":\n        case \"loop\":\n        case \"noModule\":\n        case \"noValidate\":\n        case \"open\":\n        case \"playsInline\":\n        case \"readOnly\":\n        case \"required\":\n        case \"reversed\":\n        case \"scoped\":\n        case \"seamless\":\n        case \"itemScope\":\n          value && \"function\" !== typeof value && \"symbol\" !== typeof value\n            ? domElement.setAttribute(key, \"\")\n            : domElement.removeAttribute(key);\n          break;\n        case \"capture\":\n        case \"download\":\n          !0 === value\n            ? domElement.setAttribute(key, \"\")\n            : !1 !== value &&\n                null != value &&\n                \"function\" !== typeof value &&\n                \"symbol\" !== typeof value\n              ? (checkAttributeStringCoercion(value, key),\n                domElement.setAttribute(key, value))\n              : domElement.removeAttribute(key);\n          break;\n        case \"cols\":\n        case \"rows\":\n        case \"size\":\n        case \"span\":\n          null != value &&\n          \"function\" !== typeof value &&\n          \"symbol\" !== typeof value &&\n          !isNaN(value) &&\n          1 <= value\n            ? (checkAttributeStringCoercion(value, key),\n              domElement.setAttribute(key, value))\n            : domElement.removeAttribute(key);\n          break;\n        case \"rowSpan\":\n        case \"start\":\n          null == value ||\n          \"function\" === typeof value ||\n          \"symbol\" === typeof value ||\n          isNaN(value)\n            ? domElement.removeAttribute(key)\n            : (checkAttributeStringCoercion(value, key),\n              domElement.setAttribute(key, value));\n          break;\n        case \"popover\":\n          listenToNonDelegatedEvent(\"beforetoggle\", domElement);\n          listenToNonDelegatedEvent(\"toggle\", domElement);\n          setValueForAttribute(domElement, \"popover\", value);\n          break;\n        case \"xlinkActuate\":\n          setValueForNamespacedAttribute(\n            domElement,\n            xlinkNamespace,\n            \"xlink:actuate\",\n            value\n          );\n          break;\n        case \"xlinkArcrole\":\n          setValueForNamespacedAttribute(\n            domElement,\n            xlinkNamespace,\n            \"xlink:arcrole\",\n            value\n          );\n          break;\n        case \"xlinkRole\":\n          setValueForNamespacedAttribute(\n            domElement,\n            xlinkNamespace,\n            \"xlink:role\",\n            value\n          );\n          break;\n        case \"xlinkShow\":\n          setValueForNamespacedAttribute(\n            domElement,\n            xlinkNamespace,\n            \"xlink:show\",\n            value\n          );\n          break;\n        case \"xlinkTitle\":\n          setValueForNamespacedAttribute(\n            domElement,\n            xlinkNamespace,\n            \"xlink:title\",\n            value\n          );\n          break;\n        case \"xlinkType\":\n          setValueForNamespacedAttribute(\n            domElement,\n            xlinkNamespace,\n            \"xlink:type\",\n            value\n          );\n          break;\n        case \"xmlBase\":\n          setValueForNamespacedAttribute(\n            domElement,\n            xmlNamespace,\n            \"xml:base\",\n            value\n          );\n          break;\n        case \"xmlLang\":\n          setValueForNamespacedAttribute(\n            domElement,\n            xmlNamespace,\n            \"xml:lang\",\n            value\n          );\n          break;\n        case \"xmlSpace\":\n          setValueForNamespacedAttribute(\n            domElement,\n            xmlNamespace,\n            \"xml:space\",\n            value\n          );\n          break;\n        case \"is\":\n          null != prevValue &&\n            console.error(\n              'Cannot update the \"is\" prop after it has been initialized.'\n            );\n          setValueForAttribute(domElement, \"is\", value);\n          break;\n        case \"innerText\":\n        case \"textContent\":\n          break;\n        case \"popoverTarget\":\n          didWarnPopoverTargetObject ||\n            null == value ||\n            \"object\" !== typeof value ||\n            ((didWarnPopoverTargetObject = !0),\n            console.error(\n              \"The `popoverTarget` prop expects the ID of an Element as a string. Received %s instead.\",\n              value\n            ));\n        default:\n          !(2 < key.length) ||\n          (\"o\" !== key[0] && \"O\" !== key[0]) ||\n          (\"n\" !== key[1] && \"N\" !== key[1])\n            ? ((key = getAttributeAlias(key)),\n              setValueForAttribute(domElement, key, value))\n            : registrationNameDependencies.hasOwnProperty(key) &&\n              null != value &&\n              \"function\" !== typeof value &&\n              warnForInvalidEventListener(key, value);\n      }\n    }\n    function setPropOnCustomElement(\n      domElement,\n      tag,\n      key,\n      value,\n      props,\n      prevValue\n    ) {\n      switch (key) {\n        case \"style\":\n          setValueForStyles(domElement, value, prevValue);\n          break;\n        case \"dangerouslySetInnerHTML\":\n          if (null != value) {\n            if (\"object\" !== typeof value || !(\"__html\" in value))\n              throw Error(\n                \"`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.\"\n              );\n            key = value.__html;\n            if (null != key) {\n              if (null != props.children)\n                throw Error(\n                  \"Can only set one of `children` or `props.dangerouslySetInnerHTML`.\"\n                );\n              domElement.innerHTML = key;\n            }\n          }\n          break;\n        case \"children\":\n          \"string\" === typeof value\n            ? setTextContent(domElement, value)\n            : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n              setTextContent(domElement, \"\" + value);\n          break;\n        case \"onScroll\":\n          null != value &&\n            (\"function\" !== typeof value &&\n              warnForInvalidEventListener(key, value),\n            listenToNonDelegatedEvent(\"scroll\", domElement));\n          break;\n        case \"onScrollEnd\":\n          null != value &&\n            (\"function\" !== typeof value &&\n              warnForInvalidEventListener(key, value),\n            listenToNonDelegatedEvent(\"scrollend\", domElement));\n          break;\n        case \"onClick\":\n          null != value &&\n            (\"function\" !== typeof value &&\n              warnForInvalidEventListener(key, value),\n            (domElement.onclick = noop$1));\n          break;\n        case \"suppressContentEditableWarning\":\n        case \"suppressHydrationWarning\":\n        case \"innerHTML\":\n        case \"ref\":\n          break;\n        case \"innerText\":\n        case \"textContent\":\n          break;\n        default:\n          if (registrationNameDependencies.hasOwnProperty(key))\n            null != value &&\n              \"function\" !== typeof value &&\n              warnForInvalidEventListener(key, value);\n          else\n            a: {\n              if (\n                \"o\" === key[0] &&\n                \"n\" === key[1] &&\n                ((props = key.endsWith(\"Capture\")),\n                (tag = key.slice(2, props ? key.length - 7 : void 0)),\n                (prevValue = domElement[internalPropsKey] || null),\n                (prevValue = null != prevValue ? prevValue[key] : null),\n                \"function\" === typeof prevValue &&\n                  domElement.removeEventListener(tag, prevValue, props),\n                \"function\" === typeof value)\n              ) {\n                \"function\" !== typeof prevValue &&\n                  null !== prevValue &&\n                  (key in domElement\n                    ? (domElement[key] = null)\n                    : domElement.hasAttribute(key) &&\n                      domElement.removeAttribute(key));\n                domElement.addEventListener(tag, value, props);\n                break a;\n              }\n              key in domElement\n                ? (domElement[key] = value)\n                : !0 === value\n                  ? domElement.setAttribute(key, \"\")\n                  : setValueForAttribute(domElement, key, value);\n            }\n      }\n    }\n    function setInitialProperties(domElement, tag, props) {\n      validatePropertiesInDevelopment(tag, props);\n      switch (tag) {\n        case \"div\":\n        case \"span\":\n        case \"svg\":\n        case \"path\":\n        case \"a\":\n        case \"g\":\n        case \"p\":\n        case \"li\":\n          break;\n        case \"img\":\n          listenToNonDelegatedEvent(\"error\", domElement);\n          listenToNonDelegatedEvent(\"load\", domElement);\n          var hasSrc = !1,\n            hasSrcSet = !1,\n            propKey;\n          for (propKey in props)\n            if (props.hasOwnProperty(propKey)) {\n              var propValue = props[propKey];\n              if (null != propValue)\n                switch (propKey) {\n                  case \"src\":\n                    hasSrc = !0;\n                    break;\n                  case \"srcSet\":\n                    hasSrcSet = !0;\n                    break;\n                  case \"children\":\n                  case \"dangerouslySetInnerHTML\":\n                    throw Error(\n                      tag +\n                        \" is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n                    );\n                  default:\n                    setProp(domElement, tag, propKey, propValue, props, null);\n                }\n            }\n          hasSrcSet &&\n            setProp(domElement, tag, \"srcSet\", props.srcSet, props, null);\n          hasSrc && setProp(domElement, tag, \"src\", props.src, props, null);\n          return;\n        case \"input\":\n          checkControlledValueProps(\"input\", props);\n          listenToNonDelegatedEvent(\"invalid\", domElement);\n          var defaultValue = (propKey = propValue = hasSrcSet = null),\n            checked = null,\n            defaultChecked = null;\n          for (hasSrc in props)\n            if (props.hasOwnProperty(hasSrc)) {\n              var _propValue = props[hasSrc];\n              if (null != _propValue)\n                switch (hasSrc) {\n                  case \"name\":\n                    hasSrcSet = _propValue;\n                    break;\n                  case \"type\":\n                    propValue = _propValue;\n                    break;\n                  case \"checked\":\n                    checked = _propValue;\n                    break;\n                  case \"defaultChecked\":\n                    defaultChecked = _propValue;\n                    break;\n                  case \"value\":\n                    propKey = _propValue;\n                    break;\n                  case \"defaultValue\":\n                    defaultValue = _propValue;\n                    break;\n                  case \"children\":\n                  case \"dangerouslySetInnerHTML\":\n                    if (null != _propValue)\n                      throw Error(\n                        tag +\n                          \" is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n                      );\n                    break;\n                  default:\n                    setProp(domElement, tag, hasSrc, _propValue, props, null);\n                }\n            }\n          validateInputProps(domElement, props);\n          initInput(\n            domElement,\n            propKey,\n            defaultValue,\n            checked,\n            defaultChecked,\n            propValue,\n            hasSrcSet,\n            !1\n          );\n          track(domElement);\n          return;\n        case \"select\":\n          checkControlledValueProps(\"select\", props);\n          listenToNonDelegatedEvent(\"invalid\", domElement);\n          hasSrc = propValue = propKey = null;\n          for (hasSrcSet in props)\n            if (\n              props.hasOwnProperty(hasSrcSet) &&\n              ((defaultValue = props[hasSrcSet]), null != defaultValue)\n            )\n              switch (hasSrcSet) {\n                case \"value\":\n                  propKey = defaultValue;\n                  break;\n                case \"defaultValue\":\n                  propValue = defaultValue;\n                  break;\n                case \"multiple\":\n                  hasSrc = defaultValue;\n                default:\n                  setProp(\n                    domElement,\n                    tag,\n                    hasSrcSet,\n                    defaultValue,\n                    props,\n                    null\n                  );\n              }\n          validateSelectProps(domElement, props);\n          tag = propKey;\n          props = propValue;\n          domElement.multiple = !!hasSrc;\n          null != tag\n            ? updateOptions(domElement, !!hasSrc, tag, !1)\n            : null != props && updateOptions(domElement, !!hasSrc, props, !0);\n          return;\n        case \"textarea\":\n          checkControlledValueProps(\"textarea\", props);\n          listenToNonDelegatedEvent(\"invalid\", domElement);\n          propKey = hasSrcSet = hasSrc = null;\n          for (propValue in props)\n            if (\n              props.hasOwnProperty(propValue) &&\n              ((defaultValue = props[propValue]), null != defaultValue)\n            )\n              switch (propValue) {\n                case \"value\":\n                  hasSrc = defaultValue;\n                  break;\n                case \"defaultValue\":\n                  hasSrcSet = defaultValue;\n                  break;\n                case \"children\":\n                  propKey = defaultValue;\n                  break;\n                case \"dangerouslySetInnerHTML\":\n                  if (null != defaultValue)\n                    throw Error(\n                      \"`dangerouslySetInnerHTML` does not make sense on <textarea>.\"\n                    );\n                  break;\n                default:\n                  setProp(\n                    domElement,\n                    tag,\n                    propValue,\n                    defaultValue,\n                    props,\n                    null\n                  );\n              }\n          validateTextareaProps(domElement, props);\n          initTextarea(domElement, hasSrc, hasSrcSet, propKey);\n          track(domElement);\n          return;\n        case \"option\":\n          validateOptionProps(domElement, props);\n          for (checked in props)\n            if (\n              props.hasOwnProperty(checked) &&\n              ((hasSrc = props[checked]), null != hasSrc)\n            )\n              switch (checked) {\n                case \"selected\":\n                  domElement.selected =\n                    hasSrc &&\n                    \"function\" !== typeof hasSrc &&\n                    \"symbol\" !== typeof hasSrc;\n                  break;\n                default:\n                  setProp(domElement, tag, checked, hasSrc, props, null);\n              }\n          return;\n        case \"dialog\":\n          listenToNonDelegatedEvent(\"beforetoggle\", domElement);\n          listenToNonDelegatedEvent(\"toggle\", domElement);\n          listenToNonDelegatedEvent(\"cancel\", domElement);\n          listenToNonDelegatedEvent(\"close\", domElement);\n          break;\n        case \"iframe\":\n        case \"object\":\n          listenToNonDelegatedEvent(\"load\", domElement);\n          break;\n        case \"video\":\n        case \"audio\":\n          for (hasSrc = 0; hasSrc < mediaEventTypes.length; hasSrc++)\n            listenToNonDelegatedEvent(mediaEventTypes[hasSrc], domElement);\n          break;\n        case \"image\":\n          listenToNonDelegatedEvent(\"error\", domElement);\n          listenToNonDelegatedEvent(\"load\", domElement);\n          break;\n        case \"details\":\n          listenToNonDelegatedEvent(\"toggle\", domElement);\n          break;\n        case \"embed\":\n        case \"source\":\n        case \"link\":\n          listenToNonDelegatedEvent(\"error\", domElement),\n            listenToNonDelegatedEvent(\"load\", domElement);\n        case \"area\":\n        case \"base\":\n        case \"br\":\n        case \"col\":\n        case \"hr\":\n        case \"keygen\":\n        case \"meta\":\n        case \"param\":\n        case \"track\":\n        case \"wbr\":\n        case \"menuitem\":\n          for (defaultChecked in props)\n            if (\n              props.hasOwnProperty(defaultChecked) &&\n              ((hasSrc = props[defaultChecked]), null != hasSrc)\n            )\n              switch (defaultChecked) {\n                case \"children\":\n                case \"dangerouslySetInnerHTML\":\n                  throw Error(\n                    tag +\n                      \" is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n                  );\n                default:\n                  setProp(domElement, tag, defaultChecked, hasSrc, props, null);\n              }\n          return;\n        default:\n          if (isCustomElement(tag)) {\n            for (_propValue in props)\n              props.hasOwnProperty(_propValue) &&\n                ((hasSrc = props[_propValue]),\n                void 0 !== hasSrc &&\n                  setPropOnCustomElement(\n                    domElement,\n                    tag,\n                    _propValue,\n                    hasSrc,\n                    props,\n                    void 0\n                  ));\n            return;\n          }\n      }\n      for (defaultValue in props)\n        props.hasOwnProperty(defaultValue) &&\n          ((hasSrc = props[defaultValue]),\n          null != hasSrc &&\n            setProp(domElement, tag, defaultValue, hasSrc, props, null));\n    }\n    function updateProperties(domElement, tag, lastProps, nextProps) {\n      validatePropertiesInDevelopment(tag, nextProps);\n      switch (tag) {\n        case \"div\":\n        case \"span\":\n        case \"svg\":\n        case \"path\":\n        case \"a\":\n        case \"g\":\n        case \"p\":\n        case \"li\":\n          break;\n        case \"input\":\n          var name = null,\n            type = null,\n            value = null,\n            defaultValue = null,\n            lastDefaultValue = null,\n            checked = null,\n            defaultChecked = null;\n          for (propKey in lastProps) {\n            var lastProp = lastProps[propKey];\n            if (lastProps.hasOwnProperty(propKey) && null != lastProp)\n              switch (propKey) {\n                case \"checked\":\n                  break;\n                case \"value\":\n                  break;\n                case \"defaultValue\":\n                  lastDefaultValue = lastProp;\n                default:\n                  nextProps.hasOwnProperty(propKey) ||\n                    setProp(\n                      domElement,\n                      tag,\n                      propKey,\n                      null,\n                      nextProps,\n                      lastProp\n                    );\n              }\n          }\n          for (var _propKey8 in nextProps) {\n            var propKey = nextProps[_propKey8];\n            lastProp = lastProps[_propKey8];\n            if (\n              nextProps.hasOwnProperty(_propKey8) &&\n              (null != propKey || null != lastProp)\n            )\n              switch (_propKey8) {\n                case \"type\":\n                  type = propKey;\n                  break;\n                case \"name\":\n                  name = propKey;\n                  break;\n                case \"checked\":\n                  checked = propKey;\n                  break;\n                case \"defaultChecked\":\n                  defaultChecked = propKey;\n                  break;\n                case \"value\":\n                  value = propKey;\n                  break;\n                case \"defaultValue\":\n                  defaultValue = propKey;\n                  break;\n                case \"children\":\n                case \"dangerouslySetInnerHTML\":\n                  if (null != propKey)\n                    throw Error(\n                      tag +\n                        \" is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n                    );\n                  break;\n                default:\n                  propKey !== lastProp &&\n                    setProp(\n                      domElement,\n                      tag,\n                      _propKey8,\n                      propKey,\n                      nextProps,\n                      lastProp\n                    );\n              }\n          }\n          tag =\n            \"checkbox\" === lastProps.type || \"radio\" === lastProps.type\n              ? null != lastProps.checked\n              : null != lastProps.value;\n          nextProps =\n            \"checkbox\" === nextProps.type || \"radio\" === nextProps.type\n              ? null != nextProps.checked\n              : null != nextProps.value;\n          tag ||\n            !nextProps ||\n            didWarnUncontrolledToControlled ||\n            (console.error(\n              \"A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://react.dev/link/controlled-components\"\n            ),\n            (didWarnUncontrolledToControlled = !0));\n          !tag ||\n            nextProps ||\n            didWarnControlledToUncontrolled ||\n            (console.error(\n              \"A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://react.dev/link/controlled-components\"\n            ),\n            (didWarnControlledToUncontrolled = !0));\n          updateInput(\n            domElement,\n            value,\n            defaultValue,\n            lastDefaultValue,\n            checked,\n            defaultChecked,\n            type,\n            name\n          );\n          return;\n        case \"select\":\n          propKey = value = defaultValue = _propKey8 = null;\n          for (type in lastProps)\n            if (\n              ((lastDefaultValue = lastProps[type]),\n              lastProps.hasOwnProperty(type) && null != lastDefaultValue)\n            )\n              switch (type) {\n                case \"value\":\n                  break;\n                case \"multiple\":\n                  propKey = lastDefaultValue;\n                default:\n                  nextProps.hasOwnProperty(type) ||\n                    setProp(\n                      domElement,\n                      tag,\n                      type,\n                      null,\n                      nextProps,\n                      lastDefaultValue\n                    );\n              }\n          for (name in nextProps)\n            if (\n              ((type = nextProps[name]),\n              (lastDefaultValue = lastProps[name]),\n              nextProps.hasOwnProperty(name) &&\n                (null != type || null != lastDefaultValue))\n            )\n              switch (name) {\n                case \"value\":\n                  _propKey8 = type;\n                  break;\n                case \"defaultValue\":\n                  defaultValue = type;\n                  break;\n                case \"multiple\":\n                  value = type;\n                default:\n                  type !== lastDefaultValue &&\n                    setProp(\n                      domElement,\n                      tag,\n                      name,\n                      type,\n                      nextProps,\n                      lastDefaultValue\n                    );\n              }\n          nextProps = defaultValue;\n          tag = value;\n          lastProps = propKey;\n          null != _propKey8\n            ? updateOptions(domElement, !!tag, _propKey8, !1)\n            : !!lastProps !== !!tag &&\n              (null != nextProps\n                ? updateOptions(domElement, !!tag, nextProps, !0)\n                : updateOptions(domElement, !!tag, tag ? [] : \"\", !1));\n          return;\n        case \"textarea\":\n          propKey = _propKey8 = null;\n          for (defaultValue in lastProps)\n            if (\n              ((name = lastProps[defaultValue]),\n              lastProps.hasOwnProperty(defaultValue) &&\n                null != name &&\n                !nextProps.hasOwnProperty(defaultValue))\n            )\n              switch (defaultValue) {\n                case \"value\":\n                  break;\n                case \"children\":\n                  break;\n                default:\n                  setProp(domElement, tag, defaultValue, null, nextProps, name);\n              }\n          for (value in nextProps)\n            if (\n              ((name = nextProps[value]),\n              (type = lastProps[value]),\n              nextProps.hasOwnProperty(value) && (null != name || null != type))\n            )\n              switch (value) {\n                case \"value\":\n                  _propKey8 = name;\n                  break;\n                case \"defaultValue\":\n                  propKey = name;\n                  break;\n                case \"children\":\n                  break;\n                case \"dangerouslySetInnerHTML\":\n                  if (null != name)\n                    throw Error(\n                      \"`dangerouslySetInnerHTML` does not make sense on <textarea>.\"\n                    );\n                  break;\n                default:\n                  name !== type &&\n                    setProp(domElement, tag, value, name, nextProps, type);\n              }\n          updateTextarea(domElement, _propKey8, propKey);\n          return;\n        case \"option\":\n          for (var _propKey13 in lastProps)\n            if (\n              ((_propKey8 = lastProps[_propKey13]),\n              lastProps.hasOwnProperty(_propKey13) &&\n                null != _propKey8 &&\n                !nextProps.hasOwnProperty(_propKey13))\n            )\n              switch (_propKey13) {\n                case \"selected\":\n                  domElement.selected = !1;\n                  break;\n                default:\n                  setProp(\n                    domElement,\n                    tag,\n                    _propKey13,\n                    null,\n                    nextProps,\n                    _propKey8\n                  );\n              }\n          for (lastDefaultValue in nextProps)\n            if (\n              ((_propKey8 = nextProps[lastDefaultValue]),\n              (propKey = lastProps[lastDefaultValue]),\n              nextProps.hasOwnProperty(lastDefaultValue) &&\n                _propKey8 !== propKey &&\n                (null != _propKey8 || null != propKey))\n            )\n              switch (lastDefaultValue) {\n                case \"selected\":\n                  domElement.selected =\n                    _propKey8 &&\n                    \"function\" !== typeof _propKey8 &&\n                    \"symbol\" !== typeof _propKey8;\n                  break;\n                default:\n                  setProp(\n                    domElement,\n                    tag,\n                    lastDefaultValue,\n                    _propKey8,\n                    nextProps,\n                    propKey\n                  );\n              }\n          return;\n        case \"img\":\n        case \"link\":\n        case \"area\":\n        case \"base\":\n        case \"br\":\n        case \"col\":\n        case \"embed\":\n        case \"hr\":\n        case \"keygen\":\n        case \"meta\":\n        case \"param\":\n        case \"source\":\n        case \"track\":\n        case \"wbr\":\n        case \"menuitem\":\n          for (var _propKey15 in lastProps)\n            (_propKey8 = lastProps[_propKey15]),\n              lastProps.hasOwnProperty(_propKey15) &&\n                null != _propKey8 &&\n                !nextProps.hasOwnProperty(_propKey15) &&\n                setProp(\n                  domElement,\n                  tag,\n                  _propKey15,\n                  null,\n                  nextProps,\n                  _propKey8\n                );\n          for (checked in nextProps)\n            if (\n              ((_propKey8 = nextProps[checked]),\n              (propKey = lastProps[checked]),\n              nextProps.hasOwnProperty(checked) &&\n                _propKey8 !== propKey &&\n                (null != _propKey8 || null != propKey))\n            )\n              switch (checked) {\n                case \"children\":\n                case \"dangerouslySetInnerHTML\":\n                  if (null != _propKey8)\n                    throw Error(\n                      tag +\n                        \" is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n                    );\n                  break;\n                default:\n                  setProp(\n                    domElement,\n                    tag,\n                    checked,\n                    _propKey8,\n                    nextProps,\n                    propKey\n                  );\n              }\n          return;\n        default:\n          if (isCustomElement(tag)) {\n            for (var _propKey17 in lastProps)\n              (_propKey8 = lastProps[_propKey17]),\n                lastProps.hasOwnProperty(_propKey17) &&\n                  void 0 !== _propKey8 &&\n                  !nextProps.hasOwnProperty(_propKey17) &&\n                  setPropOnCustomElement(\n                    domElement,\n                    tag,\n                    _propKey17,\n                    void 0,\n                    nextProps,\n                    _propKey8\n                  );\n            for (defaultChecked in nextProps)\n              (_propKey8 = nextProps[defaultChecked]),\n                (propKey = lastProps[defaultChecked]),\n                !nextProps.hasOwnProperty(defaultChecked) ||\n                  _propKey8 === propKey ||\n                  (void 0 === _propKey8 && void 0 === propKey) ||\n                  setPropOnCustomElement(\n                    domElement,\n                    tag,\n                    defaultChecked,\n                    _propKey8,\n                    nextProps,\n                    propKey\n                  );\n            return;\n          }\n      }\n      for (var _propKey19 in lastProps)\n        (_propKey8 = lastProps[_propKey19]),\n          lastProps.hasOwnProperty(_propKey19) &&\n            null != _propKey8 &&\n            !nextProps.hasOwnProperty(_propKey19) &&\n            setProp(domElement, tag, _propKey19, null, nextProps, _propKey8);\n      for (lastProp in nextProps)\n        (_propKey8 = nextProps[lastProp]),\n          (propKey = lastProps[lastProp]),\n          !nextProps.hasOwnProperty(lastProp) ||\n            _propKey8 === propKey ||\n            (null == _propKey8 && null == propKey) ||\n            setProp(domElement, tag, lastProp, _propKey8, nextProps, propKey);\n    }\n    function getPropNameFromAttributeName(attrName) {\n      switch (attrName) {\n        case \"class\":\n          return \"className\";\n        case \"for\":\n          return \"htmlFor\";\n        default:\n          return attrName;\n      }\n    }\n    function getStylesObjectFromElement(domElement) {\n      var serverValueInObjectForm = {};\n      domElement = domElement.style;\n      for (var i = 0; i < domElement.length; i++) {\n        var styleName = domElement[i];\n        serverValueInObjectForm[styleName] =\n          domElement.getPropertyValue(styleName);\n      }\n      return serverValueInObjectForm;\n    }\n    function diffHydratedStyles(domElement, value$jscomp$0, serverDifferences) {\n      if (null != value$jscomp$0 && \"object\" !== typeof value$jscomp$0)\n        console.error(\n          \"The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.\"\n        );\n      else {\n        var clientValue;\n        var delimiter = (clientValue = \"\"),\n          styleName;\n        for (styleName in value$jscomp$0)\n          if (value$jscomp$0.hasOwnProperty(styleName)) {\n            var value = value$jscomp$0[styleName];\n            null != value &&\n              \"boolean\" !== typeof value &&\n              \"\" !== value &&\n              (0 === styleName.indexOf(\"--\")\n                ? (checkCSSPropertyStringCoercion(value, styleName),\n                  (clientValue +=\n                    delimiter + styleName + \":\" + (\"\" + value).trim()))\n                : \"number\" !== typeof value ||\n                    0 === value ||\n                    unitlessNumbers.has(styleName)\n                  ? (checkCSSPropertyStringCoercion(value, styleName),\n                    (clientValue +=\n                      delimiter +\n                      styleName\n                        .replace(uppercasePattern, \"-$1\")\n                        .toLowerCase()\n                        .replace(msPattern$1, \"-ms-\") +\n                      \":\" +\n                      (\"\" + value).trim()))\n                  : (clientValue +=\n                      delimiter +\n                      styleName\n                        .replace(uppercasePattern, \"-$1\")\n                        .toLowerCase()\n                        .replace(msPattern$1, \"-ms-\") +\n                      \":\" +\n                      value +\n                      \"px\"),\n              (delimiter = \";\"));\n          }\n        clientValue = clientValue || null;\n        value$jscomp$0 = domElement.getAttribute(\"style\");\n        value$jscomp$0 !== clientValue &&\n          ((clientValue = normalizeMarkupForTextOrAttribute(clientValue)),\n          normalizeMarkupForTextOrAttribute(value$jscomp$0) !== clientValue &&\n            (serverDifferences.style = getStylesObjectFromElement(domElement)));\n      }\n    }\n    function hydrateAttribute(\n      domElement,\n      propKey,\n      attributeName,\n      value,\n      extraAttributes,\n      serverDifferences\n    ) {\n      extraAttributes.delete(attributeName);\n      domElement = domElement.getAttribute(attributeName);\n      if (null === domElement)\n        switch (typeof value) {\n          case \"undefined\":\n          case \"function\":\n          case \"symbol\":\n          case \"boolean\":\n            return;\n        }\n      else if (null != value)\n        switch (typeof value) {\n          case \"function\":\n          case \"symbol\":\n          case \"boolean\":\n            break;\n          default:\n            if (\n              (checkAttributeStringCoercion(value, propKey),\n              domElement === \"\" + value)\n            )\n              return;\n        }\n      warnForPropDifference(propKey, domElement, value, serverDifferences);\n    }\n    function hydrateBooleanAttribute(\n      domElement,\n      propKey,\n      attributeName,\n      value,\n      extraAttributes,\n      serverDifferences\n    ) {\n      extraAttributes.delete(attributeName);\n      domElement = domElement.getAttribute(attributeName);\n      if (null === domElement) {\n        switch (typeof value) {\n          case \"function\":\n          case \"symbol\":\n            return;\n        }\n        if (!value) return;\n      } else\n        switch (typeof value) {\n          case \"function\":\n          case \"symbol\":\n            break;\n          default:\n            if (value) return;\n        }\n      warnForPropDifference(propKey, domElement, value, serverDifferences);\n    }\n    function hydrateBooleanishAttribute(\n      domElement,\n      propKey,\n      attributeName,\n      value,\n      extraAttributes,\n      serverDifferences\n    ) {\n      extraAttributes.delete(attributeName);\n      domElement = domElement.getAttribute(attributeName);\n      if (null === domElement)\n        switch (typeof value) {\n          case \"undefined\":\n          case \"function\":\n          case \"symbol\":\n            return;\n        }\n      else if (null != value)\n        switch (typeof value) {\n          case \"function\":\n          case \"symbol\":\n            break;\n          default:\n            if (\n              (checkAttributeStringCoercion(value, attributeName),\n              domElement === \"\" + value)\n            )\n              return;\n        }\n      warnForPropDifference(propKey, domElement, value, serverDifferences);\n    }\n    function hydrateNumericAttribute(\n      domElement,\n      propKey,\n      attributeName,\n      value,\n      extraAttributes,\n      serverDifferences\n    ) {\n      extraAttributes.delete(attributeName);\n      domElement = domElement.getAttribute(attributeName);\n      if (null === domElement)\n        switch (typeof value) {\n          case \"undefined\":\n          case \"function\":\n          case \"symbol\":\n          case \"boolean\":\n            return;\n          default:\n            if (isNaN(value)) return;\n        }\n      else if (null != value)\n        switch (typeof value) {\n          case \"function\":\n          case \"symbol\":\n          case \"boolean\":\n            break;\n          default:\n            if (\n              !isNaN(value) &&\n              (checkAttributeStringCoercion(value, propKey),\n              domElement === \"\" + value)\n            )\n              return;\n        }\n      warnForPropDifference(propKey, domElement, value, serverDifferences);\n    }\n    function hydrateSanitizedAttribute(\n      domElement,\n      propKey,\n      attributeName,\n      value,\n      extraAttributes,\n      serverDifferences\n    ) {\n      extraAttributes.delete(attributeName);\n      domElement = domElement.getAttribute(attributeName);\n      if (null === domElement)\n        switch (typeof value) {\n          case \"undefined\":\n          case \"function\":\n          case \"symbol\":\n          case \"boolean\":\n            return;\n        }\n      else if (null != value)\n        switch (typeof value) {\n          case \"function\":\n          case \"symbol\":\n          case \"boolean\":\n            break;\n          default:\n            if (\n              (checkAttributeStringCoercion(value, propKey),\n              (attributeName = sanitizeURL(\"\" + value)),\n              domElement === attributeName)\n            )\n              return;\n        }\n      warnForPropDifference(propKey, domElement, value, serverDifferences);\n    }\n    function diffHydratedProperties(domElement, tag, props, hostContext) {\n      for (\n        var serverDifferences = {},\n          extraAttributes = new Set(),\n          attributes = domElement.attributes,\n          i = 0;\n        i < attributes.length;\n        i++\n      )\n        switch (attributes[i].name.toLowerCase()) {\n          case \"value\":\n            break;\n          case \"checked\":\n            break;\n          case \"selected\":\n            break;\n          default:\n            extraAttributes.add(attributes[i].name);\n        }\n      if (isCustomElement(tag))\n        for (var propKey in props) {\n          if (props.hasOwnProperty(propKey)) {\n            var value = props[propKey];\n            if (null != value)\n              if (registrationNameDependencies.hasOwnProperty(propKey))\n                \"function\" !== typeof value &&\n                  warnForInvalidEventListener(propKey, value);\n              else if (!0 !== props.suppressHydrationWarning)\n                switch (propKey) {\n                  case \"children\":\n                    (\"string\" !== typeof value && \"number\" !== typeof value) ||\n                      warnForPropDifference(\n                        \"children\",\n                        domElement.textContent,\n                        value,\n                        serverDifferences\n                      );\n                    continue;\n                  case \"suppressContentEditableWarning\":\n                  case \"suppressHydrationWarning\":\n                  case \"defaultValue\":\n                  case \"defaultChecked\":\n                  case \"innerHTML\":\n                  case \"ref\":\n                    continue;\n                  case \"dangerouslySetInnerHTML\":\n                    attributes = domElement.innerHTML;\n                    value = value ? value.__html : void 0;\n                    null != value &&\n                      ((value = normalizeHTML(domElement, value)),\n                      warnForPropDifference(\n                        propKey,\n                        attributes,\n                        value,\n                        serverDifferences\n                      ));\n                    continue;\n                  case \"style\":\n                    extraAttributes.delete(propKey);\n                    diffHydratedStyles(domElement, value, serverDifferences);\n                    continue;\n                  case \"offsetParent\":\n                  case \"offsetTop\":\n                  case \"offsetLeft\":\n                  case \"offsetWidth\":\n                  case \"offsetHeight\":\n                  case \"isContentEditable\":\n                  case \"outerText\":\n                  case \"outerHTML\":\n                    extraAttributes.delete(propKey.toLowerCase());\n                    console.error(\n                      \"Assignment to read-only property will result in a no-op: `%s`\",\n                      propKey\n                    );\n                    continue;\n                  case \"className\":\n                    extraAttributes.delete(\"class\");\n                    attributes = getValueForAttributeOnCustomComponent(\n                      domElement,\n                      \"class\",\n                      value\n                    );\n                    warnForPropDifference(\n                      \"className\",\n                      attributes,\n                      value,\n                      serverDifferences\n                    );\n                    continue;\n                  default:\n                    hostContext.context === HostContextNamespaceNone &&\n                    \"svg\" !== tag &&\n                    \"math\" !== tag\n                      ? extraAttributes.delete(propKey.toLowerCase())\n                      : extraAttributes.delete(propKey),\n                      (attributes = getValueForAttributeOnCustomComponent(\n                        domElement,\n                        propKey,\n                        value\n                      )),\n                      warnForPropDifference(\n                        propKey,\n                        attributes,\n                        value,\n                        serverDifferences\n                      );\n                }\n          }\n        }\n      else\n        for (value in props)\n          if (\n            props.hasOwnProperty(value) &&\n            ((propKey = props[value]), null != propKey)\n          )\n            if (registrationNameDependencies.hasOwnProperty(value))\n              \"function\" !== typeof propKey &&\n                warnForInvalidEventListener(value, propKey);\n            else if (!0 !== props.suppressHydrationWarning)\n              switch (value) {\n                case \"children\":\n                  (\"string\" !== typeof propKey &&\n                    \"number\" !== typeof propKey) ||\n                    warnForPropDifference(\n                      \"children\",\n                      domElement.textContent,\n                      propKey,\n                      serverDifferences\n                    );\n                  continue;\n                case \"suppressContentEditableWarning\":\n                case \"suppressHydrationWarning\":\n                case \"value\":\n                case \"checked\":\n                case \"selected\":\n                case \"defaultValue\":\n                case \"defaultChecked\":\n                case \"innerHTML\":\n                case \"ref\":\n                  continue;\n                case \"dangerouslySetInnerHTML\":\n                  attributes = domElement.innerHTML;\n                  propKey = propKey ? propKey.__html : void 0;\n                  null != propKey &&\n                    ((propKey = normalizeHTML(domElement, propKey)),\n                    attributes !== propKey &&\n                      (serverDifferences[value] = { __html: attributes }));\n                  continue;\n                case \"className\":\n                  hydrateAttribute(\n                    domElement,\n                    value,\n                    \"class\",\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"tabIndex\":\n                  hydrateAttribute(\n                    domElement,\n                    value,\n                    \"tabindex\",\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"style\":\n                  extraAttributes.delete(value);\n                  diffHydratedStyles(domElement, propKey, serverDifferences);\n                  continue;\n                case \"multiple\":\n                  extraAttributes.delete(value);\n                  warnForPropDifference(\n                    value,\n                    domElement.multiple,\n                    propKey,\n                    serverDifferences\n                  );\n                  continue;\n                case \"muted\":\n                  extraAttributes.delete(value);\n                  warnForPropDifference(\n                    value,\n                    domElement.muted,\n                    propKey,\n                    serverDifferences\n                  );\n                  continue;\n                case \"autoFocus\":\n                  extraAttributes.delete(\"autofocus\");\n                  warnForPropDifference(\n                    value,\n                    domElement.autofocus,\n                    propKey,\n                    serverDifferences\n                  );\n                  continue;\n                case \"data\":\n                  if (\"object\" !== tag) {\n                    extraAttributes.delete(value);\n                    attributes = domElement.getAttribute(\"data\");\n                    warnForPropDifference(\n                      value,\n                      attributes,\n                      propKey,\n                      serverDifferences\n                    );\n                    continue;\n                  }\n                case \"src\":\n                case \"href\":\n                  if (\n                    !(\n                      \"\" !== propKey ||\n                      (\"a\" === tag && \"href\" === value) ||\n                      (\"object\" === tag && \"data\" === value)\n                    )\n                  ) {\n                    \"src\" === value\n                      ? console.error(\n                          'An empty string (\"\") was passed to the %s attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to %s instead of an empty string.',\n                          value,\n                          value\n                        )\n                      : console.error(\n                          'An empty string (\"\") was passed to the %s attribute. To fix this, either do not render the element at all or pass null to %s instead of an empty string.',\n                          value,\n                          value\n                        );\n                    continue;\n                  }\n                  hydrateSanitizedAttribute(\n                    domElement,\n                    value,\n                    value,\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"action\":\n                case \"formAction\":\n                  attributes = domElement.getAttribute(value);\n                  if (\"function\" === typeof propKey) {\n                    extraAttributes.delete(value.toLowerCase());\n                    \"formAction\" === value\n                      ? (extraAttributes.delete(\"name\"),\n                        extraAttributes.delete(\"formenctype\"),\n                        extraAttributes.delete(\"formmethod\"),\n                        extraAttributes.delete(\"formtarget\"))\n                      : (extraAttributes.delete(\"enctype\"),\n                        extraAttributes.delete(\"method\"),\n                        extraAttributes.delete(\"target\"));\n                    continue;\n                  } else if (attributes === EXPECTED_FORM_ACTION_URL) {\n                    extraAttributes.delete(value.toLowerCase());\n                    warnForPropDifference(\n                      value,\n                      \"function\",\n                      propKey,\n                      serverDifferences\n                    );\n                    continue;\n                  }\n                  hydrateSanitizedAttribute(\n                    domElement,\n                    value,\n                    value.toLowerCase(),\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"xlinkHref\":\n                  hydrateSanitizedAttribute(\n                    domElement,\n                    value,\n                    \"xlink:href\",\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"contentEditable\":\n                  hydrateBooleanishAttribute(\n                    domElement,\n                    value,\n                    \"contenteditable\",\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"spellCheck\":\n                  hydrateBooleanishAttribute(\n                    domElement,\n                    value,\n                    \"spellcheck\",\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"draggable\":\n                case \"autoReverse\":\n                case \"externalResourcesRequired\":\n                case \"focusable\":\n                case \"preserveAlpha\":\n                  hydrateBooleanishAttribute(\n                    domElement,\n                    value,\n                    value,\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"allowFullScreen\":\n                case \"async\":\n                case \"autoPlay\":\n                case \"controls\":\n                case \"default\":\n                case \"defer\":\n                case \"disabled\":\n                case \"disablePictureInPicture\":\n                case \"disableRemotePlayback\":\n                case \"formNoValidate\":\n                case \"hidden\":\n                case \"loop\":\n                case \"noModule\":\n                case \"noValidate\":\n                case \"open\":\n                case \"playsInline\":\n                case \"readOnly\":\n                case \"required\":\n                case \"reversed\":\n                case \"scoped\":\n                case \"seamless\":\n                case \"itemScope\":\n                  hydrateBooleanAttribute(\n                    domElement,\n                    value,\n                    value.toLowerCase(),\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"capture\":\n                case \"download\":\n                  a: {\n                    i = domElement;\n                    var attributeName = (attributes = value),\n                      serverDifferences$jscomp$0 = serverDifferences;\n                    extraAttributes.delete(attributeName);\n                    i = i.getAttribute(attributeName);\n                    if (null === i)\n                      switch (typeof propKey) {\n                        case \"undefined\":\n                        case \"function\":\n                        case \"symbol\":\n                          break a;\n                        default:\n                          if (!1 === propKey) break a;\n                      }\n                    else if (null != propKey)\n                      switch (typeof propKey) {\n                        case \"function\":\n                        case \"symbol\":\n                          break;\n                        case \"boolean\":\n                          if (!0 === propKey && \"\" === i) break a;\n                          break;\n                        default:\n                          if (\n                            (checkAttributeStringCoercion(propKey, attributes),\n                            i === \"\" + propKey)\n                          )\n                            break a;\n                      }\n                    warnForPropDifference(\n                      attributes,\n                      i,\n                      propKey,\n                      serverDifferences$jscomp$0\n                    );\n                  }\n                  continue;\n                case \"cols\":\n                case \"rows\":\n                case \"size\":\n                case \"span\":\n                  a: {\n                    i = domElement;\n                    attributeName = attributes = value;\n                    serverDifferences$jscomp$0 = serverDifferences;\n                    extraAttributes.delete(attributeName);\n                    i = i.getAttribute(attributeName);\n                    if (null === i)\n                      switch (typeof propKey) {\n                        case \"undefined\":\n                        case \"function\":\n                        case \"symbol\":\n                        case \"boolean\":\n                          break a;\n                        default:\n                          if (isNaN(propKey) || 1 > propKey) break a;\n                      }\n                    else if (null != propKey)\n                      switch (typeof propKey) {\n                        case \"function\":\n                        case \"symbol\":\n                        case \"boolean\":\n                          break;\n                        default:\n                          if (\n                            !(isNaN(propKey) || 1 > propKey) &&\n                            (checkAttributeStringCoercion(propKey, attributes),\n                            i === \"\" + propKey)\n                          )\n                            break a;\n                      }\n                    warnForPropDifference(\n                      attributes,\n                      i,\n                      propKey,\n                      serverDifferences$jscomp$0\n                    );\n                  }\n                  continue;\n                case \"rowSpan\":\n                  hydrateNumericAttribute(\n                    domElement,\n                    value,\n                    \"rowspan\",\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"start\":\n                  hydrateNumericAttribute(\n                    domElement,\n                    value,\n                    value,\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"xHeight\":\n                  hydrateAttribute(\n                    domElement,\n                    value,\n                    \"x-height\",\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"xlinkActuate\":\n                  hydrateAttribute(\n                    domElement,\n                    value,\n                    \"xlink:actuate\",\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"xlinkArcrole\":\n                  hydrateAttribute(\n                    domElement,\n                    value,\n                    \"xlink:arcrole\",\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"xlinkRole\":\n                  hydrateAttribute(\n                    domElement,\n                    value,\n                    \"xlink:role\",\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"xlinkShow\":\n                  hydrateAttribute(\n                    domElement,\n                    value,\n                    \"xlink:show\",\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"xlinkTitle\":\n                  hydrateAttribute(\n                    domElement,\n                    value,\n                    \"xlink:title\",\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"xlinkType\":\n                  hydrateAttribute(\n                    domElement,\n                    value,\n                    \"xlink:type\",\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"xmlBase\":\n                  hydrateAttribute(\n                    domElement,\n                    value,\n                    \"xml:base\",\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"xmlLang\":\n                  hydrateAttribute(\n                    domElement,\n                    value,\n                    \"xml:lang\",\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"xmlSpace\":\n                  hydrateAttribute(\n                    domElement,\n                    value,\n                    \"xml:space\",\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                case \"inert\":\n                  \"\" !== propKey ||\n                    didWarnForNewBooleanPropsWithEmptyValue[value] ||\n                    ((didWarnForNewBooleanPropsWithEmptyValue[value] = !0),\n                    console.error(\n                      \"Received an empty string for a boolean attribute `%s`. This will treat the attribute as if it were false. Either pass `false` to silence this warning, or pass `true` if you used an empty string in earlier versions of React to indicate this attribute is true.\",\n                      value\n                    ));\n                  hydrateBooleanAttribute(\n                    domElement,\n                    value,\n                    value,\n                    propKey,\n                    extraAttributes,\n                    serverDifferences\n                  );\n                  continue;\n                default:\n                  if (\n                    !(2 < value.length) ||\n                    (\"o\" !== value[0] && \"O\" !== value[0]) ||\n                    (\"n\" !== value[1] && \"N\" !== value[1])\n                  ) {\n                    i = getAttributeAlias(value);\n                    attributes = !1;\n                    hostContext.context === HostContextNamespaceNone &&\n                    \"svg\" !== tag &&\n                    \"math\" !== tag\n                      ? extraAttributes.delete(i.toLowerCase())\n                      : ((attributeName = value.toLowerCase()),\n                        (attributeName = possibleStandardNames.hasOwnProperty(\n                          attributeName\n                        )\n                          ? possibleStandardNames[attributeName] || null\n                          : null),\n                        null !== attributeName &&\n                          attributeName !== value &&\n                          ((attributes = !0),\n                          extraAttributes.delete(attributeName)),\n                        extraAttributes.delete(i));\n                    a: if (\n                      ((attributeName = domElement),\n                      (serverDifferences$jscomp$0 = i),\n                      (i = propKey),\n                      isAttributeNameSafe(serverDifferences$jscomp$0))\n                    )\n                      if (\n                        attributeName.hasAttribute(serverDifferences$jscomp$0)\n                      )\n                        (attributeName = attributeName.getAttribute(\n                          serverDifferences$jscomp$0\n                        )),\n                          checkAttributeStringCoercion(\n                            i,\n                            serverDifferences$jscomp$0\n                          ),\n                          (i = attributeName === \"\" + i ? i : attributeName);\n                      else {\n                        switch (typeof i) {\n                          case \"function\":\n                          case \"symbol\":\n                            break a;\n                          case \"boolean\":\n                            if (\n                              ((attributeName = serverDifferences$jscomp$0\n                                .toLowerCase()\n                                .slice(0, 5)),\n                              \"data-\" !== attributeName &&\n                                \"aria-\" !== attributeName)\n                            )\n                              break a;\n                        }\n                        i = void 0 === i ? void 0 : null;\n                      }\n                    else i = void 0;\n                    attributes ||\n                      warnForPropDifference(\n                        value,\n                        i,\n                        propKey,\n                        serverDifferences\n                      );\n                  }\n              }\n      0 < extraAttributes.size &&\n        !0 !== props.suppressHydrationWarning &&\n        warnForExtraAttributes(domElement, extraAttributes, serverDifferences);\n      return 0 === Object.keys(serverDifferences).length\n        ? null\n        : serverDifferences;\n    }\n    function propNamesListJoin(list, combinator) {\n      switch (list.length) {\n        case 0:\n          return \"\";\n        case 1:\n          return list[0];\n        case 2:\n          return list[0] + \" \" + combinator + \" \" + list[1];\n        default:\n          return (\n            list.slice(0, -1).join(\", \") +\n            \", \" +\n            combinator +\n            \" \" +\n            list[list.length - 1]\n          );\n      }\n    }\n    function getOwnerDocumentFromRootContainer(rootContainerElement) {\n      return 9 === rootContainerElement.nodeType\n        ? rootContainerElement\n        : rootContainerElement.ownerDocument;\n    }\n    function getOwnHostContext(namespaceURI) {\n      switch (namespaceURI) {\n        case SVG_NAMESPACE:\n          return HostContextNamespaceSvg;\n        case MATH_NAMESPACE:\n          return HostContextNamespaceMath;\n        default:\n          return HostContextNamespaceNone;\n      }\n    }\n    function getChildHostContextProd(parentNamespace, type) {\n      if (parentNamespace === HostContextNamespaceNone)\n        switch (type) {\n          case \"svg\":\n            return HostContextNamespaceSvg;\n          case \"math\":\n            return HostContextNamespaceMath;\n          default:\n            return HostContextNamespaceNone;\n        }\n      return parentNamespace === HostContextNamespaceSvg &&\n        \"foreignObject\" === type\n        ? HostContextNamespaceNone\n        : parentNamespace;\n    }\n    function shouldSetTextContent(type, props) {\n      return (\n        \"textarea\" === type ||\n        \"noscript\" === type ||\n        \"string\" === typeof props.children ||\n        \"number\" === typeof props.children ||\n        \"bigint\" === typeof props.children ||\n        (\"object\" === typeof props.dangerouslySetInnerHTML &&\n          null !== props.dangerouslySetInnerHTML &&\n          null != props.dangerouslySetInnerHTML.__html)\n      );\n    }\n    function shouldAttemptEagerTransition() {\n      var event = window.event;\n      if (event && \"popstate\" === event.type) {\n        if (event === currentPopstateTransitionEvent) return !1;\n        currentPopstateTransitionEvent = event;\n        return !0;\n      }\n      currentPopstateTransitionEvent = null;\n      return !1;\n    }\n    function handleErrorInNextTick(error) {\n      setTimeout(function () {\n        throw error;\n      });\n    }\n    function commitMount(domElement, type, newProps) {\n      switch (type) {\n        case \"button\":\n        case \"input\":\n        case \"select\":\n        case \"textarea\":\n          newProps.autoFocus && domElement.focus();\n          break;\n        case \"img\":\n          newProps.src\n            ? (domElement.src = newProps.src)\n            : newProps.srcSet && (domElement.srcset = newProps.srcSet);\n      }\n    }\n    function commitUpdate(domElement, type, oldProps, newProps) {\n      updateProperties(domElement, type, oldProps, newProps);\n      domElement[internalPropsKey] = newProps;\n    }\n    function resetTextContent(domElement) {\n      setTextContent(domElement, \"\");\n    }\n    function commitTextUpdate(textInstance, oldText, newText) {\n      textInstance.nodeValue = newText;\n    }\n    function isSingletonScope(type) {\n      return \"head\" === type;\n    }\n    function removeChild(parentInstance, child) {\n      parentInstance.removeChild(child);\n    }\n    function removeChildFromContainer(container, child) {\n      (9 === container.nodeType\n        ? container.body\n        : \"HTML\" === container.nodeName\n          ? container.ownerDocument.body\n          : container\n      ).removeChild(child);\n    }\n    function clearSuspenseBoundary(parentInstance, suspenseInstance) {\n      var node = suspenseInstance,\n        possiblePreambleContribution = 0,\n        depth = 0;\n      do {\n        var nextNode = node.nextSibling;\n        parentInstance.removeChild(node);\n        if (nextNode && 8 === nextNode.nodeType)\n          if (((node = nextNode.data), node === SUSPENSE_END_DATA)) {\n            if (\n              0 < possiblePreambleContribution &&\n              8 > possiblePreambleContribution\n            ) {\n              node = possiblePreambleContribution;\n              var ownerDocument = parentInstance.ownerDocument;\n              node & PREAMBLE_CONTRIBUTION_HTML &&\n                releaseSingletonInstance(ownerDocument.documentElement);\n              node & PREAMBLE_CONTRIBUTION_BODY &&\n                releaseSingletonInstance(ownerDocument.body);\n              if (node & PREAMBLE_CONTRIBUTION_HEAD)\n                for (\n                  node = ownerDocument.head,\n                    releaseSingletonInstance(node),\n                    ownerDocument = node.firstChild;\n                  ownerDocument;\n\n                ) {\n                  var nextNode$jscomp$0 = ownerDocument.nextSibling,\n                    nodeName = ownerDocument.nodeName;\n                  ownerDocument[internalHoistableMarker] ||\n                    \"SCRIPT\" === nodeName ||\n                    \"STYLE\" === nodeName ||\n                    (\"LINK\" === nodeName &&\n                      \"stylesheet\" === ownerDocument.rel.toLowerCase()) ||\n                    node.removeChild(ownerDocument);\n                  ownerDocument = nextNode$jscomp$0;\n                }\n            }\n            if (0 === depth) {\n              parentInstance.removeChild(nextNode);\n              retryIfBlockedOn(suspenseInstance);\n              return;\n            }\n            depth--;\n          } else\n            node === SUSPENSE_START_DATA ||\n            node === SUSPENSE_PENDING_START_DATA ||\n            node === SUSPENSE_FALLBACK_START_DATA\n              ? depth++\n              : (possiblePreambleContribution = node.charCodeAt(0) - 48);\n        else possiblePreambleContribution = 0;\n        node = nextNode;\n      } while (node);\n      retryIfBlockedOn(suspenseInstance);\n    }\n    function hideInstance(instance) {\n      instance = instance.style;\n      \"function\" === typeof instance.setProperty\n        ? instance.setProperty(\"display\", \"none\", \"important\")\n        : (instance.display = \"none\");\n    }\n    function hideTextInstance(textInstance) {\n      textInstance.nodeValue = \"\";\n    }\n    function unhideInstance(instance, props) {\n      props = props[STYLE];\n      props =\n        void 0 !== props && null !== props && props.hasOwnProperty(\"display\")\n          ? props.display\n          : null;\n      instance.style.display =\n        null == props || \"boolean\" === typeof props ? \"\" : (\"\" + props).trim();\n    }\n    function unhideTextInstance(textInstance, text) {\n      textInstance.nodeValue = text;\n    }\n    function clearContainerSparingly(container) {\n      var nextNode = container.firstChild;\n      nextNode && 10 === nextNode.nodeType && (nextNode = nextNode.nextSibling);\n      for (; nextNode; ) {\n        var node = nextNode;\n        nextNode = nextNode.nextSibling;\n        switch (node.nodeName) {\n          case \"HTML\":\n          case \"HEAD\":\n          case \"BODY\":\n            clearContainerSparingly(node);\n            detachDeletedInstance(node);\n            continue;\n          case \"SCRIPT\":\n          case \"STYLE\":\n            continue;\n          case \"LINK\":\n            if (\"stylesheet\" === node.rel.toLowerCase()) continue;\n        }\n        container.removeChild(node);\n      }\n    }\n    function canHydrateInstance(instance, type, props, inRootOrSingleton) {\n      for (; 1 === instance.nodeType; ) {\n        var anyProps = props;\n        if (instance.nodeName.toLowerCase() !== type.toLowerCase()) {\n          if (\n            !inRootOrSingleton &&\n            (\"INPUT\" !== instance.nodeName || \"hidden\" !== instance.type)\n          )\n            break;\n        } else if (!inRootOrSingleton)\n          if (\"input\" === type && \"hidden\" === instance.type) {\n            checkAttributeStringCoercion(anyProps.name, \"name\");\n            var name = null == anyProps.name ? null : \"\" + anyProps.name;\n            if (\n              \"hidden\" === anyProps.type &&\n              instance.getAttribute(\"name\") === name\n            )\n              return instance;\n          } else return instance;\n        else if (!instance[internalHoistableMarker])\n          switch (type) {\n            case \"meta\":\n              if (!instance.hasAttribute(\"itemprop\")) break;\n              return instance;\n            case \"link\":\n              name = instance.getAttribute(\"rel\");\n              if (\n                \"stylesheet\" === name &&\n                instance.hasAttribute(\"data-precedence\")\n              )\n                break;\n              else if (\n                name !== anyProps.rel ||\n                instance.getAttribute(\"href\") !==\n                  (null == anyProps.href || \"\" === anyProps.href\n                    ? null\n                    : anyProps.href) ||\n                instance.getAttribute(\"crossorigin\") !==\n                  (null == anyProps.crossOrigin\n                    ? null\n                    : anyProps.crossOrigin) ||\n                instance.getAttribute(\"title\") !==\n                  (null == anyProps.title ? null : anyProps.title)\n              )\n                break;\n              return instance;\n            case \"style\":\n              if (instance.hasAttribute(\"data-precedence\")) break;\n              return instance;\n            case \"script\":\n              name = instance.getAttribute(\"src\");\n              if (\n                (name !== (null == anyProps.src ? null : anyProps.src) ||\n                  instance.getAttribute(\"type\") !==\n                    (null == anyProps.type ? null : anyProps.type) ||\n                  instance.getAttribute(\"crossorigin\") !==\n                    (null == anyProps.crossOrigin\n                      ? null\n                      : anyProps.crossOrigin)) &&\n                name &&\n                instance.hasAttribute(\"async\") &&\n                !instance.hasAttribute(\"itemprop\")\n              )\n                break;\n              return instance;\n            default:\n              return instance;\n          }\n        instance = getNextHydratable(instance.nextSibling);\n        if (null === instance) break;\n      }\n      return null;\n    }\n    function canHydrateTextInstance(instance, text, inRootOrSingleton) {\n      if (\"\" === text) return null;\n      for (; 3 !== instance.nodeType; ) {\n        if (\n          (1 !== instance.nodeType ||\n            \"INPUT\" !== instance.nodeName ||\n            \"hidden\" !== instance.type) &&\n          !inRootOrSingleton\n        )\n          return null;\n        instance = getNextHydratable(instance.nextSibling);\n        if (null === instance) return null;\n      }\n      return instance;\n    }\n    function isSuspenseInstanceFallback(instance) {\n      return (\n        instance.data === SUSPENSE_FALLBACK_START_DATA ||\n        (instance.data === SUSPENSE_PENDING_START_DATA &&\n          instance.ownerDocument.readyState === DOCUMENT_READY_STATE_COMPLETE)\n      );\n    }\n    function registerSuspenseInstanceRetry(instance, callback) {\n      var ownerDocument = instance.ownerDocument;\n      if (\n        instance.data !== SUSPENSE_PENDING_START_DATA ||\n        ownerDocument.readyState === DOCUMENT_READY_STATE_COMPLETE\n      )\n        callback();\n      else {\n        var listener = function () {\n          callback();\n          ownerDocument.removeEventListener(\"DOMContentLoaded\", listener);\n        };\n        ownerDocument.addEventListener(\"DOMContentLoaded\", listener);\n        instance._reactRetry = listener;\n      }\n    }\n    function getNextHydratable(node) {\n      for (; null != node; node = node.nextSibling) {\n        var nodeType = node.nodeType;\n        if (1 === nodeType || 3 === nodeType) break;\n        if (8 === nodeType) {\n          nodeType = node.data;\n          if (\n            nodeType === SUSPENSE_START_DATA ||\n            nodeType === SUSPENSE_FALLBACK_START_DATA ||\n            nodeType === SUSPENSE_PENDING_START_DATA ||\n            nodeType === FORM_STATE_IS_MATCHING ||\n            nodeType === FORM_STATE_IS_NOT_MATCHING\n          )\n            break;\n          if (nodeType === SUSPENSE_END_DATA) return null;\n        }\n      }\n      return node;\n    }\n    function describeHydratableInstanceForDevWarnings(instance) {\n      if (1 === instance.nodeType) {\n        for (\n          var JSCompiler_temp_const = instance.nodeName.toLowerCase(),\n            serverDifferences = {},\n            attributes = instance.attributes,\n            i = 0;\n          i < attributes.length;\n          i++\n        ) {\n          var attr = attributes[i];\n          serverDifferences[getPropNameFromAttributeName(attr.name)] =\n            \"style\" === attr.name.toLowerCase()\n              ? getStylesObjectFromElement(instance)\n              : attr.value;\n        }\n        return { type: JSCompiler_temp_const, props: serverDifferences };\n      }\n      return 8 === instance.nodeType\n        ? { type: \"Suspense\", props: {} }\n        : instance.nodeValue;\n    }\n    function diffHydratedTextForDevWarnings(textInstance, text, parentProps) {\n      return null === parentProps ||\n        !0 !== parentProps[SUPPRESS_HYDRATION_WARNING]\n        ? (textInstance.nodeValue === text\n            ? (textInstance = null)\n            : ((text = normalizeMarkupForTextOrAttribute(text)),\n              (textInstance =\n                normalizeMarkupForTextOrAttribute(textInstance.nodeValue) ===\n                text\n                  ? null\n                  : textInstance.nodeValue)),\n          textInstance)\n        : null;\n    }\n    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {\n      suspenseInstance = suspenseInstance.nextSibling;\n      for (var depth = 0; suspenseInstance; ) {\n        if (8 === suspenseInstance.nodeType) {\n          var data = suspenseInstance.data;\n          if (data === SUSPENSE_END_DATA) {\n            if (0 === depth)\n              return getNextHydratable(suspenseInstance.nextSibling);\n            depth--;\n          } else\n            (data !== SUSPENSE_START_DATA &&\n              data !== SUSPENSE_FALLBACK_START_DATA &&\n              data !== SUSPENSE_PENDING_START_DATA) ||\n              depth++;\n        }\n        suspenseInstance = suspenseInstance.nextSibling;\n      }\n      return null;\n    }\n    function getParentSuspenseInstance(targetInstance) {\n      targetInstance = targetInstance.previousSibling;\n      for (var depth = 0; targetInstance; ) {\n        if (8 === targetInstance.nodeType) {\n          var data = targetInstance.data;\n          if (\n            data === SUSPENSE_START_DATA ||\n            data === SUSPENSE_FALLBACK_START_DATA ||\n            data === SUSPENSE_PENDING_START_DATA\n          ) {\n            if (0 === depth) return targetInstance;\n            depth--;\n          } else data === SUSPENSE_END_DATA && depth++;\n        }\n        targetInstance = targetInstance.previousSibling;\n      }\n      return null;\n    }\n    function commitHydratedContainer(container) {\n      retryIfBlockedOn(container);\n    }\n    function commitHydratedSuspenseInstance(suspenseInstance) {\n      retryIfBlockedOn(suspenseInstance);\n    }\n    function resolveSingletonInstance(\n      type,\n      props,\n      rootContainerInstance,\n      hostContext,\n      validateDOMNestingDev\n    ) {\n      validateDOMNestingDev &&\n        validateDOMNesting(type, hostContext.ancestorInfo);\n      props = getOwnerDocumentFromRootContainer(rootContainerInstance);\n      switch (type) {\n        case \"html\":\n          type = props.documentElement;\n          if (!type)\n            throw Error(\n              \"React expected an <html> element (document.documentElement) to exist in the Document but one was not found. React never removes the documentElement for any Document it renders into so the cause is likely in some other script running on this page.\"\n            );\n          return type;\n        case \"head\":\n          type = props.head;\n          if (!type)\n            throw Error(\n              \"React expected a <head> element (document.head) to exist in the Document but one was not found. React never removes the head for any Document it renders into so the cause is likely in some other script running on this page.\"\n            );\n          return type;\n        case \"body\":\n          type = props.body;\n          if (!type)\n            throw Error(\n              \"React expected a <body> element (document.body) to exist in the Document but one was not found. React never removes the body for any Document it renders into so the cause is likely in some other script running on this page.\"\n            );\n          return type;\n        default:\n          throw Error(\n            \"resolveSingletonInstance was called with an element type that is not supported. This is a bug in React.\"\n          );\n      }\n    }\n    function acquireSingletonInstance(\n      type,\n      props,\n      instance,\n      internalInstanceHandle\n    ) {\n      if (\n        !instance[internalContainerInstanceKey] &&\n        getInstanceFromNode(instance)\n      ) {\n        var tagName = instance.tagName.toLowerCase();\n        console.error(\n          \"You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first.\",\n          tagName,\n          tagName,\n          tagName\n        );\n      }\n      switch (type) {\n        case \"html\":\n        case \"head\":\n        case \"body\":\n          break;\n        default:\n          console.error(\n            \"acquireSingletonInstance was called with an element type that is not supported. This is a bug in React.\"\n          );\n      }\n      for (tagName = instance.attributes; tagName.length; )\n        instance.removeAttributeNode(tagName[0]);\n      setInitialProperties(instance, type, props);\n      instance[internalInstanceKey] = internalInstanceHandle;\n      instance[internalPropsKey] = props;\n    }\n    function releaseSingletonInstance(instance) {\n      for (var attributes = instance.attributes; attributes.length; )\n        instance.removeAttributeNode(attributes[0]);\n      detachDeletedInstance(instance);\n    }\n    function getHoistableRoot(container) {\n      return \"function\" === typeof container.getRootNode\n        ? container.getRootNode()\n        : 9 === container.nodeType\n          ? container\n          : container.ownerDocument;\n    }\n    function preconnectAs(rel, href, crossOrigin) {\n      var ownerDocument = globalDocument;\n      if (ownerDocument && \"string\" === typeof href && href) {\n        var limitedEscapedHref =\n          escapeSelectorAttributeValueInsideDoubleQuotes(href);\n        limitedEscapedHref =\n          'link[rel=\"' + rel + '\"][href=\"' + limitedEscapedHref + '\"]';\n        \"string\" === typeof crossOrigin &&\n          (limitedEscapedHref += '[crossorigin=\"' + crossOrigin + '\"]');\n        preconnectsSet.has(limitedEscapedHref) ||\n          (preconnectsSet.add(limitedEscapedHref),\n          (rel = { rel: rel, crossOrigin: crossOrigin, href: href }),\n          null === ownerDocument.querySelector(limitedEscapedHref) &&\n            ((href = ownerDocument.createElement(\"link\")),\n            setInitialProperties(href, \"link\", rel),\n            markNodeAsHoistable(href),\n            ownerDocument.head.appendChild(href)));\n      }\n    }\n    function getResource(type, currentProps, pendingProps, currentResource) {\n      var resourceRoot = (resourceRoot = rootInstanceStackCursor.current)\n        ? getHoistableRoot(resourceRoot)\n        : null;\n      if (!resourceRoot)\n        throw Error(\n          '\"resourceRoot\" was expected to exist. This is a bug in React.'\n        );\n      switch (type) {\n        case \"meta\":\n        case \"title\":\n          return null;\n        case \"style\":\n          return \"string\" === typeof pendingProps.precedence &&\n            \"string\" === typeof pendingProps.href\n            ? ((pendingProps = getStyleKey(pendingProps.href)),\n              (currentProps =\n                getResourcesFromRoot(resourceRoot).hoistableStyles),\n              (currentResource = currentProps.get(pendingProps)),\n              currentResource ||\n                ((currentResource = {\n                  type: \"style\",\n                  instance: null,\n                  count: 0,\n                  state: null\n                }),\n                currentProps.set(pendingProps, currentResource)),\n              currentResource)\n            : { type: \"void\", instance: null, count: 0, state: null };\n        case \"link\":\n          if (\n            \"stylesheet\" === pendingProps.rel &&\n            \"string\" === typeof pendingProps.href &&\n            \"string\" === typeof pendingProps.precedence\n          ) {\n            type = getStyleKey(pendingProps.href);\n            var _styles = getResourcesFromRoot(resourceRoot).hoistableStyles,\n              _resource = _styles.get(type);\n            if (\n              !_resource &&\n              ((resourceRoot = resourceRoot.ownerDocument || resourceRoot),\n              (_resource = {\n                type: \"stylesheet\",\n                instance: null,\n                count: 0,\n                state: { loading: NotLoaded, preload: null }\n              }),\n              _styles.set(type, _resource),\n              (_styles = resourceRoot.querySelector(\n                getStylesheetSelectorFromKey(type)\n              )) &&\n                !_styles._p &&\n                ((_resource.instance = _styles),\n                (_resource.state.loading = Loaded | Inserted)),\n              !preloadPropsMap.has(type))\n            ) {\n              var preloadProps = {\n                rel: \"preload\",\n                as: \"style\",\n                href: pendingProps.href,\n                crossOrigin: pendingProps.crossOrigin,\n                integrity: pendingProps.integrity,\n                media: pendingProps.media,\n                hrefLang: pendingProps.hrefLang,\n                referrerPolicy: pendingProps.referrerPolicy\n              };\n              preloadPropsMap.set(type, preloadProps);\n              _styles ||\n                preloadStylesheet(\n                  resourceRoot,\n                  type,\n                  preloadProps,\n                  _resource.state\n                );\n            }\n            if (currentProps && null === currentResource)\n              throw (\n                ((pendingProps =\n                  \"\\n\\n  - \" +\n                  describeLinkForResourceErrorDEV(currentProps) +\n                  \"\\n  + \" +\n                  describeLinkForResourceErrorDEV(pendingProps)),\n                Error(\n                  \"Expected <link> not to update to be updated to a stylesheet with precedence. Check the `rel`, `href`, and `precedence` props of this component. Alternatively, check whether two different <link> components render in the same slot or share the same key.\" +\n                    pendingProps\n                ))\n              );\n            return _resource;\n          }\n          if (currentProps && null !== currentResource)\n            throw (\n              ((pendingProps =\n                \"\\n\\n  - \" +\n                describeLinkForResourceErrorDEV(currentProps) +\n                \"\\n  + \" +\n                describeLinkForResourceErrorDEV(pendingProps)),\n              Error(\n                \"Expected stylesheet with precedence to not be updated to a different kind of <link>. Check the `rel`, `href`, and `precedence` props of this component. Alternatively, check whether two different <link> components render in the same slot or share the same key.\" +\n                  pendingProps\n              ))\n            );\n          return null;\n        case \"script\":\n          return (\n            (currentProps = pendingProps.async),\n            (pendingProps = pendingProps.src),\n            \"string\" === typeof pendingProps &&\n            currentProps &&\n            \"function\" !== typeof currentProps &&\n            \"symbol\" !== typeof currentProps\n              ? ((pendingProps = getScriptKey(pendingProps)),\n                (currentProps =\n                  getResourcesFromRoot(resourceRoot).hoistableScripts),\n                (currentResource = currentProps.get(pendingProps)),\n                currentResource ||\n                  ((currentResource = {\n                    type: \"script\",\n                    instance: null,\n                    count: 0,\n                    state: null\n                  }),\n                  currentProps.set(pendingProps, currentResource)),\n                currentResource)\n              : { type: \"void\", instance: null, count: 0, state: null }\n          );\n        default:\n          throw Error(\n            'getResource encountered a type it did not expect: \"' +\n              type +\n              '\". this is a bug in React.'\n          );\n      }\n    }\n    function describeLinkForResourceErrorDEV(props) {\n      var describedProps = 0,\n        description = \"<link\";\n      \"string\" === typeof props.rel\n        ? (describedProps++, (description += ' rel=\"' + props.rel + '\"'))\n        : hasOwnProperty.call(props, \"rel\") &&\n          (describedProps++,\n          (description +=\n            ' rel=\"' +\n            (null === props.rel ? \"null\" : \"invalid type \" + typeof props.rel) +\n            '\"'));\n      \"string\" === typeof props.href\n        ? (describedProps++, (description += ' href=\"' + props.href + '\"'))\n        : hasOwnProperty.call(props, \"href\") &&\n          (describedProps++,\n          (description +=\n            ' href=\"' +\n            (null === props.href\n              ? \"null\"\n              : \"invalid type \" + typeof props.href) +\n            '\"'));\n      \"string\" === typeof props.precedence\n        ? (describedProps++,\n          (description += ' precedence=\"' + props.precedence + '\"'))\n        : hasOwnProperty.call(props, \"precedence\") &&\n          (describedProps++,\n          (description +=\n            \" precedence={\" +\n            (null === props.precedence\n              ? \"null\"\n              : \"invalid type \" + typeof props.precedence) +\n            \"}\"));\n      Object.getOwnPropertyNames(props).length > describedProps &&\n        (description += \" ...\");\n      return description + \" />\";\n    }\n    function getStyleKey(href) {\n      return (\n        'href=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '\"'\n      );\n    }\n    function getStylesheetSelectorFromKey(key) {\n      return 'link[rel=\"stylesheet\"][' + key + \"]\";\n    }\n    function stylesheetPropsFromRawProps(rawProps) {\n      return assign({}, rawProps, {\n        \"data-precedence\": rawProps.precedence,\n        precedence: null\n      });\n    }\n    function preloadStylesheet(ownerDocument, key, preloadProps, state) {\n      ownerDocument.querySelector(\n        'link[rel=\"preload\"][as=\"style\"][' + key + \"]\"\n      )\n        ? (state.loading = Loaded)\n        : ((key = ownerDocument.createElement(\"link\")),\n          (state.preload = key),\n          key.addEventListener(\"load\", function () {\n            return (state.loading |= Loaded);\n          }),\n          key.addEventListener(\"error\", function () {\n            return (state.loading |= Errored);\n          }),\n          setInitialProperties(key, \"link\", preloadProps),\n          markNodeAsHoistable(key),\n          ownerDocument.head.appendChild(key));\n    }\n    function getScriptKey(src) {\n      return (\n        '[src=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(src) + '\"]'\n      );\n    }\n    function getScriptSelectorFromKey(key) {\n      return \"script[async]\" + key;\n    }\n    function acquireResource(hoistableRoot, resource, props) {\n      resource.count++;\n      if (null === resource.instance)\n        switch (resource.type) {\n          case \"style\":\n            var instance = hoistableRoot.querySelector(\n              'style[data-href~=\"' +\n                escapeSelectorAttributeValueInsideDoubleQuotes(props.href) +\n                '\"]'\n            );\n            if (instance)\n              return (\n                (resource.instance = instance),\n                markNodeAsHoistable(instance),\n                instance\n              );\n            var styleProps = assign({}, props, {\n              \"data-href\": props.href,\n              \"data-precedence\": props.precedence,\n              href: null,\n              precedence: null\n            });\n            instance = (\n              hoistableRoot.ownerDocument || hoistableRoot\n            ).createElement(\"style\");\n            markNodeAsHoistable(instance);\n            setInitialProperties(instance, \"style\", styleProps);\n            insertStylesheet(instance, props.precedence, hoistableRoot);\n            return (resource.instance = instance);\n          case \"stylesheet\":\n            styleProps = getStyleKey(props.href);\n            var _instance = hoistableRoot.querySelector(\n              getStylesheetSelectorFromKey(styleProps)\n            );\n            if (_instance)\n              return (\n                (resource.state.loading |= Inserted),\n                (resource.instance = _instance),\n                markNodeAsHoistable(_instance),\n                _instance\n              );\n            instance = stylesheetPropsFromRawProps(props);\n            (styleProps = preloadPropsMap.get(styleProps)) &&\n              adoptPreloadPropsForStylesheet(instance, styleProps);\n            _instance = (\n              hoistableRoot.ownerDocument || hoistableRoot\n            ).createElement(\"link\");\n            markNodeAsHoistable(_instance);\n            var linkInstance = _instance;\n            linkInstance._p = new Promise(function (resolve, reject) {\n              linkInstance.onload = resolve;\n              linkInstance.onerror = reject;\n            });\n            setInitialProperties(_instance, \"link\", instance);\n            resource.state.loading |= Inserted;\n            insertStylesheet(_instance, props.precedence, hoistableRoot);\n            return (resource.instance = _instance);\n          case \"script\":\n            _instance = getScriptKey(props.src);\n            if (\n              (styleProps = hoistableRoot.querySelector(\n                getScriptSelectorFromKey(_instance)\n              ))\n            )\n              return (\n                (resource.instance = styleProps),\n                markNodeAsHoistable(styleProps),\n                styleProps\n              );\n            instance = props;\n            if ((styleProps = preloadPropsMap.get(_instance)))\n              (instance = assign({}, props)),\n                adoptPreloadPropsForScript(instance, styleProps);\n            hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n            styleProps = hoistableRoot.createElement(\"script\");\n            markNodeAsHoistable(styleProps);\n            setInitialProperties(styleProps, \"link\", instance);\n            hoistableRoot.head.appendChild(styleProps);\n            return (resource.instance = styleProps);\n          case \"void\":\n            return null;\n          default:\n            throw Error(\n              'acquireResource encountered a resource type it did not expect: \"' +\n                resource.type +\n                '\". this is a bug in React.'\n            );\n        }\n      else\n        \"stylesheet\" === resource.type &&\n          (resource.state.loading & Inserted) === NotLoaded &&\n          ((instance = resource.instance),\n          (resource.state.loading |= Inserted),\n          insertStylesheet(instance, props.precedence, hoistableRoot));\n      return resource.instance;\n    }\n    function insertStylesheet(instance, precedence, root) {\n      for (\n        var nodes = root.querySelectorAll(\n            'link[rel=\"stylesheet\"][data-precedence],style[data-precedence]'\n          ),\n          last = nodes.length ? nodes[nodes.length - 1] : null,\n          prior = last,\n          i = 0;\n        i < nodes.length;\n        i++\n      ) {\n        var node = nodes[i];\n        if (node.dataset.precedence === precedence) prior = node;\n        else if (prior !== last) break;\n      }\n      prior\n        ? prior.parentNode.insertBefore(instance, prior.nextSibling)\n        : ((precedence = 9 === root.nodeType ? root.head : root),\n          precedence.insertBefore(instance, precedence.firstChild));\n    }\n    function adoptPreloadPropsForStylesheet(stylesheetProps, preloadProps) {\n      null == stylesheetProps.crossOrigin &&\n        (stylesheetProps.crossOrigin = preloadProps.crossOrigin);\n      null == stylesheetProps.referrerPolicy &&\n        (stylesheetProps.referrerPolicy = preloadProps.referrerPolicy);\n      null == stylesheetProps.title &&\n        (stylesheetProps.title = preloadProps.title);\n    }\n    function adoptPreloadPropsForScript(scriptProps, preloadProps) {\n      null == scriptProps.crossOrigin &&\n        (scriptProps.crossOrigin = preloadProps.crossOrigin);\n      null == scriptProps.referrerPolicy &&\n        (scriptProps.referrerPolicy = preloadProps.referrerPolicy);\n      null == scriptProps.integrity &&\n        (scriptProps.integrity = preloadProps.integrity);\n    }\n    function getHydratableHoistableCache(type, keyAttribute, ownerDocument) {\n      if (null === tagCaches) {\n        var cache = new Map();\n        var caches = (tagCaches = new Map());\n        caches.set(ownerDocument, cache);\n      } else\n        (caches = tagCaches),\n          (cache = caches.get(ownerDocument)),\n          cache || ((cache = new Map()), caches.set(ownerDocument, cache));\n      if (cache.has(type)) return cache;\n      cache.set(type, null);\n      ownerDocument = ownerDocument.getElementsByTagName(type);\n      for (caches = 0; caches < ownerDocument.length; caches++) {\n        var node = ownerDocument[caches];\n        if (\n          !(\n            node[internalHoistableMarker] ||\n            node[internalInstanceKey] ||\n            (\"link\" === type && \"stylesheet\" === node.getAttribute(\"rel\"))\n          ) &&\n          node.namespaceURI !== SVG_NAMESPACE\n        ) {\n          var nodeKey = node.getAttribute(keyAttribute) || \"\";\n          nodeKey = type + nodeKey;\n          var existing = cache.get(nodeKey);\n          existing ? existing.push(node) : cache.set(nodeKey, [node]);\n        }\n      }\n      return cache;\n    }\n    function mountHoistable(hoistableRoot, type, instance) {\n      hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n      hoistableRoot.head.insertBefore(\n        instance,\n        \"title\" === type ? hoistableRoot.querySelector(\"head > title\") : null\n      );\n    }\n    function isHostHoistableType(type, props, hostContext) {\n      var outsideHostContainerContext =\n        !hostContext.ancestorInfo.containerTagInScope;\n      if (\n        hostContext.context === HostContextNamespaceSvg ||\n        null != props.itemProp\n      )\n        return (\n          !outsideHostContainerContext ||\n            null == props.itemProp ||\n            (\"meta\" !== type &&\n              \"title\" !== type &&\n              \"style\" !== type &&\n              \"link\" !== type &&\n              \"script\" !== type) ||\n            console.error(\n              \"Cannot render a <%s> outside the main document if it has an `itemProp` prop. `itemProp` suggests the tag belongs to an `itemScope` which can appear anywhere in the DOM. If you were intending for React to hoist this <%s> remove the `itemProp` prop. Otherwise, try moving this tag into the <head> or <body> of the Document.\",\n              type,\n              type\n            ),\n          !1\n        );\n      switch (type) {\n        case \"meta\":\n        case \"title\":\n          return !0;\n        case \"style\":\n          if (\n            \"string\" !== typeof props.precedence ||\n            \"string\" !== typeof props.href ||\n            \"\" === props.href\n          ) {\n            outsideHostContainerContext &&\n              console.error(\n                'Cannot render a <style> outside the main document without knowing its precedence and a unique href key. React can hoist and deduplicate <style> tags if you provide a `precedence` prop along with an `href` prop that does not conflict with the `href` values used in any other hoisted <style> or <link rel=\"stylesheet\" ...> tags.  Note that hoisting <style> tags is considered an advanced feature that most will not use directly. Consider moving the <style> tag to the <head> or consider adding a `precedence=\"default\"` and `href=\"some unique resource identifier\"`.'\n              );\n            break;\n          }\n          return !0;\n        case \"link\":\n          if (\n            \"string\" !== typeof props.rel ||\n            \"string\" !== typeof props.href ||\n            \"\" === props.href ||\n            props.onLoad ||\n            props.onError\n          ) {\n            if (\n              \"stylesheet\" === props.rel &&\n              \"string\" === typeof props.precedence\n            ) {\n              type = props.href;\n              var onError = props.onError,\n                disabled = props.disabled;\n              hostContext = [];\n              props.onLoad && hostContext.push(\"`onLoad`\");\n              onError && hostContext.push(\"`onError`\");\n              null != disabled && hostContext.push(\"`disabled`\");\n              onError = propNamesListJoin(hostContext, \"and\");\n              onError += 1 === hostContext.length ? \" prop\" : \" props\";\n              disabled =\n                1 === hostContext.length ? \"an \" + onError : \"the \" + onError;\n              hostContext.length &&\n                console.error(\n                  'React encountered a <link rel=\"stylesheet\" href=\"%s\" ... /> with a `precedence` prop that also included %s. The presence of loading and error handlers indicates an intent to manage the stylesheet loading state from your from your Component code and React will not hoist or deduplicate this stylesheet. If your intent was to have React hoist and deduplciate this stylesheet using the `precedence` prop remove the %s, otherwise remove the `precedence` prop.',\n                  type,\n                  disabled,\n                  onError\n                );\n            }\n            outsideHostContainerContext &&\n              (\"string\" !== typeof props.rel ||\n              \"string\" !== typeof props.href ||\n              \"\" === props.href\n                ? console.error(\n                    \"Cannot render a <link> outside the main document without a `rel` and `href` prop. Try adding a `rel` and/or `href` prop to this <link> or moving the link into the <head> tag\"\n                  )\n                : (props.onError || props.onLoad) &&\n                  console.error(\n                    \"Cannot render a <link> with onLoad or onError listeners outside the main document. Try removing onLoad={...} and onError={...} or moving it into the root <head> tag or somewhere in the <body>.\"\n                  ));\n            break;\n          }\n          switch (props.rel) {\n            case \"stylesheet\":\n              return (\n                (type = props.precedence),\n                (props = props.disabled),\n                \"string\" !== typeof type &&\n                  outsideHostContainerContext &&\n                  console.error(\n                    'Cannot render a <link rel=\"stylesheet\" /> outside the main document without knowing its precedence. Consider adding precedence=\"default\" or moving it into the root <head> tag.'\n                  ),\n                \"string\" === typeof type && null == props\n              );\n            default:\n              return !0;\n          }\n        case \"script\":\n          type =\n            props.async &&\n            \"function\" !== typeof props.async &&\n            \"symbol\" !== typeof props.async;\n          if (\n            !type ||\n            props.onLoad ||\n            props.onError ||\n            !props.src ||\n            \"string\" !== typeof props.src\n          ) {\n            outsideHostContainerContext &&\n              (type\n                ? props.onLoad || props.onError\n                  ? console.error(\n                      \"Cannot render a <script> with onLoad or onError listeners outside the main document. Try removing onLoad={...} and onError={...} or moving it into the root <head> tag or somewhere in the <body>.\"\n                    )\n                  : console.error(\n                      \"Cannot render a <script> outside the main document without `async={true}` and a non-empty `src` prop. Ensure there is a valid `src` and either make the script async or move it into the root <head> tag or somewhere in the <body>.\"\n                    )\n                : console.error(\n                    'Cannot render a sync or defer <script> outside the main document without knowing its order. Try adding async=\"\" or moving it into the root <head> tag.'\n                  ));\n            break;\n          }\n          return !0;\n        case \"noscript\":\n        case \"template\":\n          outsideHostContainerContext &&\n            console.error(\n              \"Cannot render <%s> outside the main document. Try moving it into the root <head> tag.\",\n              type\n            );\n      }\n      return !1;\n    }\n    function preloadResource(resource) {\n      return \"stylesheet\" === resource.type &&\n        (resource.state.loading & Settled) === NotLoaded\n        ? !1\n        : !0;\n    }\n    function noop() {}\n    function suspendResource(hoistableRoot, resource, props) {\n      if (null === suspendedState)\n        throw Error(\n          \"Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug.\"\n        );\n      var state = suspendedState;\n      if (\n        \"stylesheet\" === resource.type &&\n        (\"string\" !== typeof props.media ||\n          !1 !== matchMedia(props.media).matches) &&\n        (resource.state.loading & Inserted) === NotLoaded\n      ) {\n        if (null === resource.instance) {\n          var key = getStyleKey(props.href),\n            instance = hoistableRoot.querySelector(\n              getStylesheetSelectorFromKey(key)\n            );\n          if (instance) {\n            hoistableRoot = instance._p;\n            null !== hoistableRoot &&\n              \"object\" === typeof hoistableRoot &&\n              \"function\" === typeof hoistableRoot.then &&\n              (state.count++,\n              (state = onUnsuspend.bind(state)),\n              hoistableRoot.then(state, state));\n            resource.state.loading |= Inserted;\n            resource.instance = instance;\n            markNodeAsHoistable(instance);\n            return;\n          }\n          instance = hoistableRoot.ownerDocument || hoistableRoot;\n          props = stylesheetPropsFromRawProps(props);\n          (key = preloadPropsMap.get(key)) &&\n            adoptPreloadPropsForStylesheet(props, key);\n          instance = instance.createElement(\"link\");\n          markNodeAsHoistable(instance);\n          var linkInstance = instance;\n          linkInstance._p = new Promise(function (resolve, reject) {\n            linkInstance.onload = resolve;\n            linkInstance.onerror = reject;\n          });\n          setInitialProperties(instance, \"link\", props);\n          resource.instance = instance;\n        }\n        null === state.stylesheets && (state.stylesheets = new Map());\n        state.stylesheets.set(resource, hoistableRoot);\n        (hoistableRoot = resource.state.preload) &&\n          (resource.state.loading & Settled) === NotLoaded &&\n          (state.count++,\n          (resource = onUnsuspend.bind(state)),\n          hoistableRoot.addEventListener(\"load\", resource),\n          hoistableRoot.addEventListener(\"error\", resource));\n      }\n    }\n    function waitForCommitToBeReady() {\n      if (null === suspendedState)\n        throw Error(\n          \"Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug.\"\n        );\n      var state = suspendedState;\n      state.stylesheets &&\n        0 === state.count &&\n        insertSuspendedStylesheets(state, state.stylesheets);\n      return 0 < state.count\n        ? function (commit) {\n            var stylesheetTimer = setTimeout(function () {\n              state.stylesheets &&\n                insertSuspendedStylesheets(state, state.stylesheets);\n              if (state.unsuspend) {\n                var unsuspend = state.unsuspend;\n                state.unsuspend = null;\n                unsuspend();\n              }\n            }, 6e4);\n            state.unsuspend = commit;\n            return function () {\n              state.unsuspend = null;\n              clearTimeout(stylesheetTimer);\n            };\n          }\n        : null;\n    }\n    function onUnsuspend() {\n      this.count--;\n      if (0 === this.count)\n        if (this.stylesheets)\n          insertSuspendedStylesheets(this, this.stylesheets);\n        else if (this.unsuspend) {\n          var unsuspend = this.unsuspend;\n          this.unsuspend = null;\n          unsuspend();\n        }\n    }\n    function insertSuspendedStylesheets(state, resources) {\n      state.stylesheets = null;\n      null !== state.unsuspend &&\n        (state.count++,\n        (precedencesByRoot = new Map()),\n        resources.forEach(insertStylesheetIntoRoot, state),\n        (precedencesByRoot = null),\n        onUnsuspend.call(state));\n    }\n    function insertStylesheetIntoRoot(root, resource) {\n      if (!(resource.state.loading & Inserted)) {\n        var precedences = precedencesByRoot.get(root);\n        if (precedences) var last = precedences.get(LAST_PRECEDENCE);\n        else {\n          precedences = new Map();\n          precedencesByRoot.set(root, precedences);\n          for (\n            var nodes = root.querySelectorAll(\n                \"link[data-precedence],style[data-precedence]\"\n              ),\n              i = 0;\n            i < nodes.length;\n            i++\n          ) {\n            var node = nodes[i];\n            if (\n              \"LINK\" === node.nodeName ||\n              \"not all\" !== node.getAttribute(\"media\")\n            )\n              precedences.set(node.dataset.precedence, node), (last = node);\n          }\n          last && precedences.set(LAST_PRECEDENCE, last);\n        }\n        nodes = resource.instance;\n        node = nodes.getAttribute(\"data-precedence\");\n        i = precedences.get(node) || last;\n        i === last && precedences.set(LAST_PRECEDENCE, nodes);\n        precedences.set(node, nodes);\n        this.count++;\n        last = onUnsuspend.bind(this);\n        nodes.addEventListener(\"load\", last);\n        nodes.addEventListener(\"error\", last);\n        i\n          ? i.parentNode.insertBefore(nodes, i.nextSibling)\n          : ((root = 9 === root.nodeType ? root.head : root),\n            root.insertBefore(nodes, root.firstChild));\n        resource.state.loading |= Inserted;\n      }\n    }\n    function FiberRootNode(\n      containerInfo,\n      tag,\n      hydrate,\n      identifierPrefix,\n      onUncaughtError,\n      onCaughtError,\n      onRecoverableError,\n      formState\n    ) {\n      this.tag = 1;\n      this.containerInfo = containerInfo;\n      this.pingCache = this.current = this.pendingChildren = null;\n      this.timeoutHandle = noTimeout;\n      this.callbackNode =\n        this.next =\n        this.pendingContext =\n        this.context =\n        this.cancelPendingCommit =\n          null;\n      this.callbackPriority = 0;\n      this.expirationTimes = createLaneMap(-1);\n      this.entangledLanes =\n        this.shellSuspendCounter =\n        this.errorRecoveryDisabledLanes =\n        this.expiredLanes =\n        this.warmLanes =\n        this.pingedLanes =\n        this.suspendedLanes =\n        this.pendingLanes =\n          0;\n      this.entanglements = createLaneMap(0);\n      this.hiddenUpdates = createLaneMap(null);\n      this.identifierPrefix = identifierPrefix;\n      this.onUncaughtError = onUncaughtError;\n      this.onCaughtError = onCaughtError;\n      this.onRecoverableError = onRecoverableError;\n      this.pooledCache = null;\n      this.pooledCacheLanes = 0;\n      this.formState = formState;\n      this.incompleteTransitions = new Map();\n      this.passiveEffectDuration = this.effectDuration = -0;\n      this.memoizedUpdaters = new Set();\n      containerInfo = this.pendingUpdatersLaneMap = [];\n      for (tag = 0; 31 > tag; tag++) containerInfo.push(new Set());\n      this._debugRootType = hydrate ? \"hydrateRoot()\" : \"createRoot()\";\n    }\n    function createFiberRoot(\n      containerInfo,\n      tag,\n      hydrate,\n      initialChildren,\n      hydrationCallbacks,\n      isStrictMode,\n      identifierPrefix,\n      onUncaughtError,\n      onCaughtError,\n      onRecoverableError,\n      transitionCallbacks,\n      formState\n    ) {\n      containerInfo = new FiberRootNode(\n        containerInfo,\n        tag,\n        hydrate,\n        identifierPrefix,\n        onUncaughtError,\n        onCaughtError,\n        onRecoverableError,\n        formState\n      );\n      tag = ConcurrentMode;\n      !0 === isStrictMode && (tag |= StrictLegacyMode | StrictEffectsMode);\n      isDevToolsPresent && (tag |= ProfileMode);\n      isStrictMode = createFiber(3, null, null, tag);\n      containerInfo.current = isStrictMode;\n      isStrictMode.stateNode = containerInfo;\n      tag = createCache();\n      retainCache(tag);\n      containerInfo.pooledCache = tag;\n      retainCache(tag);\n      isStrictMode.memoizedState = {\n        element: initialChildren,\n        isDehydrated: hydrate,\n        cache: tag\n      };\n      initializeUpdateQueue(isStrictMode);\n      return containerInfo;\n    }\n    function getContextForSubtree(parentComponent) {\n      if (!parentComponent) return emptyContextObject;\n      parentComponent = emptyContextObject;\n      return parentComponent;\n    }\n    function updateContainerImpl(\n      rootFiber,\n      lane,\n      element,\n      container,\n      parentComponent,\n      callback\n    ) {\n      if (\n        injectedHook &&\n        \"function\" === typeof injectedHook.onScheduleFiberRoot\n      )\n        try {\n          injectedHook.onScheduleFiberRoot(rendererID, container, element);\n        } catch (err) {\n          hasLoggedError ||\n            ((hasLoggedError = !0),\n            console.error(\n              \"React instrumentation encountered an error: %s\",\n              err\n            ));\n        }\n      null !== injectedProfilingHooks &&\n        \"function\" === typeof injectedProfilingHooks.markRenderScheduled &&\n        injectedProfilingHooks.markRenderScheduled(lane);\n      parentComponent = getContextForSubtree(parentComponent);\n      null === container.context\n        ? (container.context = parentComponent)\n        : (container.pendingContext = parentComponent);\n      isRendering &&\n        null !== current &&\n        !didWarnAboutNestedUpdates &&\n        ((didWarnAboutNestedUpdates = !0),\n        console.error(\n          \"Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\\n\\nCheck the render method of %s.\",\n          getComponentNameFromFiber(current) || \"Unknown\"\n        ));\n      container = createUpdate(lane);\n      container.payload = { element: element };\n      callback = void 0 === callback ? null : callback;\n      null !== callback &&\n        (\"function\" !== typeof callback &&\n          console.error(\n            \"Expected the last optional `callback` argument to be a function. Instead received: %s.\",\n            callback\n          ),\n        (container.callback = callback));\n      element = enqueueUpdate(rootFiber, container, lane);\n      null !== element &&\n        (scheduleUpdateOnFiber(element, rootFiber, lane),\n        entangleTransitions(element, rootFiber, lane));\n    }\n    function markRetryLaneImpl(fiber, retryLane) {\n      fiber = fiber.memoizedState;\n      if (null !== fiber && null !== fiber.dehydrated) {\n        var a = fiber.retryLane;\n        fiber.retryLane = 0 !== a && a < retryLane ? a : retryLane;\n      }\n    }\n    function markRetryLaneIfNotHydrated(fiber, retryLane) {\n      markRetryLaneImpl(fiber, retryLane);\n      (fiber = fiber.alternate) && markRetryLaneImpl(fiber, retryLane);\n    }\n    function attemptContinuousHydration(fiber) {\n      if (13 === fiber.tag) {\n        var root = enqueueConcurrentRenderForLane(fiber, 67108864);\n        null !== root && scheduleUpdateOnFiber(root, fiber, 67108864);\n        markRetryLaneIfNotHydrated(fiber, 67108864);\n      }\n    }\n    function getCurrentFiberForDevTools() {\n      return current;\n    }\n    function getLaneLabelMap() {\n      for (var map = new Map(), lane = 1, index = 0; 31 > index; index++) {\n        var label = getLabelForLane(lane);\n        map.set(lane, label);\n        lane *= 2;\n      }\n      return map;\n    }\n    function dispatchDiscreteEvent(\n      domEventName,\n      eventSystemFlags,\n      container,\n      nativeEvent\n    ) {\n      var prevTransition = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      var previousPriority = ReactDOMSharedInternals.p;\n      try {\n        (ReactDOMSharedInternals.p = DiscreteEventPriority),\n          dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        (ReactDOMSharedInternals.p = previousPriority),\n          (ReactSharedInternals.T = prevTransition);\n      }\n    }\n    function dispatchContinuousEvent(\n      domEventName,\n      eventSystemFlags,\n      container,\n      nativeEvent\n    ) {\n      var prevTransition = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      var previousPriority = ReactDOMSharedInternals.p;\n      try {\n        (ReactDOMSharedInternals.p = ContinuousEventPriority),\n          dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        (ReactDOMSharedInternals.p = previousPriority),\n          (ReactSharedInternals.T = prevTransition);\n      }\n    }\n    function dispatchEvent(\n      domEventName,\n      eventSystemFlags,\n      targetContainer,\n      nativeEvent\n    ) {\n      if (_enabled) {\n        var blockedOn = findInstanceBlockingEvent(nativeEvent);\n        if (null === blockedOn)\n          dispatchEventForPluginEventSystem(\n            domEventName,\n            eventSystemFlags,\n            nativeEvent,\n            return_targetInst,\n            targetContainer\n          ),\n            clearIfContinuousEvent(domEventName, nativeEvent);\n        else if (\n          queueIfContinuousEvent(\n            blockedOn,\n            domEventName,\n            eventSystemFlags,\n            targetContainer,\n            nativeEvent\n          )\n        )\n          nativeEvent.stopPropagation();\n        else if (\n          (clearIfContinuousEvent(domEventName, nativeEvent),\n          eventSystemFlags & 4 &&\n            -1 < discreteReplayableEvents.indexOf(domEventName))\n        ) {\n          for (; null !== blockedOn; ) {\n            var fiber = getInstanceFromNode(blockedOn);\n            if (null !== fiber)\n              switch (fiber.tag) {\n                case 3:\n                  fiber = fiber.stateNode;\n                  if (fiber.current.memoizedState.isDehydrated) {\n                    var lanes = getHighestPriorityLanes(fiber.pendingLanes);\n                    if (0 !== lanes) {\n                      var root = fiber;\n                      root.pendingLanes |= 2;\n                      for (root.entangledLanes |= 2; lanes; ) {\n                        var lane = 1 << (31 - clz32(lanes));\n                        root.entanglements[1] |= lane;\n                        lanes &= ~lane;\n                      }\n                      ensureRootIsScheduled(fiber);\n                      (executionContext & (RenderContext | CommitContext)) ===\n                        NoContext &&\n                        ((workInProgressRootRenderTargetTime =\n                          now$1() + RENDER_TIMEOUT_MS),\n                        flushSyncWorkAcrossRoots_impl(0, !1));\n                    }\n                  }\n                  break;\n                case 13:\n                  (root = enqueueConcurrentRenderForLane(fiber, 2)),\n                    null !== root && scheduleUpdateOnFiber(root, fiber, 2),\n                    flushSyncWork$1(),\n                    markRetryLaneIfNotHydrated(fiber, 2);\n              }\n            fiber = findInstanceBlockingEvent(nativeEvent);\n            null === fiber &&\n              dispatchEventForPluginEventSystem(\n                domEventName,\n                eventSystemFlags,\n                nativeEvent,\n                return_targetInst,\n                targetContainer\n              );\n            if (fiber === blockedOn) break;\n            blockedOn = fiber;\n          }\n          null !== blockedOn && nativeEvent.stopPropagation();\n        } else\n          dispatchEventForPluginEventSystem(\n            domEventName,\n            eventSystemFlags,\n            nativeEvent,\n            null,\n            targetContainer\n          );\n      }\n    }\n    function findInstanceBlockingEvent(nativeEvent) {\n      nativeEvent = getEventTarget(nativeEvent);\n      return findInstanceBlockingTarget(nativeEvent);\n    }\n    function findInstanceBlockingTarget(targetNode) {\n      return_targetInst = null;\n      targetNode = getClosestInstanceFromNode(targetNode);\n      if (null !== targetNode) {\n        var nearestMounted = getNearestMountedFiber(targetNode);\n        if (null === nearestMounted) targetNode = null;\n        else {\n          var tag = nearestMounted.tag;\n          if (13 === tag) {\n            targetNode = getSuspenseInstanceFromFiber(nearestMounted);\n            if (null !== targetNode) return targetNode;\n            targetNode = null;\n          } else if (3 === tag) {\n            if (nearestMounted.stateNode.current.memoizedState.isDehydrated)\n              return 3 === nearestMounted.tag\n                ? nearestMounted.stateNode.containerInfo\n                : null;\n            targetNode = null;\n          } else nearestMounted !== targetNode && (targetNode = null);\n        }\n      }\n      return_targetInst = targetNode;\n      return null;\n    }\n    function getEventPriority(domEventName) {\n      switch (domEventName) {\n        case \"beforetoggle\":\n        case \"cancel\":\n        case \"click\":\n        case \"close\":\n        case \"contextmenu\":\n        case \"copy\":\n        case \"cut\":\n        case \"auxclick\":\n        case \"dblclick\":\n        case \"dragend\":\n        case \"dragstart\":\n        case \"drop\":\n        case \"focusin\":\n        case \"focusout\":\n        case \"input\":\n        case \"invalid\":\n        case \"keydown\":\n        case \"keypress\":\n        case \"keyup\":\n        case \"mousedown\":\n        case \"mouseup\":\n        case \"paste\":\n        case \"pause\":\n        case \"play\":\n        case \"pointercancel\":\n        case \"pointerdown\":\n        case \"pointerup\":\n        case \"ratechange\":\n        case \"reset\":\n        case \"resize\":\n        case \"seeked\":\n        case \"submit\":\n        case \"toggle\":\n        case \"touchcancel\":\n        case \"touchend\":\n        case \"touchstart\":\n        case \"volumechange\":\n        case \"change\":\n        case \"selectionchange\":\n        case \"textInput\":\n        case \"compositionstart\":\n        case \"compositionend\":\n        case \"compositionupdate\":\n        case \"beforeblur\":\n        case \"afterblur\":\n        case \"beforeinput\":\n        case \"blur\":\n        case \"fullscreenchange\":\n        case \"focus\":\n        case \"hashchange\":\n        case \"popstate\":\n        case \"select\":\n        case \"selectstart\":\n          return DiscreteEventPriority;\n        case \"drag\":\n        case \"dragenter\":\n        case \"dragexit\":\n        case \"dragleave\":\n        case \"dragover\":\n        case \"mousemove\":\n        case \"mouseout\":\n        case \"mouseover\":\n        case \"pointermove\":\n        case \"pointerout\":\n        case \"pointerover\":\n        case \"scroll\":\n        case \"touchmove\":\n        case \"wheel\":\n        case \"mouseenter\":\n        case \"mouseleave\":\n        case \"pointerenter\":\n        case \"pointerleave\":\n          return ContinuousEventPriority;\n        case \"message\":\n          switch (getCurrentPriorityLevel()) {\n            case ImmediatePriority:\n              return DiscreteEventPriority;\n            case UserBlockingPriority:\n              return ContinuousEventPriority;\n            case NormalPriority$1:\n            case LowPriority:\n              return DefaultEventPriority;\n            case IdlePriority:\n              return IdleEventPriority;\n            default:\n              return DefaultEventPriority;\n          }\n        default:\n          return DefaultEventPriority;\n      }\n    }\n    function clearIfContinuousEvent(domEventName, nativeEvent) {\n      switch (domEventName) {\n        case \"focusin\":\n        case \"focusout\":\n          queuedFocus = null;\n          break;\n        case \"dragenter\":\n        case \"dragleave\":\n          queuedDrag = null;\n          break;\n        case \"mouseover\":\n        case \"mouseout\":\n          queuedMouse = null;\n          break;\n        case \"pointerover\":\n        case \"pointerout\":\n          queuedPointers.delete(nativeEvent.pointerId);\n          break;\n        case \"gotpointercapture\":\n        case \"lostpointercapture\":\n          queuedPointerCaptures.delete(nativeEvent.pointerId);\n      }\n    }\n    function accumulateOrCreateContinuousQueuedReplayableEvent(\n      existingQueuedEvent,\n      blockedOn,\n      domEventName,\n      eventSystemFlags,\n      targetContainer,\n      nativeEvent\n    ) {\n      if (\n        null === existingQueuedEvent ||\n        existingQueuedEvent.nativeEvent !== nativeEvent\n      )\n        return (\n          (existingQueuedEvent = {\n            blockedOn: blockedOn,\n            domEventName: domEventName,\n            eventSystemFlags: eventSystemFlags,\n            nativeEvent: nativeEvent,\n            targetContainers: [targetContainer]\n          }),\n          null !== blockedOn &&\n            ((blockedOn = getInstanceFromNode(blockedOn)),\n            null !== blockedOn && attemptContinuousHydration(blockedOn)),\n          existingQueuedEvent\n        );\n      existingQueuedEvent.eventSystemFlags |= eventSystemFlags;\n      blockedOn = existingQueuedEvent.targetContainers;\n      null !== targetContainer &&\n        -1 === blockedOn.indexOf(targetContainer) &&\n        blockedOn.push(targetContainer);\n      return existingQueuedEvent;\n    }\n    function queueIfContinuousEvent(\n      blockedOn,\n      domEventName,\n      eventSystemFlags,\n      targetContainer,\n      nativeEvent\n    ) {\n      switch (domEventName) {\n        case \"focusin\":\n          return (\n            (queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(\n              queuedFocus,\n              blockedOn,\n              domEventName,\n              eventSystemFlags,\n              targetContainer,\n              nativeEvent\n            )),\n            !0\n          );\n        case \"dragenter\":\n          return (\n            (queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(\n              queuedDrag,\n              blockedOn,\n              domEventName,\n              eventSystemFlags,\n              targetContainer,\n              nativeEvent\n            )),\n            !0\n          );\n        case \"mouseover\":\n          return (\n            (queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(\n              queuedMouse,\n              blockedOn,\n              domEventName,\n              eventSystemFlags,\n              targetContainer,\n              nativeEvent\n            )),\n            !0\n          );\n        case \"pointerover\":\n          var pointerId = nativeEvent.pointerId;\n          queuedPointers.set(\n            pointerId,\n            accumulateOrCreateContinuousQueuedReplayableEvent(\n              queuedPointers.get(pointerId) || null,\n              blockedOn,\n              domEventName,\n              eventSystemFlags,\n              targetContainer,\n              nativeEvent\n            )\n          );\n          return !0;\n        case \"gotpointercapture\":\n          return (\n            (pointerId = nativeEvent.pointerId),\n            queuedPointerCaptures.set(\n              pointerId,\n              accumulateOrCreateContinuousQueuedReplayableEvent(\n                queuedPointerCaptures.get(pointerId) || null,\n                blockedOn,\n                domEventName,\n                eventSystemFlags,\n                targetContainer,\n                nativeEvent\n              )\n            ),\n            !0\n          );\n      }\n      return !1;\n    }\n    function attemptExplicitHydrationTarget(queuedTarget) {\n      var targetInst = getClosestInstanceFromNode(queuedTarget.target);\n      if (null !== targetInst) {\n        var nearestMounted = getNearestMountedFiber(targetInst);\n        if (null !== nearestMounted)\n          if (((targetInst = nearestMounted.tag), 13 === targetInst)) {\n            if (\n              ((targetInst = getSuspenseInstanceFromFiber(nearestMounted)),\n              null !== targetInst)\n            ) {\n              queuedTarget.blockedOn = targetInst;\n              runWithPriority(queuedTarget.priority, function () {\n                if (13 === nearestMounted.tag) {\n                  var lane = requestUpdateLane(nearestMounted);\n                  lane = getBumpedLaneForHydrationByLane(lane);\n                  var root = enqueueConcurrentRenderForLane(\n                    nearestMounted,\n                    lane\n                  );\n                  null !== root &&\n                    scheduleUpdateOnFiber(root, nearestMounted, lane);\n                  markRetryLaneIfNotHydrated(nearestMounted, lane);\n                }\n              });\n              return;\n            }\n          } else if (\n            3 === targetInst &&\n            nearestMounted.stateNode.current.memoizedState.isDehydrated\n          ) {\n            queuedTarget.blockedOn =\n              3 === nearestMounted.tag\n                ? nearestMounted.stateNode.containerInfo\n                : null;\n            return;\n          }\n      }\n      queuedTarget.blockedOn = null;\n    }\n    function attemptReplayContinuousQueuedEvent(queuedEvent) {\n      if (null !== queuedEvent.blockedOn) return !1;\n      for (\n        var targetContainers = queuedEvent.targetContainers;\n        0 < targetContainers.length;\n\n      ) {\n        var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.nativeEvent);\n        if (null === nextBlockedOn) {\n          nextBlockedOn = queuedEvent.nativeEvent;\n          var nativeEventClone = new nextBlockedOn.constructor(\n              nextBlockedOn.type,\n              nextBlockedOn\n            ),\n            event = nativeEventClone;\n          null !== currentReplayingEvent &&\n            console.error(\n              \"Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.\"\n            );\n          currentReplayingEvent = event;\n          nextBlockedOn.target.dispatchEvent(nativeEventClone);\n          null === currentReplayingEvent &&\n            console.error(\n              \"Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.\"\n            );\n          currentReplayingEvent = null;\n        } else\n          return (\n            (targetContainers = getInstanceFromNode(nextBlockedOn)),\n            null !== targetContainers &&\n              attemptContinuousHydration(targetContainers),\n            (queuedEvent.blockedOn = nextBlockedOn),\n            !1\n          );\n        targetContainers.shift();\n      }\n      return !0;\n    }\n    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {\n      attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);\n    }\n    function replayUnblockedEvents() {\n      hasScheduledReplayAttempt = !1;\n      null !== queuedFocus &&\n        attemptReplayContinuousQueuedEvent(queuedFocus) &&\n        (queuedFocus = null);\n      null !== queuedDrag &&\n        attemptReplayContinuousQueuedEvent(queuedDrag) &&\n        (queuedDrag = null);\n      null !== queuedMouse &&\n        attemptReplayContinuousQueuedEvent(queuedMouse) &&\n        (queuedMouse = null);\n      queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);\n      queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);\n    }\n    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {\n      queuedEvent.blockedOn === unblocked &&\n        ((queuedEvent.blockedOn = null),\n        hasScheduledReplayAttempt ||\n          ((hasScheduledReplayAttempt = !0),\n          Scheduler.unstable_scheduleCallback(\n            Scheduler.unstable_NormalPriority,\n            replayUnblockedEvents\n          )));\n    }\n    function scheduleReplayQueueIfNeeded(formReplayingQueue) {\n      lastScheduledReplayQueue !== formReplayingQueue &&\n        ((lastScheduledReplayQueue = formReplayingQueue),\n        Scheduler.unstable_scheduleCallback(\n          Scheduler.unstable_NormalPriority,\n          function () {\n            lastScheduledReplayQueue === formReplayingQueue &&\n              (lastScheduledReplayQueue = null);\n            for (var i = 0; i < formReplayingQueue.length; i += 3) {\n              var form = formReplayingQueue[i],\n                submitterOrAction = formReplayingQueue[i + 1],\n                formData = formReplayingQueue[i + 2];\n              if (\"function\" !== typeof submitterOrAction)\n                if (\n                  null === findInstanceBlockingTarget(submitterOrAction || form)\n                )\n                  continue;\n                else break;\n              var formInst = getInstanceFromNode(form);\n              null !== formInst &&\n                (formReplayingQueue.splice(i, 3),\n                (i -= 3),\n                (form = {\n                  pending: !0,\n                  data: formData,\n                  method: form.method,\n                  action: submitterOrAction\n                }),\n                Object.freeze(form),\n                startHostTransition(\n                  formInst,\n                  form,\n                  submitterOrAction,\n                  formData\n                ));\n            }\n          }\n        ));\n    }\n    function retryIfBlockedOn(unblocked) {\n      function unblock(queuedEvent) {\n        return scheduleCallbackIfUnblocked(queuedEvent, unblocked);\n      }\n      null !== queuedFocus &&\n        scheduleCallbackIfUnblocked(queuedFocus, unblocked);\n      null !== queuedDrag && scheduleCallbackIfUnblocked(queuedDrag, unblocked);\n      null !== queuedMouse &&\n        scheduleCallbackIfUnblocked(queuedMouse, unblocked);\n      queuedPointers.forEach(unblock);\n      queuedPointerCaptures.forEach(unblock);\n      for (var i = 0; i < queuedExplicitHydrationTargets.length; i++) {\n        var queuedTarget = queuedExplicitHydrationTargets[i];\n        queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);\n      }\n      for (\n        ;\n        0 < queuedExplicitHydrationTargets.length &&\n        ((i = queuedExplicitHydrationTargets[0]), null === i.blockedOn);\n\n      )\n        attemptExplicitHydrationTarget(i),\n          null === i.blockedOn && queuedExplicitHydrationTargets.shift();\n      i = (unblocked.ownerDocument || unblocked).$$reactFormReplay;\n      if (null != i)\n        for (queuedTarget = 0; queuedTarget < i.length; queuedTarget += 3) {\n          var form = i[queuedTarget],\n            submitterOrAction = i[queuedTarget + 1],\n            formProps = form[internalPropsKey] || null;\n          if (\"function\" === typeof submitterOrAction)\n            formProps || scheduleReplayQueueIfNeeded(i);\n          else if (formProps) {\n            var action = null;\n            if (\n              submitterOrAction &&\n              submitterOrAction.hasAttribute(\"formAction\")\n            )\n              if (\n                ((form = submitterOrAction),\n                (formProps = submitterOrAction[internalPropsKey] || null))\n              )\n                action = formProps.formAction;\n              else {\n                if (null !== findInstanceBlockingTarget(form)) continue;\n              }\n            else action = formProps.action;\n            \"function\" === typeof action\n              ? (i[queuedTarget + 1] = action)\n              : (i.splice(queuedTarget, 3), (queuedTarget -= 3));\n            scheduleReplayQueueIfNeeded(i);\n          }\n        }\n    }\n    function ReactDOMRoot(internalRoot) {\n      this._internalRoot = internalRoot;\n    }\n    function ReactDOMHydrationRoot(internalRoot) {\n      this._internalRoot = internalRoot;\n    }\n    function warnIfReactDOMContainerInDEV(container) {\n      container[internalContainerInstanceKey] &&\n        (container._reactRootContainer\n          ? console.error(\n              \"You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.\"\n            )\n          : console.error(\n              \"You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it.\"\n            ));\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var Scheduler = __webpack_require__(/*! scheduler */ \"./node_modules/scheduler/index.js\"),\n      React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n      ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\"),\n      assign = Object.assign,\n      REACT_LEGACY_ELEMENT_TYPE = Symbol.for(\"react.element\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n      REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\"),\n      REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n    Symbol.for(\"react.scope\");\n    var REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\");\n    Symbol.for(\"react.legacy_hidden\");\n    Symbol.for(\"react.tracing_marker\");\n    var REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\");\n    Symbol.for(\"react.view_transition\");\n    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator,\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      isArrayImpl = Array.isArray,\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      ReactDOMSharedInternals =\n        ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      NotPending = Object.freeze({\n        pending: !1,\n        data: null,\n        method: null,\n        action: null\n      }),\n      valueStack = [];\n    var fiberStack = [];\n    var index$jscomp$0 = -1,\n      contextStackCursor = createCursor(null),\n      contextFiberStackCursor = createCursor(null),\n      rootInstanceStackCursor = createCursor(null),\n      hostTransitionProviderCursor = createCursor(null),\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      scheduleCallback$3 = Scheduler.unstable_scheduleCallback,\n      cancelCallback$1 = Scheduler.unstable_cancelCallback,\n      shouldYield = Scheduler.unstable_shouldYield,\n      requestPaint = Scheduler.unstable_requestPaint,\n      now$1 = Scheduler.unstable_now,\n      getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,\n      ImmediatePriority = Scheduler.unstable_ImmediatePriority,\n      UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,\n      NormalPriority$1 = Scheduler.unstable_NormalPriority,\n      LowPriority = Scheduler.unstable_LowPriority,\n      IdlePriority = Scheduler.unstable_IdlePriority,\n      log$1 = Scheduler.log,\n      unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue,\n      rendererID = null,\n      injectedHook = null,\n      injectedProfilingHooks = null,\n      hasLoggedError = !1,\n      isDevToolsPresent = \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__,\n      clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,\n      log = Math.log,\n      LN2 = Math.LN2,\n      nextTransitionLane = 256,\n      nextRetryLane = 4194304,\n      DiscreteEventPriority = 2,\n      ContinuousEventPriority = 8,\n      DefaultEventPriority = 32,\n      IdleEventPriority = 268435456,\n      randomKey = Math.random().toString(36).slice(2),\n      internalInstanceKey = \"__reactFiber$\" + randomKey,\n      internalPropsKey = \"__reactProps$\" + randomKey,\n      internalContainerInstanceKey = \"__reactContainer$\" + randomKey,\n      internalEventHandlersKey = \"__reactEvents$\" + randomKey,\n      internalEventHandlerListenersKey = \"__reactListeners$\" + randomKey,\n      internalEventHandlesSetKey = \"__reactHandles$\" + randomKey,\n      internalRootNodeResourcesKey = \"__reactResources$\" + randomKey,\n      internalHoistableMarker = \"__reactMarker$\" + randomKey,\n      allNativeEvents = new Set(),\n      registrationNameDependencies = {},\n      possibleRegistrationNames = {},\n      hasReadOnlyValue = {\n        button: !0,\n        checkbox: !0,\n        image: !0,\n        hidden: !0,\n        radio: !0,\n        reset: !0,\n        submit: !0\n      },\n      VALID_ATTRIBUTE_NAME_REGEX = RegExp(\n        \"^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\n      ),\n      illegalAttributeNameCache = {},\n      validatedAttributeNameCache = {},\n      disabledDepth = 0,\n      prevLog,\n      prevInfo,\n      prevWarn,\n      prevError,\n      prevGroup,\n      prevGroupCollapsed,\n      prevGroupEnd;\n    disabledLog.__reactDisabledLog = !0;\n    var prefix,\n      suffix,\n      reentry = !1;\n    var componentFrameCache = new (\n      \"function\" === typeof WeakMap ? WeakMap : Map\n    )();\n    var current = null,\n      isRendering = !1,\n      escapeSelectorAttributeValueInsideDoubleQuotesRegex = /[\\n\"\\\\]/g,\n      didWarnValueDefaultValue$1 = !1,\n      didWarnCheckedDefaultChecked = !1,\n      didWarnSelectedSetOnOption = !1,\n      didWarnInvalidChild = !1,\n      didWarnInvalidInnerHTML = !1;\n    var didWarnValueDefaultValue = !1;\n    var valuePropNames = [\"value\", \"defaultValue\"],\n      didWarnValDefaultVal = !1,\n      needsEscaping = /[\"'&<>\\n\\t]|^\\s|\\s$/,\n      specialTags =\n        \"address applet area article aside base basefont bgsound blockquote body br button caption center col colgroup dd details dir div dl dt embed fieldset figcaption figure footer form frame frameset h1 h2 h3 h4 h5 h6 head header hgroup hr html iframe img input isindex li link listing main marquee menu menuitem meta nav noembed noframes noscript object ol p param plaintext pre script section select source style summary table tbody td template textarea tfoot th thead title tr track ul wbr xmp\".split(\n          \" \"\n        ),\n      inScopeTags =\n        \"applet caption html table td th marquee object template foreignObject desc title\".split(\n          \" \"\n        ),\n      buttonScopeTags = inScopeTags.concat([\"button\"]),\n      impliedEndTags = \"dd dt li option optgroup p rp rt\".split(\" \"),\n      emptyAncestorInfoDev = {\n        current: null,\n        formTag: null,\n        aTagInScope: null,\n        buttonTagInScope: null,\n        nobrTagInScope: null,\n        pTagInButtonScope: null,\n        listItemTagAutoclosing: null,\n        dlItemTagAutoclosing: null,\n        containerTagInScope: null,\n        implicitRootScope: !1\n      },\n      didWarn = {},\n      shorthandToLonghand = {\n        animation:\n          \"animationDelay animationDirection animationDuration animationFillMode animationIterationCount animationName animationPlayState animationTimingFunction\".split(\n            \" \"\n          ),\n        background:\n          \"backgroundAttachment backgroundClip backgroundColor backgroundImage backgroundOrigin backgroundPositionX backgroundPositionY backgroundRepeat backgroundSize\".split(\n            \" \"\n          ),\n        backgroundPosition: [\"backgroundPositionX\", \"backgroundPositionY\"],\n        border:\n          \"borderBottomColor borderBottomStyle borderBottomWidth borderImageOutset borderImageRepeat borderImageSlice borderImageSource borderImageWidth borderLeftColor borderLeftStyle borderLeftWidth borderRightColor borderRightStyle borderRightWidth borderTopColor borderTopStyle borderTopWidth\".split(\n            \" \"\n          ),\n        borderBlockEnd: [\n          \"borderBlockEndColor\",\n          \"borderBlockEndStyle\",\n          \"borderBlockEndWidth\"\n        ],\n        borderBlockStart: [\n          \"borderBlockStartColor\",\n          \"borderBlockStartStyle\",\n          \"borderBlockStartWidth\"\n        ],\n        borderBottom: [\n          \"borderBottomColor\",\n          \"borderBottomStyle\",\n          \"borderBottomWidth\"\n        ],\n        borderColor: [\n          \"borderBottomColor\",\n          \"borderLeftColor\",\n          \"borderRightColor\",\n          \"borderTopColor\"\n        ],\n        borderImage: [\n          \"borderImageOutset\",\n          \"borderImageRepeat\",\n          \"borderImageSlice\",\n          \"borderImageSource\",\n          \"borderImageWidth\"\n        ],\n        borderInlineEnd: [\n          \"borderInlineEndColor\",\n          \"borderInlineEndStyle\",\n          \"borderInlineEndWidth\"\n        ],\n        borderInlineStart: [\n          \"borderInlineStartColor\",\n          \"borderInlineStartStyle\",\n          \"borderInlineStartWidth\"\n        ],\n        borderLeft: [\"borderLeftColor\", \"borderLeftStyle\", \"borderLeftWidth\"],\n        borderRadius: [\n          \"borderBottomLeftRadius\",\n          \"borderBottomRightRadius\",\n          \"borderTopLeftRadius\",\n          \"borderTopRightRadius\"\n        ],\n        borderRight: [\n          \"borderRightColor\",\n          \"borderRightStyle\",\n          \"borderRightWidth\"\n        ],\n        borderStyle: [\n          \"borderBottomStyle\",\n          \"borderLeftStyle\",\n          \"borderRightStyle\",\n          \"borderTopStyle\"\n        ],\n        borderTop: [\"borderTopColor\", \"borderTopStyle\", \"borderTopWidth\"],\n        borderWidth: [\n          \"borderBottomWidth\",\n          \"borderLeftWidth\",\n          \"borderRightWidth\",\n          \"borderTopWidth\"\n        ],\n        columnRule: [\"columnRuleColor\", \"columnRuleStyle\", \"columnRuleWidth\"],\n        columns: [\"columnCount\", \"columnWidth\"],\n        flex: [\"flexBasis\", \"flexGrow\", \"flexShrink\"],\n        flexFlow: [\"flexDirection\", \"flexWrap\"],\n        font: \"fontFamily fontFeatureSettings fontKerning fontLanguageOverride fontSize fontSizeAdjust fontStretch fontStyle fontVariant fontVariantAlternates fontVariantCaps fontVariantEastAsian fontVariantLigatures fontVariantNumeric fontVariantPosition fontWeight lineHeight\".split(\n          \" \"\n        ),\n        fontVariant:\n          \"fontVariantAlternates fontVariantCaps fontVariantEastAsian fontVariantLigatures fontVariantNumeric fontVariantPosition\".split(\n            \" \"\n          ),\n        gap: [\"columnGap\", \"rowGap\"],\n        grid: \"gridAutoColumns gridAutoFlow gridAutoRows gridTemplateAreas gridTemplateColumns gridTemplateRows\".split(\n          \" \"\n        ),\n        gridArea: [\n          \"gridColumnEnd\",\n          \"gridColumnStart\",\n          \"gridRowEnd\",\n          \"gridRowStart\"\n        ],\n        gridColumn: [\"gridColumnEnd\", \"gridColumnStart\"],\n        gridColumnGap: [\"columnGap\"],\n        gridGap: [\"columnGap\", \"rowGap\"],\n        gridRow: [\"gridRowEnd\", \"gridRowStart\"],\n        gridRowGap: [\"rowGap\"],\n        gridTemplate: [\n          \"gridTemplateAreas\",\n          \"gridTemplateColumns\",\n          \"gridTemplateRows\"\n        ],\n        listStyle: [\"listStyleImage\", \"listStylePosition\", \"listStyleType\"],\n        margin: [\"marginBottom\", \"marginLeft\", \"marginRight\", \"marginTop\"],\n        marker: [\"markerEnd\", \"markerMid\", \"markerStart\"],\n        mask: \"maskClip maskComposite maskImage maskMode maskOrigin maskPositionX maskPositionY maskRepeat maskSize\".split(\n          \" \"\n        ),\n        maskPosition: [\"maskPositionX\", \"maskPositionY\"],\n        outline: [\"outlineColor\", \"outlineStyle\", \"outlineWidth\"],\n        overflow: [\"overflowX\", \"overflowY\"],\n        padding: [\"paddingBottom\", \"paddingLeft\", \"paddingRight\", \"paddingTop\"],\n        placeContent: [\"alignContent\", \"justifyContent\"],\n        placeItems: [\"alignItems\", \"justifyItems\"],\n        placeSelf: [\"alignSelf\", \"justifySelf\"],\n        textDecoration: [\n          \"textDecorationColor\",\n          \"textDecorationLine\",\n          \"textDecorationStyle\"\n        ],\n        textEmphasis: [\"textEmphasisColor\", \"textEmphasisStyle\"],\n        transition: [\n          \"transitionDelay\",\n          \"transitionDuration\",\n          \"transitionProperty\",\n          \"transitionTimingFunction\"\n        ],\n        wordWrap: [\"overflowWrap\"]\n      },\n      uppercasePattern = /([A-Z])/g,\n      msPattern$1 = /^ms-/,\n      badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/,\n      msPattern = /^-ms-/,\n      hyphenPattern = /-(.)/g,\n      badStyleValueWithSemicolonPattern = /;\\s*$/,\n      warnedStyleNames = {},\n      warnedStyleValues = {},\n      warnedForNaNValue = !1,\n      warnedForInfinityValue = !1,\n      unitlessNumbers = new Set(\n        \"animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp\".split(\n          \" \"\n        )\n      ),\n      MATH_NAMESPACE = \"http://www.w3.org/1998/Math/MathML\",\n      SVG_NAMESPACE = \"http://www.w3.org/2000/svg\",\n      aliases = new Map([\n        [\"acceptCharset\", \"accept-charset\"],\n        [\"htmlFor\", \"for\"],\n        [\"httpEquiv\", \"http-equiv\"],\n        [\"crossOrigin\", \"crossorigin\"],\n        [\"accentHeight\", \"accent-height\"],\n        [\"alignmentBaseline\", \"alignment-baseline\"],\n        [\"arabicForm\", \"arabic-form\"],\n        [\"baselineShift\", \"baseline-shift\"],\n        [\"capHeight\", \"cap-height\"],\n        [\"clipPath\", \"clip-path\"],\n        [\"clipRule\", \"clip-rule\"],\n        [\"colorInterpolation\", \"color-interpolation\"],\n        [\"colorInterpolationFilters\", \"color-interpolation-filters\"],\n        [\"colorProfile\", \"color-profile\"],\n        [\"colorRendering\", \"color-rendering\"],\n        [\"dominantBaseline\", \"dominant-baseline\"],\n        [\"enableBackground\", \"enable-background\"],\n        [\"fillOpacity\", \"fill-opacity\"],\n        [\"fillRule\", \"fill-rule\"],\n        [\"floodColor\", \"flood-color\"],\n        [\"floodOpacity\", \"flood-opacity\"],\n        [\"fontFamily\", \"font-family\"],\n        [\"fontSize\", \"font-size\"],\n        [\"fontSizeAdjust\", \"font-size-adjust\"],\n        [\"fontStretch\", \"font-stretch\"],\n        [\"fontStyle\", \"font-style\"],\n        [\"fontVariant\", \"font-variant\"],\n        [\"fontWeight\", \"font-weight\"],\n        [\"glyphName\", \"glyph-name\"],\n        [\"glyphOrientationHorizontal\", \"glyph-orientation-horizontal\"],\n        [\"glyphOrientationVertical\", \"glyph-orientation-vertical\"],\n        [\"horizAdvX\", \"horiz-adv-x\"],\n        [\"horizOriginX\", \"horiz-origin-x\"],\n        [\"imageRendering\", \"image-rendering\"],\n        [\"letterSpacing\", \"letter-spacing\"],\n        [\"lightingColor\", \"lighting-color\"],\n        [\"markerEnd\", \"marker-end\"],\n        [\"markerMid\", \"marker-mid\"],\n        [\"markerStart\", \"marker-start\"],\n        [\"overlinePosition\", \"overline-position\"],\n        [\"overlineThickness\", \"overline-thickness\"],\n        [\"paintOrder\", \"paint-order\"],\n        [\"panose-1\", \"panose-1\"],\n        [\"pointerEvents\", \"pointer-events\"],\n        [\"renderingIntent\", \"rendering-intent\"],\n        [\"shapeRendering\", \"shape-rendering\"],\n        [\"stopColor\", \"stop-color\"],\n        [\"stopOpacity\", \"stop-opacity\"],\n        [\"strikethroughPosition\", \"strikethrough-position\"],\n        [\"strikethroughThickness\", \"strikethrough-thickness\"],\n        [\"strokeDasharray\", \"stroke-dasharray\"],\n        [\"strokeDashoffset\", \"stroke-dashoffset\"],\n        [\"strokeLinecap\", \"stroke-linecap\"],\n        [\"strokeLinejoin\", \"stroke-linejoin\"],\n        [\"strokeMiterlimit\", \"stroke-miterlimit\"],\n        [\"strokeOpacity\", \"stroke-opacity\"],\n        [\"strokeWidth\", \"stroke-width\"],\n        [\"textAnchor\", \"text-anchor\"],\n        [\"textDecoration\", \"text-decoration\"],\n        [\"textRendering\", \"text-rendering\"],\n        [\"transformOrigin\", \"transform-origin\"],\n        [\"underlinePosition\", \"underline-position\"],\n        [\"underlineThickness\", \"underline-thickness\"],\n        [\"unicodeBidi\", \"unicode-bidi\"],\n        [\"unicodeRange\", \"unicode-range\"],\n        [\"unitsPerEm\", \"units-per-em\"],\n        [\"vAlphabetic\", \"v-alphabetic\"],\n        [\"vHanging\", \"v-hanging\"],\n        [\"vIdeographic\", \"v-ideographic\"],\n        [\"vMathematical\", \"v-mathematical\"],\n        [\"vectorEffect\", \"vector-effect\"],\n        [\"vertAdvY\", \"vert-adv-y\"],\n        [\"vertOriginX\", \"vert-origin-x\"],\n        [\"vertOriginY\", \"vert-origin-y\"],\n        [\"wordSpacing\", \"word-spacing\"],\n        [\"writingMode\", \"writing-mode\"],\n        [\"xmlnsXlink\", \"xmlns:xlink\"],\n        [\"xHeight\", \"x-height\"]\n      ]),\n      possibleStandardNames = {\n        accept: \"accept\",\n        acceptcharset: \"acceptCharset\",\n        \"accept-charset\": \"acceptCharset\",\n        accesskey: \"accessKey\",\n        action: \"action\",\n        allowfullscreen: \"allowFullScreen\",\n        alt: \"alt\",\n        as: \"as\",\n        async: \"async\",\n        autocapitalize: \"autoCapitalize\",\n        autocomplete: \"autoComplete\",\n        autocorrect: \"autoCorrect\",\n        autofocus: \"autoFocus\",\n        autoplay: \"autoPlay\",\n        autosave: \"autoSave\",\n        capture: \"capture\",\n        cellpadding: \"cellPadding\",\n        cellspacing: \"cellSpacing\",\n        challenge: \"challenge\",\n        charset: \"charSet\",\n        checked: \"checked\",\n        children: \"children\",\n        cite: \"cite\",\n        class: \"className\",\n        classid: \"classID\",\n        classname: \"className\",\n        cols: \"cols\",\n        colspan: \"colSpan\",\n        content: \"content\",\n        contenteditable: \"contentEditable\",\n        contextmenu: \"contextMenu\",\n        controls: \"controls\",\n        controlslist: \"controlsList\",\n        coords: \"coords\",\n        crossorigin: \"crossOrigin\",\n        dangerouslysetinnerhtml: \"dangerouslySetInnerHTML\",\n        data: \"data\",\n        datetime: \"dateTime\",\n        default: \"default\",\n        defaultchecked: \"defaultChecked\",\n        defaultvalue: \"defaultValue\",\n        defer: \"defer\",\n        dir: \"dir\",\n        disabled: \"disabled\",\n        disablepictureinpicture: \"disablePictureInPicture\",\n        disableremoteplayback: \"disableRemotePlayback\",\n        download: \"download\",\n        draggable: \"draggable\",\n        enctype: \"encType\",\n        enterkeyhint: \"enterKeyHint\",\n        fetchpriority: \"fetchPriority\",\n        for: \"htmlFor\",\n        form: \"form\",\n        formmethod: \"formMethod\",\n        formaction: \"formAction\",\n        formenctype: \"formEncType\",\n        formnovalidate: \"formNoValidate\",\n        formtarget: \"formTarget\",\n        frameborder: \"frameBorder\",\n        headers: \"headers\",\n        height: \"height\",\n        hidden: \"hidden\",\n        high: \"high\",\n        href: \"href\",\n        hreflang: \"hrefLang\",\n        htmlfor: \"htmlFor\",\n        httpequiv: \"httpEquiv\",\n        \"http-equiv\": \"httpEquiv\",\n        icon: \"icon\",\n        id: \"id\",\n        imagesizes: \"imageSizes\",\n        imagesrcset: \"imageSrcSet\",\n        inert: \"inert\",\n        innerhtml: \"innerHTML\",\n        inputmode: \"inputMode\",\n        integrity: \"integrity\",\n        is: \"is\",\n        itemid: \"itemID\",\n        itemprop: \"itemProp\",\n        itemref: \"itemRef\",\n        itemscope: \"itemScope\",\n        itemtype: \"itemType\",\n        keyparams: \"keyParams\",\n        keytype: \"keyType\",\n        kind: \"kind\",\n        label: \"label\",\n        lang: \"lang\",\n        list: \"list\",\n        loop: \"loop\",\n        low: \"low\",\n        manifest: \"manifest\",\n        marginwidth: \"marginWidth\",\n        marginheight: \"marginHeight\",\n        max: \"max\",\n        maxlength: \"maxLength\",\n        media: \"media\",\n        mediagroup: \"mediaGroup\",\n        method: \"method\",\n        min: \"min\",\n        minlength: \"minLength\",\n        multiple: \"multiple\",\n        muted: \"muted\",\n        name: \"name\",\n        nomodule: \"noModule\",\n        nonce: \"nonce\",\n        novalidate: \"noValidate\",\n        open: \"open\",\n        optimum: \"optimum\",\n        pattern: \"pattern\",\n        placeholder: \"placeholder\",\n        playsinline: \"playsInline\",\n        poster: \"poster\",\n        preload: \"preload\",\n        profile: \"profile\",\n        radiogroup: \"radioGroup\",\n        readonly: \"readOnly\",\n        referrerpolicy: \"referrerPolicy\",\n        rel: \"rel\",\n        required: \"required\",\n        reversed: \"reversed\",\n        role: \"role\",\n        rows: \"rows\",\n        rowspan: \"rowSpan\",\n        sandbox: \"sandbox\",\n        scope: \"scope\",\n        scoped: \"scoped\",\n        scrolling: \"scrolling\",\n        seamless: \"seamless\",\n        selected: \"selected\",\n        shape: \"shape\",\n        size: \"size\",\n        sizes: \"sizes\",\n        span: \"span\",\n        spellcheck: \"spellCheck\",\n        src: \"src\",\n        srcdoc: \"srcDoc\",\n        srclang: \"srcLang\",\n        srcset: \"srcSet\",\n        start: \"start\",\n        step: \"step\",\n        style: \"style\",\n        summary: \"summary\",\n        tabindex: \"tabIndex\",\n        target: \"target\",\n        title: \"title\",\n        type: \"type\",\n        usemap: \"useMap\",\n        value: \"value\",\n        width: \"width\",\n        wmode: \"wmode\",\n        wrap: \"wrap\",\n        about: \"about\",\n        accentheight: \"accentHeight\",\n        \"accent-height\": \"accentHeight\",\n        accumulate: \"accumulate\",\n        additive: \"additive\",\n        alignmentbaseline: \"alignmentBaseline\",\n        \"alignment-baseline\": \"alignmentBaseline\",\n        allowreorder: \"allowReorder\",\n        alphabetic: \"alphabetic\",\n        amplitude: \"amplitude\",\n        arabicform: \"arabicForm\",\n        \"arabic-form\": \"arabicForm\",\n        ascent: \"ascent\",\n        attributename: \"attributeName\",\n        attributetype: \"attributeType\",\n        autoreverse: \"autoReverse\",\n        azimuth: \"azimuth\",\n        basefrequency: \"baseFrequency\",\n        baselineshift: \"baselineShift\",\n        \"baseline-shift\": \"baselineShift\",\n        baseprofile: \"baseProfile\",\n        bbox: \"bbox\",\n        begin: \"begin\",\n        bias: \"bias\",\n        by: \"by\",\n        calcmode: \"calcMode\",\n        capheight: \"capHeight\",\n        \"cap-height\": \"capHeight\",\n        clip: \"clip\",\n        clippath: \"clipPath\",\n        \"clip-path\": \"clipPath\",\n        clippathunits: \"clipPathUnits\",\n        cliprule: \"clipRule\",\n        \"clip-rule\": \"clipRule\",\n        color: \"color\",\n        colorinterpolation: \"colorInterpolation\",\n        \"color-interpolation\": \"colorInterpolation\",\n        colorinterpolationfilters: \"colorInterpolationFilters\",\n        \"color-interpolation-filters\": \"colorInterpolationFilters\",\n        colorprofile: \"colorProfile\",\n        \"color-profile\": \"colorProfile\",\n        colorrendering: \"colorRendering\",\n        \"color-rendering\": \"colorRendering\",\n        contentscripttype: \"contentScriptType\",\n        contentstyletype: \"contentStyleType\",\n        cursor: \"cursor\",\n        cx: \"cx\",\n        cy: \"cy\",\n        d: \"d\",\n        datatype: \"datatype\",\n        decelerate: \"decelerate\",\n        descent: \"descent\",\n        diffuseconstant: \"diffuseConstant\",\n        direction: \"direction\",\n        display: \"display\",\n        divisor: \"divisor\",\n        dominantbaseline: \"dominantBaseline\",\n        \"dominant-baseline\": \"dominantBaseline\",\n        dur: \"dur\",\n        dx: \"dx\",\n        dy: \"dy\",\n        edgemode: \"edgeMode\",\n        elevation: \"elevation\",\n        enablebackground: \"enableBackground\",\n        \"enable-background\": \"enableBackground\",\n        end: \"end\",\n        exponent: \"exponent\",\n        externalresourcesrequired: \"externalResourcesRequired\",\n        fill: \"fill\",\n        fillopacity: \"fillOpacity\",\n        \"fill-opacity\": \"fillOpacity\",\n        fillrule: \"fillRule\",\n        \"fill-rule\": \"fillRule\",\n        filter: \"filter\",\n        filterres: \"filterRes\",\n        filterunits: \"filterUnits\",\n        floodopacity: \"floodOpacity\",\n        \"flood-opacity\": \"floodOpacity\",\n        floodcolor: \"floodColor\",\n        \"flood-color\": \"floodColor\",\n        focusable: \"focusable\",\n        fontfamily: \"fontFamily\",\n        \"font-family\": \"fontFamily\",\n        fontsize: \"fontSize\",\n        \"font-size\": \"fontSize\",\n        fontsizeadjust: \"fontSizeAdjust\",\n        \"font-size-adjust\": \"fontSizeAdjust\",\n        fontstretch: \"fontStretch\",\n        \"font-stretch\": \"fontStretch\",\n        fontstyle: \"fontStyle\",\n        \"font-style\": \"fontStyle\",\n        fontvariant: \"fontVariant\",\n        \"font-variant\": \"fontVariant\",\n        fontweight: \"fontWeight\",\n        \"font-weight\": \"fontWeight\",\n        format: \"format\",\n        from: \"from\",\n        fx: \"fx\",\n        fy: \"fy\",\n        g1: \"g1\",\n        g2: \"g2\",\n        glyphname: \"glyphName\",\n        \"glyph-name\": \"glyphName\",\n        glyphorientationhorizontal: \"glyphOrientationHorizontal\",\n        \"glyph-orientation-horizontal\": \"glyphOrientationHorizontal\",\n        glyphorientationvertical: \"glyphOrientationVertical\",\n        \"glyph-orientation-vertical\": \"glyphOrientationVertical\",\n        glyphref: \"glyphRef\",\n        gradienttransform: \"gradientTransform\",\n        gradientunits: \"gradientUnits\",\n        hanging: \"hanging\",\n        horizadvx: \"horizAdvX\",\n        \"horiz-adv-x\": \"horizAdvX\",\n        horizoriginx: \"horizOriginX\",\n        \"horiz-origin-x\": \"horizOriginX\",\n        ideographic: \"ideographic\",\n        imagerendering: \"imageRendering\",\n        \"image-rendering\": \"imageRendering\",\n        in2: \"in2\",\n        in: \"in\",\n        inlist: \"inlist\",\n        intercept: \"intercept\",\n        k1: \"k1\",\n        k2: \"k2\",\n        k3: \"k3\",\n        k4: \"k4\",\n        k: \"k\",\n        kernelmatrix: \"kernelMatrix\",\n        kernelunitlength: \"kernelUnitLength\",\n        kerning: \"kerning\",\n        keypoints: \"keyPoints\",\n        keysplines: \"keySplines\",\n        keytimes: \"keyTimes\",\n        lengthadjust: \"lengthAdjust\",\n        letterspacing: \"letterSpacing\",\n        \"letter-spacing\": \"letterSpacing\",\n        lightingcolor: \"lightingColor\",\n        \"lighting-color\": \"lightingColor\",\n        limitingconeangle: \"limitingConeAngle\",\n        local: \"local\",\n        markerend: \"markerEnd\",\n        \"marker-end\": \"markerEnd\",\n        markerheight: \"markerHeight\",\n        markermid: \"markerMid\",\n        \"marker-mid\": \"markerMid\",\n        markerstart: \"markerStart\",\n        \"marker-start\": \"markerStart\",\n        markerunits: \"markerUnits\",\n        markerwidth: \"markerWidth\",\n        mask: \"mask\",\n        maskcontentunits: \"maskContentUnits\",\n        maskunits: \"maskUnits\",\n        mathematical: \"mathematical\",\n        mode: \"mode\",\n        numoctaves: \"numOctaves\",\n        offset: \"offset\",\n        opacity: \"opacity\",\n        operator: \"operator\",\n        order: \"order\",\n        orient: \"orient\",\n        orientation: \"orientation\",\n        origin: \"origin\",\n        overflow: \"overflow\",\n        overlineposition: \"overlinePosition\",\n        \"overline-position\": \"overlinePosition\",\n        overlinethickness: \"overlineThickness\",\n        \"overline-thickness\": \"overlineThickness\",\n        paintorder: \"paintOrder\",\n        \"paint-order\": \"paintOrder\",\n        panose1: \"panose1\",\n        \"panose-1\": \"panose1\",\n        pathlength: \"pathLength\",\n        patterncontentunits: \"patternContentUnits\",\n        patterntransform: \"patternTransform\",\n        patternunits: \"patternUnits\",\n        pointerevents: \"pointerEvents\",\n        \"pointer-events\": \"pointerEvents\",\n        points: \"points\",\n        pointsatx: \"pointsAtX\",\n        pointsaty: \"pointsAtY\",\n        pointsatz: \"pointsAtZ\",\n        popover: \"popover\",\n        popovertarget: \"popoverTarget\",\n        popovertargetaction: \"popoverTargetAction\",\n        prefix: \"prefix\",\n        preservealpha: \"preserveAlpha\",\n        preserveaspectratio: \"preserveAspectRatio\",\n        primitiveunits: \"primitiveUnits\",\n        property: \"property\",\n        r: \"r\",\n        radius: \"radius\",\n        refx: \"refX\",\n        refy: \"refY\",\n        renderingintent: \"renderingIntent\",\n        \"rendering-intent\": \"renderingIntent\",\n        repeatcount: \"repeatCount\",\n        repeatdur: \"repeatDur\",\n        requiredextensions: \"requiredExtensions\",\n        requiredfeatures: \"requiredFeatures\",\n        resource: \"resource\",\n        restart: \"restart\",\n        result: \"result\",\n        results: \"results\",\n        rotate: \"rotate\",\n        rx: \"rx\",\n        ry: \"ry\",\n        scale: \"scale\",\n        security: \"security\",\n        seed: \"seed\",\n        shaperendering: \"shapeRendering\",\n        \"shape-rendering\": \"shapeRendering\",\n        slope: \"slope\",\n        spacing: \"spacing\",\n        specularconstant: \"specularConstant\",\n        specularexponent: \"specularExponent\",\n        speed: \"speed\",\n        spreadmethod: \"spreadMethod\",\n        startoffset: \"startOffset\",\n        stddeviation: \"stdDeviation\",\n        stemh: \"stemh\",\n        stemv: \"stemv\",\n        stitchtiles: \"stitchTiles\",\n        stopcolor: \"stopColor\",\n        \"stop-color\": \"stopColor\",\n        stopopacity: \"stopOpacity\",\n        \"stop-opacity\": \"stopOpacity\",\n        strikethroughposition: \"strikethroughPosition\",\n        \"strikethrough-position\": \"strikethroughPosition\",\n        strikethroughthickness: \"strikethroughThickness\",\n        \"strikethrough-thickness\": \"strikethroughThickness\",\n        string: \"string\",\n        stroke: \"stroke\",\n        strokedasharray: \"strokeDasharray\",\n        \"stroke-dasharray\": \"strokeDasharray\",\n        strokedashoffset: \"strokeDashoffset\",\n        \"stroke-dashoffset\": \"strokeDashoffset\",\n        strokelinecap: \"strokeLinecap\",\n        \"stroke-linecap\": \"strokeLinecap\",\n        strokelinejoin: \"strokeLinejoin\",\n        \"stroke-linejoin\": \"strokeLinejoin\",\n        strokemiterlimit: \"strokeMiterlimit\",\n        \"stroke-miterlimit\": \"strokeMiterlimit\",\n        strokewidth: \"strokeWidth\",\n        \"stroke-width\": \"strokeWidth\",\n        strokeopacity: \"strokeOpacity\",\n        \"stroke-opacity\": \"strokeOpacity\",\n        suppresscontenteditablewarning: \"suppressContentEditableWarning\",\n        suppresshydrationwarning: \"suppressHydrationWarning\",\n        surfacescale: \"surfaceScale\",\n        systemlanguage: \"systemLanguage\",\n        tablevalues: \"tableValues\",\n        targetx: \"targetX\",\n        targety: \"targetY\",\n        textanchor: \"textAnchor\",\n        \"text-anchor\": \"textAnchor\",\n        textdecoration: \"textDecoration\",\n        \"text-decoration\": \"textDecoration\",\n        textlength: \"textLength\",\n        textrendering: \"textRendering\",\n        \"text-rendering\": \"textRendering\",\n        to: \"to\",\n        transform: \"transform\",\n        transformorigin: \"transformOrigin\",\n        \"transform-origin\": \"transformOrigin\",\n        typeof: \"typeof\",\n        u1: \"u1\",\n        u2: \"u2\",\n        underlineposition: \"underlinePosition\",\n        \"underline-position\": \"underlinePosition\",\n        underlinethickness: \"underlineThickness\",\n        \"underline-thickness\": \"underlineThickness\",\n        unicode: \"unicode\",\n        unicodebidi: \"unicodeBidi\",\n        \"unicode-bidi\": \"unicodeBidi\",\n        unicoderange: \"unicodeRange\",\n        \"unicode-range\": \"unicodeRange\",\n        unitsperem: \"unitsPerEm\",\n        \"units-per-em\": \"unitsPerEm\",\n        unselectable: \"unselectable\",\n        valphabetic: \"vAlphabetic\",\n        \"v-alphabetic\": \"vAlphabetic\",\n        values: \"values\",\n        vectoreffect: \"vectorEffect\",\n        \"vector-effect\": \"vectorEffect\",\n        version: \"version\",\n        vertadvy: \"vertAdvY\",\n        \"vert-adv-y\": \"vertAdvY\",\n        vertoriginx: \"vertOriginX\",\n        \"vert-origin-x\": \"vertOriginX\",\n        vertoriginy: \"vertOriginY\",\n        \"vert-origin-y\": \"vertOriginY\",\n        vhanging: \"vHanging\",\n        \"v-hanging\": \"vHanging\",\n        videographic: \"vIdeographic\",\n        \"v-ideographic\": \"vIdeographic\",\n        viewbox: \"viewBox\",\n        viewtarget: \"viewTarget\",\n        visibility: \"visibility\",\n        vmathematical: \"vMathematical\",\n        \"v-mathematical\": \"vMathematical\",\n        vocab: \"vocab\",\n        widths: \"widths\",\n        wordspacing: \"wordSpacing\",\n        \"word-spacing\": \"wordSpacing\",\n        writingmode: \"writingMode\",\n        \"writing-mode\": \"writingMode\",\n        x1: \"x1\",\n        x2: \"x2\",\n        x: \"x\",\n        xchannelselector: \"xChannelSelector\",\n        xheight: \"xHeight\",\n        \"x-height\": \"xHeight\",\n        xlinkactuate: \"xlinkActuate\",\n        \"xlink:actuate\": \"xlinkActuate\",\n        xlinkarcrole: \"xlinkArcrole\",\n        \"xlink:arcrole\": \"xlinkArcrole\",\n        xlinkhref: \"xlinkHref\",\n        \"xlink:href\": \"xlinkHref\",\n        xlinkrole: \"xlinkRole\",\n        \"xlink:role\": \"xlinkRole\",\n        xlinkshow: \"xlinkShow\",\n        \"xlink:show\": \"xlinkShow\",\n        xlinktitle: \"xlinkTitle\",\n        \"xlink:title\": \"xlinkTitle\",\n        xlinktype: \"xlinkType\",\n        \"xlink:type\": \"xlinkType\",\n        xmlbase: \"xmlBase\",\n        \"xml:base\": \"xmlBase\",\n        xmllang: \"xmlLang\",\n        \"xml:lang\": \"xmlLang\",\n        xmlns: \"xmlns\",\n        \"xml:space\": \"xmlSpace\",\n        xmlnsxlink: \"xmlnsXlink\",\n        \"xmlns:xlink\": \"xmlnsXlink\",\n        xmlspace: \"xmlSpace\",\n        y1: \"y1\",\n        y2: \"y2\",\n        y: \"y\",\n        ychannelselector: \"yChannelSelector\",\n        z: \"z\",\n        zoomandpan: \"zoomAndPan\"\n      },\n      ariaProperties = {\n        \"aria-current\": 0,\n        \"aria-description\": 0,\n        \"aria-details\": 0,\n        \"aria-disabled\": 0,\n        \"aria-hidden\": 0,\n        \"aria-invalid\": 0,\n        \"aria-keyshortcuts\": 0,\n        \"aria-label\": 0,\n        \"aria-roledescription\": 0,\n        \"aria-autocomplete\": 0,\n        \"aria-checked\": 0,\n        \"aria-expanded\": 0,\n        \"aria-haspopup\": 0,\n        \"aria-level\": 0,\n        \"aria-modal\": 0,\n        \"aria-multiline\": 0,\n        \"aria-multiselectable\": 0,\n        \"aria-orientation\": 0,\n        \"aria-placeholder\": 0,\n        \"aria-pressed\": 0,\n        \"aria-readonly\": 0,\n        \"aria-required\": 0,\n        \"aria-selected\": 0,\n        \"aria-sort\": 0,\n        \"aria-valuemax\": 0,\n        \"aria-valuemin\": 0,\n        \"aria-valuenow\": 0,\n        \"aria-valuetext\": 0,\n        \"aria-atomic\": 0,\n        \"aria-busy\": 0,\n        \"aria-live\": 0,\n        \"aria-relevant\": 0,\n        \"aria-dropeffect\": 0,\n        \"aria-grabbed\": 0,\n        \"aria-activedescendant\": 0,\n        \"aria-colcount\": 0,\n        \"aria-colindex\": 0,\n        \"aria-colspan\": 0,\n        \"aria-controls\": 0,\n        \"aria-describedby\": 0,\n        \"aria-errormessage\": 0,\n        \"aria-flowto\": 0,\n        \"aria-labelledby\": 0,\n        \"aria-owns\": 0,\n        \"aria-posinset\": 0,\n        \"aria-rowcount\": 0,\n        \"aria-rowindex\": 0,\n        \"aria-rowspan\": 0,\n        \"aria-setsize\": 0\n      },\n      warnedProperties$1 = {},\n      rARIA$1 = RegExp(\n        \"^(aria)-[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\n      ),\n      rARIACamel$1 = RegExp(\n        \"^(aria)[A-Z][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\n      ),\n      didWarnValueNull = !1,\n      warnedProperties = {},\n      EVENT_NAME_REGEX = /^on./,\n      INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/,\n      rARIA = RegExp(\n        \"^(aria)-[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\n      ),\n      rARIACamel = RegExp(\n        \"^(aria)[A-Z][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\n      ),\n      isJavaScriptProtocol =\n        /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*:/i,\n      currentReplayingEvent = null,\n      restoreTarget = null,\n      restoreQueue = null,\n      isInsideEventHandler = !1,\n      canUseDOM = !(\n        \"undefined\" === typeof window ||\n        \"undefined\" === typeof window.document ||\n        \"undefined\" === typeof window.document.createElement\n      ),\n      passiveBrowserEventsSupported = !1;\n    if (canUseDOM)\n      try {\n        var options$jscomp$0 = {};\n        Object.defineProperty(options$jscomp$0, \"passive\", {\n          get: function () {\n            passiveBrowserEventsSupported = !0;\n          }\n        });\n        window.addEventListener(\"test\", options$jscomp$0, options$jscomp$0);\n        window.removeEventListener(\"test\", options$jscomp$0, options$jscomp$0);\n      } catch (e) {\n        passiveBrowserEventsSupported = !1;\n      }\n    var root = null,\n      startText = null,\n      fallbackText = null,\n      EventInterface = {\n        eventPhase: 0,\n        bubbles: 0,\n        cancelable: 0,\n        timeStamp: function (event) {\n          return event.timeStamp || Date.now();\n        },\n        defaultPrevented: 0,\n        isTrusted: 0\n      },\n      SyntheticEvent = createSyntheticEvent(EventInterface),\n      UIEventInterface = assign({}, EventInterface, { view: 0, detail: 0 }),\n      SyntheticUIEvent = createSyntheticEvent(UIEventInterface),\n      lastMovementX,\n      lastMovementY,\n      lastMouseEvent,\n      MouseEventInterface = assign({}, UIEventInterface, {\n        screenX: 0,\n        screenY: 0,\n        clientX: 0,\n        clientY: 0,\n        pageX: 0,\n        pageY: 0,\n        ctrlKey: 0,\n        shiftKey: 0,\n        altKey: 0,\n        metaKey: 0,\n        getModifierState: getEventModifierState,\n        button: 0,\n        buttons: 0,\n        relatedTarget: function (event) {\n          return void 0 === event.relatedTarget\n            ? event.fromElement === event.srcElement\n              ? event.toElement\n              : event.fromElement\n            : event.relatedTarget;\n        },\n        movementX: function (event) {\n          if (\"movementX\" in event) return event.movementX;\n          event !== lastMouseEvent &&\n            (lastMouseEvent && \"mousemove\" === event.type\n              ? ((lastMovementX = event.screenX - lastMouseEvent.screenX),\n                (lastMovementY = event.screenY - lastMouseEvent.screenY))\n              : (lastMovementY = lastMovementX = 0),\n            (lastMouseEvent = event));\n          return lastMovementX;\n        },\n        movementY: function (event) {\n          return \"movementY\" in event ? event.movementY : lastMovementY;\n        }\n      }),\n      SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface),\n      DragEventInterface = assign({}, MouseEventInterface, { dataTransfer: 0 }),\n      SyntheticDragEvent = createSyntheticEvent(DragEventInterface),\n      FocusEventInterface = assign({}, UIEventInterface, { relatedTarget: 0 }),\n      SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface),\n      AnimationEventInterface = assign({}, EventInterface, {\n        animationName: 0,\n        elapsedTime: 0,\n        pseudoElement: 0\n      }),\n      SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface),\n      ClipboardEventInterface = assign({}, EventInterface, {\n        clipboardData: function (event) {\n          return \"clipboardData\" in event\n            ? event.clipboardData\n            : window.clipboardData;\n        }\n      }),\n      SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface),\n      CompositionEventInterface = assign({}, EventInterface, { data: 0 }),\n      SyntheticCompositionEvent = createSyntheticEvent(\n        CompositionEventInterface\n      ),\n      SyntheticInputEvent = SyntheticCompositionEvent,\n      normalizeKey = {\n        Esc: \"Escape\",\n        Spacebar: \" \",\n        Left: \"ArrowLeft\",\n        Up: \"ArrowUp\",\n        Right: \"ArrowRight\",\n        Down: \"ArrowDown\",\n        Del: \"Delete\",\n        Win: \"OS\",\n        Menu: \"ContextMenu\",\n        Apps: \"ContextMenu\",\n        Scroll: \"ScrollLock\",\n        MozPrintableKey: \"Unidentified\"\n      },\n      translateToKey = {\n        8: \"Backspace\",\n        9: \"Tab\",\n        12: \"Clear\",\n        13: \"Enter\",\n        16: \"Shift\",\n        17: \"Control\",\n        18: \"Alt\",\n        19: \"Pause\",\n        20: \"CapsLock\",\n        27: \"Escape\",\n        32: \" \",\n        33: \"PageUp\",\n        34: \"PageDown\",\n        35: \"End\",\n        36: \"Home\",\n        37: \"ArrowLeft\",\n        38: \"ArrowUp\",\n        39: \"ArrowRight\",\n        40: \"ArrowDown\",\n        45: \"Insert\",\n        46: \"Delete\",\n        112: \"F1\",\n        113: \"F2\",\n        114: \"F3\",\n        115: \"F4\",\n        116: \"F5\",\n        117: \"F6\",\n        118: \"F7\",\n        119: \"F8\",\n        120: \"F9\",\n        121: \"F10\",\n        122: \"F11\",\n        123: \"F12\",\n        144: \"NumLock\",\n        145: \"ScrollLock\",\n        224: \"Meta\"\n      },\n      modifierKeyToProp = {\n        Alt: \"altKey\",\n        Control: \"ctrlKey\",\n        Meta: \"metaKey\",\n        Shift: \"shiftKey\"\n      },\n      KeyboardEventInterface = assign({}, UIEventInterface, {\n        key: function (nativeEvent) {\n          if (nativeEvent.key) {\n            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n            if (\"Unidentified\" !== key) return key;\n          }\n          return \"keypress\" === nativeEvent.type\n            ? ((nativeEvent = getEventCharCode(nativeEvent)),\n              13 === nativeEvent ? \"Enter\" : String.fromCharCode(nativeEvent))\n            : \"keydown\" === nativeEvent.type || \"keyup\" === nativeEvent.type\n              ? translateToKey[nativeEvent.keyCode] || \"Unidentified\"\n              : \"\";\n        },\n        code: 0,\n        location: 0,\n        ctrlKey: 0,\n        shiftKey: 0,\n        altKey: 0,\n        metaKey: 0,\n        repeat: 0,\n        locale: 0,\n        getModifierState: getEventModifierState,\n        charCode: function (event) {\n          return \"keypress\" === event.type ? getEventCharCode(event) : 0;\n        },\n        keyCode: function (event) {\n          return \"keydown\" === event.type || \"keyup\" === event.type\n            ? event.keyCode\n            : 0;\n        },\n        which: function (event) {\n          return \"keypress\" === event.type\n            ? getEventCharCode(event)\n            : \"keydown\" === event.type || \"keyup\" === event.type\n              ? event.keyCode\n              : 0;\n        }\n      }),\n      SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface),\n      PointerEventInterface = assign({}, MouseEventInterface, {\n        pointerId: 0,\n        width: 0,\n        height: 0,\n        pressure: 0,\n        tangentialPressure: 0,\n        tiltX: 0,\n        tiltY: 0,\n        twist: 0,\n        pointerType: 0,\n        isPrimary: 0\n      }),\n      SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface),\n      TouchEventInterface = assign({}, UIEventInterface, {\n        touches: 0,\n        targetTouches: 0,\n        changedTouches: 0,\n        altKey: 0,\n        metaKey: 0,\n        ctrlKey: 0,\n        shiftKey: 0,\n        getModifierState: getEventModifierState\n      }),\n      SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface),\n      TransitionEventInterface = assign({}, EventInterface, {\n        propertyName: 0,\n        elapsedTime: 0,\n        pseudoElement: 0\n      }),\n      SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface),\n      WheelEventInterface = assign({}, MouseEventInterface, {\n        deltaX: function (event) {\n          return \"deltaX\" in event\n            ? event.deltaX\n            : \"wheelDeltaX\" in event\n              ? -event.wheelDeltaX\n              : 0;\n        },\n        deltaY: function (event) {\n          return \"deltaY\" in event\n            ? event.deltaY\n            : \"wheelDeltaY\" in event\n              ? -event.wheelDeltaY\n              : \"wheelDelta\" in event\n                ? -event.wheelDelta\n                : 0;\n        },\n        deltaZ: 0,\n        deltaMode: 0\n      }),\n      SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface),\n      ToggleEventInterface = assign({}, EventInterface, {\n        newState: 0,\n        oldState: 0\n      }),\n      SyntheticToggleEvent = createSyntheticEvent(ToggleEventInterface),\n      END_KEYCODES = [9, 13, 27, 32],\n      START_KEYCODE = 229,\n      canUseCompositionEvent = canUseDOM && \"CompositionEvent\" in window,\n      documentMode = null;\n    canUseDOM &&\n      \"documentMode\" in document &&\n      (documentMode = document.documentMode);\n    var canUseTextInputEvent =\n        canUseDOM && \"TextEvent\" in window && !documentMode,\n      useFallbackCompositionData =\n        canUseDOM &&\n        (!canUseCompositionEvent ||\n          (documentMode && 8 < documentMode && 11 >= documentMode)),\n      SPACEBAR_CODE = 32,\n      SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE),\n      hasSpaceKeypress = !1,\n      isComposing = !1,\n      supportedInputTypes = {\n        color: !0,\n        date: !0,\n        datetime: !0,\n        \"datetime-local\": !0,\n        email: !0,\n        month: !0,\n        number: !0,\n        password: !0,\n        range: !0,\n        search: !0,\n        tel: !0,\n        text: !0,\n        time: !0,\n        url: !0,\n        week: !0\n      },\n      activeElement$1 = null,\n      activeElementInst$1 = null,\n      isInputEventSupported = !1;\n    canUseDOM &&\n      (isInputEventSupported =\n        isEventSupported(\"input\") &&\n        (!document.documentMode || 9 < document.documentMode));\n    var objectIs = \"function\" === typeof Object.is ? Object.is : is,\n      skipSelectionChangeEvent =\n        canUseDOM && \"documentMode\" in document && 11 >= document.documentMode,\n      activeElement = null,\n      activeElementInst = null,\n      lastSelection = null,\n      mouseDown = !1,\n      vendorPrefixes = {\n        animationend: makePrefixMap(\"Animation\", \"AnimationEnd\"),\n        animationiteration: makePrefixMap(\"Animation\", \"AnimationIteration\"),\n        animationstart: makePrefixMap(\"Animation\", \"AnimationStart\"),\n        transitionrun: makePrefixMap(\"Transition\", \"TransitionRun\"),\n        transitionstart: makePrefixMap(\"Transition\", \"TransitionStart\"),\n        transitioncancel: makePrefixMap(\"Transition\", \"TransitionCancel\"),\n        transitionend: makePrefixMap(\"Transition\", \"TransitionEnd\")\n      },\n      prefixedEventNames = {},\n      style = {};\n    canUseDOM &&\n      ((style = document.createElement(\"div\").style),\n      \"AnimationEvent\" in window ||\n        (delete vendorPrefixes.animationend.animation,\n        delete vendorPrefixes.animationiteration.animation,\n        delete vendorPrefixes.animationstart.animation),\n      \"TransitionEvent\" in window ||\n        delete vendorPrefixes.transitionend.transition);\n    var ANIMATION_END = getVendorPrefixedEventName(\"animationend\"),\n      ANIMATION_ITERATION = getVendorPrefixedEventName(\"animationiteration\"),\n      ANIMATION_START = getVendorPrefixedEventName(\"animationstart\"),\n      TRANSITION_RUN = getVendorPrefixedEventName(\"transitionrun\"),\n      TRANSITION_START = getVendorPrefixedEventName(\"transitionstart\"),\n      TRANSITION_CANCEL = getVendorPrefixedEventName(\"transitioncancel\"),\n      TRANSITION_END = getVendorPrefixedEventName(\"transitionend\"),\n      topLevelEventsToReactNames = new Map(),\n      simpleEventPluginEvents =\n        \"abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\n          \" \"\n        );\n    simpleEventPluginEvents.push(\"scrollEnd\");\n    var CapturedStacks = new WeakMap(),\n      OffscreenVisible = 1,\n      OffscreenPassiveEffectsConnected = 2,\n      concurrentQueues = [],\n      concurrentQueuesIndex = 0,\n      concurrentlyUpdatedLanes = 0,\n      emptyContextObject = {};\n    Object.freeze(emptyContextObject);\n    var resolveFamily = null,\n      failedBoundaries = null,\n      NoMode = 0,\n      ConcurrentMode = 1,\n      ProfileMode = 2,\n      StrictLegacyMode = 8,\n      StrictEffectsMode = 16,\n      NoStrictPassiveEffectsMode = 64;\n    var hasBadMapPolyfill = !1;\n    try {\n      var nonExtensibleObject = Object.preventExtensions({});\n      new Map([[nonExtensibleObject, null]]);\n      new Set([nonExtensibleObject]);\n    } catch (e$3) {\n      hasBadMapPolyfill = !0;\n    }\n    var forkStack = [],\n      forkStackIndex = 0,\n      treeForkProvider = null,\n      treeForkCount = 0,\n      idStack = [],\n      idStackIndex = 0,\n      treeContextProvider = null,\n      treeContextId = 1,\n      treeContextOverflow = \"\",\n      hydrationParentFiber = null,\n      nextHydratableInstance = null,\n      isHydrating = !1,\n      didSuspendOrErrorDEV = !1,\n      hydrationDiffRootDEV = null,\n      hydrationErrors = null,\n      rootOrSingletonContext = !1,\n      HydrationMismatchException = Error(\n        \"Hydration Mismatch Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React.\"\n      ),\n      lastResetTime = 0;\n    if (\n      \"object\" === typeof performance &&\n      \"function\" === typeof performance.now\n    ) {\n      var localPerformance = performance;\n      var getCurrentTime = function () {\n        return localPerformance.now();\n      };\n    } else {\n      var localDate = Date;\n      getCurrentTime = function () {\n        return localDate.now();\n      };\n    }\n    var valueCursor = createCursor(null);\n    var rendererCursorDEV = createCursor(null);\n    var rendererSigil = {};\n    var currentlyRenderingFiber$1 = null,\n      lastContextDependency = null,\n      isDisallowedContextReadInDEV = !1,\n      AbortControllerLocal =\n        \"undefined\" !== typeof AbortController\n          ? AbortController\n          : function () {\n              var listeners = [],\n                signal = (this.signal = {\n                  aborted: !1,\n                  addEventListener: function (type, listener) {\n                    listeners.push(listener);\n                  }\n                });\n              this.abort = function () {\n                signal.aborted = !0;\n                listeners.forEach(function (listener) {\n                  return listener();\n                });\n              };\n            },\n      scheduleCallback$2 = Scheduler.unstable_scheduleCallback,\n      NormalPriority = Scheduler.unstable_NormalPriority,\n      CacheContext = {\n        $$typeof: REACT_CONTEXT_TYPE,\n        Consumer: null,\n        Provider: null,\n        _currentValue: null,\n        _currentValue2: null,\n        _threadCount: 0,\n        _currentRenderer: null,\n        _currentRenderer2: null\n      },\n      now = Scheduler.unstable_now,\n      renderStartTime = -0,\n      commitStartTime = -0,\n      profilerStartTime = -1.1,\n      profilerEffectDuration = -0,\n      currentUpdateIsNested = !1,\n      nestedUpdateScheduled = !1,\n      currentEntangledListeners = null,\n      currentEntangledPendingCount = 0,\n      currentEntangledLane = 0,\n      currentEntangledActionThenable = null,\n      prevOnStartTransitionFinish = ReactSharedInternals.S;\n    ReactSharedInternals.S = function (transition, returnValue) {\n      \"object\" === typeof returnValue &&\n        null !== returnValue &&\n        \"function\" === typeof returnValue.then &&\n        entangleAsyncAction(transition, returnValue);\n      null !== prevOnStartTransitionFinish &&\n        prevOnStartTransitionFinish(transition, returnValue);\n    };\n    var resumedCache = createCursor(null),\n      ReactStrictModeWarnings = {\n        recordUnsafeLifecycleWarnings: function () {},\n        flushPendingUnsafeLifecycleWarnings: function () {},\n        recordLegacyContextWarning: function () {},\n        flushLegacyContextWarning: function () {},\n        discardPendingWarnings: function () {}\n      },\n      pendingComponentWillMountWarnings = [],\n      pendingUNSAFE_ComponentWillMountWarnings = [],\n      pendingComponentWillReceivePropsWarnings = [],\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [],\n      pendingComponentWillUpdateWarnings = [],\n      pendingUNSAFE_ComponentWillUpdateWarnings = [],\n      didWarnAboutUnsafeLifecycles = new Set();\n    ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (\n      fiber,\n      instance\n    ) {\n      didWarnAboutUnsafeLifecycles.has(fiber.type) ||\n        (\"function\" === typeof instance.componentWillMount &&\n          !0 !== instance.componentWillMount.__suppressDeprecationWarning &&\n          pendingComponentWillMountWarnings.push(fiber),\n        fiber.mode & StrictLegacyMode &&\n          \"function\" === typeof instance.UNSAFE_componentWillMount &&\n          pendingUNSAFE_ComponentWillMountWarnings.push(fiber),\n        \"function\" === typeof instance.componentWillReceiveProps &&\n          !0 !==\n            instance.componentWillReceiveProps.__suppressDeprecationWarning &&\n          pendingComponentWillReceivePropsWarnings.push(fiber),\n        fiber.mode & StrictLegacyMode &&\n          \"function\" === typeof instance.UNSAFE_componentWillReceiveProps &&\n          pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber),\n        \"function\" === typeof instance.componentWillUpdate &&\n          !0 !== instance.componentWillUpdate.__suppressDeprecationWarning &&\n          pendingComponentWillUpdateWarnings.push(fiber),\n        fiber.mode & StrictLegacyMode &&\n          \"function\" === typeof instance.UNSAFE_componentWillUpdate &&\n          pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber));\n    };\n    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {\n      var componentWillMountUniqueNames = new Set();\n      0 < pendingComponentWillMountWarnings.length &&\n        (pendingComponentWillMountWarnings.forEach(function (fiber) {\n          componentWillMountUniqueNames.add(\n            getComponentNameFromFiber(fiber) || \"Component\"\n          );\n          didWarnAboutUnsafeLifecycles.add(fiber.type);\n        }),\n        (pendingComponentWillMountWarnings = []));\n      var UNSAFE_componentWillMountUniqueNames = new Set();\n      0 < pendingUNSAFE_ComponentWillMountWarnings.length &&\n        (pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {\n          UNSAFE_componentWillMountUniqueNames.add(\n            getComponentNameFromFiber(fiber) || \"Component\"\n          );\n          didWarnAboutUnsafeLifecycles.add(fiber.type);\n        }),\n        (pendingUNSAFE_ComponentWillMountWarnings = []));\n      var componentWillReceivePropsUniqueNames = new Set();\n      0 < pendingComponentWillReceivePropsWarnings.length &&\n        (pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {\n          componentWillReceivePropsUniqueNames.add(\n            getComponentNameFromFiber(fiber) || \"Component\"\n          );\n          didWarnAboutUnsafeLifecycles.add(fiber.type);\n        }),\n        (pendingComponentWillReceivePropsWarnings = []));\n      var UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n      0 < pendingUNSAFE_ComponentWillReceivePropsWarnings.length &&\n        (pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(\n          function (fiber) {\n            UNSAFE_componentWillReceivePropsUniqueNames.add(\n              getComponentNameFromFiber(fiber) || \"Component\"\n            );\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          }\n        ),\n        (pendingUNSAFE_ComponentWillReceivePropsWarnings = []));\n      var componentWillUpdateUniqueNames = new Set();\n      0 < pendingComponentWillUpdateWarnings.length &&\n        (pendingComponentWillUpdateWarnings.forEach(function (fiber) {\n          componentWillUpdateUniqueNames.add(\n            getComponentNameFromFiber(fiber) || \"Component\"\n          );\n          didWarnAboutUnsafeLifecycles.add(fiber.type);\n        }),\n        (pendingComponentWillUpdateWarnings = []));\n      var UNSAFE_componentWillUpdateUniqueNames = new Set();\n      0 < pendingUNSAFE_ComponentWillUpdateWarnings.length &&\n        (pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {\n          UNSAFE_componentWillUpdateUniqueNames.add(\n            getComponentNameFromFiber(fiber) || \"Component\"\n          );\n          didWarnAboutUnsafeLifecycles.add(fiber.type);\n        }),\n        (pendingUNSAFE_ComponentWillUpdateWarnings = []));\n      if (0 < UNSAFE_componentWillMountUniqueNames.size) {\n        var sortedNames = setToSortedString(\n          UNSAFE_componentWillMountUniqueNames\n        );\n        console.error(\n          \"Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\\nPlease update the following components: %s\",\n          sortedNames\n        );\n      }\n      0 < UNSAFE_componentWillReceivePropsUniqueNames.size &&\n        ((sortedNames = setToSortedString(\n          UNSAFE_componentWillReceivePropsUniqueNames\n        )),\n        console.error(\n          \"Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move data fetching code or side effects to componentDidUpdate.\\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\\n\\nPlease update the following components: %s\",\n          sortedNames\n        ));\n      0 < UNSAFE_componentWillUpdateUniqueNames.size &&\n        ((sortedNames = setToSortedString(\n          UNSAFE_componentWillUpdateUniqueNames\n        )),\n        console.error(\n          \"Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move data fetching code or side effects to componentDidUpdate.\\n\\nPlease update the following components: %s\",\n          sortedNames\n        ));\n      0 < componentWillMountUniqueNames.size &&\n        ((sortedNames = setToSortedString(componentWillMountUniqueNames)),\n        console.warn(\n          \"componentWillMount has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\\nPlease update the following components: %s\",\n          sortedNames\n        ));\n      0 < componentWillReceivePropsUniqueNames.size &&\n        ((sortedNames = setToSortedString(\n          componentWillReceivePropsUniqueNames\n        )),\n        console.warn(\n          \"componentWillReceiveProps has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move data fetching code or side effects to componentDidUpdate.\\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\\nPlease update the following components: %s\",\n          sortedNames\n        ));\n      0 < componentWillUpdateUniqueNames.size &&\n        ((sortedNames = setToSortedString(componentWillUpdateUniqueNames)),\n        console.warn(\n          \"componentWillUpdate has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move data fetching code or side effects to componentDidUpdate.\\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\\nPlease update the following components: %s\",\n          sortedNames\n        ));\n    };\n    var pendingLegacyContextWarning = new Map(),\n      didWarnAboutLegacyContext = new Set();\n    ReactStrictModeWarnings.recordLegacyContextWarning = function (\n      fiber,\n      instance\n    ) {\n      var strictRoot = null;\n      for (var node = fiber; null !== node; )\n        node.mode & StrictLegacyMode && (strictRoot = node),\n          (node = node.return);\n      null === strictRoot\n        ? console.error(\n            \"Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.\"\n          )\n        : !didWarnAboutLegacyContext.has(fiber.type) &&\n          ((node = pendingLegacyContextWarning.get(strictRoot)),\n          null != fiber.type.contextTypes ||\n            null != fiber.type.childContextTypes ||\n            (null !== instance &&\n              \"function\" === typeof instance.getChildContext)) &&\n          (void 0 === node &&\n            ((node = []), pendingLegacyContextWarning.set(strictRoot, node)),\n          node.push(fiber));\n    };\n    ReactStrictModeWarnings.flushLegacyContextWarning = function () {\n      pendingLegacyContextWarning.forEach(function (fiberArray) {\n        if (0 !== fiberArray.length) {\n          var firstFiber = fiberArray[0],\n            uniqueNames = new Set();\n          fiberArray.forEach(function (fiber) {\n            uniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutLegacyContext.add(fiber.type);\n          });\n          var sortedNames = setToSortedString(uniqueNames);\n          runWithFiberInDEV(firstFiber, function () {\n            console.error(\n              \"Legacy context API has been detected within a strict-mode tree.\\n\\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\\n\\nPlease update the following components: %s\\n\\nLearn more about this warning here: https://react.dev/link/legacy-context\",\n              sortedNames\n            );\n          });\n        }\n      });\n    };\n    ReactStrictModeWarnings.discardPendingWarnings = function () {\n      pendingComponentWillMountWarnings = [];\n      pendingUNSAFE_ComponentWillMountWarnings = [];\n      pendingComponentWillReceivePropsWarnings = [];\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n      pendingComponentWillUpdateWarnings = [];\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\n      pendingLegacyContextWarning = new Map();\n    };\n    var SuspenseException = Error(\n        \"Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\\n\\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`.\"\n      ),\n      SuspenseyCommitException = Error(\n        \"Suspense Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React.\"\n      ),\n      SuspenseActionException = Error(\n        \"Suspense Exception: This is not a real error! It's an implementation detail of `useActionState` to interrupt the current render. You must either rethrow it immediately, or move the `useActionState` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\\n\\nTo handle async errors, wrap your component in an error boundary.\"\n      ),\n      noopSuspenseyCommitThenable = {\n        then: function () {\n          console.error(\n            'Internal React error: A listener was unexpectedly attached to a \"noop\" thenable. This is a bug in React. Please file an issue.'\n          );\n        }\n      },\n      suspendedThenable = null,\n      needsToResetSuspendedThenableDEV = !1,\n      NoFlags = 0,\n      HasEffect = 1,\n      Insertion = 2,\n      Layout = 4,\n      Passive = 8,\n      UpdateState = 0,\n      ReplaceState = 1,\n      ForceUpdate = 2,\n      CaptureUpdate = 3,\n      hasForceUpdate = !1;\n    var didWarnUpdateInsideUpdate = !1;\n    var currentlyProcessingQueue = null;\n    var didReadFromEntangledAsyncAction = !1,\n      currentTreeHiddenStackCursor = createCursor(null),\n      prevEntangledRenderLanesCursor = createCursor(0),\n      didWarnUncachedGetSnapshot;\n    var didWarnAboutMismatchedHooksForComponent = new Set();\n    var didWarnAboutUseWrappedInTryCatch = new Set();\n    var didWarnAboutAsyncClientComponent = new Set();\n    var didWarnAboutUseFormState = new Set();\n    var renderLanes = 0,\n      currentlyRenderingFiber = null,\n      currentHook = null,\n      workInProgressHook = null,\n      didScheduleRenderPhaseUpdate = !1,\n      didScheduleRenderPhaseUpdateDuringThisPass = !1,\n      shouldDoubleInvokeUserFnsInHooksDEV = !1,\n      localIdCounter = 0,\n      thenableIndexCounter$1 = 0,\n      thenableState$1 = null,\n      globalClientIdCounter = 0,\n      RE_RENDER_LIMIT = 25,\n      currentHookNameInDev = null,\n      hookTypesDev = null,\n      hookTypesUpdateIndexDev = -1,\n      ignorePreviousDependencies = !1,\n      ContextOnlyDispatcher = {\n        readContext: readContext,\n        use: use,\n        useCallback: throwInvalidHookError,\n        useContext: throwInvalidHookError,\n        useEffect: throwInvalidHookError,\n        useImperativeHandle: throwInvalidHookError,\n        useLayoutEffect: throwInvalidHookError,\n        useInsertionEffect: throwInvalidHookError,\n        useMemo: throwInvalidHookError,\n        useReducer: throwInvalidHookError,\n        useRef: throwInvalidHookError,\n        useState: throwInvalidHookError,\n        useDebugValue: throwInvalidHookError,\n        useDeferredValue: throwInvalidHookError,\n        useTransition: throwInvalidHookError,\n        useSyncExternalStore: throwInvalidHookError,\n        useId: throwInvalidHookError,\n        useHostTransitionStatus: throwInvalidHookError,\n        useFormState: throwInvalidHookError,\n        useActionState: throwInvalidHookError,\n        useOptimistic: throwInvalidHookError,\n        useMemoCache: throwInvalidHookError,\n        useCacheRefresh: throwInvalidHookError\n      },\n      HooksDispatcherOnMountInDEV = null,\n      HooksDispatcherOnMountWithHookTypesInDEV = null,\n      HooksDispatcherOnUpdateInDEV = null,\n      HooksDispatcherOnRerenderInDEV = null,\n      InvalidNestedHooksDispatcherOnMountInDEV = null,\n      InvalidNestedHooksDispatcherOnUpdateInDEV = null,\n      InvalidNestedHooksDispatcherOnRerenderInDEV = null;\n    HooksDispatcherOnMountInDEV = {\n      readContext: function (context) {\n        return readContext(context);\n      },\n      use: use,\n      useCallback: function (callback, deps) {\n        currentHookNameInDev = \"useCallback\";\n        mountHookTypesDev();\n        checkDepsAreArrayDev(deps);\n        return mountCallback(callback, deps);\n      },\n      useContext: function (context) {\n        currentHookNameInDev = \"useContext\";\n        mountHookTypesDev();\n        return readContext(context);\n      },\n      useEffect: function (create, createDeps) {\n        currentHookNameInDev = \"useEffect\";\n        mountHookTypesDev();\n        checkDepsAreArrayDev(createDeps);\n        return mountEffect(create, createDeps);\n      },\n      useImperativeHandle: function (ref, create, deps) {\n        currentHookNameInDev = \"useImperativeHandle\";\n        mountHookTypesDev();\n        checkDepsAreArrayDev(deps);\n        return mountImperativeHandle(ref, create, deps);\n      },\n      useInsertionEffect: function (create, deps) {\n        currentHookNameInDev = \"useInsertionEffect\";\n        mountHookTypesDev();\n        checkDepsAreArrayDev(deps);\n        mountEffectImpl(4, Insertion, create, deps);\n      },\n      useLayoutEffect: function (create, deps) {\n        currentHookNameInDev = \"useLayoutEffect\";\n        mountHookTypesDev();\n        checkDepsAreArrayDev(deps);\n        return mountLayoutEffect(create, deps);\n      },\n      useMemo: function (create, deps) {\n        currentHookNameInDev = \"useMemo\";\n        mountHookTypesDev();\n        checkDepsAreArrayDev(deps);\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\n        try {\n          return mountMemo(create, deps);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useReducer: function (reducer, initialArg, init) {\n        currentHookNameInDev = \"useReducer\";\n        mountHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\n        try {\n          return mountReducer(reducer, initialArg, init);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useRef: function (initialValue) {\n        currentHookNameInDev = \"useRef\";\n        mountHookTypesDev();\n        return mountRef(initialValue);\n      },\n      useState: function (initialState) {\n        currentHookNameInDev = \"useState\";\n        mountHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\n        try {\n          return mountState(initialState);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useDebugValue: function () {\n        currentHookNameInDev = \"useDebugValue\";\n        mountHookTypesDev();\n      },\n      useDeferredValue: function (value, initialValue) {\n        currentHookNameInDev = \"useDeferredValue\";\n        mountHookTypesDev();\n        return mountDeferredValue(value, initialValue);\n      },\n      useTransition: function () {\n        currentHookNameInDev = \"useTransition\";\n        mountHookTypesDev();\n        return mountTransition();\n      },\n      useSyncExternalStore: function (\n        subscribe,\n        getSnapshot,\n        getServerSnapshot\n      ) {\n        currentHookNameInDev = \"useSyncExternalStore\";\n        mountHookTypesDev();\n        return mountSyncExternalStore(\n          subscribe,\n          getSnapshot,\n          getServerSnapshot\n        );\n      },\n      useId: function () {\n        currentHookNameInDev = \"useId\";\n        mountHookTypesDev();\n        return mountId();\n      },\n      useFormState: function (action, initialState) {\n        currentHookNameInDev = \"useFormState\";\n        mountHookTypesDev();\n        warnOnUseFormStateInDev();\n        return mountActionState(action, initialState);\n      },\n      useActionState: function (action, initialState) {\n        currentHookNameInDev = \"useActionState\";\n        mountHookTypesDev();\n        return mountActionState(action, initialState);\n      },\n      useOptimistic: function (passthrough) {\n        currentHookNameInDev = \"useOptimistic\";\n        mountHookTypesDev();\n        return mountOptimistic(passthrough);\n      },\n      useHostTransitionStatus: useHostTransitionStatus,\n      useMemoCache: useMemoCache,\n      useCacheRefresh: function () {\n        currentHookNameInDev = \"useCacheRefresh\";\n        mountHookTypesDev();\n        return mountRefresh();\n      }\n    };\n    HooksDispatcherOnMountWithHookTypesInDEV = {\n      readContext: function (context) {\n        return readContext(context);\n      },\n      use: use,\n      useCallback: function (callback, deps) {\n        currentHookNameInDev = \"useCallback\";\n        updateHookTypesDev();\n        return mountCallback(callback, deps);\n      },\n      useContext: function (context) {\n        currentHookNameInDev = \"useContext\";\n        updateHookTypesDev();\n        return readContext(context);\n      },\n      useEffect: function (create, createDeps) {\n        currentHookNameInDev = \"useEffect\";\n        updateHookTypesDev();\n        return mountEffect(create, createDeps);\n      },\n      useImperativeHandle: function (ref, create, deps) {\n        currentHookNameInDev = \"useImperativeHandle\";\n        updateHookTypesDev();\n        return mountImperativeHandle(ref, create, deps);\n      },\n      useInsertionEffect: function (create, deps) {\n        currentHookNameInDev = \"useInsertionEffect\";\n        updateHookTypesDev();\n        mountEffectImpl(4, Insertion, create, deps);\n      },\n      useLayoutEffect: function (create, deps) {\n        currentHookNameInDev = \"useLayoutEffect\";\n        updateHookTypesDev();\n        return mountLayoutEffect(create, deps);\n      },\n      useMemo: function (create, deps) {\n        currentHookNameInDev = \"useMemo\";\n        updateHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\n        try {\n          return mountMemo(create, deps);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useReducer: function (reducer, initialArg, init) {\n        currentHookNameInDev = \"useReducer\";\n        updateHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\n        try {\n          return mountReducer(reducer, initialArg, init);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useRef: function (initialValue) {\n        currentHookNameInDev = \"useRef\";\n        updateHookTypesDev();\n        return mountRef(initialValue);\n      },\n      useState: function (initialState) {\n        currentHookNameInDev = \"useState\";\n        updateHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\n        try {\n          return mountState(initialState);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useDebugValue: function () {\n        currentHookNameInDev = \"useDebugValue\";\n        updateHookTypesDev();\n      },\n      useDeferredValue: function (value, initialValue) {\n        currentHookNameInDev = \"useDeferredValue\";\n        updateHookTypesDev();\n        return mountDeferredValue(value, initialValue);\n      },\n      useTransition: function () {\n        currentHookNameInDev = \"useTransition\";\n        updateHookTypesDev();\n        return mountTransition();\n      },\n      useSyncExternalStore: function (\n        subscribe,\n        getSnapshot,\n        getServerSnapshot\n      ) {\n        currentHookNameInDev = \"useSyncExternalStore\";\n        updateHookTypesDev();\n        return mountSyncExternalStore(\n          subscribe,\n          getSnapshot,\n          getServerSnapshot\n        );\n      },\n      useId: function () {\n        currentHookNameInDev = \"useId\";\n        updateHookTypesDev();\n        return mountId();\n      },\n      useActionState: function (action, initialState) {\n        currentHookNameInDev = \"useActionState\";\n        updateHookTypesDev();\n        return mountActionState(action, initialState);\n      },\n      useFormState: function (action, initialState) {\n        currentHookNameInDev = \"useFormState\";\n        updateHookTypesDev();\n        warnOnUseFormStateInDev();\n        return mountActionState(action, initialState);\n      },\n      useOptimistic: function (passthrough) {\n        currentHookNameInDev = \"useOptimistic\";\n        updateHookTypesDev();\n        return mountOptimistic(passthrough);\n      },\n      useHostTransitionStatus: useHostTransitionStatus,\n      useMemoCache: useMemoCache,\n      useCacheRefresh: function () {\n        currentHookNameInDev = \"useCacheRefresh\";\n        updateHookTypesDev();\n        return mountRefresh();\n      }\n    };\n    HooksDispatcherOnUpdateInDEV = {\n      readContext: function (context) {\n        return readContext(context);\n      },\n      use: use,\n      useCallback: function (callback, deps) {\n        currentHookNameInDev = \"useCallback\";\n        updateHookTypesDev();\n        return updateCallback(callback, deps);\n      },\n      useContext: function (context) {\n        currentHookNameInDev = \"useContext\";\n        updateHookTypesDev();\n        return readContext(context);\n      },\n      useEffect: function (create, createDeps) {\n        currentHookNameInDev = \"useEffect\";\n        updateHookTypesDev();\n        updateEffectImpl(2048, Passive, create, createDeps);\n      },\n      useImperativeHandle: function (ref, create, deps) {\n        currentHookNameInDev = \"useImperativeHandle\";\n        updateHookTypesDev();\n        return updateImperativeHandle(ref, create, deps);\n      },\n      useInsertionEffect: function (create, deps) {\n        currentHookNameInDev = \"useInsertionEffect\";\n        updateHookTypesDev();\n        return updateEffectImpl(4, Insertion, create, deps);\n      },\n      useLayoutEffect: function (create, deps) {\n        currentHookNameInDev = \"useLayoutEffect\";\n        updateHookTypesDev();\n        return updateEffectImpl(4, Layout, create, deps);\n      },\n      useMemo: function (create, deps) {\n        currentHookNameInDev = \"useMemo\";\n        updateHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        try {\n          return updateMemo(create, deps);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useReducer: function (reducer, initialArg, init) {\n        currentHookNameInDev = \"useReducer\";\n        updateHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        try {\n          return updateReducer(reducer, initialArg, init);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useRef: function () {\n        currentHookNameInDev = \"useRef\";\n        updateHookTypesDev();\n        return updateWorkInProgressHook().memoizedState;\n      },\n      useState: function () {\n        currentHookNameInDev = \"useState\";\n        updateHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        try {\n          return updateReducer(basicStateReducer);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useDebugValue: function () {\n        currentHookNameInDev = \"useDebugValue\";\n        updateHookTypesDev();\n      },\n      useDeferredValue: function (value, initialValue) {\n        currentHookNameInDev = \"useDeferredValue\";\n        updateHookTypesDev();\n        return updateDeferredValue(value, initialValue);\n      },\n      useTransition: function () {\n        currentHookNameInDev = \"useTransition\";\n        updateHookTypesDev();\n        return updateTransition();\n      },\n      useSyncExternalStore: function (\n        subscribe,\n        getSnapshot,\n        getServerSnapshot\n      ) {\n        currentHookNameInDev = \"useSyncExternalStore\";\n        updateHookTypesDev();\n        return updateSyncExternalStore(\n          subscribe,\n          getSnapshot,\n          getServerSnapshot\n        );\n      },\n      useId: function () {\n        currentHookNameInDev = \"useId\";\n        updateHookTypesDev();\n        return updateWorkInProgressHook().memoizedState;\n      },\n      useFormState: function (action) {\n        currentHookNameInDev = \"useFormState\";\n        updateHookTypesDev();\n        warnOnUseFormStateInDev();\n        return updateActionState(action);\n      },\n      useActionState: function (action) {\n        currentHookNameInDev = \"useActionState\";\n        updateHookTypesDev();\n        return updateActionState(action);\n      },\n      useOptimistic: function (passthrough, reducer) {\n        currentHookNameInDev = \"useOptimistic\";\n        updateHookTypesDev();\n        return updateOptimistic(passthrough, reducer);\n      },\n      useHostTransitionStatus: useHostTransitionStatus,\n      useMemoCache: useMemoCache,\n      useCacheRefresh: function () {\n        currentHookNameInDev = \"useCacheRefresh\";\n        updateHookTypesDev();\n        return updateWorkInProgressHook().memoizedState;\n      }\n    };\n    HooksDispatcherOnRerenderInDEV = {\n      readContext: function (context) {\n        return readContext(context);\n      },\n      use: use,\n      useCallback: function (callback, deps) {\n        currentHookNameInDev = \"useCallback\";\n        updateHookTypesDev();\n        return updateCallback(callback, deps);\n      },\n      useContext: function (context) {\n        currentHookNameInDev = \"useContext\";\n        updateHookTypesDev();\n        return readContext(context);\n      },\n      useEffect: function (create, createDeps) {\n        currentHookNameInDev = \"useEffect\";\n        updateHookTypesDev();\n        updateEffectImpl(2048, Passive, create, createDeps);\n      },\n      useImperativeHandle: function (ref, create, deps) {\n        currentHookNameInDev = \"useImperativeHandle\";\n        updateHookTypesDev();\n        return updateImperativeHandle(ref, create, deps);\n      },\n      useInsertionEffect: function (create, deps) {\n        currentHookNameInDev = \"useInsertionEffect\";\n        updateHookTypesDev();\n        return updateEffectImpl(4, Insertion, create, deps);\n      },\n      useLayoutEffect: function (create, deps) {\n        currentHookNameInDev = \"useLayoutEffect\";\n        updateHookTypesDev();\n        return updateEffectImpl(4, Layout, create, deps);\n      },\n      useMemo: function (create, deps) {\n        currentHookNameInDev = \"useMemo\";\n        updateHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;\n        try {\n          return updateMemo(create, deps);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useReducer: function (reducer, initialArg, init) {\n        currentHookNameInDev = \"useReducer\";\n        updateHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;\n        try {\n          return rerenderReducer(reducer, initialArg, init);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useRef: function () {\n        currentHookNameInDev = \"useRef\";\n        updateHookTypesDev();\n        return updateWorkInProgressHook().memoizedState;\n      },\n      useState: function () {\n        currentHookNameInDev = \"useState\";\n        updateHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;\n        try {\n          return rerenderReducer(basicStateReducer);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useDebugValue: function () {\n        currentHookNameInDev = \"useDebugValue\";\n        updateHookTypesDev();\n      },\n      useDeferredValue: function (value, initialValue) {\n        currentHookNameInDev = \"useDeferredValue\";\n        updateHookTypesDev();\n        return rerenderDeferredValue(value, initialValue);\n      },\n      useTransition: function () {\n        currentHookNameInDev = \"useTransition\";\n        updateHookTypesDev();\n        return rerenderTransition();\n      },\n      useSyncExternalStore: function (\n        subscribe,\n        getSnapshot,\n        getServerSnapshot\n      ) {\n        currentHookNameInDev = \"useSyncExternalStore\";\n        updateHookTypesDev();\n        return updateSyncExternalStore(\n          subscribe,\n          getSnapshot,\n          getServerSnapshot\n        );\n      },\n      useId: function () {\n        currentHookNameInDev = \"useId\";\n        updateHookTypesDev();\n        return updateWorkInProgressHook().memoizedState;\n      },\n      useFormState: function (action) {\n        currentHookNameInDev = \"useFormState\";\n        updateHookTypesDev();\n        warnOnUseFormStateInDev();\n        return rerenderActionState(action);\n      },\n      useActionState: function (action) {\n        currentHookNameInDev = \"useActionState\";\n        updateHookTypesDev();\n        return rerenderActionState(action);\n      },\n      useOptimistic: function (passthrough, reducer) {\n        currentHookNameInDev = \"useOptimistic\";\n        updateHookTypesDev();\n        return rerenderOptimistic(passthrough, reducer);\n      },\n      useHostTransitionStatus: useHostTransitionStatus,\n      useMemoCache: useMemoCache,\n      useCacheRefresh: function () {\n        currentHookNameInDev = \"useCacheRefresh\";\n        updateHookTypesDev();\n        return updateWorkInProgressHook().memoizedState;\n      }\n    };\n    InvalidNestedHooksDispatcherOnMountInDEV = {\n      readContext: function (context) {\n        warnInvalidContextAccess();\n        return readContext(context);\n      },\n      use: function (usable) {\n        warnInvalidHookAccess();\n        return use(usable);\n      },\n      useCallback: function (callback, deps) {\n        currentHookNameInDev = \"useCallback\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        return mountCallback(callback, deps);\n      },\n      useContext: function (context) {\n        currentHookNameInDev = \"useContext\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        return readContext(context);\n      },\n      useEffect: function (create, createDeps) {\n        currentHookNameInDev = \"useEffect\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        return mountEffect(create, createDeps);\n      },\n      useImperativeHandle: function (ref, create, deps) {\n        currentHookNameInDev = \"useImperativeHandle\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        return mountImperativeHandle(ref, create, deps);\n      },\n      useInsertionEffect: function (create, deps) {\n        currentHookNameInDev = \"useInsertionEffect\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        mountEffectImpl(4, Insertion, create, deps);\n      },\n      useLayoutEffect: function (create, deps) {\n        currentHookNameInDev = \"useLayoutEffect\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        return mountLayoutEffect(create, deps);\n      },\n      useMemo: function (create, deps) {\n        currentHookNameInDev = \"useMemo\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\n        try {\n          return mountMemo(create, deps);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useReducer: function (reducer, initialArg, init) {\n        currentHookNameInDev = \"useReducer\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\n        try {\n          return mountReducer(reducer, initialArg, init);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useRef: function (initialValue) {\n        currentHookNameInDev = \"useRef\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        return mountRef(initialValue);\n      },\n      useState: function (initialState) {\n        currentHookNameInDev = \"useState\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\n        try {\n          return mountState(initialState);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useDebugValue: function () {\n        currentHookNameInDev = \"useDebugValue\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n      },\n      useDeferredValue: function (value, initialValue) {\n        currentHookNameInDev = \"useDeferredValue\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        return mountDeferredValue(value, initialValue);\n      },\n      useTransition: function () {\n        currentHookNameInDev = \"useTransition\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        return mountTransition();\n      },\n      useSyncExternalStore: function (\n        subscribe,\n        getSnapshot,\n        getServerSnapshot\n      ) {\n        currentHookNameInDev = \"useSyncExternalStore\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        return mountSyncExternalStore(\n          subscribe,\n          getSnapshot,\n          getServerSnapshot\n        );\n      },\n      useId: function () {\n        currentHookNameInDev = \"useId\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        return mountId();\n      },\n      useFormState: function (action, initialState) {\n        currentHookNameInDev = \"useFormState\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        return mountActionState(action, initialState);\n      },\n      useActionState: function (action, initialState) {\n        currentHookNameInDev = \"useActionState\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        return mountActionState(action, initialState);\n      },\n      useOptimistic: function (passthrough) {\n        currentHookNameInDev = \"useOptimistic\";\n        warnInvalidHookAccess();\n        mountHookTypesDev();\n        return mountOptimistic(passthrough);\n      },\n      useMemoCache: function (size) {\n        warnInvalidHookAccess();\n        return useMemoCache(size);\n      },\n      useHostTransitionStatus: useHostTransitionStatus,\n      useCacheRefresh: function () {\n        currentHookNameInDev = \"useCacheRefresh\";\n        mountHookTypesDev();\n        return mountRefresh();\n      }\n    };\n    InvalidNestedHooksDispatcherOnUpdateInDEV = {\n      readContext: function (context) {\n        warnInvalidContextAccess();\n        return readContext(context);\n      },\n      use: function (usable) {\n        warnInvalidHookAccess();\n        return use(usable);\n      },\n      useCallback: function (callback, deps) {\n        currentHookNameInDev = \"useCallback\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateCallback(callback, deps);\n      },\n      useContext: function (context) {\n        currentHookNameInDev = \"useContext\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return readContext(context);\n      },\n      useEffect: function (create, createDeps) {\n        currentHookNameInDev = \"useEffect\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        updateEffectImpl(2048, Passive, create, createDeps);\n      },\n      useImperativeHandle: function (ref, create, deps) {\n        currentHookNameInDev = \"useImperativeHandle\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateImperativeHandle(ref, create, deps);\n      },\n      useInsertionEffect: function (create, deps) {\n        currentHookNameInDev = \"useInsertionEffect\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateEffectImpl(4, Insertion, create, deps);\n      },\n      useLayoutEffect: function (create, deps) {\n        currentHookNameInDev = \"useLayoutEffect\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateEffectImpl(4, Layout, create, deps);\n      },\n      useMemo: function (create, deps) {\n        currentHookNameInDev = \"useMemo\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        try {\n          return updateMemo(create, deps);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useReducer: function (reducer, initialArg, init) {\n        currentHookNameInDev = \"useReducer\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        try {\n          return updateReducer(reducer, initialArg, init);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useRef: function () {\n        currentHookNameInDev = \"useRef\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateWorkInProgressHook().memoizedState;\n      },\n      useState: function () {\n        currentHookNameInDev = \"useState\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        try {\n          return updateReducer(basicStateReducer);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useDebugValue: function () {\n        currentHookNameInDev = \"useDebugValue\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n      },\n      useDeferredValue: function (value, initialValue) {\n        currentHookNameInDev = \"useDeferredValue\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateDeferredValue(value, initialValue);\n      },\n      useTransition: function () {\n        currentHookNameInDev = \"useTransition\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateTransition();\n      },\n      useSyncExternalStore: function (\n        subscribe,\n        getSnapshot,\n        getServerSnapshot\n      ) {\n        currentHookNameInDev = \"useSyncExternalStore\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateSyncExternalStore(\n          subscribe,\n          getSnapshot,\n          getServerSnapshot\n        );\n      },\n      useId: function () {\n        currentHookNameInDev = \"useId\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateWorkInProgressHook().memoizedState;\n      },\n      useFormState: function (action) {\n        currentHookNameInDev = \"useFormState\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateActionState(action);\n      },\n      useActionState: function (action) {\n        currentHookNameInDev = \"useActionState\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateActionState(action);\n      },\n      useOptimistic: function (passthrough, reducer) {\n        currentHookNameInDev = \"useOptimistic\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateOptimistic(passthrough, reducer);\n      },\n      useMemoCache: function (size) {\n        warnInvalidHookAccess();\n        return useMemoCache(size);\n      },\n      useHostTransitionStatus: useHostTransitionStatus,\n      useCacheRefresh: function () {\n        currentHookNameInDev = \"useCacheRefresh\";\n        updateHookTypesDev();\n        return updateWorkInProgressHook().memoizedState;\n      }\n    };\n    InvalidNestedHooksDispatcherOnRerenderInDEV = {\n      readContext: function (context) {\n        warnInvalidContextAccess();\n        return readContext(context);\n      },\n      use: function (usable) {\n        warnInvalidHookAccess();\n        return use(usable);\n      },\n      useCallback: function (callback, deps) {\n        currentHookNameInDev = \"useCallback\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateCallback(callback, deps);\n      },\n      useContext: function (context) {\n        currentHookNameInDev = \"useContext\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return readContext(context);\n      },\n      useEffect: function (create, createDeps) {\n        currentHookNameInDev = \"useEffect\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        updateEffectImpl(2048, Passive, create, createDeps);\n      },\n      useImperativeHandle: function (ref, create, deps) {\n        currentHookNameInDev = \"useImperativeHandle\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateImperativeHandle(ref, create, deps);\n      },\n      useInsertionEffect: function (create, deps) {\n        currentHookNameInDev = \"useInsertionEffect\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateEffectImpl(4, Insertion, create, deps);\n      },\n      useLayoutEffect: function (create, deps) {\n        currentHookNameInDev = \"useLayoutEffect\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateEffectImpl(4, Layout, create, deps);\n      },\n      useMemo: function (create, deps) {\n        currentHookNameInDev = \"useMemo\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        try {\n          return updateMemo(create, deps);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useReducer: function (reducer, initialArg, init) {\n        currentHookNameInDev = \"useReducer\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        try {\n          return rerenderReducer(reducer, initialArg, init);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useRef: function () {\n        currentHookNameInDev = \"useRef\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateWorkInProgressHook().memoizedState;\n      },\n      useState: function () {\n        currentHookNameInDev = \"useState\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        var prevDispatcher = ReactSharedInternals.H;\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        try {\n          return rerenderReducer(basicStateReducer);\n        } finally {\n          ReactSharedInternals.H = prevDispatcher;\n        }\n      },\n      useDebugValue: function () {\n        currentHookNameInDev = \"useDebugValue\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n      },\n      useDeferredValue: function (value, initialValue) {\n        currentHookNameInDev = \"useDeferredValue\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return rerenderDeferredValue(value, initialValue);\n      },\n      useTransition: function () {\n        currentHookNameInDev = \"useTransition\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return rerenderTransition();\n      },\n      useSyncExternalStore: function (\n        subscribe,\n        getSnapshot,\n        getServerSnapshot\n      ) {\n        currentHookNameInDev = \"useSyncExternalStore\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateSyncExternalStore(\n          subscribe,\n          getSnapshot,\n          getServerSnapshot\n        );\n      },\n      useId: function () {\n        currentHookNameInDev = \"useId\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return updateWorkInProgressHook().memoizedState;\n      },\n      useFormState: function (action) {\n        currentHookNameInDev = \"useFormState\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return rerenderActionState(action);\n      },\n      useActionState: function (action) {\n        currentHookNameInDev = \"useActionState\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return rerenderActionState(action);\n      },\n      useOptimistic: function (passthrough, reducer) {\n        currentHookNameInDev = \"useOptimistic\";\n        warnInvalidHookAccess();\n        updateHookTypesDev();\n        return rerenderOptimistic(passthrough, reducer);\n      },\n      useMemoCache: function (size) {\n        warnInvalidHookAccess();\n        return useMemoCache(size);\n      },\n      useHostTransitionStatus: useHostTransitionStatus,\n      useCacheRefresh: function () {\n        currentHookNameInDev = \"useCacheRefresh\";\n        updateHookTypesDev();\n        return updateWorkInProgressHook().memoizedState;\n      }\n    };\n    var callComponent = {\n        react_stack_bottom_frame: function (Component, props, secondArg) {\n          var wasRendering = isRendering;\n          isRendering = !0;\n          try {\n            return Component(props, secondArg);\n          } finally {\n            isRendering = wasRendering;\n          }\n        }\n      },\n      callComponentInDEV =\n        callComponent.react_stack_bottom_frame.bind(callComponent),\n      callRender = {\n        react_stack_bottom_frame: function (instance) {\n          var wasRendering = isRendering;\n          isRendering = !0;\n          try {\n            return instance.render();\n          } finally {\n            isRendering = wasRendering;\n          }\n        }\n      },\n      callRenderInDEV = callRender.react_stack_bottom_frame.bind(callRender),\n      callComponentDidMount = {\n        react_stack_bottom_frame: function (finishedWork, instance) {\n          try {\n            instance.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      },\n      callComponentDidMountInDEV =\n        callComponentDidMount.react_stack_bottom_frame.bind(\n          callComponentDidMount\n        ),\n      callComponentDidUpdate = {\n        react_stack_bottom_frame: function (\n          finishedWork,\n          instance,\n          prevProps,\n          prevState,\n          snapshot\n        ) {\n          try {\n            instance.componentDidUpdate(prevProps, prevState, snapshot);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      },\n      callComponentDidUpdateInDEV =\n        callComponentDidUpdate.react_stack_bottom_frame.bind(\n          callComponentDidUpdate\n        ),\n      callComponentDidCatch = {\n        react_stack_bottom_frame: function (instance, errorInfo) {\n          var stack = errorInfo.stack;\n          instance.componentDidCatch(errorInfo.value, {\n            componentStack: null !== stack ? stack : \"\"\n          });\n        }\n      },\n      callComponentDidCatchInDEV =\n        callComponentDidCatch.react_stack_bottom_frame.bind(\n          callComponentDidCatch\n        ),\n      callComponentWillUnmount = {\n        react_stack_bottom_frame: function (\n          current,\n          nearestMountedAncestor,\n          instance\n        ) {\n          try {\n            instance.componentWillUnmount();\n          } catch (error) {\n            captureCommitPhaseError(current, nearestMountedAncestor, error);\n          }\n        }\n      },\n      callComponentWillUnmountInDEV =\n        callComponentWillUnmount.react_stack_bottom_frame.bind(\n          callComponentWillUnmount\n        ),\n      callCreate = {\n        react_stack_bottom_frame: function (effect) {\n          null != effect.resourceKind &&\n            console.error(\n              \"Expected only SimpleEffects when enableUseEffectCRUDOverload is disabled, got %s\",\n              effect.resourceKind\n            );\n          var create = effect.create;\n          effect = effect.inst;\n          create = create();\n          return (effect.destroy = create);\n        }\n      },\n      callCreateInDEV = callCreate.react_stack_bottom_frame.bind(callCreate),\n      callDestroy = {\n        react_stack_bottom_frame: function (\n          current,\n          nearestMountedAncestor,\n          destroy\n        ) {\n          try {\n            destroy();\n          } catch (error) {\n            captureCommitPhaseError(current, nearestMountedAncestor, error);\n          }\n        }\n      },\n      callDestroyInDEV = callDestroy.react_stack_bottom_frame.bind(callDestroy),\n      callLazyInit = {\n        react_stack_bottom_frame: function (lazy) {\n          var init = lazy._init;\n          return init(lazy._payload);\n        }\n      },\n      callLazyInitInDEV =\n        callLazyInit.react_stack_bottom_frame.bind(callLazyInit),\n      thenableState = null,\n      thenableIndexCounter = 0,\n      currentDebugInfo = null,\n      didWarnAboutMaps;\n    var didWarnAboutGenerators = (didWarnAboutMaps = !1);\n    var ownerHasKeyUseWarning = {};\n    var ownerHasFunctionTypeWarning = {};\n    var ownerHasSymbolTypeWarning = {};\n    warnForMissingKey = function (returnFiber, workInProgress, child) {\n      if (\n        null !== child &&\n        \"object\" === typeof child &&\n        child._store &&\n        ((!child._store.validated && null == child.key) ||\n          2 === child._store.validated)\n      ) {\n        if (\"object\" !== typeof child._store)\n          throw Error(\n            \"React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.\"\n          );\n        child._store.validated = 1;\n        var componentName = getComponentNameFromFiber(returnFiber),\n          componentKey = componentName || \"null\";\n        if (!ownerHasKeyUseWarning[componentKey]) {\n          ownerHasKeyUseWarning[componentKey] = !0;\n          child = child._owner;\n          returnFiber = returnFiber._debugOwner;\n          var currentComponentErrorInfo = \"\";\n          returnFiber &&\n            \"number\" === typeof returnFiber.tag &&\n            (componentKey = getComponentNameFromFiber(returnFiber)) &&\n            (currentComponentErrorInfo =\n              \"\\n\\nCheck the render method of `\" + componentKey + \"`.\");\n          currentComponentErrorInfo ||\n            (componentName &&\n              (currentComponentErrorInfo =\n                \"\\n\\nCheck the top-level render call using <\" +\n                componentName +\n                \">.\"));\n          var childOwnerAppendix = \"\";\n          null != child &&\n            returnFiber !== child &&\n            ((componentName = null),\n            \"number\" === typeof child.tag\n              ? (componentName = getComponentNameFromFiber(child))\n              : \"string\" === typeof child.name && (componentName = child.name),\n            componentName &&\n              (childOwnerAppendix =\n                \" It was passed a child from \" + componentName + \".\"));\n          runWithFiberInDEV(workInProgress, function () {\n            console.error(\n              'Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information.',\n              currentComponentErrorInfo,\n              childOwnerAppendix\n            );\n          });\n        }\n      }\n    };\n    var reconcileChildFibers = createChildReconciler(!0),\n      mountChildFibers = createChildReconciler(!1),\n      suspenseHandlerStackCursor = createCursor(null),\n      shellBoundary = null,\n      SubtreeSuspenseContextMask = 1,\n      ForceSuspenseFallback = 2,\n      suspenseStackCursor = createCursor(0),\n      fakeInternalInstance = {};\n    var didWarnAboutStateAssignmentForComponent = new Set();\n    var didWarnAboutUninitializedState = new Set();\n    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n    var didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n    var didWarnAboutDirectlyAssigningPropsToState = new Set();\n    var didWarnAboutUndefinedDerivedState = new Set();\n    var didWarnAboutContextTypes$1 = new Set();\n    var didWarnAboutChildContextTypes = new Set();\n    var didWarnAboutInvalidateContextType = new Set();\n    var didWarnOnInvalidCallback = new Set();\n    Object.freeze(fakeInternalInstance);\n    var classComponentUpdater = {\n        enqueueSetState: function (inst, payload, callback) {\n          inst = inst._reactInternals;\n          var lane = requestUpdateLane(inst),\n            update = createUpdate(lane);\n          update.payload = payload;\n          void 0 !== callback &&\n            null !== callback &&\n            (warnOnInvalidCallback(callback), (update.callback = callback));\n          payload = enqueueUpdate(inst, update, lane);\n          null !== payload &&\n            (scheduleUpdateOnFiber(payload, inst, lane),\n            entangleTransitions(payload, inst, lane));\n          markStateUpdateScheduled(inst, lane);\n        },\n        enqueueReplaceState: function (inst, payload, callback) {\n          inst = inst._reactInternals;\n          var lane = requestUpdateLane(inst),\n            update = createUpdate(lane);\n          update.tag = ReplaceState;\n          update.payload = payload;\n          void 0 !== callback &&\n            null !== callback &&\n            (warnOnInvalidCallback(callback), (update.callback = callback));\n          payload = enqueueUpdate(inst, update, lane);\n          null !== payload &&\n            (scheduleUpdateOnFiber(payload, inst, lane),\n            entangleTransitions(payload, inst, lane));\n          markStateUpdateScheduled(inst, lane);\n        },\n        enqueueForceUpdate: function (inst, callback) {\n          inst = inst._reactInternals;\n          var lane = requestUpdateLane(inst),\n            update = createUpdate(lane);\n          update.tag = ForceUpdate;\n          void 0 !== callback &&\n            null !== callback &&\n            (warnOnInvalidCallback(callback), (update.callback = callback));\n          callback = enqueueUpdate(inst, update, lane);\n          null !== callback &&\n            (scheduleUpdateOnFiber(callback, inst, lane),\n            entangleTransitions(callback, inst, lane));\n          null !== injectedProfilingHooks &&\n            \"function\" ===\n              typeof injectedProfilingHooks.markForceUpdateScheduled &&\n            injectedProfilingHooks.markForceUpdateScheduled(inst, lane);\n        }\n      },\n      reportGlobalError =\n        \"function\" === typeof reportError\n          ? reportError\n          : function (error) {\n              if (\n                \"object\" === typeof window &&\n                \"function\" === typeof window.ErrorEvent\n              ) {\n                var event = new window.ErrorEvent(\"error\", {\n                  bubbles: !0,\n                  cancelable: !0,\n                  message:\n                    \"object\" === typeof error &&\n                    null !== error &&\n                    \"string\" === typeof error.message\n                      ? String(error.message)\n                      : String(error),\n                  error: error\n                });\n                if (!window.dispatchEvent(event)) return;\n              } else if (\n                \"object\" === typeof process &&\n                \"function\" === typeof process.emit\n              ) {\n                process.emit(\"uncaughtException\", error);\n                return;\n              }\n              console.error(error);\n            },\n      componentName = null,\n      errorBoundaryName = null,\n      SelectiveHydrationException = Error(\n        \"This is not a real error. It's an implementation detail of React's selective hydration feature. If this leaks into userspace, it's a bug in React. Please file an issue.\"\n      ),\n      didReceiveUpdate = !1;\n    var didWarnAboutBadClass = {};\n    var didWarnAboutContextTypeOnFunctionComponent = {};\n    var didWarnAboutContextTypes = {};\n    var didWarnAboutGetDerivedStateOnFunctionComponent = {};\n    var didWarnAboutReassigningProps = !1;\n    var didWarnAboutRevealOrder = {};\n    var didWarnAboutTailOptions = {};\n    var SUSPENDED_MARKER = {\n        dehydrated: null,\n        treeContext: null,\n        retryLane: 0,\n        hydrationErrors: null\n      },\n      hasWarnedAboutUsingNoValuePropOnContextProvider = !1,\n      didWarnAboutUndefinedSnapshotBeforeUpdate = null;\n    didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n    var offscreenSubtreeIsHidden = !1,\n      offscreenSubtreeWasHidden = !1,\n      needsFormReset = !1,\n      PossiblyWeakSet = \"function\" === typeof WeakSet ? WeakSet : Set,\n      nextEffect = null,\n      inProgressLanes = null,\n      inProgressRoot = null,\n      hostParent = null,\n      hostParentIsContainer = !1,\n      currentHoistableRoot = null,\n      suspenseyCommitFlag = 8192,\n      DefaultAsyncDispatcher = {\n        getCacheForType: function (resourceType) {\n          var cache = readContext(CacheContext),\n            cacheForType = cache.data.get(resourceType);\n          void 0 === cacheForType &&\n            ((cacheForType = resourceType()),\n            cache.data.set(resourceType, cacheForType));\n          return cacheForType;\n        },\n        getOwner: function () {\n          return current;\n        }\n      };\n    if (\"function\" === typeof Symbol && Symbol.for) {\n      var symbolFor = Symbol.for;\n      symbolFor(\"selector.component\");\n      symbolFor(\"selector.has_pseudo_class\");\n      symbolFor(\"selector.role\");\n      symbolFor(\"selector.test_id\");\n      symbolFor(\"selector.text\");\n    }\n    var commitHooks = [],\n      PossiblyWeakMap = \"function\" === typeof WeakMap ? WeakMap : Map,\n      NoContext = 0,\n      RenderContext = 2,\n      CommitContext = 4,\n      RootInProgress = 0,\n      RootFatalErrored = 1,\n      RootErrored = 2,\n      RootSuspended = 3,\n      RootSuspendedWithDelay = 4,\n      RootSuspendedAtTheShell = 6,\n      RootCompleted = 5,\n      executionContext = NoContext,\n      workInProgressRoot = null,\n      workInProgress = null,\n      workInProgressRootRenderLanes = 0,\n      NotSuspended = 0,\n      SuspendedOnError = 1,\n      SuspendedOnData = 2,\n      SuspendedOnImmediate = 3,\n      SuspendedOnInstance = 4,\n      SuspendedOnInstanceAndReadyToContinue = 5,\n      SuspendedOnDeprecatedThrowPromise = 6,\n      SuspendedAndReadyToContinue = 7,\n      SuspendedOnHydration = 8,\n      SuspendedOnAction = 9,\n      workInProgressSuspendedReason = NotSuspended,\n      workInProgressThrownValue = null,\n      workInProgressRootDidSkipSuspendedSiblings = !1,\n      workInProgressRootIsPrerendering = !1,\n      workInProgressRootDidAttachPingListener = !1,\n      entangledRenderLanes = 0,\n      workInProgressRootExitStatus = RootInProgress,\n      workInProgressRootSkippedLanes = 0,\n      workInProgressRootInterleavedUpdatedLanes = 0,\n      workInProgressRootPingedLanes = 0,\n      workInProgressDeferredLane = 0,\n      workInProgressSuspendedRetryLanes = 0,\n      workInProgressRootConcurrentErrors = null,\n      workInProgressRootRecoverableErrors = null,\n      workInProgressRootDidIncludeRecursiveRenderUpdate = !1,\n      globalMostRecentFallbackTime = 0,\n      FALLBACK_THROTTLE_MS = 300,\n      workInProgressRootRenderTargetTime = Infinity,\n      RENDER_TIMEOUT_MS = 500,\n      workInProgressTransitions = null,\n      legacyErrorBoundariesThatAlreadyFailed = null,\n      IMMEDIATE_COMMIT = 0,\n      SUSPENDED_COMMIT = 1,\n      THROTTLED_COMMIT = 2,\n      NO_PENDING_EFFECTS = 0,\n      PENDING_MUTATION_PHASE = 1,\n      PENDING_LAYOUT_PHASE = 2,\n      PENDING_AFTER_MUTATION_PHASE = 3,\n      PENDING_SPAWNED_WORK = 4,\n      PENDING_PASSIVE_PHASE = 5,\n      pendingEffectsStatus = 0,\n      pendingEffectsRoot = null,\n      pendingFinishedWork = null,\n      pendingEffectsLanes = 0,\n      pendingEffectsRemainingLanes = 0,\n      pendingPassiveTransitions = null,\n      pendingRecoverableErrors = null,\n      NESTED_UPDATE_LIMIT = 50,\n      nestedUpdateCount = 0,\n      rootWithNestedUpdates = null,\n      isFlushingPassiveEffects = !1,\n      didScheduleUpdateDuringPassiveEffects = !1,\n      NESTED_PASSIVE_UPDATE_LIMIT = 50,\n      nestedPassiveUpdateCount = 0,\n      rootWithPassiveNestedUpdates = null,\n      isRunningInsertionEffect = !1,\n      didWarnStateUpdateForNotYetMountedComponent = null,\n      didWarnAboutUpdateInRender = !1;\n    var didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n    var fakeActCallbackNode$1 = {},\n      firstScheduledRoot = null,\n      lastScheduledRoot = null,\n      didScheduleMicrotask = !1,\n      didScheduleMicrotask_act = !1,\n      mightHavePendingSyncWork = !1,\n      isFlushingWork = !1,\n      currentEventTransitionLane = 0,\n      fakeActCallbackNode = {};\n    (function () {\n      for (var i = 0; i < simpleEventPluginEvents.length; i++) {\n        var eventName = simpleEventPluginEvents[i],\n          domEventName = eventName.toLowerCase();\n        eventName = eventName[0].toUpperCase() + eventName.slice(1);\n        registerSimpleEvent(domEventName, \"on\" + eventName);\n      }\n      registerSimpleEvent(ANIMATION_END, \"onAnimationEnd\");\n      registerSimpleEvent(ANIMATION_ITERATION, \"onAnimationIteration\");\n      registerSimpleEvent(ANIMATION_START, \"onAnimationStart\");\n      registerSimpleEvent(\"dblclick\", \"onDoubleClick\");\n      registerSimpleEvent(\"focusin\", \"onFocus\");\n      registerSimpleEvent(\"focusout\", \"onBlur\");\n      registerSimpleEvent(TRANSITION_RUN, \"onTransitionRun\");\n      registerSimpleEvent(TRANSITION_START, \"onTransitionStart\");\n      registerSimpleEvent(TRANSITION_CANCEL, \"onTransitionCancel\");\n      registerSimpleEvent(TRANSITION_END, \"onTransitionEnd\");\n    })();\n    registerDirectEvent(\"onMouseEnter\", [\"mouseout\", \"mouseover\"]);\n    registerDirectEvent(\"onMouseLeave\", [\"mouseout\", \"mouseover\"]);\n    registerDirectEvent(\"onPointerEnter\", [\"pointerout\", \"pointerover\"]);\n    registerDirectEvent(\"onPointerLeave\", [\"pointerout\", \"pointerover\"]);\n    registerTwoPhaseEvent(\n      \"onChange\",\n      \"change click focusin focusout input keydown keyup selectionchange\".split(\n        \" \"\n      )\n    );\n    registerTwoPhaseEvent(\n      \"onSelect\",\n      \"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\n        \" \"\n      )\n    );\n    registerTwoPhaseEvent(\"onBeforeInput\", [\n      \"compositionend\",\n      \"keypress\",\n      \"textInput\",\n      \"paste\"\n    ]);\n    registerTwoPhaseEvent(\n      \"onCompositionEnd\",\n      \"compositionend focusout keydown keypress keyup mousedown\".split(\" \")\n    );\n    registerTwoPhaseEvent(\n      \"onCompositionStart\",\n      \"compositionstart focusout keydown keypress keyup mousedown\".split(\" \")\n    );\n    registerTwoPhaseEvent(\n      \"onCompositionUpdate\",\n      \"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \")\n    );\n    var mediaEventTypes =\n        \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\n          \" \"\n        ),\n      nonDelegatedEvents = new Set(\n        \"beforetoggle cancel close invalid load scroll scrollend toggle\"\n          .split(\" \")\n          .concat(mediaEventTypes)\n      ),\n      listeningMarker = \"_reactListening\" + Math.random().toString(36).slice(2),\n      didWarnControlledToUncontrolled = !1,\n      didWarnUncontrolledToControlled = !1,\n      didWarnFormActionType = !1,\n      didWarnFormActionName = !1,\n      didWarnFormActionTarget = !1,\n      didWarnFormActionMethod = !1,\n      didWarnPopoverTargetObject = !1;\n    var didWarnForNewBooleanPropsWithEmptyValue = {};\n    var NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g,\n      NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g,\n      xlinkNamespace = \"http://www.w3.org/1999/xlink\",\n      xmlNamespace = \"http://www.w3.org/XML/1998/namespace\",\n      EXPECTED_FORM_ACTION_URL =\n        \"javascript:throw new Error('React form unexpectedly submitted.')\",\n      SUPPRESS_HYDRATION_WARNING = \"suppressHydrationWarning\",\n      SUSPENSE_START_DATA = \"$\",\n      SUSPENSE_END_DATA = \"/$\",\n      SUSPENSE_PENDING_START_DATA = \"$?\",\n      SUSPENSE_FALLBACK_START_DATA = \"$!\",\n      PREAMBLE_CONTRIBUTION_HTML = 1,\n      PREAMBLE_CONTRIBUTION_BODY = 2,\n      PREAMBLE_CONTRIBUTION_HEAD = 4,\n      FORM_STATE_IS_MATCHING = \"F!\",\n      FORM_STATE_IS_NOT_MATCHING = \"F\",\n      DOCUMENT_READY_STATE_COMPLETE = \"complete\",\n      STYLE = \"style\",\n      HostContextNamespaceNone = 0,\n      HostContextNamespaceSvg = 1,\n      HostContextNamespaceMath = 2,\n      eventsEnabled = null,\n      selectionInformation = null,\n      warnedUnknownTags = { dialog: !0, webview: !0 },\n      currentPopstateTransitionEvent = null,\n      scheduleTimeout = \"function\" === typeof setTimeout ? setTimeout : void 0,\n      cancelTimeout =\n        \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n      noTimeout = -1,\n      localPromise = \"function\" === typeof Promise ? Promise : void 0,\n      scheduleMicrotask =\n        \"function\" === typeof queueMicrotask\n          ? queueMicrotask\n          : \"undefined\" !== typeof localPromise\n            ? function (callback) {\n                return localPromise\n                  .resolve(null)\n                  .then(callback)\n                  .catch(handleErrorInNextTick);\n              }\n            : scheduleTimeout,\n      previousHydratableOnEnteringScopedSingleton = null,\n      NotLoaded = 0,\n      Loaded = 1,\n      Errored = 2,\n      Settled = 3,\n      Inserted = 4,\n      preloadPropsMap = new Map(),\n      preconnectsSet = new Set(),\n      previousDispatcher = ReactDOMSharedInternals.d;\n    ReactDOMSharedInternals.d = {\n      f: function () {\n        var previousWasRendering = previousDispatcher.f(),\n          wasRendering = flushSyncWork$1();\n        return previousWasRendering || wasRendering;\n      },\n      r: function (form) {\n        var formInst = getInstanceFromNode(form);\n        null !== formInst && 5 === formInst.tag && \"form\" === formInst.type\n          ? requestFormReset$1(formInst)\n          : previousDispatcher.r(form);\n      },\n      D: function (href) {\n        previousDispatcher.D(href);\n        preconnectAs(\"dns-prefetch\", href, null);\n      },\n      C: function (href, crossOrigin) {\n        previousDispatcher.C(href, crossOrigin);\n        preconnectAs(\"preconnect\", href, crossOrigin);\n      },\n      L: function (href, as, options) {\n        previousDispatcher.L(href, as, options);\n        var ownerDocument = globalDocument;\n        if (ownerDocument && href && as) {\n          var preloadSelector =\n            'link[rel=\"preload\"][as=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n            '\"]';\n          \"image\" === as\n            ? options && options.imageSrcSet\n              ? ((preloadSelector +=\n                  '[imagesrcset=\"' +\n                  escapeSelectorAttributeValueInsideDoubleQuotes(\n                    options.imageSrcSet\n                  ) +\n                  '\"]'),\n                \"string\" === typeof options.imageSizes &&\n                  (preloadSelector +=\n                    '[imagesizes=\"' +\n                    escapeSelectorAttributeValueInsideDoubleQuotes(\n                      options.imageSizes\n                    ) +\n                    '\"]'))\n              : (preloadSelector +=\n                  '[href=\"' +\n                  escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n                  '\"]')\n            : (preloadSelector +=\n                '[href=\"' +\n                escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n                '\"]');\n          var key = preloadSelector;\n          switch (as) {\n            case \"style\":\n              key = getStyleKey(href);\n              break;\n            case \"script\":\n              key = getScriptKey(href);\n          }\n          preloadPropsMap.has(key) ||\n            ((href = assign(\n              {\n                rel: \"preload\",\n                href:\n                  \"image\" === as && options && options.imageSrcSet\n                    ? void 0\n                    : href,\n                as: as\n              },\n              options\n            )),\n            preloadPropsMap.set(key, href),\n            null !== ownerDocument.querySelector(preloadSelector) ||\n              (\"style\" === as &&\n                ownerDocument.querySelector(\n                  getStylesheetSelectorFromKey(key)\n                )) ||\n              (\"script\" === as &&\n                ownerDocument.querySelector(getScriptSelectorFromKey(key))) ||\n              ((as = ownerDocument.createElement(\"link\")),\n              setInitialProperties(as, \"link\", href),\n              markNodeAsHoistable(as),\n              ownerDocument.head.appendChild(as)));\n        }\n      },\n      m: function (href, options) {\n        previousDispatcher.m(href, options);\n        var ownerDocument = globalDocument;\n        if (ownerDocument && href) {\n          var as =\n              options && \"string\" === typeof options.as ? options.as : \"script\",\n            preloadSelector =\n              'link[rel=\"modulepreload\"][as=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n              '\"][href=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n              '\"]',\n            key = preloadSelector;\n          switch (as) {\n            case \"audioworklet\":\n            case \"paintworklet\":\n            case \"serviceworker\":\n            case \"sharedworker\":\n            case \"worker\":\n            case \"script\":\n              key = getScriptKey(href);\n          }\n          if (\n            !preloadPropsMap.has(key) &&\n            ((href = assign({ rel: \"modulepreload\", href: href }, options)),\n            preloadPropsMap.set(key, href),\n            null === ownerDocument.querySelector(preloadSelector))\n          ) {\n            switch (as) {\n              case \"audioworklet\":\n              case \"paintworklet\":\n              case \"serviceworker\":\n              case \"sharedworker\":\n              case \"worker\":\n              case \"script\":\n                if (ownerDocument.querySelector(getScriptSelectorFromKey(key)))\n                  return;\n            }\n            as = ownerDocument.createElement(\"link\");\n            setInitialProperties(as, \"link\", href);\n            markNodeAsHoistable(as);\n            ownerDocument.head.appendChild(as);\n          }\n        }\n      },\n      X: function (src, options) {\n        previousDispatcher.X(src, options);\n        var ownerDocument = globalDocument;\n        if (ownerDocument && src) {\n          var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n            key = getScriptKey(src),\n            resource = scripts.get(key);\n          resource ||\n            ((resource = ownerDocument.querySelector(\n              getScriptSelectorFromKey(key)\n            )),\n            resource ||\n              ((src = assign({ src: src, async: !0 }, options)),\n              (options = preloadPropsMap.get(key)) &&\n                adoptPreloadPropsForScript(src, options),\n              (resource = ownerDocument.createElement(\"script\")),\n              markNodeAsHoistable(resource),\n              setInitialProperties(resource, \"link\", src),\n              ownerDocument.head.appendChild(resource)),\n            (resource = {\n              type: \"script\",\n              instance: resource,\n              count: 1,\n              state: null\n            }),\n            scripts.set(key, resource));\n        }\n      },\n      S: function (href, precedence, options) {\n        previousDispatcher.S(href, precedence, options);\n        var ownerDocument = globalDocument;\n        if (ownerDocument && href) {\n          var styles = getResourcesFromRoot(ownerDocument).hoistableStyles,\n            key = getStyleKey(href);\n          precedence = precedence || \"default\";\n          var resource = styles.get(key);\n          if (!resource) {\n            var state = { loading: NotLoaded, preload: null };\n            if (\n              (resource = ownerDocument.querySelector(\n                getStylesheetSelectorFromKey(key)\n              ))\n            )\n              state.loading = Loaded | Inserted;\n            else {\n              href = assign(\n                {\n                  rel: \"stylesheet\",\n                  href: href,\n                  \"data-precedence\": precedence\n                },\n                options\n              );\n              (options = preloadPropsMap.get(key)) &&\n                adoptPreloadPropsForStylesheet(href, options);\n              var link = (resource = ownerDocument.createElement(\"link\"));\n              markNodeAsHoistable(link);\n              setInitialProperties(link, \"link\", href);\n              link._p = new Promise(function (resolve, reject) {\n                link.onload = resolve;\n                link.onerror = reject;\n              });\n              link.addEventListener(\"load\", function () {\n                state.loading |= Loaded;\n              });\n              link.addEventListener(\"error\", function () {\n                state.loading |= Errored;\n              });\n              state.loading |= Inserted;\n              insertStylesheet(resource, precedence, ownerDocument);\n            }\n            resource = {\n              type: \"stylesheet\",\n              instance: resource,\n              count: 1,\n              state: state\n            };\n            styles.set(key, resource);\n          }\n        }\n      },\n      M: function (src, options) {\n        previousDispatcher.M(src, options);\n        var ownerDocument = globalDocument;\n        if (ownerDocument && src) {\n          var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n            key = getScriptKey(src),\n            resource = scripts.get(key);\n          resource ||\n            ((resource = ownerDocument.querySelector(\n              getScriptSelectorFromKey(key)\n            )),\n            resource ||\n              ((src = assign({ src: src, async: !0, type: \"module\" }, options)),\n              (options = preloadPropsMap.get(key)) &&\n                adoptPreloadPropsForScript(src, options),\n              (resource = ownerDocument.createElement(\"script\")),\n              markNodeAsHoistable(resource),\n              setInitialProperties(resource, \"link\", src),\n              ownerDocument.head.appendChild(resource)),\n            (resource = {\n              type: \"script\",\n              instance: resource,\n              count: 1,\n              state: null\n            }),\n            scripts.set(key, resource));\n        }\n      }\n    };\n    var globalDocument = \"undefined\" === typeof document ? null : document,\n      tagCaches = null,\n      suspendedState = null,\n      LAST_PRECEDENCE = null,\n      precedencesByRoot = null,\n      NotPendingTransition = NotPending,\n      HostTransitionContext = {\n        $$typeof: REACT_CONTEXT_TYPE,\n        Provider: null,\n        Consumer: null,\n        _currentValue: NotPendingTransition,\n        _currentValue2: NotPendingTransition,\n        _threadCount: 0\n      },\n      badgeFormat = \"%c%s%c \",\n      badgeStyle =\n        \"background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px\",\n      resetStyle = \"\",\n      pad = \" \",\n      bind = Function.prototype.bind;\n    var didWarnAboutNestedUpdates = !1;\n    var overrideHookState = null,\n      overrideHookStateDeletePath = null,\n      overrideHookStateRenamePath = null,\n      overrideProps = null,\n      overridePropsDeletePath = null,\n      overridePropsRenamePath = null,\n      scheduleUpdate = null,\n      setErrorHandler = null,\n      setSuspenseHandler = null;\n    overrideHookState = function (fiber, id, path, value) {\n      id = findHook(fiber, id);\n      null !== id &&\n        ((path = copyWithSetImpl(id.memoizedState, path, 0, value)),\n        (id.memoizedState = path),\n        (id.baseState = path),\n        (fiber.memoizedProps = assign({}, fiber.memoizedProps)),\n        (path = enqueueConcurrentRenderForLane(fiber, 2)),\n        null !== path && scheduleUpdateOnFiber(path, fiber, 2));\n    };\n    overrideHookStateDeletePath = function (fiber, id, path) {\n      id = findHook(fiber, id);\n      null !== id &&\n        ((path = copyWithDeleteImpl(id.memoizedState, path, 0)),\n        (id.memoizedState = path),\n        (id.baseState = path),\n        (fiber.memoizedProps = assign({}, fiber.memoizedProps)),\n        (path = enqueueConcurrentRenderForLane(fiber, 2)),\n        null !== path && scheduleUpdateOnFiber(path, fiber, 2));\n    };\n    overrideHookStateRenamePath = function (fiber, id, oldPath, newPath) {\n      id = findHook(fiber, id);\n      null !== id &&\n        ((oldPath = copyWithRename(id.memoizedState, oldPath, newPath)),\n        (id.memoizedState = oldPath),\n        (id.baseState = oldPath),\n        (fiber.memoizedProps = assign({}, fiber.memoizedProps)),\n        (oldPath = enqueueConcurrentRenderForLane(fiber, 2)),\n        null !== oldPath && scheduleUpdateOnFiber(oldPath, fiber, 2));\n    };\n    overrideProps = function (fiber, path, value) {\n      fiber.pendingProps = copyWithSetImpl(fiber.memoizedProps, path, 0, value);\n      fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);\n      path = enqueueConcurrentRenderForLane(fiber, 2);\n      null !== path && scheduleUpdateOnFiber(path, fiber, 2);\n    };\n    overridePropsDeletePath = function (fiber, path) {\n      fiber.pendingProps = copyWithDeleteImpl(fiber.memoizedProps, path, 0);\n      fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);\n      path = enqueueConcurrentRenderForLane(fiber, 2);\n      null !== path && scheduleUpdateOnFiber(path, fiber, 2);\n    };\n    overridePropsRenamePath = function (fiber, oldPath, newPath) {\n      fiber.pendingProps = copyWithRename(\n        fiber.memoizedProps,\n        oldPath,\n        newPath\n      );\n      fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);\n      oldPath = enqueueConcurrentRenderForLane(fiber, 2);\n      null !== oldPath && scheduleUpdateOnFiber(oldPath, fiber, 2);\n    };\n    scheduleUpdate = function (fiber) {\n      var root = enqueueConcurrentRenderForLane(fiber, 2);\n      null !== root && scheduleUpdateOnFiber(root, fiber, 2);\n    };\n    setErrorHandler = function (newShouldErrorImpl) {\n      shouldErrorImpl = newShouldErrorImpl;\n    };\n    setSuspenseHandler = function (newShouldSuspendImpl) {\n      shouldSuspendImpl = newShouldSuspendImpl;\n    };\n    var _enabled = !0,\n      return_targetInst = null,\n      hasScheduledReplayAttempt = !1,\n      queuedFocus = null,\n      queuedDrag = null,\n      queuedMouse = null,\n      queuedPointers = new Map(),\n      queuedPointerCaptures = new Map(),\n      queuedExplicitHydrationTargets = [],\n      discreteReplayableEvents =\n        \"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset\".split(\n          \" \"\n        ),\n      lastScheduledReplayQueue = null;\n    ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render =\n      function (children) {\n        var root = this._internalRoot;\n        if (null === root) throw Error(\"Cannot update an unmounted root.\");\n        var args = arguments;\n        \"function\" === typeof args[1]\n          ? console.error(\n              \"does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().\"\n            )\n          : isValidContainer(args[1])\n            ? console.error(\n                \"You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.\"\n              )\n            : \"undefined\" !== typeof args[1] &&\n              console.error(\n                \"You passed a second argument to root.render(...) but it only accepts one argument.\"\n              );\n        args = children;\n        var current = root.current,\n          lane = requestUpdateLane(current);\n        updateContainerImpl(current, lane, args, root, null, null);\n      };\n    ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount =\n      function () {\n        var args = arguments;\n        \"function\" === typeof args[0] &&\n          console.error(\n            \"does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().\"\n          );\n        args = this._internalRoot;\n        if (null !== args) {\n          this._internalRoot = null;\n          var container = args.containerInfo;\n          (executionContext & (RenderContext | CommitContext)) !== NoContext &&\n            console.error(\n              \"Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.\"\n            );\n          updateContainerImpl(args.current, 2, null, args, null, null);\n          flushSyncWork$1();\n          container[internalContainerInstanceKey] = null;\n        }\n      };\n    ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (\n      target\n    ) {\n      if (target) {\n        var updatePriority = resolveUpdatePriority();\n        target = { blockedOn: null, target: target, priority: updatePriority };\n        for (\n          var i = 0;\n          i < queuedExplicitHydrationTargets.length &&\n          0 !== updatePriority &&\n          updatePriority < queuedExplicitHydrationTargets[i].priority;\n          i++\n        );\n        queuedExplicitHydrationTargets.splice(i, 0, target);\n        0 === i && attemptExplicitHydrationTarget(target);\n      }\n    };\n    (function () {\n      var isomorphicReactPackageVersion = React.version;\n      if (\"19.1.1\" !== isomorphicReactPackageVersion)\n        throw Error(\n          'Incompatible React versions: The \"react\" and \"react-dom\" packages must have the exact same version. Instead got:\\n  - react:      ' +\n            (isomorphicReactPackageVersion +\n              \"\\n  - react-dom:  19.1.1\\nLearn more: https://react.dev/warnings/version-mismatch\")\n        );\n    })();\n    (\"function\" === typeof Map &&\n      null != Map.prototype &&\n      \"function\" === typeof Map.prototype.forEach &&\n      \"function\" === typeof Set &&\n      null != Set.prototype &&\n      \"function\" === typeof Set.prototype.clear &&\n      \"function\" === typeof Set.prototype.forEach) ||\n      console.error(\n        \"React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://react.dev/link/react-polyfills\"\n      );\n    ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {\n      var fiber = componentOrElement._reactInternals;\n      if (void 0 === fiber) {\n        if (\"function\" === typeof componentOrElement.render)\n          throw Error(\"Unable to find node on an unmounted component.\");\n        componentOrElement = Object.keys(componentOrElement).join(\",\");\n        throw Error(\n          \"Argument appears to not be a ReactComponent. Keys: \" +\n            componentOrElement\n        );\n      }\n      componentOrElement = findCurrentFiberUsingSlowPath(fiber);\n      componentOrElement =\n        null !== componentOrElement\n          ? findCurrentHostFiberImpl(componentOrElement)\n          : null;\n      componentOrElement =\n        null === componentOrElement ? null : componentOrElement.stateNode;\n      return componentOrElement;\n    };\n    if (\n      !(function () {\n        var internals = {\n          bundleType: 1,\n          version: \"19.1.1\",\n          rendererPackageName: \"react-dom\",\n          currentDispatcherRef: ReactSharedInternals,\n          reconcilerVersion: \"19.1.1\"\n        };\n        internals.overrideHookState = overrideHookState;\n        internals.overrideHookStateDeletePath = overrideHookStateDeletePath;\n        internals.overrideHookStateRenamePath = overrideHookStateRenamePath;\n        internals.overrideProps = overrideProps;\n        internals.overridePropsDeletePath = overridePropsDeletePath;\n        internals.overridePropsRenamePath = overridePropsRenamePath;\n        internals.scheduleUpdate = scheduleUpdate;\n        internals.setErrorHandler = setErrorHandler;\n        internals.setSuspenseHandler = setSuspenseHandler;\n        internals.scheduleRefresh = scheduleRefresh;\n        internals.scheduleRoot = scheduleRoot;\n        internals.setRefreshHandler = setRefreshHandler;\n        internals.getCurrentFiber = getCurrentFiberForDevTools;\n        internals.getLaneLabelMap = getLaneLabelMap;\n        internals.injectProfilingHooks = injectProfilingHooks;\n        return injectInternals(internals);\n      })() &&\n      canUseDOM &&\n      window.top === window.self &&\n      ((-1 < navigator.userAgent.indexOf(\"Chrome\") &&\n        -1 === navigator.userAgent.indexOf(\"Edge\")) ||\n        -1 < navigator.userAgent.indexOf(\"Firefox\"))\n    ) {\n      var protocol = window.location.protocol;\n      /^(https?|file):$/.test(protocol) &&\n        console.info(\n          \"%cDownload the React DevTools for a better development experience: https://react.dev/link/react-devtools\" +\n            (\"file:\" === protocol\n              ? \"\\nYou might need to use a local HTTP server (instead of file://): https://react.dev/link/react-devtools-faq\"\n              : \"\"),\n          \"font-weight:bold\"\n        );\n    }\n    exports.createRoot = function (container, options) {\n      if (!isValidContainer(container))\n        throw Error(\"Target container is not a DOM element.\");\n      warnIfReactDOMContainerInDEV(container);\n      var isStrictMode = !1,\n        identifierPrefix = \"\",\n        onUncaughtError = defaultOnUncaughtError,\n        onCaughtError = defaultOnCaughtError,\n        onRecoverableError = defaultOnRecoverableError,\n        transitionCallbacks = null;\n      null !== options &&\n        void 0 !== options &&\n        (options.hydrate\n          ? console.warn(\n              \"hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.\"\n            )\n          : \"object\" === typeof options &&\n            null !== options &&\n            options.$$typeof === REACT_ELEMENT_TYPE &&\n            console.error(\n              \"You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\\n\\n  let root = createRoot(domContainer);\\n  root.render(<App />);\"\n            ),\n        !0 === options.unstable_strictMode && (isStrictMode = !0),\n        void 0 !== options.identifierPrefix &&\n          (identifierPrefix = options.identifierPrefix),\n        void 0 !== options.onUncaughtError &&\n          (onUncaughtError = options.onUncaughtError),\n        void 0 !== options.onCaughtError &&\n          (onCaughtError = options.onCaughtError),\n        void 0 !== options.onRecoverableError &&\n          (onRecoverableError = options.onRecoverableError),\n        void 0 !== options.unstable_transitionCallbacks &&\n          (transitionCallbacks = options.unstable_transitionCallbacks));\n      options = createFiberRoot(\n        container,\n        1,\n        !1,\n        null,\n        null,\n        isStrictMode,\n        identifierPrefix,\n        onUncaughtError,\n        onCaughtError,\n        onRecoverableError,\n        transitionCallbacks,\n        null\n      );\n      container[internalContainerInstanceKey] = options.current;\n      listenToAllSupportedEvents(container);\n      return new ReactDOMRoot(options);\n    };\n    exports.hydrateRoot = function (container, initialChildren, options) {\n      if (!isValidContainer(container))\n        throw Error(\"Target container is not a DOM element.\");\n      warnIfReactDOMContainerInDEV(container);\n      void 0 === initialChildren &&\n        console.error(\n          \"Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)\"\n        );\n      var isStrictMode = !1,\n        identifierPrefix = \"\",\n        onUncaughtError = defaultOnUncaughtError,\n        onCaughtError = defaultOnCaughtError,\n        onRecoverableError = defaultOnRecoverableError,\n        transitionCallbacks = null,\n        formState = null;\n      null !== options &&\n        void 0 !== options &&\n        (!0 === options.unstable_strictMode && (isStrictMode = !0),\n        void 0 !== options.identifierPrefix &&\n          (identifierPrefix = options.identifierPrefix),\n        void 0 !== options.onUncaughtError &&\n          (onUncaughtError = options.onUncaughtError),\n        void 0 !== options.onCaughtError &&\n          (onCaughtError = options.onCaughtError),\n        void 0 !== options.onRecoverableError &&\n          (onRecoverableError = options.onRecoverableError),\n        void 0 !== options.unstable_transitionCallbacks &&\n          (transitionCallbacks = options.unstable_transitionCallbacks),\n        void 0 !== options.formState && (formState = options.formState));\n      initialChildren = createFiberRoot(\n        container,\n        1,\n        !0,\n        initialChildren,\n        null != options ? options : null,\n        isStrictMode,\n        identifierPrefix,\n        onUncaughtError,\n        onCaughtError,\n        onRecoverableError,\n        transitionCallbacks,\n        formState\n      );\n      initialChildren.context = getContextForSubtree(null);\n      options = initialChildren.current;\n      isStrictMode = requestUpdateLane(options);\n      isStrictMode = getBumpedLaneForHydrationByLane(isStrictMode);\n      identifierPrefix = createUpdate(isStrictMode);\n      identifierPrefix.callback = null;\n      enqueueUpdate(options, identifierPrefix, isStrictMode);\n      options = isStrictMode;\n      initialChildren.current.lanes = options;\n      markRootUpdated$1(initialChildren, options);\n      ensureRootIsScheduled(initialChildren);\n      container[internalContainerInstanceKey] = initialChildren.current;\n      listenToAllSupportedEvents(container);\n      return new ReactDOMHydrationRoot(initialChildren);\n    };\n    exports.version = \"19.1.1\";\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n\n\n//# sourceURL=webpack://workout_planner/./node_modules/react-dom/cjs/react-dom-client.development.js?\n}");

/***/ }),

/***/ "./node_modules/react-dom/cjs/react-dom.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom.development.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{/**\n * @license React\n * react-dom.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function noop() {}\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function createPortal$1(children, containerInfo, implementation) {\n      var key =\n        3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n      try {\n        testStringCoercion(key);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      JSCompiler_inline_result &&\n        (console.error(\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            key[Symbol.toStringTag]) ||\n            key.constructor.name ||\n            \"Object\"\n        ),\n        testStringCoercion(key));\n      return {\n        $$typeof: REACT_PORTAL_TYPE,\n        key: null == key ? null : \"\" + key,\n        children: children,\n        containerInfo: containerInfo,\n        implementation: implementation\n      };\n    }\n    function getCrossOriginStringAs(as, input) {\n      if (\"font\" === as) return \"\";\n      if (\"string\" === typeof input)\n        return \"use-credentials\" === input ? input : \"\";\n    }\n    function getValueDescriptorExpectingObjectForWarning(thing) {\n      return null === thing\n        ? \"`null`\"\n        : void 0 === thing\n          ? \"`undefined`\"\n          : \"\" === thing\n            ? \"an empty string\"\n            : 'something with type \"' + typeof thing + '\"';\n    }\n    function getValueDescriptorExpectingEnumForWarning(thing) {\n      return null === thing\n        ? \"`null`\"\n        : void 0 === thing\n          ? \"`undefined`\"\n          : \"\" === thing\n            ? \"an empty string\"\n            : \"string\" === typeof thing\n              ? JSON.stringify(thing)\n              : \"number\" === typeof thing\n                ? \"`\" + thing + \"`\"\n                : 'something with type \"' + typeof thing + '\"';\n    }\n    function resolveDispatcher() {\n      var dispatcher = ReactSharedInternals.H;\n      null === dispatcher &&\n        console.error(\n          \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.\"\n        );\n      return dispatcher;\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n      Internals = {\n        d: {\n          f: noop,\n          r: function () {\n            throw Error(\n              \"Invalid form element. requestFormReset must be passed a form that was rendered by React.\"\n            );\n          },\n          D: noop,\n          C: noop,\n          L: noop,\n          m: noop,\n          X: noop,\n          S: noop,\n          M: noop\n        },\n        p: 0,\n        findDOMNode: null\n      },\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\n    (\"function\" === typeof Map &&\n      null != Map.prototype &&\n      \"function\" === typeof Map.prototype.forEach &&\n      \"function\" === typeof Set &&\n      null != Set.prototype &&\n      \"function\" === typeof Set.prototype.clear &&\n      \"function\" === typeof Set.prototype.forEach) ||\n      console.error(\n        \"React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\"\n      );\n    exports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n      Internals;\n    exports.createPortal = function (children, container) {\n      var key =\n        2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n      if (\n        !container ||\n        (1 !== container.nodeType &&\n          9 !== container.nodeType &&\n          11 !== container.nodeType)\n      )\n        throw Error(\"Target container is not a DOM element.\");\n      return createPortal$1(children, container, null, key);\n    };\n    exports.flushSync = function (fn) {\n      var previousTransition = ReactSharedInternals.T,\n        previousUpdatePriority = Internals.p;\n      try {\n        if (((ReactSharedInternals.T = null), (Internals.p = 2), fn))\n          return fn();\n      } finally {\n        (ReactSharedInternals.T = previousTransition),\n          (Internals.p = previousUpdatePriority),\n          Internals.d.f() &&\n            console.error(\n              \"flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.\"\n            );\n      }\n    };\n    exports.preconnect = function (href, options) {\n      \"string\" === typeof href && href\n        ? null != options && \"object\" !== typeof options\n          ? console.error(\n              \"ReactDOM.preconnect(): Expected the `options` argument (second) to be an object but encountered %s instead. The only supported option at this time is `crossOrigin` which accepts a string.\",\n              getValueDescriptorExpectingEnumForWarning(options)\n            )\n          : null != options &&\n            \"string\" !== typeof options.crossOrigin &&\n            console.error(\n              \"ReactDOM.preconnect(): Expected the `crossOrigin` option (second argument) to be a string but encountered %s instead. Try removing this option or passing a string value instead.\",\n              getValueDescriptorExpectingObjectForWarning(options.crossOrigin)\n            )\n        : console.error(\n            \"ReactDOM.preconnect(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.\",\n            getValueDescriptorExpectingObjectForWarning(href)\n          );\n      \"string\" === typeof href &&\n        (options\n          ? ((options = options.crossOrigin),\n            (options =\n              \"string\" === typeof options\n                ? \"use-credentials\" === options\n                  ? options\n                  : \"\"\n                : void 0))\n          : (options = null),\n        Internals.d.C(href, options));\n    };\n    exports.prefetchDNS = function (href) {\n      if (\"string\" !== typeof href || !href)\n        console.error(\n          \"ReactDOM.prefetchDNS(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.\",\n          getValueDescriptorExpectingObjectForWarning(href)\n        );\n      else if (1 < arguments.length) {\n        var options = arguments[1];\n        \"object\" === typeof options && options.hasOwnProperty(\"crossOrigin\")\n          ? console.error(\n              \"ReactDOM.prefetchDNS(): Expected only one argument, `href`, but encountered %s as a second argument instead. This argument is reserved for future options and is currently disallowed. It looks like the you are attempting to set a crossOrigin property for this DNS lookup hint. Browsers do not perform DNS queries using CORS and setting this attribute on the resource hint has no effect. Try calling ReactDOM.prefetchDNS() with just a single string argument, `href`.\",\n              getValueDescriptorExpectingEnumForWarning(options)\n            )\n          : console.error(\n              \"ReactDOM.prefetchDNS(): Expected only one argument, `href`, but encountered %s as a second argument instead. This argument is reserved for future options and is currently disallowed. Try calling ReactDOM.prefetchDNS() with just a single string argument, `href`.\",\n              getValueDescriptorExpectingEnumForWarning(options)\n            );\n      }\n      \"string\" === typeof href && Internals.d.D(href);\n    };\n    exports.preinit = function (href, options) {\n      \"string\" === typeof href && href\n        ? null == options || \"object\" !== typeof options\n          ? console.error(\n              \"ReactDOM.preinit(): Expected the `options` argument (second) to be an object with an `as` property describing the type of resource to be preinitialized but encountered %s instead.\",\n              getValueDescriptorExpectingEnumForWarning(options)\n            )\n          : \"style\" !== options.as &&\n            \"script\" !== options.as &&\n            console.error(\n              'ReactDOM.preinit(): Expected the `as` property in the `options` argument (second) to contain a valid value describing the type of resource to be preinitialized but encountered %s instead. Valid values for `as` are \"style\" and \"script\".',\n              getValueDescriptorExpectingEnumForWarning(options.as)\n            )\n        : console.error(\n            \"ReactDOM.preinit(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.\",\n            getValueDescriptorExpectingObjectForWarning(href)\n          );\n      if (\n        \"string\" === typeof href &&\n        options &&\n        \"string\" === typeof options.as\n      ) {\n        var as = options.as,\n          crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n          integrity =\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          fetchPriority =\n            \"string\" === typeof options.fetchPriority\n              ? options.fetchPriority\n              : void 0;\n        \"style\" === as\n          ? Internals.d.S(\n              href,\n              \"string\" === typeof options.precedence\n                ? options.precedence\n                : void 0,\n              {\n                crossOrigin: crossOrigin,\n                integrity: integrity,\n                fetchPriority: fetchPriority\n              }\n            )\n          : \"script\" === as &&\n            Internals.d.X(href, {\n              crossOrigin: crossOrigin,\n              integrity: integrity,\n              fetchPriority: fetchPriority,\n              nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n            });\n      }\n    };\n    exports.preinitModule = function (href, options) {\n      var encountered = \"\";\n      (\"string\" === typeof href && href) ||\n        (encountered +=\n          \" The `href` argument encountered was \" +\n          getValueDescriptorExpectingObjectForWarning(href) +\n          \".\");\n      void 0 !== options && \"object\" !== typeof options\n        ? (encountered +=\n            \" The `options` argument encountered was \" +\n            getValueDescriptorExpectingObjectForWarning(options) +\n            \".\")\n        : options &&\n          \"as\" in options &&\n          \"script\" !== options.as &&\n          (encountered +=\n            \" The `as` option encountered was \" +\n            getValueDescriptorExpectingEnumForWarning(options.as) +\n            \".\");\n      if (encountered)\n        console.error(\n          \"ReactDOM.preinitModule(): Expected up to two arguments, a non-empty `href` string and, optionally, an `options` object with a valid `as` property.%s\",\n          encountered\n        );\n      else\n        switch (\n          ((encountered =\n            options && \"string\" === typeof options.as ? options.as : \"script\"),\n          encountered)\n        ) {\n          case \"script\":\n            break;\n          default:\n            (encountered =\n              getValueDescriptorExpectingEnumForWarning(encountered)),\n              console.error(\n                'ReactDOM.preinitModule(): Currently the only supported \"as\" type for this function is \"script\" but received \"%s\" instead. This warning was generated for `href` \"%s\". In the future other module types will be supported, aligning with the import-attributes proposal. Learn more here: (https://github.com/tc39/proposal-import-attributes)',\n                encountered,\n                href\n              );\n        }\n      if (\"string\" === typeof href)\n        if (\"object\" === typeof options && null !== options) {\n          if (null == options.as || \"script\" === options.as)\n            (encountered = getCrossOriginStringAs(\n              options.as,\n              options.crossOrigin\n            )),\n              Internals.d.M(href, {\n                crossOrigin: encountered,\n                integrity:\n                  \"string\" === typeof options.integrity\n                    ? options.integrity\n                    : void 0,\n                nonce:\n                  \"string\" === typeof options.nonce ? options.nonce : void 0\n              });\n        } else null == options && Internals.d.M(href);\n    };\n    exports.preload = function (href, options) {\n      var encountered = \"\";\n      (\"string\" === typeof href && href) ||\n        (encountered +=\n          \" The `href` argument encountered was \" +\n          getValueDescriptorExpectingObjectForWarning(href) +\n          \".\");\n      null == options || \"object\" !== typeof options\n        ? (encountered +=\n            \" The `options` argument encountered was \" +\n            getValueDescriptorExpectingObjectForWarning(options) +\n            \".\")\n        : (\"string\" === typeof options.as && options.as) ||\n          (encountered +=\n            \" The `as` option encountered was \" +\n            getValueDescriptorExpectingObjectForWarning(options.as) +\n            \".\");\n      encountered &&\n        console.error(\n          'ReactDOM.preload(): Expected two arguments, a non-empty `href` string and an `options` object with an `as` property valid for a `<link rel=\"preload\" as=\"...\" />` tag.%s',\n          encountered\n        );\n      if (\n        \"string\" === typeof href &&\n        \"object\" === typeof options &&\n        null !== options &&\n        \"string\" === typeof options.as\n      ) {\n        encountered = options.as;\n        var crossOrigin = getCrossOriginStringAs(\n          encountered,\n          options.crossOrigin\n        );\n        Internals.d.L(href, encountered, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n          type: \"string\" === typeof options.type ? options.type : void 0,\n          fetchPriority:\n            \"string\" === typeof options.fetchPriority\n              ? options.fetchPriority\n              : void 0,\n          referrerPolicy:\n            \"string\" === typeof options.referrerPolicy\n              ? options.referrerPolicy\n              : void 0,\n          imageSrcSet:\n            \"string\" === typeof options.imageSrcSet\n              ? options.imageSrcSet\n              : void 0,\n          imageSizes:\n            \"string\" === typeof options.imageSizes\n              ? options.imageSizes\n              : void 0,\n          media: \"string\" === typeof options.media ? options.media : void 0\n        });\n      }\n    };\n    exports.preloadModule = function (href, options) {\n      var encountered = \"\";\n      (\"string\" === typeof href && href) ||\n        (encountered +=\n          \" The `href` argument encountered was \" +\n          getValueDescriptorExpectingObjectForWarning(href) +\n          \".\");\n      void 0 !== options && \"object\" !== typeof options\n        ? (encountered +=\n            \" The `options` argument encountered was \" +\n            getValueDescriptorExpectingObjectForWarning(options) +\n            \".\")\n        : options &&\n          \"as\" in options &&\n          \"string\" !== typeof options.as &&\n          (encountered +=\n            \" The `as` option encountered was \" +\n            getValueDescriptorExpectingObjectForWarning(options.as) +\n            \".\");\n      encountered &&\n        console.error(\n          'ReactDOM.preloadModule(): Expected two arguments, a non-empty `href` string and, optionally, an `options` object with an `as` property valid for a `<link rel=\"modulepreload\" as=\"...\" />` tag.%s',\n          encountered\n        );\n      \"string\" === typeof href &&\n        (options\n          ? ((encountered = getCrossOriginStringAs(\n              options.as,\n              options.crossOrigin\n            )),\n            Internals.d.m(href, {\n              as:\n                \"string\" === typeof options.as && \"script\" !== options.as\n                  ? options.as\n                  : void 0,\n              crossOrigin: encountered,\n              integrity:\n                \"string\" === typeof options.integrity\n                  ? options.integrity\n                  : void 0\n            }))\n          : Internals.d.m(href));\n    };\n    exports.requestFormReset = function (form) {\n      Internals.d.r(form);\n    };\n    exports.unstable_batchedUpdates = function (fn, a) {\n      return fn(a);\n    };\n    exports.useFormState = function (action, initialState, permalink) {\n      return resolveDispatcher().useFormState(action, initialState, permalink);\n    };\n    exports.useFormStatus = function () {\n      return resolveDispatcher().useHostTransitionStatus();\n    };\n    exports.version = \"19.1.1\";\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n\n\n//# sourceURL=webpack://workout_planner/./node_modules/react-dom/cjs/react-dom.development.js?\n}");

/***/ }),

/***/ "./node_modules/react-dom/client.js":
/*!******************************************!*\
  !*** ./node_modules/react-dom/client.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("{\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (true) {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  // removed by dead control flow\n{}\n}\n\nif (false) // removed by dead control flow\n{} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-dom-client.development.js */ \"./node_modules/react-dom/cjs/react-dom-client.development.js\");\n}\n\n\n//# sourceURL=webpack://workout_planner/./node_modules/react-dom/client.js?\n}");

/***/ }),

/***/ "./node_modules/react-dom/index.js":
/*!*****************************************!*\
  !*** ./node_modules/react-dom/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("{\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (true) {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  // removed by dead control flow\n{}\n}\n\nif (false) // removed by dead control flow\n{} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-dom.development.js */ \"./node_modules/react-dom/cjs/react-dom.development.js\");\n}\n\n\n//# sourceURL=webpack://workout_planner/./node_modules/react-dom/index.js?\n}");

/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("{/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function defineDeprecationWarning(methodName, info) {\n      Object.defineProperty(Component.prototype, methodName, {\n        get: function () {\n          console.warn(\n            \"%s(...) is deprecated in plain JavaScript React classes. %s\",\n            info[0],\n            info[1]\n          );\n        }\n      });\n    }\n    function getIteratorFn(maybeIterable) {\n      if (null === maybeIterable || \"object\" !== typeof maybeIterable)\n        return null;\n      maybeIterable =\n        (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n        maybeIterable[\"@@iterator\"];\n      return \"function\" === typeof maybeIterable ? maybeIterable : null;\n    }\n    function warnNoop(publicInstance, callerName) {\n      publicInstance =\n        ((publicInstance = publicInstance.constructor) &&\n          (publicInstance.displayName || publicInstance.name)) ||\n        \"ReactClass\";\n      var warningKey = publicInstance + \".\" + callerName;\n      didWarnStateUpdateForUnmountedComponent[warningKey] ||\n        (console.error(\n          \"Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.\",\n          callerName,\n          publicInstance\n        ),\n        (didWarnStateUpdateForUnmountedComponent[warningKey] = !0));\n    }\n    function Component(props, context, updater) {\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n    function ComponentDummy() {}\n    function PureComponent(props, context, updater) {\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n        case REACT_ACTIVITY_TYPE:\n          return \"Activity\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function UnknownOwner() {\n      return Error(\"react-stack-top-frame\");\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function cloneAndReplaceKey(oldElement, newKey) {\n      newKey = ReactElement(\n        oldElement.type,\n        newKey,\n        void 0,\n        void 0,\n        oldElement._owner,\n        oldElement.props,\n        oldElement._debugStack,\n        oldElement._debugTask\n      );\n      oldElement._store &&\n        (newKey._store.validated = oldElement._store.validated);\n      return newKey;\n    }\n    function isValidElement(object) {\n      return (\n        \"object\" === typeof object &&\n        null !== object &&\n        object.$$typeof === REACT_ELEMENT_TYPE\n      );\n    }\n    function escape(key) {\n      var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n      return (\n        \"$\" +\n        key.replace(/[=:]/g, function (match) {\n          return escaperLookup[match];\n        })\n      );\n    }\n    function getElementKey(element, index) {\n      return \"object\" === typeof element &&\n        null !== element &&\n        null != element.key\n        ? (checkKeyStringCoercion(element.key), escape(\"\" + element.key))\n        : index.toString(36);\n    }\n    function noop$1() {}\n    function resolveThenable(thenable) {\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n        default:\n          switch (\n            (\"string\" === typeof thenable.status\n              ? thenable.then(noop$1, noop$1)\n              : ((thenable.status = \"pending\"),\n                thenable.then(\n                  function (fulfilledValue) {\n                    \"pending\" === thenable.status &&\n                      ((thenable.status = \"fulfilled\"),\n                      (thenable.value = fulfilledValue));\n                  },\n                  function (error) {\n                    \"pending\" === thenable.status &&\n                      ((thenable.status = \"rejected\"),\n                      (thenable.reason = error));\n                  }\n                )),\n            thenable.status)\n          ) {\n            case \"fulfilled\":\n              return thenable.value;\n            case \"rejected\":\n              throw thenable.reason;\n          }\n      }\n      throw thenable;\n    }\n    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n      var type = typeof children;\n      if (\"undefined\" === type || \"boolean\" === type) children = null;\n      var invokeCallback = !1;\n      if (null === children) invokeCallback = !0;\n      else\n        switch (type) {\n          case \"bigint\":\n          case \"string\":\n          case \"number\":\n            invokeCallback = !0;\n            break;\n          case \"object\":\n            switch (children.$$typeof) {\n              case REACT_ELEMENT_TYPE:\n              case REACT_PORTAL_TYPE:\n                invokeCallback = !0;\n                break;\n              case REACT_LAZY_TYPE:\n                return (\n                  (invokeCallback = children._init),\n                  mapIntoArray(\n                    invokeCallback(children._payload),\n                    array,\n                    escapedPrefix,\n                    nameSoFar,\n                    callback\n                  )\n                );\n            }\n        }\n      if (invokeCallback) {\n        invokeCallback = children;\n        callback = callback(invokeCallback);\n        var childKey =\n          \"\" === nameSoFar ? \".\" + getElementKey(invokeCallback, 0) : nameSoFar;\n        isArrayImpl(callback)\n          ? ((escapedPrefix = \"\"),\n            null != childKey &&\n              (escapedPrefix =\n                childKey.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n            mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n              return c;\n            }))\n          : null != callback &&\n            (isValidElement(callback) &&\n              (null != callback.key &&\n                ((invokeCallback && invokeCallback.key === callback.key) ||\n                  checkKeyStringCoercion(callback.key)),\n              (escapedPrefix = cloneAndReplaceKey(\n                callback,\n                escapedPrefix +\n                  (null == callback.key ||\n                  (invokeCallback && invokeCallback.key === callback.key)\n                    ? \"\"\n                    : (\"\" + callback.key).replace(\n                        userProvidedKeyEscapeRegex,\n                        \"$&/\"\n                      ) + \"/\") +\n                  childKey\n              )),\n              \"\" !== nameSoFar &&\n                null != invokeCallback &&\n                isValidElement(invokeCallback) &&\n                null == invokeCallback.key &&\n                invokeCallback._store &&\n                !invokeCallback._store.validated &&\n                (escapedPrefix._store.validated = 2),\n              (callback = escapedPrefix)),\n            array.push(callback));\n        return 1;\n      }\n      invokeCallback = 0;\n      childKey = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n      if (isArrayImpl(children))\n        for (var i = 0; i < children.length; i++)\n          (nameSoFar = children[i]),\n            (type = childKey + getElementKey(nameSoFar, i)),\n            (invokeCallback += mapIntoArray(\n              nameSoFar,\n              array,\n              escapedPrefix,\n              type,\n              callback\n            ));\n      else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n        for (\n          i === children.entries &&\n            (didWarnAboutMaps ||\n              console.warn(\n                \"Using Maps as children is not supported. Use an array of keyed ReactElements instead.\"\n              ),\n            (didWarnAboutMaps = !0)),\n            children = i.call(children),\n            i = 0;\n          !(nameSoFar = children.next()).done;\n\n        )\n          (nameSoFar = nameSoFar.value),\n            (type = childKey + getElementKey(nameSoFar, i++)),\n            (invokeCallback += mapIntoArray(\n              nameSoFar,\n              array,\n              escapedPrefix,\n              type,\n              callback\n            ));\n      else if (\"object\" === type) {\n        if (\"function\" === typeof children.then)\n          return mapIntoArray(\n            resolveThenable(children),\n            array,\n            escapedPrefix,\n            nameSoFar,\n            callback\n          );\n        array = String(children);\n        throw Error(\n          \"Objects are not valid as a React child (found: \" +\n            (\"[object Object]\" === array\n              ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n              : array) +\n            \"). If you meant to render a collection of children, use an array instead.\"\n        );\n      }\n      return invokeCallback;\n    }\n    function mapChildren(children, func, context) {\n      if (null == children) return children;\n      var result = [],\n        count = 0;\n      mapIntoArray(children, result, \"\", \"\", function (child) {\n        return func.call(context, child, count++);\n      });\n      return result;\n    }\n    function lazyInitializer(payload) {\n      if (-1 === payload._status) {\n        var ctor = payload._result;\n        ctor = ctor();\n        ctor.then(\n          function (moduleObject) {\n            if (0 === payload._status || -1 === payload._status)\n              (payload._status = 1), (payload._result = moduleObject);\n          },\n          function (error) {\n            if (0 === payload._status || -1 === payload._status)\n              (payload._status = 2), (payload._result = error);\n          }\n        );\n        -1 === payload._status &&\n          ((payload._status = 0), (payload._result = ctor));\n      }\n      if (1 === payload._status)\n        return (\n          (ctor = payload._result),\n          void 0 === ctor &&\n            console.error(\n              \"lazy: Expected the result of a dynamic import() call. Instead received: %s\\n\\nYour code should look like: \\n  const MyComponent = lazy(() => import('./MyComponent'))\\n\\nDid you accidentally put curly braces around the import?\",\n              ctor\n            ),\n          \"default\" in ctor ||\n            console.error(\n              \"lazy: Expected the result of a dynamic import() call. Instead received: %s\\n\\nYour code should look like: \\n  const MyComponent = lazy(() => import('./MyComponent'))\",\n              ctor\n            ),\n          ctor.default\n        );\n      throw payload._result;\n    }\n    function resolveDispatcher() {\n      var dispatcher = ReactSharedInternals.H;\n      null === dispatcher &&\n        console.error(\n          \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.\"\n        );\n      return dispatcher;\n    }\n    function noop() {}\n    function enqueueTask(task) {\n      if (null === enqueueTaskImpl)\n        try {\n          var requireString = (\"require\" + Math.random()).slice(0, 7);\n          enqueueTaskImpl = (module && module[requireString]).call(\n            module,\n            \"timers\"\n          ).setImmediate;\n        } catch (_err) {\n          enqueueTaskImpl = function (callback) {\n            !1 === didWarnAboutMessageChannel &&\n              ((didWarnAboutMessageChannel = !0),\n              \"undefined\" === typeof MessageChannel &&\n                console.error(\n                  \"This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.\"\n                ));\n            var channel = new MessageChannel();\n            channel.port1.onmessage = callback;\n            channel.port2.postMessage(void 0);\n          };\n        }\n      return enqueueTaskImpl(task);\n    }\n    function aggregateErrors(errors) {\n      return 1 < errors.length && \"function\" === typeof AggregateError\n        ? new AggregateError(errors)\n        : errors[0];\n    }\n    function popActScope(prevActQueue, prevActScopeDepth) {\n      prevActScopeDepth !== actScopeDepth - 1 &&\n        console.error(\n          \"You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. \"\n        );\n      actScopeDepth = prevActScopeDepth;\n    }\n    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n      var queue = ReactSharedInternals.actQueue;\n      if (null !== queue)\n        if (0 !== queue.length)\n          try {\n            flushActQueue(queue);\n            enqueueTask(function () {\n              return recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            });\n            return;\n          } catch (error) {\n            ReactSharedInternals.thrownErrors.push(error);\n          }\n        else ReactSharedInternals.actQueue = null;\n      0 < ReactSharedInternals.thrownErrors.length\n        ? ((queue = aggregateErrors(ReactSharedInternals.thrownErrors)),\n          (ReactSharedInternals.thrownErrors.length = 0),\n          reject(queue))\n        : resolve(returnValue);\n    }\n    function flushActQueue(queue) {\n      if (!isFlushing) {\n        isFlushing = !0;\n        var i = 0;\n        try {\n          for (; i < queue.length; i++) {\n            var callback = queue[i];\n            do {\n              ReactSharedInternals.didUsePromise = !1;\n              var continuation = callback(!1);\n              if (null !== continuation) {\n                if (ReactSharedInternals.didUsePromise) {\n                  queue[i] = callback;\n                  queue.splice(0, i);\n                  return;\n                }\n                callback = continuation;\n              } else break;\n            } while (1);\n          }\n          queue.length = 0;\n        } catch (error) {\n          queue.splice(0, i + 1), ReactSharedInternals.thrownErrors.push(error);\n        } finally {\n          isFlushing = !1;\n        }\n      }\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\n      MAYBE_ITERATOR_SYMBOL = Symbol.iterator,\n      didWarnStateUpdateForUnmountedComponent = {},\n      ReactNoopUpdateQueue = {\n        isMounted: function () {\n          return !1;\n        },\n        enqueueForceUpdate: function (publicInstance) {\n          warnNoop(publicInstance, \"forceUpdate\");\n        },\n        enqueueReplaceState: function (publicInstance) {\n          warnNoop(publicInstance, \"replaceState\");\n        },\n        enqueueSetState: function (publicInstance) {\n          warnNoop(publicInstance, \"setState\");\n        }\n      },\n      assign = Object.assign,\n      emptyObject = {};\n    Object.freeze(emptyObject);\n    Component.prototype.isReactComponent = {};\n    Component.prototype.setState = function (partialState, callback) {\n      if (\n        \"object\" !== typeof partialState &&\n        \"function\" !== typeof partialState &&\n        null != partialState\n      )\n        throw Error(\n          \"takes an object of state variables to update or a function which returns an object of state variables.\"\n        );\n      this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n    };\n    Component.prototype.forceUpdate = function (callback) {\n      this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n    };\n    var deprecatedAPIs = {\n        isMounted: [\n          \"isMounted\",\n          \"Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.\"\n        ],\n        replaceState: [\n          \"replaceState\",\n          \"Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236).\"\n        ]\n      },\n      fnName;\n    for (fnName in deprecatedAPIs)\n      deprecatedAPIs.hasOwnProperty(fnName) &&\n        defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    ComponentDummy.prototype = Component.prototype;\n    deprecatedAPIs = PureComponent.prototype = new ComponentDummy();\n    deprecatedAPIs.constructor = PureComponent;\n    assign(deprecatedAPIs, Component.prototype);\n    deprecatedAPIs.isPureReactComponent = !0;\n    var isArrayImpl = Array.isArray,\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals = {\n        H: null,\n        A: null,\n        T: null,\n        S: null,\n        V: null,\n        actQueue: null,\n        isBatchingLegacy: !1,\n        didScheduleLegacyUpdate: !1,\n        didUsePromise: !1,\n        thrownErrors: [],\n        getCurrentStack: null,\n        recentlyCreatedOwnerStacks: 0\n      },\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          };\n    deprecatedAPIs = {\n      react_stack_bottom_frame: function (callStackForError) {\n        return callStackForError();\n      }\n    };\n    var specialPropKeyWarningShown, didWarnAboutOldJSXRuntime;\n    var didWarnAboutElementRef = {};\n    var unknownOwnerDebugStack = deprecatedAPIs.react_stack_bottom_frame.bind(\n      deprecatedAPIs,\n      UnknownOwner\n    )();\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n    var didWarnAboutMaps = !1,\n      userProvidedKeyEscapeRegex = /\\/+/g,\n      reportGlobalError =\n        \"function\" === typeof reportError\n          ? reportError\n          : function (error) {\n              if (\n                \"object\" === typeof window &&\n                \"function\" === typeof window.ErrorEvent\n              ) {\n                var event = new window.ErrorEvent(\"error\", {\n                  bubbles: !0,\n                  cancelable: !0,\n                  message:\n                    \"object\" === typeof error &&\n                    null !== error &&\n                    \"string\" === typeof error.message\n                      ? String(error.message)\n                      : String(error),\n                  error: error\n                });\n                if (!window.dispatchEvent(event)) return;\n              } else if (\n                \"object\" === typeof process &&\n                \"function\" === typeof process.emit\n              ) {\n                process.emit(\"uncaughtException\", error);\n                return;\n              }\n              console.error(error);\n            },\n      didWarnAboutMessageChannel = !1,\n      enqueueTaskImpl = null,\n      actScopeDepth = 0,\n      didWarnNoAwaitAct = !1,\n      isFlushing = !1,\n      queueSeveralMicrotasks =\n        \"function\" === typeof queueMicrotask\n          ? function (callback) {\n              queueMicrotask(function () {\n                return queueMicrotask(callback);\n              });\n            }\n          : enqueueTask;\n    deprecatedAPIs = Object.freeze({\n      __proto__: null,\n      c: function (size) {\n        return resolveDispatcher().useMemoCache(size);\n      }\n    });\n    exports.Children = {\n      map: mapChildren,\n      forEach: function (children, forEachFunc, forEachContext) {\n        mapChildren(\n          children,\n          function () {\n            forEachFunc.apply(this, arguments);\n          },\n          forEachContext\n        );\n      },\n      count: function (children) {\n        var n = 0;\n        mapChildren(children, function () {\n          n++;\n        });\n        return n;\n      },\n      toArray: function (children) {\n        return (\n          mapChildren(children, function (child) {\n            return child;\n          }) || []\n        );\n      },\n      only: function (children) {\n        if (!isValidElement(children))\n          throw Error(\n            \"React.Children.only expected to receive a single React element child.\"\n          );\n        return children;\n      }\n    };\n    exports.Component = Component;\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.Profiler = REACT_PROFILER_TYPE;\n    exports.PureComponent = PureComponent;\n    exports.StrictMode = REACT_STRICT_MODE_TYPE;\n    exports.Suspense = REACT_SUSPENSE_TYPE;\n    exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n      ReactSharedInternals;\n    exports.__COMPILER_RUNTIME = deprecatedAPIs;\n    exports.act = function (callback) {\n      var prevActQueue = ReactSharedInternals.actQueue,\n        prevActScopeDepth = actScopeDepth;\n      actScopeDepth++;\n      var queue = (ReactSharedInternals.actQueue =\n          null !== prevActQueue ? prevActQueue : []),\n        didAwaitActCall = !1;\n      try {\n        var result = callback();\n      } catch (error) {\n        ReactSharedInternals.thrownErrors.push(error);\n      }\n      if (0 < ReactSharedInternals.thrownErrors.length)\n        throw (\n          (popActScope(prevActQueue, prevActScopeDepth),\n          (callback = aggregateErrors(ReactSharedInternals.thrownErrors)),\n          (ReactSharedInternals.thrownErrors.length = 0),\n          callback)\n        );\n      if (\n        null !== result &&\n        \"object\" === typeof result &&\n        \"function\" === typeof result.then\n      ) {\n        var thenable = result;\n        queueSeveralMicrotasks(function () {\n          didAwaitActCall ||\n            didWarnNoAwaitAct ||\n            ((didWarnNoAwaitAct = !0),\n            console.error(\n              \"You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);\"\n            ));\n        });\n        return {\n          then: function (resolve, reject) {\n            didAwaitActCall = !0;\n            thenable.then(\n              function (returnValue) {\n                popActScope(prevActQueue, prevActScopeDepth);\n                if (0 === prevActScopeDepth) {\n                  try {\n                    flushActQueue(queue),\n                      enqueueTask(function () {\n                        return recursivelyFlushAsyncActWork(\n                          returnValue,\n                          resolve,\n                          reject\n                        );\n                      });\n                  } catch (error$0) {\n                    ReactSharedInternals.thrownErrors.push(error$0);\n                  }\n                  if (0 < ReactSharedInternals.thrownErrors.length) {\n                    var _thrownError = aggregateErrors(\n                      ReactSharedInternals.thrownErrors\n                    );\n                    ReactSharedInternals.thrownErrors.length = 0;\n                    reject(_thrownError);\n                  }\n                } else resolve(returnValue);\n              },\n              function (error) {\n                popActScope(prevActQueue, prevActScopeDepth);\n                0 < ReactSharedInternals.thrownErrors.length\n                  ? ((error = aggregateErrors(\n                      ReactSharedInternals.thrownErrors\n                    )),\n                    (ReactSharedInternals.thrownErrors.length = 0),\n                    reject(error))\n                  : reject(error);\n              }\n            );\n          }\n        };\n      }\n      var returnValue$jscomp$0 = result;\n      popActScope(prevActQueue, prevActScopeDepth);\n      0 === prevActScopeDepth &&\n        (flushActQueue(queue),\n        0 !== queue.length &&\n          queueSeveralMicrotasks(function () {\n            didAwaitActCall ||\n              didWarnNoAwaitAct ||\n              ((didWarnNoAwaitAct = !0),\n              console.error(\n                \"A component suspended inside an `act` scope, but the `act` call was not awaited. When testing React components that depend on asynchronous data, you must await the result:\\n\\nawait act(() => ...)\"\n              ));\n          }),\n        (ReactSharedInternals.actQueue = null));\n      if (0 < ReactSharedInternals.thrownErrors.length)\n        throw (\n          ((callback = aggregateErrors(ReactSharedInternals.thrownErrors)),\n          (ReactSharedInternals.thrownErrors.length = 0),\n          callback)\n        );\n      return {\n        then: function (resolve, reject) {\n          didAwaitActCall = !0;\n          0 === prevActScopeDepth\n            ? ((ReactSharedInternals.actQueue = queue),\n              enqueueTask(function () {\n                return recursivelyFlushAsyncActWork(\n                  returnValue$jscomp$0,\n                  resolve,\n                  reject\n                );\n              }))\n            : resolve(returnValue$jscomp$0);\n        }\n      };\n    };\n    exports.cache = function (fn) {\n      return function () {\n        return fn.apply(null, arguments);\n      };\n    };\n    exports.captureOwnerStack = function () {\n      var getCurrentStack = ReactSharedInternals.getCurrentStack;\n      return null === getCurrentStack ? null : getCurrentStack();\n    };\n    exports.cloneElement = function (element, config, children) {\n      if (null === element || void 0 === element)\n        throw Error(\n          \"The argument must be a React element, but you passed \" +\n            element +\n            \".\"\n        );\n      var props = assign({}, element.props),\n        key = element.key,\n        owner = element._owner;\n      if (null != config) {\n        var JSCompiler_inline_result;\n        a: {\n          if (\n            hasOwnProperty.call(config, \"ref\") &&\n            (JSCompiler_inline_result = Object.getOwnPropertyDescriptor(\n              config,\n              \"ref\"\n            ).get) &&\n            JSCompiler_inline_result.isReactWarning\n          ) {\n            JSCompiler_inline_result = !1;\n            break a;\n          }\n          JSCompiler_inline_result = void 0 !== config.ref;\n        }\n        JSCompiler_inline_result && (owner = getOwner());\n        hasValidKey(config) &&\n          (checkKeyStringCoercion(config.key), (key = \"\" + config.key));\n        for (propName in config)\n          !hasOwnProperty.call(config, propName) ||\n            \"key\" === propName ||\n            \"__self\" === propName ||\n            \"__source\" === propName ||\n            (\"ref\" === propName && void 0 === config.ref) ||\n            (props[propName] = config[propName]);\n      }\n      var propName = arguments.length - 2;\n      if (1 === propName) props.children = children;\n      else if (1 < propName) {\n        JSCompiler_inline_result = Array(propName);\n        for (var i = 0; i < propName; i++)\n          JSCompiler_inline_result[i] = arguments[i + 2];\n        props.children = JSCompiler_inline_result;\n      }\n      props = ReactElement(\n        element.type,\n        key,\n        void 0,\n        void 0,\n        owner,\n        props,\n        element._debugStack,\n        element._debugTask\n      );\n      for (key = 2; key < arguments.length; key++)\n        (owner = arguments[key]),\n          isValidElement(owner) && owner._store && (owner._store.validated = 1);\n      return props;\n    };\n    exports.createContext = function (defaultValue) {\n      defaultValue = {\n        $$typeof: REACT_CONTEXT_TYPE,\n        _currentValue: defaultValue,\n        _currentValue2: defaultValue,\n        _threadCount: 0,\n        Provider: null,\n        Consumer: null\n      };\n      defaultValue.Provider = defaultValue;\n      defaultValue.Consumer = {\n        $$typeof: REACT_CONSUMER_TYPE,\n        _context: defaultValue\n      };\n      defaultValue._currentRenderer = null;\n      defaultValue._currentRenderer2 = null;\n      return defaultValue;\n    };\n    exports.createElement = function (type, config, children) {\n      for (var i = 2; i < arguments.length; i++) {\n        var node = arguments[i];\n        isValidElement(node) && node._store && (node._store.validated = 1);\n      }\n      i = {};\n      node = null;\n      if (null != config)\n        for (propName in (didWarnAboutOldJSXRuntime ||\n          !(\"__self\" in config) ||\n          \"key\" in config ||\n          ((didWarnAboutOldJSXRuntime = !0),\n          console.warn(\n            \"Your app (or one of its dependencies) is using an outdated JSX transform. Update to the modern JSX transform for faster performance: https://react.dev/link/new-jsx-transform\"\n          )),\n        hasValidKey(config) &&\n          (checkKeyStringCoercion(config.key), (node = \"\" + config.key)),\n        config))\n          hasOwnProperty.call(config, propName) &&\n            \"key\" !== propName &&\n            \"__self\" !== propName &&\n            \"__source\" !== propName &&\n            (i[propName] = config[propName]);\n      var childrenLength = arguments.length - 2;\n      if (1 === childrenLength) i.children = children;\n      else if (1 < childrenLength) {\n        for (\n          var childArray = Array(childrenLength), _i = 0;\n          _i < childrenLength;\n          _i++\n        )\n          childArray[_i] = arguments[_i + 2];\n        Object.freeze && Object.freeze(childArray);\n        i.children = childArray;\n      }\n      if (type && type.defaultProps)\n        for (propName in ((childrenLength = type.defaultProps), childrenLength))\n          void 0 === i[propName] && (i[propName] = childrenLength[propName]);\n      node &&\n        defineKeyPropWarningGetter(\n          i,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      var propName = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return ReactElement(\n        type,\n        node,\n        void 0,\n        void 0,\n        getOwner(),\n        i,\n        propName ? Error(\"react-stack-top-frame\") : unknownOwnerDebugStack,\n        propName ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n    exports.createRef = function () {\n      var refObject = { current: null };\n      Object.seal(refObject);\n      return refObject;\n    };\n    exports.forwardRef = function (render) {\n      null != render && render.$$typeof === REACT_MEMO_TYPE\n        ? console.error(\n            \"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).\"\n          )\n        : \"function\" !== typeof render\n          ? console.error(\n              \"forwardRef requires a render function but was given %s.\",\n              null === render ? \"null\" : typeof render\n            )\n          : 0 !== render.length &&\n            2 !== render.length &&\n            console.error(\n              \"forwardRef render functions accept exactly two parameters: props and ref. %s\",\n              1 === render.length\n                ? \"Did you forget to use the ref parameter?\"\n                : \"Any additional parameter will be undefined.\"\n            );\n      null != render &&\n        null != render.defaultProps &&\n        console.error(\n          \"forwardRef render functions do not support defaultProps. Did you accidentally pass a React component?\"\n        );\n      var elementType = { $$typeof: REACT_FORWARD_REF_TYPE, render: render },\n        ownName;\n      Object.defineProperty(elementType, \"displayName\", {\n        enumerable: !1,\n        configurable: !0,\n        get: function () {\n          return ownName;\n        },\n        set: function (name) {\n          ownName = name;\n          render.name ||\n            render.displayName ||\n            (Object.defineProperty(render, \"name\", { value: name }),\n            (render.displayName = name));\n        }\n      });\n      return elementType;\n    };\n    exports.isValidElement = isValidElement;\n    exports.lazy = function (ctor) {\n      return {\n        $$typeof: REACT_LAZY_TYPE,\n        _payload: { _status: -1, _result: ctor },\n        _init: lazyInitializer\n      };\n    };\n    exports.memo = function (type, compare) {\n      null == type &&\n        console.error(\n          \"memo: The first argument must be a component. Instead received: %s\",\n          null === type ? \"null\" : typeof type\n        );\n      compare = {\n        $$typeof: REACT_MEMO_TYPE,\n        type: type,\n        compare: void 0 === compare ? null : compare\n      };\n      var ownName;\n      Object.defineProperty(compare, \"displayName\", {\n        enumerable: !1,\n        configurable: !0,\n        get: function () {\n          return ownName;\n        },\n        set: function (name) {\n          ownName = name;\n          type.name ||\n            type.displayName ||\n            (Object.defineProperty(type, \"name\", { value: name }),\n            (type.displayName = name));\n        }\n      });\n      return compare;\n    };\n    exports.startTransition = function (scope) {\n      var prevTransition = ReactSharedInternals.T,\n        currentTransition = {};\n      ReactSharedInternals.T = currentTransition;\n      currentTransition._updatedFibers = new Set();\n      try {\n        var returnValue = scope(),\n          onStartTransitionFinish = ReactSharedInternals.S;\n        null !== onStartTransitionFinish &&\n          onStartTransitionFinish(currentTransition, returnValue);\n        \"object\" === typeof returnValue &&\n          null !== returnValue &&\n          \"function\" === typeof returnValue.then &&\n          returnValue.then(noop, reportGlobalError);\n      } catch (error) {\n        reportGlobalError(error);\n      } finally {\n        null === prevTransition &&\n          currentTransition._updatedFibers &&\n          ((scope = currentTransition._updatedFibers.size),\n          currentTransition._updatedFibers.clear(),\n          10 < scope &&\n            console.warn(\n              \"Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.\"\n            )),\n          (ReactSharedInternals.T = prevTransition);\n      }\n    };\n    exports.unstable_useCacheRefresh = function () {\n      return resolveDispatcher().useCacheRefresh();\n    };\n    exports.use = function (usable) {\n      return resolveDispatcher().use(usable);\n    };\n    exports.useActionState = function (action, initialState, permalink) {\n      return resolveDispatcher().useActionState(\n        action,\n        initialState,\n        permalink\n      );\n    };\n    exports.useCallback = function (callback, deps) {\n      return resolveDispatcher().useCallback(callback, deps);\n    };\n    exports.useContext = function (Context) {\n      var dispatcher = resolveDispatcher();\n      Context.$$typeof === REACT_CONSUMER_TYPE &&\n        console.error(\n          \"Calling useContext(Context.Consumer) is not supported and will cause bugs. Did you mean to call useContext(Context) instead?\"\n        );\n      return dispatcher.useContext(Context);\n    };\n    exports.useDebugValue = function (value, formatterFn) {\n      return resolveDispatcher().useDebugValue(value, formatterFn);\n    };\n    exports.useDeferredValue = function (value, initialValue) {\n      return resolveDispatcher().useDeferredValue(value, initialValue);\n    };\n    exports.useEffect = function (create, createDeps, update) {\n      null == create &&\n        console.warn(\n          \"React Hook useEffect requires an effect callback. Did you forget to pass a callback to the hook?\"\n        );\n      var dispatcher = resolveDispatcher();\n      if (\"function\" === typeof update)\n        throw Error(\n          \"useEffect CRUD overload is not enabled in this build of React.\"\n        );\n      return dispatcher.useEffect(create, createDeps);\n    };\n    exports.useId = function () {\n      return resolveDispatcher().useId();\n    };\n    exports.useImperativeHandle = function (ref, create, deps) {\n      return resolveDispatcher().useImperativeHandle(ref, create, deps);\n    };\n    exports.useInsertionEffect = function (create, deps) {\n      null == create &&\n        console.warn(\n          \"React Hook useInsertionEffect requires an effect callback. Did you forget to pass a callback to the hook?\"\n        );\n      return resolveDispatcher().useInsertionEffect(create, deps);\n    };\n    exports.useLayoutEffect = function (create, deps) {\n      null == create &&\n        console.warn(\n          \"React Hook useLayoutEffect requires an effect callback. Did you forget to pass a callback to the hook?\"\n        );\n      return resolveDispatcher().useLayoutEffect(create, deps);\n    };\n    exports.useMemo = function (create, deps) {\n      return resolveDispatcher().useMemo(create, deps);\n    };\n    exports.useOptimistic = function (passthrough, reducer) {\n      return resolveDispatcher().useOptimistic(passthrough, reducer);\n    };\n    exports.useReducer = function (reducer, initialArg, init) {\n      return resolveDispatcher().useReducer(reducer, initialArg, init);\n    };\n    exports.useRef = function (initialValue) {\n      return resolveDispatcher().useRef(initialValue);\n    };\n    exports.useState = function (initialState) {\n      return resolveDispatcher().useState(initialState);\n    };\n    exports.useSyncExternalStore = function (\n      subscribe,\n      getSnapshot,\n      getServerSnapshot\n    ) {\n      return resolveDispatcher().useSyncExternalStore(\n        subscribe,\n        getSnapshot,\n        getServerSnapshot\n      );\n    };\n    exports.useTransition = function () {\n      return resolveDispatcher().useTransition();\n    };\n    exports.version = \"19.1.1\";\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n\n\n//# sourceURL=webpack://workout_planner/./node_modules/react/cjs/react.development.js?\n}");

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("{\n\nif (false) // removed by dead control flow\n{} else {\n  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"./node_modules/react/cjs/react.development.js\");\n}\n\n\n//# sourceURL=webpack://workout_planner/./node_modules/react/index.js?\n}");

/***/ }),

/***/ "./node_modules/scheduler/cjs/scheduler.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/scheduler/cjs/scheduler.development.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("{/**\n * @license React\n * scheduler.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function performWorkUntilDeadline() {\n      needsPaint = !1;\n      if (isMessageLoopRunning) {\n        var currentTime = exports.unstable_now();\n        startTime = currentTime;\n        var hasMoreWork = !0;\n        try {\n          a: {\n            isHostCallbackScheduled = !1;\n            isHostTimeoutScheduled &&\n              ((isHostTimeoutScheduled = !1),\n              localClearTimeout(taskTimeoutID),\n              (taskTimeoutID = -1));\n            isPerformingWork = !0;\n            var previousPriorityLevel = currentPriorityLevel;\n            try {\n              b: {\n                advanceTimers(currentTime);\n                for (\n                  currentTask = peek(taskQueue);\n                  null !== currentTask &&\n                  !(\n                    currentTask.expirationTime > currentTime &&\n                    shouldYieldToHost()\n                  );\n\n                ) {\n                  var callback = currentTask.callback;\n                  if (\"function\" === typeof callback) {\n                    currentTask.callback = null;\n                    currentPriorityLevel = currentTask.priorityLevel;\n                    var continuationCallback = callback(\n                      currentTask.expirationTime <= currentTime\n                    );\n                    currentTime = exports.unstable_now();\n                    if (\"function\" === typeof continuationCallback) {\n                      currentTask.callback = continuationCallback;\n                      advanceTimers(currentTime);\n                      hasMoreWork = !0;\n                      break b;\n                    }\n                    currentTask === peek(taskQueue) && pop(taskQueue);\n                    advanceTimers(currentTime);\n                  } else pop(taskQueue);\n                  currentTask = peek(taskQueue);\n                }\n                if (null !== currentTask) hasMoreWork = !0;\n                else {\n                  var firstTimer = peek(timerQueue);\n                  null !== firstTimer &&\n                    requestHostTimeout(\n                      handleTimeout,\n                      firstTimer.startTime - currentTime\n                    );\n                  hasMoreWork = !1;\n                }\n              }\n              break a;\n            } finally {\n              (currentTask = null),\n                (currentPriorityLevel = previousPriorityLevel),\n                (isPerformingWork = !1);\n            }\n            hasMoreWork = void 0;\n          }\n        } finally {\n          hasMoreWork\n            ? schedulePerformWorkUntilDeadline()\n            : (isMessageLoopRunning = !1);\n        }\n      }\n    }\n    function push(heap, node) {\n      var index = heap.length;\n      heap.push(node);\n      a: for (; 0 < index; ) {\n        var parentIndex = (index - 1) >>> 1,\n          parent = heap[parentIndex];\n        if (0 < compare(parent, node))\n          (heap[parentIndex] = node),\n            (heap[index] = parent),\n            (index = parentIndex);\n        else break a;\n      }\n    }\n    function peek(heap) {\n      return 0 === heap.length ? null : heap[0];\n    }\n    function pop(heap) {\n      if (0 === heap.length) return null;\n      var first = heap[0],\n        last = heap.pop();\n      if (last !== first) {\n        heap[0] = last;\n        a: for (\n          var index = 0, length = heap.length, halfLength = length >>> 1;\n          index < halfLength;\n\n        ) {\n          var leftIndex = 2 * (index + 1) - 1,\n            left = heap[leftIndex],\n            rightIndex = leftIndex + 1,\n            right = heap[rightIndex];\n          if (0 > compare(left, last))\n            rightIndex < length && 0 > compare(right, left)\n              ? ((heap[index] = right),\n                (heap[rightIndex] = last),\n                (index = rightIndex))\n              : ((heap[index] = left),\n                (heap[leftIndex] = last),\n                (index = leftIndex));\n          else if (rightIndex < length && 0 > compare(right, last))\n            (heap[index] = right),\n              (heap[rightIndex] = last),\n              (index = rightIndex);\n          else break a;\n        }\n      }\n      return first;\n    }\n    function compare(a, b) {\n      var diff = a.sortIndex - b.sortIndex;\n      return 0 !== diff ? diff : a.id - b.id;\n    }\n    function advanceTimers(currentTime) {\n      for (var timer = peek(timerQueue); null !== timer; ) {\n        if (null === timer.callback) pop(timerQueue);\n        else if (timer.startTime <= currentTime)\n          pop(timerQueue),\n            (timer.sortIndex = timer.expirationTime),\n            push(taskQueue, timer);\n        else break;\n        timer = peek(timerQueue);\n      }\n    }\n    function handleTimeout(currentTime) {\n      isHostTimeoutScheduled = !1;\n      advanceTimers(currentTime);\n      if (!isHostCallbackScheduled)\n        if (null !== peek(taskQueue))\n          (isHostCallbackScheduled = !0),\n            isMessageLoopRunning ||\n              ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline());\n        else {\n          var firstTimer = peek(timerQueue);\n          null !== firstTimer &&\n            requestHostTimeout(\n              handleTimeout,\n              firstTimer.startTime - currentTime\n            );\n        }\n    }\n    function shouldYieldToHost() {\n      return needsPaint\n        ? !0\n        : exports.unstable_now() - startTime < frameInterval\n          ? !1\n          : !0;\n    }\n    function requestHostTimeout(callback, ms) {\n      taskTimeoutID = localSetTimeout(function () {\n        callback(exports.unstable_now());\n      }, ms);\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    exports.unstable_now = void 0;\n    if (\n      \"object\" === typeof performance &&\n      \"function\" === typeof performance.now\n    ) {\n      var localPerformance = performance;\n      exports.unstable_now = function () {\n        return localPerformance.now();\n      };\n    } else {\n      var localDate = Date,\n        initialTime = localDate.now();\n      exports.unstable_now = function () {\n        return localDate.now() - initialTime;\n      };\n    }\n    var taskQueue = [],\n      timerQueue = [],\n      taskIdCounter = 1,\n      currentTask = null,\n      currentPriorityLevel = 3,\n      isPerformingWork = !1,\n      isHostCallbackScheduled = !1,\n      isHostTimeoutScheduled = !1,\n      needsPaint = !1,\n      localSetTimeout = \"function\" === typeof setTimeout ? setTimeout : null,\n      localClearTimeout =\n        \"function\" === typeof clearTimeout ? clearTimeout : null,\n      localSetImmediate =\n        \"undefined\" !== typeof setImmediate ? setImmediate : null,\n      isMessageLoopRunning = !1,\n      taskTimeoutID = -1,\n      frameInterval = 5,\n      startTime = -1;\n    if (\"function\" === typeof localSetImmediate)\n      var schedulePerformWorkUntilDeadline = function () {\n        localSetImmediate(performWorkUntilDeadline);\n      };\n    else if (\"undefined\" !== typeof MessageChannel) {\n      var channel = new MessageChannel(),\n        port = channel.port2;\n      channel.port1.onmessage = performWorkUntilDeadline;\n      schedulePerformWorkUntilDeadline = function () {\n        port.postMessage(null);\n      };\n    } else\n      schedulePerformWorkUntilDeadline = function () {\n        localSetTimeout(performWorkUntilDeadline, 0);\n      };\n    exports.unstable_IdlePriority = 5;\n    exports.unstable_ImmediatePriority = 1;\n    exports.unstable_LowPriority = 4;\n    exports.unstable_NormalPriority = 3;\n    exports.unstable_Profiling = null;\n    exports.unstable_UserBlockingPriority = 2;\n    exports.unstable_cancelCallback = function (task) {\n      task.callback = null;\n    };\n    exports.unstable_forceFrameRate = function (fps) {\n      0 > fps || 125 < fps\n        ? console.error(\n            \"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"\n          )\n        : (frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5);\n    };\n    exports.unstable_getCurrentPriorityLevel = function () {\n      return currentPriorityLevel;\n    };\n    exports.unstable_next = function (eventHandler) {\n      switch (currentPriorityLevel) {\n        case 1:\n        case 2:\n        case 3:\n          var priorityLevel = 3;\n          break;\n        default:\n          priorityLevel = currentPriorityLevel;\n      }\n      var previousPriorityLevel = currentPriorityLevel;\n      currentPriorityLevel = priorityLevel;\n      try {\n        return eventHandler();\n      } finally {\n        currentPriorityLevel = previousPriorityLevel;\n      }\n    };\n    exports.unstable_requestPaint = function () {\n      needsPaint = !0;\n    };\n    exports.unstable_runWithPriority = function (priorityLevel, eventHandler) {\n      switch (priorityLevel) {\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n          break;\n        default:\n          priorityLevel = 3;\n      }\n      var previousPriorityLevel = currentPriorityLevel;\n      currentPriorityLevel = priorityLevel;\n      try {\n        return eventHandler();\n      } finally {\n        currentPriorityLevel = previousPriorityLevel;\n      }\n    };\n    exports.unstable_scheduleCallback = function (\n      priorityLevel,\n      callback,\n      options\n    ) {\n      var currentTime = exports.unstable_now();\n      \"object\" === typeof options && null !== options\n        ? ((options = options.delay),\n          (options =\n            \"number\" === typeof options && 0 < options\n              ? currentTime + options\n              : currentTime))\n        : (options = currentTime);\n      switch (priorityLevel) {\n        case 1:\n          var timeout = -1;\n          break;\n        case 2:\n          timeout = 250;\n          break;\n        case 5:\n          timeout = 1073741823;\n          break;\n        case 4:\n          timeout = 1e4;\n          break;\n        default:\n          timeout = 5e3;\n      }\n      timeout = options + timeout;\n      priorityLevel = {\n        id: taskIdCounter++,\n        callback: callback,\n        priorityLevel: priorityLevel,\n        startTime: options,\n        expirationTime: timeout,\n        sortIndex: -1\n      };\n      options > currentTime\n        ? ((priorityLevel.sortIndex = options),\n          push(timerQueue, priorityLevel),\n          null === peek(taskQueue) &&\n            priorityLevel === peek(timerQueue) &&\n            (isHostTimeoutScheduled\n              ? (localClearTimeout(taskTimeoutID), (taskTimeoutID = -1))\n              : (isHostTimeoutScheduled = !0),\n            requestHostTimeout(handleTimeout, options - currentTime)))\n        : ((priorityLevel.sortIndex = timeout),\n          push(taskQueue, priorityLevel),\n          isHostCallbackScheduled ||\n            isPerformingWork ||\n            ((isHostCallbackScheduled = !0),\n            isMessageLoopRunning ||\n              ((isMessageLoopRunning = !0),\n              schedulePerformWorkUntilDeadline())));\n      return priorityLevel;\n    };\n    exports.unstable_shouldYield = shouldYieldToHost;\n    exports.unstable_wrapCallback = function (callback) {\n      var parentPriorityLevel = currentPriorityLevel;\n      return function () {\n        var previousPriorityLevel = currentPriorityLevel;\n        currentPriorityLevel = parentPriorityLevel;\n        try {\n          return callback.apply(this, arguments);\n        } finally {\n          currentPriorityLevel = previousPriorityLevel;\n        }\n      };\n    };\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n\n\n//# sourceURL=webpack://workout_planner/./node_modules/scheduler/cjs/scheduler.development.js?\n}");

/***/ }),

/***/ "./node_modules/scheduler/index.js":
/*!*****************************************!*\
  !*** ./node_modules/scheduler/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("{\n\nif (false) // removed by dead control flow\n{} else {\n  module.exports = __webpack_require__(/*! ./cjs/scheduler.development.js */ \"./node_modules/scheduler/cjs/scheduler.development.js\");\n}\n\n\n//# sourceURL=webpack://workout_planner/./node_modules/scheduler/index.js?\n}");

/***/ }),

/***/ "./src/app/email_input.tsx":
/*!*********************************!*\
  !*** ./src/app/email_input.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst UI = __webpack_require__(/*! ../ui */ \"./src/ui.ts\");\nconst error_label_1 = __webpack_require__(/*! ./error_label */ \"./src/app/error_label.tsx\");\nclass EmailInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.errorLabel = React.createRef();\n        this.state = {\n            value: props.value,\n        };\n    }\n    render() {\n        const { value } = this.state;\n        const { defaultValue, width } = this.props;\n        return (React.createElement(\"span\", null,\n            React.createElement(\"input\", { width: width, placeholder: defaultValue, type: 'string', value: value, onChange: e => this._change(e), onBlur: e => this._blur(e) }),\n            React.createElement(error_label_1.default, { ref: this.errorLabel, message: '' })));\n    }\n    _change(e) {\n        this.setState({ value: e.target.value });\n    }\n    _blur(e) {\n        if (!UI.FieldValidator.validateEmail(e.target.value)) {\n            this._setError(\"Enter a valid email\");\n        }\n        else {\n            this._setError(\"\");\n            const { onChange } = this.props;\n            onChange(e.target.value);\n        }\n    }\n    _setError(msg) {\n        this.errorLabel.current?.setError(msg);\n    }\n}\nexports[\"default\"] = EmailInput;\n\n\n//# sourceURL=webpack://workout_planner/./src/app/email_input.tsx?\n}");

/***/ }),

/***/ "./src/app/error_label.tsx":
/*!*********************************!*\
  !*** ./src/app/error_label.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nclass ErrorLabel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: props.message || \"\",\n        };\n    }\n    render() {\n        return (React.createElement(\"span\", { style: { marginLeft: \"10px\", color: \"#a94442\" } }, this.state.message));\n    }\n    setError(msg) {\n        this.setState({ message: msg });\n    }\n}\nexports[\"default\"] = ErrorLabel;\n\n\n//# sourceURL=webpack://workout_planner/./src/app/error_label.tsx?\n}");

/***/ }),

/***/ "./src/app/number_input.tsx":
/*!**********************************!*\
  !*** ./src/app/number_input.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst UI = __webpack_require__(/*! ../ui */ \"./src/ui.ts\");\nconst error_label_1 = __webpack_require__(/*! ./error_label */ \"./src/app/error_label.tsx\");\nclass NumberInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.errorLabel = React.createRef();\n        this.state = {\n            value: props.value,\n        };\n    }\n    render() {\n        return (React.createElement(\"span\", null,\n            React.createElement(\"input\", { ...this.props, type: 'number', value: this.state.value, onChange: e => this._change(e), onBlur: e => this._blur(e) }),\n            React.createElement(error_label_1.default, { ref: this.errorLabel, message: '' })));\n    }\n    _change(e) {\n        this.setState({ value: e.target.value });\n    }\n    _blur(e) {\n        if (!UI.FieldValidator.validateNumber(e.target.value)) {\n            this.props.onChange(null);\n        }\n        else {\n            this.props.onChange(e.target.value);\n        }\n    }\n    setError(msg) {\n        this.errorLabel.current?.setError(msg);\n    }\n}\nexports[\"default\"] = NumberInput;\n\n\n//# sourceURL=webpack://workout_planner/./src/app/number_input.tsx?\n}");

/***/ }),

/***/ "./src/app/player.tsx":
/*!****************************!*\
  !*** ./src/app/player.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst UI = __webpack_require__(/*! ../ui */ \"./src/ui.ts\");\nconst Core = __webpack_require__(/*! ../core */ \"./src/core.ts\");\nconst User = __webpack_require__(/*! ../user */ \"./src/user.ts\");\nconst Player = __webpack_require__(/*! ../player */ \"./src/player.ts\");\nconst workout_view_1 = __webpack_require__(/*! ./workout_view */ \"./src/app/workout_view.tsx\");\nclass PlayerView extends React.Component {\n    constructor(params) {\n        super(params);\n        this.stopWatch_ = null;\n        this.params_ = null;\n        this.playerHelper_ = null;\n        this.intervalId_ = null;\n        this.workoutSummary = React.createRef();\n        this.view = React.createRef();\n        this.countdown = React.createRef();\n        this.end = React.createRef();\n        this.stopWatch_ = new Player.StopWatch();\n        this.params_ = UI.QueryParamsWorkoutView.createCopy(params);\n        let builder = this.params_.createWorkoutBuilder();\n        let of = new User.ObjectFactory(this.params_.createUserProfile(), builder.getSportType());\n        this.playerHelper_ = new Player.PlayerHelper(of, builder.getInterval());\n        this.state = this.getState();\n    }\n    getState() {\n        let bei = this.playerHelper_.get(this._getElapsedTimeSeconds());\n        if (bei == null) {\n            return {};\n        }\n        return {\n            current_title: bei.getTitle(),\n            elapsed_time: Core.FormatterHelper.formatTime(this._getElapsedTimeMilliseconds(bei)),\n            remaining_time: Core.FormatterHelper.formatTime(this._getRemainingTimeMilliseconds(bei)),\n            total_time_elapsed: Core.FormatterHelper.formatTime(this.stopWatch_.getElapsedTimeMillis()),\n            total_time_workout: Core.FormatterHelper.formatTime(this.playerHelper_.getDurationTotalSeconds() * 1000)\n        };\n    }\n    _getElapsedTimeMilliseconds(bei) {\n        return this.stopWatch_.getElapsedTimeMillis() - bei.getBeginSeconds() * 1000;\n    }\n    _getRemainingTimeMilliseconds(bei) {\n        return bei.getEndSeconds() * 1000 - this.stopWatch_.getElapsedTimeMillis();\n    }\n    _getElapsedTimeSeconds() {\n        return this.stopWatch_.getElapsedTimeMillis() / 1000;\n    }\n    _start(e) {\n        this.stopWatch_.start();\n        if (this.intervalId_ === null) {\n            this.intervalId_ = setInterval(this._onIntervalElapsed.bind(this), 100);\n        }\n    }\n    _pauseAudioElement(element, pause) {\n        if (pause) {\n            if (!element.current?.paused) {\n                element.current?.pause();\n            }\n        }\n        else {\n            if (element.current?.paused) {\n                element.current?.play();\n            }\n        }\n    }\n    _onIntervalElapsed() {\n        this.setState(this.getState());\n        let bei = this.playerHelper_.get(this._getElapsedTimeSeconds());\n        if (bei == null) {\n            this._pauseAudioElement(this.end, false);\n            clearInterval(this.intervalId_);\n            this.intervalId_ = null;\n            return;\n        }\n        let durationIntervalMilliseconds = bei.getDurationSeconds() * 1000;\n        if (durationIntervalMilliseconds > 3500 && this._getRemainingTimeMilliseconds(bei) < 3500) {\n            this._pauseAudioElement(this.countdown, false);\n        }\n    }\n    _pause(e) {\n        if (this.intervalId_ !== null) {\n            clearInterval(this.intervalId_);\n            this.intervalId_ = null;\n            this.stopWatch_.stop();\n        }\n    }\n    _next(e) {\n        let bei = this.playerHelper_.getNext(this._getElapsedTimeSeconds());\n        if (bei == null) {\n            return;\n        }\n        this.stopWatch_.moveStartTime(bei.getBeginSeconds() * 1000);\n        this.setState(this.getState());\n    }\n    _reset(e) {\n        this.stopWatch_.reset();\n        if (this.intervalId_ != null) {\n            clearInterval(this.intervalId_);\n            this.intervalId_ = null;\n        }\n    }\n    _onKeyPress(e) {\n        switch (e.which) {\n            case 115:\n                this._start(e);\n                break;\n            case 112:\n                this._pause(e);\n                break;\n            case 110:\n                this._next(e);\n                break;\n            case 114:\n                this._reset(e);\n                break;\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"keypress\", this._onKeyPress.bind(this));\n        this.view.current?.refresh(this.params_);\n    }\n    render() {\n        return (React.createElement(\"div\", null,\n            React.createElement(\"h1\", null,\n                \" Title: \",\n                React.createElement(\"span\", null, this.state.current_title)),\n            React.createElement(\"h2\", null,\n                \" Elapsed: \",\n                React.createElement(\"span\", null, this.state.elapsed_time)),\n            React.createElement(\"h2\", null,\n                \" Remaining: \",\n                React.createElement(\"span\", null, this.state.remaining_time)),\n            React.createElement(\"hr\", null),\n            React.createElement(\"div\", null,\n                \" Total workout duration: \",\n                React.createElement(\"span\", null),\n                this.state.total_time_workout),\n            React.createElement(\"div\", null,\n                \" Total workout elapsed: \",\n                React.createElement(\"span\", null, this.state.total_time_elapsed)),\n            React.createElement(\"table\", { ref: this.workoutSummary }),\n            React.createElement(\"form\", null,\n                React.createElement(\"input\", { type: \"button\", value: \"Start (S)\", onClick: e => this._start(e) }),\n                React.createElement(\"input\", { type: \"button\", value: \"Pause (P)\", onClick: e => this._pause(e) }),\n                React.createElement(\"input\", { type: \"button\", value: \"Next Set (N)\", onClick: e => this._next(e) }),\n                React.createElement(\"input\", { type: \"button\", value: \"Reset (R)\", onClick: e => this._reset(e) }),\n                React.createElement(\"br\", null)),\n            React.createElement(workout_view_1.default, { ...this.props, ref: this.view }),\n            React.createElement(\"audio\", { ref: this.countdown, hidden: false },\n                React.createElement(\"source\", { src: \"countdown.wav\", type: \"audio/wav\" }),\n                \"Your browser does not support the audio element.\"),\n            React.createElement(\"audio\", { ref: this.end, hidden: false },\n                React.createElement(\"source\", { src: \"end.wav\", type: \"audio/wav\" }),\n                \"Your browser does not support the audio element.\")));\n    }\n}\nexports[\"default\"] = PlayerView;\n\n\n//# sourceURL=webpack://workout_planner/./src/app/player.tsx?\n}");

/***/ }),

/***/ "./src/app/select.tsx":
/*!****************************!*\
  !*** ./src/app/select.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nclass Select extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.sel = React.createRef();\n    }\n    render() {\n        return (React.createElement(\"select\", { ref: this.sel, ...this.props, onChange: e => this._change(e) }, this.props.children));\n    }\n    _change(e) {\n        if (this.props.onChange) {\n            this.props.onChange(this.getSelectedValue());\n        }\n    }\n    getSelectedValue() {\n        return this.sel.current?.value || '';\n    }\n    setSelectedValue(val) {\n        if (this.sel.current) {\n            this.sel.current.value = val;\n        }\n    }\n}\nexports[\"default\"] = Select;\n\n\n//# sourceURL=webpack://workout_planner/./src/app/select.tsx?\n}");

/***/ }),

/***/ "./src/app/select_option.tsx":
/*!***********************************!*\
  !*** ./src/app/select_option.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nclass SelectOption extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.opt = React.createRef();\n    }\n    render() {\n        return (React.createElement(\"option\", { ref: this.opt, ...this.props }, this.props.children));\n    }\n    setEnabled(value) {\n        if (this.opt.current) {\n            this.opt.current.hidden = !value;\n        }\n    }\n}\nexports[\"default\"] = SelectOption;\n\n\n//# sourceURL=webpack://workout_planner/./src/app/select_option.tsx?\n}");

/***/ }),

/***/ "./src/app/text_input.tsx":
/*!********************************!*\
  !*** ./src/app/text_input.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst error_label_1 = __webpack_require__(/*! ./error_label */ \"./src/app/error_label.tsx\");\nclass TextInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.input = React.createRef();\n        this.errorLabel = React.createRef();\n        this.state = {\n            value: props.value,\n        };\n    }\n    render() {\n        return (React.createElement(\"span\", null,\n            React.createElement(\"input\", { ref: this.input, ...this.props, value: this.state.value, onChange: e => this._change(e), onBlur: e => this._blur(e) }),\n            React.createElement(error_label_1.default, { ref: this.errorLabel, message: '' })));\n    }\n    _change(e) {\n        this.setState({ value: e.target.value });\n    }\n    _blur(e) {\n        this.props.onChange(e.target.value);\n    }\n    setError(msg) {\n        this.errorLabel.current?.setError(msg);\n    }\n    getValue() {\n        return this.state.value;\n    }\n}\nexports[\"default\"] = TextInput;\n\n\n//# sourceURL=webpack://workout_planner/./src/app/text_input.tsx?\n}");

/***/ }),

/***/ "./src/app/user_settings.tsx":
/*!***********************************!*\
  !*** ./src/app/user_settings.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst Core = __webpack_require__(/*! ../core */ \"./src/core.ts\");\nconst number_input_1 = __webpack_require__(/*! ./number_input */ \"./src/app/number_input.tsx\");\nconst email_input_1 = __webpack_require__(/*! ./email_input */ \"./src/app/email_input.tsx\");\nconst text_input_1 = __webpack_require__(/*! ./text_input */ \"./src/app/text_input.tsx\");\nconst ui_1 = __webpack_require__(/*! ../ui */ \"./src/ui.ts\");\nclass UserProperty extends React.Component {\n    constructor(params) {\n        super(params);\n        this.ftpRef = React.createRef();\n        this.tPaceRef = React.createRef();\n        this.swimFtpRef = React.createRef();\n        this.swimCssRef = React.createRef();\n        this.emailRef = React.createRef();\n        this.efficiencyFactorRef = React.createRef();\n        let query_params = ui_1.QueryParamsWorkoutView.createCopy(params);\n        this.ftp = parseInt(query_params.ftp_watts.value);\n        this.email = query_params.email.value;\n        this.t_pace = query_params.t_pace.value;\n        this.swim_ftp = query_params.swim_ftp.value;\n        this.swim_css = query_params.swim_css.value;\n        this.efficiency_factor = query_params.efficiency_factor.value;\n    }\n    _onFtpChange(ftp) {\n        if (ftp < 100 || ftp > 500) {\n            this.ftpRef.current?.setError(\"Set a value between 100 and 500\");\n        }\n        else {\n            this.ftpRef.current?.setError(\"\");\n        }\n        this.ftp = ftp;\n        this._fireOnChange();\n    }\n    _onTPaceChange(t_pace) {\n        var t_pace_mph = Core.SpeedParser.getSpeedInMph(t_pace);\n        if (t_pace != null && t_pace_mph > 0) {\n            this.tPaceRef.current?.setError(\"\");\n        }\n        else {\n            this.tPaceRef.current?.setError(\"Enter a value speed for your running t-pace. Allowed units are: min/mi, km/h, mi/h, min/km\");\n        }\n        this.t_pace = t_pace;\n        this._fireOnChange();\n    }\n    _onSwimFtpChange(swim_ftp) {\n        if (swim_ftp < 30 || swim_ftp > 200) {\n            this.swimFtpRef.current?.setError(\"Set a value between 30 and 200\");\n        }\n        else {\n            this.swimFtpRef.current?.setError(\"\");\n        }\n        this.swim_ftp = swim_ftp;\n        this._fireOnChange();\n    }\n    _onSwimCSSChange(swim_css) {\n        var swim_css_mph = Core.SpeedParser.getSpeedInMph(swim_css);\n        if (swim_css != null && swim_css_mph) {\n            this.swimCssRef.current?.setError(\"\");\n        }\n        else {\n            this.swimCssRef.current?.setError(\"Enter a value for the swim css. Allowed units are: mph, /100yards\");\n        }\n        this.swim_css = swim_css;\n        this._fireOnChange();\n    }\n    _onEmailChange(email) {\n        this.email = email;\n        this._fireOnChange();\n    }\n    _onEfficiencyFactorChange(efficiency_factor) {\n        this.efficiency_factor = efficiency_factor;\n        this._fireOnChange();\n    }\n    _fireOnChange() {\n        if (this.props.onChange) {\n            this.props.onChange(this.ftp, this.t_pace, this.swim_css, this.swim_ftp, this.email, this.efficiency_factor);\n        }\n    }\n    render() {\n        return (React.createElement(\"div\", null,\n            React.createElement(\"h1\", null, \" User Settings \"),\n            \"Swim CSS: \",\n            React.createElement(text_input_1.default, { ref: this.swimCssRef, width: \"20\", placeholder: \"1:30 min/100yards\", value: this.swim_css, onChange: this._onSwimCSSChange.bind(this) }),\n            \" \",\n            React.createElement(\"br\", null),\n            \"Swim FTP: \",\n            React.createElement(text_input_1.default, { ref: this.swimFtpRef, width: \"20\", placeholder: \"100\", value: this.swim_ftp, onChange: this._onSwimFtpChange.bind(this) }),\n            \" \",\n            React.createElement(\"br\", null),\n            \"Bike FTP: \",\n            React.createElement(number_input_1.default, { ref: this.ftpRef, width: \"20\", placeholder: \"245\", value: this.ftp, onChange: this._onFtpChange.bind(this) }),\n            React.createElement(\"br\", null),\n            \"Run T-Pace: \",\n            React.createElement(text_input_1.default, { ref: this.tPaceRef, width: \"20\", placeholder: \"7:30 min/mi\", value: this.t_pace, onChange: this._onTPaceChange.bind(this) }),\n            \" \",\n            React.createElement(\"br\", null),\n            \"Email: \",\n            React.createElement(email_input_1.default, { ref: this.emailRef, width: 20, defaultValue: \"foo@gmail.com\", value: this.email, onChange: this._onEmailChange.bind(this) }),\n            \" \",\n            React.createElement(\"br\", null),\n            \"Efficiency Factor: \",\n            React.createElement(number_input_1.default, { ref: this.efficiencyFactorRef, width: \"20\", placeholder: \"1.2\", value: this.efficiency_factor, onChange: this._onEfficiencyFactorChange.bind(this) }),\n            \" \",\n            React.createElement(\"br\", null),\n            React.createElement(\"br\", null)));\n    }\n}\nexports[\"default\"] = UserProperty;\n\n\n//# sourceURL=webpack://workout_planner/./src/app/user_settings.tsx?\n}");

/***/ }),

/***/ "./src/app/workout.tsx":
/*!*****************************!*\
  !*** ./src/app/workout.tsx ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst UI = __webpack_require__(/*! ../ui */ \"./src/ui.ts\");\nconst Core = __webpack_require__(/*! ../core */ \"./src/core.ts\");\nconst user_settings_1 = __webpack_require__(/*! ./user_settings */ \"./src/app/user_settings.tsx\");\nconst workout_input_1 = __webpack_require__(/*! ./workout_input */ \"./src/app/workout_input.tsx\");\nconst workout_view_1 = __webpack_require__(/*! ./workout_view */ \"./src/app/workout_view.tsx\");\nconst visitor_1 = __webpack_require__(/*! ../visitor */ \"./src/visitor.ts\");\nclass Workout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.input = React.createRef();\n        this.view = React.createRef();\n        this.playerLink = React.createRef();\n        this.listLink = React.createRef();\n        this.emailSendWorkout = React.createRef();\n        this.saveWorkout = React.createRef();\n        this.round = React.createRef();\n        this.settings = React.createRef();\n        this.params = UI.QueryParamsWorkoutView.createCopy(props);\n    }\n    getDominantUnit(params) {\n        try {\n            let workout_builder = params.createWorkoutBuilder();\n            return workout_builder != null ? visitor_1.DominantUnitVisitor.computeIntensity(workout_builder.getInterval()) : null;\n        }\n        catch (Error) {\n            return Core.IntensityUnit.Unknown;\n        }\n    }\n    _onWorkoutInputChanged(sportType, outputUnit, workout_title, workout_text) {\n        this.params.sport_type.value = sportType.toString();\n        this.params.output_unit.value = outputUnit.toString();\n        this.params.workout_text.value = workout_text;\n        this.params.workout_title.value = workout_title;\n        let dominant_unit = this.getDominantUnit(this.params);\n        if (dominant_unit != null &&\n            dominant_unit != Core.IntensityUnit.Unknown &&\n            dominant_unit != Core.IntensityUnit.IF) {\n            this.input.current?.setOutputUnit(dominant_unit);\n        }\n        this.refresh();\n    }\n    _onUserSettingsChanged(ftp, t_pace, swim_css, swim_ftp, email, efficiency_factor) {\n        if (!isNaN(ftp)) {\n            this.params.ftp_watts.value = ftp.toString();\n        }\n        this.params.t_pace.value = t_pace;\n        this.params.swim_css.value = swim_css;\n        this.params.swim_ftp.value = swim_ftp;\n        this.params.email.value = email;\n        this.params.efficiency_factor.value = efficiency_factor;\n        this.refresh();\n    }\n    componentDidMount() {\n        this.refreshUrls();\n    }\n    refresh() {\n        this.view.current?.refresh(this.params);\n        this.refreshUrls();\n        this.params.saveToStorage();\n    }\n    refreshUrls() {\n        let params = UI.QueryParamsWorkoutView.createCopy(this.params);\n        window.history.pushState('Object', 'Title', this.params.getURL());\n        params.page.value = \"player\";\n        this._setHref(this.playerLink, params.getURL());\n        params.page.value = \"list\";\n        this._setHref(this.listLink, params.getURL());\n    }\n    _setHref(element_ref, url) {\n        if (element_ref.current) {\n            element_ref.current.href = url;\n        }\n    }\n    _setVisibility(element_ref, visible) {\n        if (element_ref.current) {\n            element_ref.current.hidden = !visible;\n        }\n    }\n    _onEmailWorkout() {\n        var req = new XMLHttpRequest();\n        req.addEventListener(\"load\", this._onEmailSent.bind(this, req));\n        req.open(\"GET\", \"send_mail\" + this.params.getURL());\n        req.send();\n    }\n    _onEmailSent(req) {\n        if (req.status == 200) {\n            alert(\"Email sent\");\n        }\n        else {\n            alert(\"Error while sending email\");\n            console.log(req.responseText);\n        }\n    }\n    _onSaveWorkout() {\n        var req = new XMLHttpRequest();\n        req.addEventListener(\"load\", this._onWorkoutSaved.bind(this, req));\n        req.open(\"GET\", \"save_workout\" + this.params.getURL());\n        req.send();\n    }\n    _onWorkoutSaved(req) {\n        if (req.status == 200) {\n            alert(\"Workout saved\");\n        }\n        else {\n            alert(\"Error while saving workouts\");\n            console.log(req.responseText);\n        }\n    }\n    _onClickLink() {\n        let builder = this.params.createWorkoutBuilder();\n        {\n            let fileName = builder.getMRCFileName();\n            let content = builder.getMRCFile();\n            this._downloadFile(fileName, content);\n        }\n        {\n            let fileName = builder.getZWOFileName();\n            let content = builder.getZWOFile();\n            this._downloadFile(fileName, content);\n        }\n        {\n            let fileName = builder.getPPSMRXFileName();\n            let content = builder.getPPSMRXFile();\n            this._downloadFile(fileName, content);\n        }\n    }\n    _shouldRound() {\n        return this.round.current?.checked || false;\n    }\n    _onCheckedChanged() {\n        this.params.should_round.value = \"\" + this._shouldRound();\n        this.refresh();\n    }\n    _downloadFile(fileName, content) {\n        let uriContent = \"data:application/octet-stream,\" + encodeURIComponent(content);\n        var link = document.createElement('a');\n        link.download = fileName;\n        link.href = uriContent;\n        link.click();\n    }\n    _onPrettyPrint() {\n        let builder = this.params.createWorkoutBuilder();\n        this.input.current?.setWorkoutText(builder.getNormalizedWorkoutDefinition());\n    }\n    render() {\n        return (React.createElement(\"div\", null,\n            React.createElement(user_settings_1.default, { ...this.props, ref: this.settings, onChange: (f, t, c, sf, e, ef) => this._onUserSettingsChanged(f, t, c, sf, e, ef) }),\n            React.createElement(workout_input_1.default, { ...this.props, ref: this.input, onChange: (s, o, t, w) => this._onWorkoutInputChanged(s, o, t, w) }),\n            React.createElement(\"table\", null,\n                React.createElement(\"tbody\", null,\n                    React.createElement(\"tr\", null,\n                        React.createElement(\"td\", null,\n                            React.createElement(\"a\", { href: \"#\", onClick: (e) => this._onClickLink() }, \"Download Files\")),\n                        React.createElement(\"td\", null,\n                            React.createElement(\"a\", { ref: this.playerLink }, \"Player\")),\n                        React.createElement(\"td\", null,\n                            React.createElement(\"a\", { href: \"#\", onClick: (e) => this._onPrettyPrint() }, \"Pretty print\")),\n                        React.createElement(\"td\", null,\n                            React.createElement(\"a\", { ref: this.emailSendWorkout, href: \"#\", onClick: (e) => this._onEmailWorkout() }, \"Email Workout\")),\n                        React.createElement(\"td\", null,\n                            React.createElement(\"a\", { ref: this.saveWorkout, href: \"#\", onClick: (e) => this._onSaveWorkout() }, \"Save Workout\")),\n                        React.createElement(\"td\", null,\n                            React.createElement(\"a\", { ref: this.listLink }, \"List Workouts\"))))),\n            React.createElement(\"input\", { type: \"checkbox\", ref: this.round, onChange: this._onCheckedChanged.bind(this) }),\n            \"Round intensities \",\n            React.createElement(\"br\", null),\n            React.createElement(workout_view_1.default, { ...this.props, ref: this.view })));\n    }\n}\nexports[\"default\"] = Workout;\n\n\n//# sourceURL=webpack://workout_planner/./src/app/workout.tsx?\n}");

/***/ }),

/***/ "./src/app/workout_input.tsx":
/*!***********************************!*\
  !*** ./src/app/workout_input.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst Core = __webpack_require__(/*! ../core */ \"./src/core.ts\");\nconst UI = __webpack_require__(/*! ../ui */ \"./src/ui.ts\");\nconst select_1 = __webpack_require__(/*! ./select */ \"./src/app/select.tsx\");\nconst select_option_1 = __webpack_require__(/*! ./select_option */ \"./src/app/select_option.tsx\");\nclass WorkoutInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.sportTypeRef = React.createRef();\n        this.unitRef = React.createRef();\n        this.workoutTitleRef = React.createRef();\n        this.workoutTextRef = React.createRef();\n        this.wattsRef = React.createRef();\n        this.minmiRef = React.createRef();\n        this.mihRef = React.createRef();\n        this.minkmRef = React.createRef();\n        this.kmhRef = React.createRef();\n        this.ifRef = React.createRef();\n        this.yardsRef = React.createRef();\n        this.metersRef = React.createRef();\n        this.hrRef = React.createRef();\n        this.per400mRef = React.createRef();\n        let params = UI.QueryParamsWorkoutView.createCopy(props);\n        this.sport_type = parseInt(params.sport_type.value);\n        this.output_unit = parseInt(params.output_unit.value);\n        this.workout_title = params.workout_title.value;\n        this.workout_text = params.workout_text.value;\n    }\n    getSportType() {\n        return parseInt(this.sportTypeRef.current?.getSelectedValue() || '0');\n    }\n    getUnitType() {\n        return parseInt(this.unitRef.current?.getSelectedValue() || '0');\n    }\n    setOutputUnit(unit) {\n        this.unitRef.current?.setSelectedValue(unit.toString());\n    }\n    getWorkoutText() {\n        return this.workoutTextRef.current?.value || '';\n    }\n    setWorkoutText(v) {\n        if (this.workoutTextRef.current) {\n            this.workoutTextRef.current.value = v;\n        }\n    }\n    getWorkoutTitle() {\n        return this.workoutTitleRef.current?.value || '';\n    }\n    _onSportTypeChange(sport_type_str) {\n        this._enableCompatibleOutputUnits(sport_type_str);\n        this._loadWorkout();\n    }\n    _enableCompatibleOutputUnits(sportType) {\n        if (sportType == null || sportType.trim() == \"\") {\n            return;\n        }\n        var sportTypeEnum = parseInt(sportType);\n        if (sportTypeEnum == Core.SportType.Run) {\n            this.unitRef.current?.setSelectedValue(Core.IntensityUnit.MinMi.toString());\n        }\n        else if (sportTypeEnum == Core.SportType.Bike) {\n            this.unitRef.current?.setSelectedValue(Core.IntensityUnit.Watts.toString());\n        }\n        else if (sportTypeEnum == Core.SportType.Swim) {\n            this.unitRef.current?.setSelectedValue(Core.IntensityUnit.Per100Yards.toString());\n        }\n        else {\n            console.assert(sportTypeEnum == Core.SportType.Other);\n            this.unitRef.current?.setSelectedValue(Core.IntensityUnit.IF.toString());\n        }\n        this.yardsRef.current?.setEnabled(false);\n        this.metersRef.current?.setEnabled(false);\n        this.wattsRef.current?.setEnabled(false);\n        this.ifRef.current?.setEnabled(false);\n        this.hrRef.current?.setEnabled(false);\n        this.minmiRef.current?.setEnabled(false);\n        this.mihRef.current?.setEnabled(false);\n        this.minkmRef.current?.setEnabled(false);\n        this.kmhRef.current?.setEnabled(false);\n        this.per400mRef.current?.setEnabled(false);\n        if (sportTypeEnum === Core.SportType.Swim) {\n            this.wattsRef.current?.setEnabled(true);\n            this.yardsRef.current?.setEnabled(true);\n            this.metersRef.current?.setEnabled(true);\n        }\n        else if (sportTypeEnum === Core.SportType.Bike) {\n            this.wattsRef.current?.setEnabled(true);\n            this.ifRef.current?.setEnabled(true);\n            this.hrRef.current?.setEnabled(true);\n        }\n        else if (sportTypeEnum === Core.SportType.Run) {\n            this.minmiRef.current?.setEnabled(true);\n            this.mihRef.current?.setEnabled(true);\n            this.minkmRef.current?.setEnabled(true);\n            this.kmhRef.current?.setEnabled(true);\n            this.hrRef.current?.setEnabled(true);\n            this.per400mRef.current?.setEnabled(true);\n        }\n        else if (sportTypeEnum === Core.SportType.Other) {\n            this.ifRef.current?.setEnabled(true);\n            this.hrRef.current?.setEnabled(true);\n        }\n    }\n    _onUnitChanged() {\n        this._loadWorkout();\n    }\n    _onWorkoutTextChange() {\n        this._loadWorkout();\n    }\n    _onWorkoutTitleChange(e) {\n        this._loadWorkout();\n    }\n    _loadWorkout() {\n        if (this.props.onChange) {\n            this.props.onChange(this.getSportType(), this.getUnitType(), this.getWorkoutTitle(), this.getWorkoutText());\n        }\n    }\n    componentDidMount() {\n        this._enableCompatibleOutputUnits(this.props.sport_type);\n    }\n    render() {\n        return (React.createElement(\"div\", null,\n            React.createElement(\"h1\", null, \" Workout Settings \"),\n            React.createElement(\"form\", null,\n                \"Title: \",\n                React.createElement(\"input\", { ref: this.workoutTitleRef, defaultValue: this.workout_title, onChange: e => this._onWorkoutTitleChange(e) }),\n                React.createElement(\"br\", null),\n                \"Sport type:\",\n                React.createElement(select_1.default, { ref: this.sportTypeRef, defaultValue: this.sport_type, onChange: e => this._onSportTypeChange(e) },\n                    React.createElement(select_option_1.default, { value: Core.SportType.Swim }, \"Swim\"),\n                    React.createElement(select_option_1.default, { value: Core.SportType.Bike }, \"Bike\"),\n                    React.createElement(select_option_1.default, { value: Core.SportType.Run }, \"Run\"),\n                    React.createElement(select_option_1.default, { value: Core.SportType.Other }, \"Other\")),\n                React.createElement(\"br\", null),\n                \"Unit:\",\n                React.createElement(select_1.default, { ref: this.unitRef, defaultValue: this.output_unit, onChange: e => this._onUnitChanged() },\n                    React.createElement(select_option_1.default, { ref: this.wattsRef, value: Core.IntensityUnit.Watts }, \"Watts\"),\n                    React.createElement(select_option_1.default, { ref: this.minmiRef, value: Core.IntensityUnit.MinMi }, \"min/mi\"),\n                    React.createElement(select_option_1.default, { ref: this.mihRef, value: Core.IntensityUnit.Mph }, \"mi/h\"),\n                    React.createElement(select_option_1.default, { ref: this.minkmRef, value: Core.IntensityUnit.MinKm }, \"min/km\"),\n                    React.createElement(select_option_1.default, { ref: this.kmhRef, value: Core.IntensityUnit.Kmh }, \"km/h\"),\n                    React.createElement(select_option_1.default, { ref: this.ifRef, value: Core.IntensityUnit.IF }, \"IF\"),\n                    React.createElement(select_option_1.default, { ref: this.yardsRef, value: Core.IntensityUnit.Per100Yards }, \"/100yards\"),\n                    React.createElement(select_option_1.default, { ref: this.metersRef, value: Core.IntensityUnit.Per100Meters }, \"/100m\"),\n                    React.createElement(select_option_1.default, { ref: this.hrRef, value: Core.IntensityUnit.HeartRate }, \"Heart rate\"),\n                    React.createElement(select_option_1.default, { ref: this.per400mRef, value: Core.IntensityUnit.Per400Meters }, \"/400m\")),\n                React.createElement(\"br\", null),\n                React.createElement(\"textarea\", { ref: this.workoutTextRef, defaultValue: this.workout_text, style: { height: \"200px\", width: \"100%\" }, onChange: e => this._onWorkoutTextChange() }),\n                React.createElement(\"br\", null))));\n    }\n}\nexports[\"default\"] = WorkoutInput;\n\n\n//# sourceURL=webpack://workout_planner/./src/app/workout_input.tsx?\n}");

/***/ }),

/***/ "./src/app/workout_view.tsx":
/*!**********************************!*\
  !*** ./src/app/workout_view.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst UI = __webpack_require__(/*! ../ui */ \"./src/ui.ts\");\nconst Core = __webpack_require__(/*! ../core */ \"./src/core.ts\");\nconst Visitor = __webpack_require__(/*! ../visitor */ \"./src/visitor.ts\");\nclass WorkoutView extends React.Component {\n    constructor(params) {\n        super(params);\n        this.state = this.getState(UI.QueryParamsWorkoutView.createCopy(params));\n    }\n    getTimeInZones(sportType, intervals) {\n        var zv = new Visitor.ZonesVisitor(sportType);\n        Visitor.VisitorHelper.visitAndFinalize(zv, intervals);\n        return zv.getTimeInZones();\n    }\n    getTimeSeries(intervals) {\n        var pv = new Visitor.DataPointVisitor();\n        Visitor.VisitorHelper.visitAndFinalize(pv, intervals);\n        var list = pv.data.map(function (item) {\n            let duration = item.x;\n            let intensity = item.y;\n            let y = intensity.getValue();\n            if (Core.Intensity.equals(intensity, Core.Intensity.ZeroIntensity)) {\n                y = 0.4;\n            }\n            return {\n                x: duration.getSeconds() / 60,\n                y: Math.round(y * 100),\n                tag: item.tag\n            };\n        });\n        var tagToPoints = {};\n        var lastItemTag = null;\n        for (let i = 0; i < list.length; ++i) {\n            let item = list[i];\n            if (tagToPoints[item.tag] == null) {\n                tagToPoints[item.tag] = [];\n            }\n            if (lastItemTag != null) {\n                if (item.tag != lastItemTag) {\n                    tagToPoints[lastItemTag].push({ x: item.x, y: 0 });\n                    tagToPoints[item.tag].push({ x: item.x, y: 0 });\n                }\n            }\n            tagToPoints[item.tag].push(item);\n            lastItemTag = item.tag;\n        }\n        return tagToPoints;\n    }\n    getState(params) {\n        try {\n            var builder = params.createWorkoutBuilder();\n            var time_in_zones_data = this.getTimeInZones(builder.getSportType(), builder.getInterval()).map(function (zone) {\n                return {\n                    y: zone.duration.getSeconds(),\n                    legendText: zone.name + \"(\" + zone.duration.toString() + \")\",\n                    indexLabel: zone.name\n                };\n            });\n            var workout_steps = builder.getInterval().getIntervals().map(function (value, index) {\n                return builder.getIntervalPretty(value, params.should_round.value == \"true\");\n            }.bind(this));\n            var avg_pace = builder.getSportType() == Core.SportType.Run ?\n                builder.getAveragePace() : \"\";\n            return ({\n                tss_from_if: builder.getTSS(),\n                time: builder.getTimePretty(),\n                intensity: builder.getIF(),\n                avg_power: builder.getAveragePower(),\n                distance: builder.getEstimatedDistancePretty(),\n                avg_pace: avg_pace,\n                sport_type: builder.getSportType(),\n                time_series_data: this.getTimeSeries(builder.getInterval()),\n                time_in_zones_data: time_in_zones_data,\n                workout_steps: workout_steps,\n                workout_pretty: builder.getPrettyPrint(),\n                workout_text: builder.getWorkoutDefinition(),\n            });\n        }\n        catch (err) {\n            console.log(\"error in workout_view.getState():\" + err.message);\n            return ({\n                tss: 0,\n                tss_from_if: 0,\n                time: \"\",\n                intensity: 0,\n                avg_power: 0,\n                distance: \"\",\n                avg_pace: \"\",\n                sport_type: Core.SportType.Bike,\n                time_series_data: [],\n                time_in_zones_data: [],\n                workout_steps: [],\n                workout_pretty: \"\",\n                workout_text: \"\",\n            });\n        }\n    }\n    refresh(params) {\n        var new_state = this.getState(params);\n        this.setState(new_state);\n        this.renderCharts(new_state);\n    }\n    renderPower() {\n        if (this.state.sport_type == Core.SportType.Bike) {\n            return (React.createElement(\"tr\", null,\n                React.createElement(\"td\", null, \"Average Power\"),\n                React.createElement(\"td\", null, this.state.avg_power)));\n        }\n        else {\n            return null;\n        }\n    }\n    renderDistance() {\n        return (React.createElement(\"tr\", null,\n            React.createElement(\"td\", null, \"Distance\"),\n            React.createElement(\"td\", null, this.state.distance)));\n    }\n    renderPace() {\n        if (this.state.sport_type == Core.SportType.Run) {\n            return (React.createElement(\"tr\", null,\n                React.createElement(\"td\", null, \"Pace\"),\n                React.createElement(\"td\", null, this.state.avg_pace)));\n        }\n        else {\n            return null;\n        }\n    }\n    renderWorkoutSteps() {\n        return this.state.workout_steps.map(function (step, index) {\n            return React.createElement(\"li\", { key: index }, step);\n        }.bind(this));\n    }\n    componentDidMount() {\n        this.renderCharts(this.state);\n        document.getElementById(\"id_clipboard\").addEventListener('click', function () {\n            UI.ClipboardHelper.copyText(this.state.workout_pretty);\n        }.bind(this));\n    }\n    getChartData(state) {\n        var result = [];\n        for (let key in state.time_series_data) {\n            result.push({\n                type: \"area\",\n                fillOpacity: 0.3,\n                markerType: \"none\",\n                bevelEnabled: true,\n                dataPoints: state.time_series_data[key]\n            });\n        }\n        return result;\n    }\n    renderCharts(state) {\n        if (state.time_series_data.length != 0) {\n            var chartTimeline = new CanvasJS.Chart(\"chartTimeline\", {\n                title: {\n                    text: \"\"\n                },\n                axisX: {\n                    title: \"time\",\n                    suffix: \"min\",\n                    gridColor: \"lightgray\",\n                    gridThickness: 1,\n                },\n                axisY: {\n                    title: \"intensity\",\n                    labelAngle: 45,\n                    minimum: 30,\n                    suffix: \"%\",\n                    gridThickness: 0,\n                },\n                data: this.getChartData(state)\n            });\n            chartTimeline.render();\n        }\n        if (state.time_in_zones_data.length != 0) {\n            var chartZones = new CanvasJS.Chart(\"chartZones\", {\n                title: {\n                    text: \"Time in zones\"\n                },\n                data: [{\n                        type: \"pie\",\n                        showInLegend: true,\n                        dataPoints: state.time_in_zones_data\n                    }]\n            });\n            chartZones.render();\n        }\n    }\n    render() {\n        return (React.createElement(\"div\", null,\n            React.createElement(\"h2\", null, \"Steps\"),\n            React.createElement(\"ul\", null, this.renderWorkoutSteps()),\n            React.createElement(\"h2\", null, \"Summary\"),\n            React.createElement(\"button\", { id: \"id_clipboard\" }, \"Copy to clipboard\"),\n            React.createElement(\"table\", null,\n                React.createElement(\"tbody\", null,\n                    React.createElement(\"tr\", null,\n                        React.createElement(\"td\", null,\n                            React.createElement(\"b\", null, \"Metric\")),\n                        React.createElement(\"td\", null,\n                            React.createElement(\"b\", null, \"Value\"))),\n                    React.createElement(\"tr\", null,\n                        React.createElement(\"td\", null, \"TSS\\u00AE\"),\n                        React.createElement(\"td\", null, this.state.tss_from_if)),\n                    React.createElement(\"tr\", null,\n                        React.createElement(\"td\", null, \"Time\"),\n                        React.createElement(\"td\", null, this.state.time)),\n                    React.createElement(\"tr\", null,\n                        React.createElement(\"td\", null, \"IF\"),\n                        React.createElement(\"td\", null, this.state.intensity)),\n                    this.renderPower(),\n                    this.renderDistance(),\n                    this.renderPace())),\n            React.createElement(\"div\", { id: \"chartTimeline\", style: { height: \"300px\", width: \"100%\" } }),\n            React.createElement(\"div\", { id: \"chartZones\", style: { height: \"200px\", width: \"100%\" } })));\n    }\n}\nexports[\"default\"] = WorkoutView;\n\n\n//# sourceURL=webpack://workout_planner/./src/app/workout_view.tsx?\n}");

/***/ }),

/***/ "./src/app/workout_views.tsx":
/*!***********************************!*\
  !*** ./src/app/workout_views.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst fixed_data_table_2_1 = __webpack_require__(/*! fixed-data-table-2 */ \"./node_modules/fixed-data-table-2/dist/es/fixed-data-table-2.js\");\nconst select_1 = __webpack_require__(/*! ./select */ \"./src/app/select.tsx\");\nconst select_option_1 = __webpack_require__(/*! ./select_option */ \"./src/app/select_option.tsx\");\nconst UI = __webpack_require__(/*! ../ui */ \"./src/ui.ts\");\nconst Core = __webpack_require__(/*! ../core */ \"./src/core.ts\");\nclass TitleCell extends React.Component {\n    render() {\n        var title = this.props.data[this.props.rowIndex][this.props.field];\n        var link = this.props.data[this.props.rowIndex][this.props.link];\n        return (React.createElement(fixed_data_table_2_1.Cell, { ...this.props },\n            React.createElement(\"a\", { href: link }, title)));\n    }\n}\nclass SportTypeCell extends React.Component {\n    render() {\n        let sportType = this.props.data[this.props.rowIndex][this.props.field];\n        let sportTypeString = UI.SportTypeHelper.convertToString(sportType);\n        return (React.createElement(fixed_data_table_2_1.Cell, { ...this.props }, sportTypeString));\n    }\n}\nclass TagsCell extends React.Component {\n    render() {\n        var tags = this.props.data[this.props.rowIndex][this.props.field];\n        var tags_string = \"\";\n        var prefix = \"\";\n        tags.forEach((v) => {\n            tags_string += prefix + v;\n            prefix = \", \";\n        });\n        return (React.createElement(fixed_data_table_2_1.Cell, { ...this.props }, tags_string));\n    }\n}\nclass DurationCell extends React.Component {\n    render() {\n        let duration_sec = this.props.data[this.props.rowIndex][this.props.field];\n        let duration = new Core.Duration(Core.TimeUnit.Seconds, duration_sec, duration_sec, 0);\n        let time_component = duration.getTimeComponents();\n        let format_str = \"\";\n        if (time_component.hours > 0) {\n            format_str = Core.MyMath.round10(time_component.hours + time_component.minutes / 60.0, -1) + \"hr\";\n        }\n        else {\n            format_str = time_component.minutes + \"min\";\n        }\n        return (React.createElement(fixed_data_table_2_1.Cell, { ...this.props }, format_str));\n    }\n}\nclass WorkoutViews extends React.Component {\n    constructor(params) {\n        super(params);\n        this.sportTypeRef = React.createRef();\n        this.textRef = React.createRef();\n        this.tblRef = React.createRef();\n        this._rows = [];\n        this._global_tags = new Set();\n        this.state = {\n            filteredRows: this._rows,\n        };\n        this._params = new UI.QueryParamsList();\n    }\n    componentDidMount() {\n        this._fetchWorkouts();\n    }\n    _fetchWorkouts() {\n        var url = \"workouts\";\n        var req = new XMLHttpRequest();\n        req.addEventListener(\"load\", this._onWorkoutsLoaded.bind(this, req));\n        req.open(\"GET\", url);\n        req.send();\n    }\n    _onWorkoutsLoaded(req) {\n        if (req.status == 200) {\n            var rows = JSON.parse(req.responseText);\n            for (let i = 0; i < rows.length; i++) {\n                let params = new UI.QueryParamsWorkoutView();\n                params.workout_text.value = rows[i].value;\n                params.workout_title.value = rows[i].title;\n                params.sport_type.value = rows[i].sport_type.toString();\n                params.page.value = \"wv\";\n                let tags_array = rows[i].tags.split(\",\").map(x => x.trim());\n                for (let j = 0; j < tags_array.length; j++) {\n                    if (tags_array[j].length > 0) {\n                        this._global_tags.add(tags_array[j]);\n                    }\n                }\n                rows[i].tags = new Set(tags_array);\n                rows[i].link = params.getURL();\n            }\n            this._rows = rows;\n            this._filterData();\n            this.forceUpdate();\n        }\n        else {\n            alert(\"Error while fetching workouts\");\n        }\n    }\n    _onSportTypeChange(sportTypeStr) {\n        this._filterData();\n    }\n    _onTextFilterChange(e) {\n        this._filterData();\n    }\n    _filterData() {\n        var sportTypeEnum = parseInt(this.sportTypeRef.current?.getSelectedValue() || '0');\n        var filterText = this.textRef.current?.value || '';\n        var filteredRows = [];\n        var shouldIncludeInResult;\n        if (filterText.length == 0) {\n            shouldIncludeInResult = () => { return true; };\n        }\n        else if (this._global_tags.has(filterText)) {\n            shouldIncludeInResult = (row) => {\n                return row.tags.has(filterText.toLowerCase());\n            };\n        }\n        else {\n            shouldIncludeInResult = (row) => {\n                return row.title.toLowerCase().indexOf(filterText.toLowerCase()) >= 0;\n            };\n        }\n        for (let i = 0; i < this._rows.length; i++) {\n            var row = this._rows[i];\n            if ((sportTypeEnum == Core.SportType.Unknown || row.sport_type == sportTypeEnum)\n                && shouldIncludeInResult(row)) {\n                filteredRows.push(row);\n            }\n        }\n        this._params.sport_type.value = sportTypeEnum.toString();\n        this._params.title.value = filterText;\n        this._params.pushToHistory();\n        this.setState({ filteredRows: filteredRows });\n    }\n    render() {\n        var { filteredRows } = this.state;\n        return (React.createElement(\"div\", null,\n            \"Workouts\",\n            React.createElement(select_1.default, { ref: this.sportTypeRef, defaultValue: this.props.sport_type, onChange: e => this._onSportTypeChange(e) },\n                React.createElement(select_option_1.default, { value: Core.SportType.Unknown }, \"All\"),\n                React.createElement(select_option_1.default, { value: Core.SportType.Swim }, \"Swim\"),\n                React.createElement(select_option_1.default, { value: Core.SportType.Bike }, \"Bike\"),\n                React.createElement(select_option_1.default, { value: Core.SportType.Run }, \"Run\"),\n                React.createElement(select_option_1.default, { value: Core.SportType.Other }, \"Other\")),\n            \" \",\n            React.createElement(\"br\", null),\n            \"Filter: \",\n            React.createElement(\"input\", { ref: this.textRef, value: this._params.title.value, onChange: e => this._onTextFilterChange(e) }),\n            React.createElement(fixed_data_table_2_1.Table, { ref: this.tblRef, rowsCount: filteredRows.length, rowHeight: 50, headerHeight: 50, width: 900, height: 800 },\n                React.createElement(fixed_data_table_2_1.Column, { header: React.createElement(fixed_data_table_2_1.Cell, null, \"Type\"), cell: React.createElement(SportTypeCell, { data: filteredRows, field: \"sport_type\" }, \" \"), width: 60 }),\n                React.createElement(fixed_data_table_2_1.Column, { header: React.createElement(fixed_data_table_2_1.Cell, null, \"Title\"), cell: React.createElement(TitleCell, { data: filteredRows, field: \"title\", link: \"link\" }, \" \"), width: 300 }),\n                React.createElement(fixed_data_table_2_1.Column, { header: React.createElement(fixed_data_table_2_1.Cell, null, \"Duration\"), cell: React.createElement(DurationCell, { data: filteredRows, field: \"duration_sec\" }, \" \"), width: 80 }),\n                React.createElement(fixed_data_table_2_1.Column, { header: React.createElement(fixed_data_table_2_1.Cell, null, \"Tags\"), cell: React.createElement(TagsCell, { data: filteredRows, field: \"tags\" }, \" \"), width: 200 }))));\n    }\n}\nexports[\"default\"] = WorkoutViews;\n\n\n//# sourceURL=webpack://workout_planner/./src/app/workout_views.tsx?\n}");

/***/ }),

/***/ "./src/builder.ts":
/*!************************!*\
  !*** ./src/builder.ts ***!
  \************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WorkoutBuilder = void 0;\nconst Parser = __webpack_require__(/*! ./parser */ \"./src/parser.ts\");\nconst Visitor = __webpack_require__(/*! ./visitor */ \"./src/visitor.ts\");\nconst Core = __webpack_require__(/*! ./core */ \"./src/core.ts\");\nconst User = __webpack_require__(/*! ./user */ \"./src/user.ts\");\nconst PreProcessor = __webpack_require__(/*! ./preprocessor */ \"./src/preprocessor.ts\");\nclass WorkoutBuilder {\n    constructor(userProfile, sportType, outputUnit) {\n        Core.PreconditionsCheck.assertIsNumber(sportType, \"sportType\");\n        Core.PreconditionsCheck.assertIsNumber(outputUnit, \"outputUnit\");\n        this.userProfile = userProfile;\n        this.sportType = sportType;\n        this.outputUnit = outputUnit;\n    }\n    getInterval() {\n        return this.intervals;\n    }\n    getSportType() {\n        return this.sportType;\n    }\n    getWorkoutTitle() {\n        return this.workoutTitle;\n    }\n    getWorkoutDefinition() {\n        return this.workoutDefinition;\n    }\n    getNormalizedWorkoutDefinition() {\n        let object_factory = new User.ObjectFactory(this.userProfile, this.sportType);\n        return Parser.IntervalParser.normalize(object_factory, this.workoutDefinition);\n    }\n    withDefinition(workoutTitle, workoutDefinition) {\n        let object_factory = new User.ObjectFactory(this.userProfile, this.sportType);\n        {\n            let is_indoor = this.getSportType() == Core.SportType.Swim && this.outputUnit == Core.IntensityUnit.Watts;\n            let wp = new PreProcessor.TextPreprocessor(new PreProcessor.TextPreprocessorContext(this.getSportType(), is_indoor));\n            workoutDefinition = wp.process(workoutDefinition);\n        }\n        this.intervals = Parser.IntervalParser.parse(object_factory, workoutDefinition);\n        this.workoutTitle = workoutTitle;\n        this.workoutDefinition = workoutDefinition;\n        return this;\n    }\n    getIntensityFriendly(intensity, roundValues) {\n        var f = new Visitor.WorkoutTextVisitor(this.userProfile, this.sportType, this.outputUnit, roundValues);\n        return f.getIntensityPretty(intensity);\n    }\n    getTSS() {\n        return Visitor.TSSCalculator.compute(this.intervals);\n    }\n    getTimePretty() {\n        return this.intervals.getTotalDuration().toTimeStringLong();\n    }\n    getIF() {\n        return Core.MyMath.round10(this.intervals.getIntensity().getValue() * 100, -1);\n    }\n    getAveragePower() {\n        return Core.MyMath.round10(this.userProfile.bike_ftp * this.intervals.getIntensity().getValue(), -1);\n    }\n    getIntervalPretty(interval, roundValues) {\n        return Visitor.WorkoutTextVisitor.getIntervalTitle(interval, this.userProfile, this.sportType, this.outputUnit, roundValues);\n    }\n    getEstimatedDistancePretty() {\n        if (this.sportType == Core.SportType.Swim) {\n            return this.intervals.getWorkDuration().toStringDistance(Core.DistanceUnit.Yards);\n        }\n        else {\n            return this.intervals.getWorkDuration().toStringDistance(Core.DistanceUnit.Miles);\n        }\n    }\n    getAveragePace() {\n        var minMi = this.userProfile.getRunningPaceMinMi(this.intervals.getIntensity());\n        let outputUnit = this.outputUnit;\n        if (outputUnit == Core.IntensityUnit.HeartRate) {\n            outputUnit = Core.IntensityUnit.MinMi;\n        }\n        var outputValue = Core.IntensityUnitHelper.convertTo(minMi, Core.IntensityUnit.MinMi, outputUnit);\n        if (outputUnit == Core.IntensityUnit.Kmh || outputUnit == Core.IntensityUnit.Mph) {\n            return Core.MyMath.round10(outputValue, -1) + Core.IntensityUnitHelper.toString(outputUnit);\n        }\n        else {\n            return Core.FormatterHelper.formatNumber(outputValue, 60, \":\", Core.IntensityUnitHelper.toString(outputUnit));\n        }\n    }\n    getStepsList(new_line) {\n        var result = \"\";\n        this.intervals.getIntervals().forEach(function (interval) {\n            result += (\"* \" + this.getIntervalPretty(interval) + new_line);\n        }.bind(this));\n        return result;\n    }\n    getDistanceInMiles() {\n        var result = 0;\n        this.intervals.getIntervals().forEach(function (interval) {\n            if (interval.getWorkDuration().getDistanceInMiles() > 0) {\n                result += interval.getWorkDuration().getDistanceInMiles();\n            }\n        }.bind(this));\n        return result;\n    }\n    getPrettyPrint(new_line = \"\\n\") {\n        let workout_text = this.getStepsList(new_line);\n        var result = workout_text;\n        result += new_line;\n        result += new_line;\n        return result;\n    }\n    getMRCFile() {\n        let wfg = new Visitor.WorkoutFileGenerator(this.workoutTitle, this.intervals);\n        return wfg.getMRCFile();\n    }\n    getZWOFile() {\n        let wfg = new Visitor.WorkoutFileGenerator(this.workoutTitle, this.intervals);\n        return wfg.getZWOFile();\n    }\n    getPPSMRXFile() {\n        let wfg = new Visitor.WorkoutFileGenerator(this.workoutTitle, this.intervals);\n        return wfg.getPPSMRXFile();\n    }\n    getZWOFileName() {\n        let wfg = new Visitor.WorkoutFileGenerator(this.workoutTitle, this.intervals);\n        return wfg.getZWOFileName();\n    }\n    getMRCFileName() {\n        let wfg = new Visitor.WorkoutFileGenerator(this.workoutTitle, this.intervals);\n        return wfg.getMRCFileName();\n    }\n    getPPSMRXFileName() {\n        let wfg = new Visitor.WorkoutFileGenerator(this.workoutTitle, this.intervals);\n        return wfg.getPPSMRXFileName();\n    }\n}\nexports.WorkoutBuilder = WorkoutBuilder;\n;\n\n\n//# sourceURL=webpack://workout_planner/./src/builder.ts?\n}");

/***/ }),

/***/ "./src/core.ts":
/*!*********************!*\
  !*** ./src/core.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeedParser = exports.MyMath = exports.FormatterHelper = exports.TimeUnitHelper = exports.IntensityUnitHelper = exports.DistanceUnitHelper = exports.RampBuildInterval = exports.SimpleInterval = exports.CommentInterval = exports.RepeatInterval = exports.ArrayInterval = exports.BaseInterval = exports.Intensity = exports.Duration = exports.DurationUnitHelper = exports.PreconditionsCheck = exports.IntensityUnit = exports.TimeUnit = exports.DistanceUnit = exports.SportType = void 0;\nexports.stringFormat = stringFormat;\nvar SportType;\n(function (SportType) {\n    SportType[SportType[\"Unknown\"] = -1] = \"Unknown\";\n    SportType[SportType[\"Swim\"] = 0] = \"Swim\";\n    SportType[SportType[\"Bike\"] = 1] = \"Bike\";\n    SportType[SportType[\"Run\"] = 2] = \"Run\";\n    SportType[SportType[\"Other\"] = 3] = \"Other\";\n})(SportType || (exports.SportType = SportType = {}));\nconst MIN_TIME = 11;\nconst MAX_DISTANCE = 10;\nvar DistanceUnit;\n(function (DistanceUnit) {\n    DistanceUnit[DistanceUnit[\"Unknown\"] = 0] = \"Unknown\";\n    DistanceUnit[DistanceUnit[\"Miles\"] = 1] = \"Miles\";\n    DistanceUnit[DistanceUnit[\"Kilometers\"] = 2] = \"Kilometers\";\n    DistanceUnit[DistanceUnit[\"Meters\"] = 3] = \"Meters\";\n    DistanceUnit[DistanceUnit[\"Yards\"] = 4] = \"Yards\";\n})(DistanceUnit || (exports.DistanceUnit = DistanceUnit = {}));\nvar TimeUnit;\n(function (TimeUnit) {\n    TimeUnit[TimeUnit[\"Unknown\"] = 11] = \"Unknown\";\n    TimeUnit[TimeUnit[\"Seconds\"] = 12] = \"Seconds\";\n    TimeUnit[TimeUnit[\"Minutes\"] = 13] = \"Minutes\";\n    TimeUnit[TimeUnit[\"Hours\"] = 14] = \"Hours\";\n})(TimeUnit || (exports.TimeUnit = TimeUnit = {}));\nvar IntensityUnit;\n(function (IntensityUnit) {\n    IntensityUnit[IntensityUnit[\"Unknown\"] = -1] = \"Unknown\";\n    IntensityUnit[IntensityUnit[\"IF\"] = 0] = \"IF\";\n    IntensityUnit[IntensityUnit[\"Watts\"] = 1] = \"Watts\";\n    IntensityUnit[IntensityUnit[\"MinMi\"] = 2] = \"MinMi\";\n    IntensityUnit[IntensityUnit[\"Mph\"] = 3] = \"Mph\";\n    IntensityUnit[IntensityUnit[\"Kmh\"] = 4] = \"Kmh\";\n    IntensityUnit[IntensityUnit[\"MinKm\"] = 5] = \"MinKm\";\n    IntensityUnit[IntensityUnit[\"Per25Yards\"] = 12] = \"Per25Yards\";\n    IntensityUnit[IntensityUnit[\"Per100Yards\"] = 6] = \"Per100Yards\";\n    IntensityUnit[IntensityUnit[\"Per100Meters\"] = 7] = \"Per100Meters\";\n    IntensityUnit[IntensityUnit[\"Per400Meters\"] = 8] = \"Per400Meters\";\n    IntensityUnit[IntensityUnit[\"OffsetSeconds\"] = 9] = \"OffsetSeconds\";\n    IntensityUnit[IntensityUnit[\"HeartRate\"] = 10] = \"HeartRate\";\n    IntensityUnit[IntensityUnit[\"FreeRide\"] = 11] = \"FreeRide\";\n})(IntensityUnit || (exports.IntensityUnit = IntensityUnit = {}));\nclass PreconditionsCheck {\n    static assertIsNumber(v, name) {\n        console.assert(typeof (v) == \"number\", stringFormat(\"{0} must be a number, it was {1}\", name, typeof (v)));\n    }\n    static assertIsBoolean(v, name) {\n        console.assert(typeof (v) == \"boolean\", stringFormat(\"{0} must be a boolean, it was {1}\", name, typeof (v)));\n    }\n    static assertIsString(v, name) {\n        console.assert(typeof (v) == \"string\", stringFormat(\"{0} must be a string, it was {1}\", name, typeof (v)));\n    }\n    static assertTrue(v) {\n        console.assert(v, \"Precondition failed\");\n    }\n}\nexports.PreconditionsCheck = PreconditionsCheck;\n;\nclass DurationUnitHelper {\n    static isTime(durationUnit) {\n        return durationUnit >= MIN_TIME;\n    }\n    static isDistance(durationUnit) {\n        return durationUnit <= MAX_DISTANCE;\n    }\n    static isDurationUnit(unit) {\n        return DurationUnitHelper.toDurationUnit(unit) != TimeUnit.Unknown;\n    }\n    static getDistanceMiles(unit, value) {\n        if (DurationUnitHelper.isTime(unit)) {\n            return 0;\n        }\n        else {\n            var distance = value;\n            if (unit == DistanceUnit.Meters) {\n                return DistanceUnitHelper.convertTo(value, DistanceUnit.Meters, DistanceUnit.Miles);\n            }\n            else if (unit == DistanceUnit.Kilometers) {\n                return DistanceUnitHelper.convertTo(value, DistanceUnit.Kilometers, DistanceUnit.Miles);\n            }\n            else if (unit == DistanceUnit.Yards) {\n                return DistanceUnitHelper.convertTo(value, DistanceUnit.Yards, DistanceUnit.Miles);\n            }\n            else if (unit == DistanceUnit.Miles) {\n                return distance;\n            }\n            else {\n                return 0;\n            }\n        }\n    }\n    static getDurationSeconds(unit, value) {\n        if (DurationUnitHelper.isDistance(unit)) {\n            return 0;\n        }\n        else {\n            var time = value;\n            if (unit == TimeUnit.Hours) {\n                return TimeUnitHelper.convertTo(value, TimeUnit.Hours, TimeUnit.Seconds);\n            }\n            else if (unit == TimeUnit.Minutes) {\n                return TimeUnitHelper.convertTo(value, TimeUnit.Minutes, TimeUnit.Seconds);\n            }\n            else if (unit == TimeUnit.Seconds) {\n                return time;\n            }\n            else {\n                return 0;\n            }\n        }\n    }\n    static areDurationUnitsSame(durationUnits) {\n        if (durationUnits == null || durationUnits.length <= 1) {\n            return true;\n        }\n        let durationUnit = durationUnits[0];\n        for (let i = 1; i < durationUnits.length; ++i) {\n            if (durationUnits[i] != durationUnit) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static toString(unit) {\n        if (unit == null) {\n            return \"null\";\n        }\n        switch (unit) {\n            case DistanceUnit.Unknown:\n            case TimeUnit.Unknown:\n                return \"Unknown\";\n            case DistanceUnit.Miles:\n                return \"mi\";\n            case DistanceUnit.Kilometers:\n                return \"km\";\n            case DistanceUnit.Meters:\n                return \"m\";\n            case DistanceUnit.Yards:\n                return \"yards\";\n            case TimeUnit.Hours:\n                return \"h\";\n            case TimeUnit.Minutes:\n                return \"min\";\n            case TimeUnit.Seconds:\n                return \"s\";\n        }\n    }\n    static toDurationUnit(unit) {\n        var conversionMap = {\n            \"mi\": DistanceUnit.Miles,\n            \"km\": DistanceUnit.Kilometers,\n            \"m\": DistanceUnit.Meters,\n            \"meter\": DistanceUnit.Meters,\n            \"meters\": DistanceUnit.Meters,\n            \"h\": TimeUnit.Hours,\n            \"hr\": TimeUnit.Hours,\n            \"hour\": TimeUnit.Hours,\n            \"hours\": TimeUnit.Hours,\n            \"min\": TimeUnit.Minutes,\n            \"sec\": TimeUnit.Seconds,\n            \"s\": TimeUnit.Seconds,\n            \"yards\": DistanceUnit.Yards,\n            \"y\": DistanceUnit.Yards,\n            \"yrd\": DistanceUnit.Yards,\n        };\n        if (unit in conversionMap) {\n            return conversionMap[unit];\n        }\n        else {\n            return TimeUnit.Unknown;\n        }\n    }\n}\nexports.DurationUnitHelper = DurationUnitHelper;\nclass Duration {\n    constructor(unit, value, estimatedDurationInSeconds, estimatedDistanceInMiles) {\n        PreconditionsCheck.assertIsNumber(unit, \"unit\");\n        PreconditionsCheck.assertIsNumber(value, \"value\");\n        PreconditionsCheck.assertIsNumber(estimatedDurationInSeconds, \"estimatedDurationInSeconds\");\n        PreconditionsCheck.assertIsNumber(estimatedDistanceInMiles, \"estimatedDistanceInMiles\");\n        this.unit = unit;\n        this.value = value;\n        if (estimatedDistanceInMiles == 0 && DurationUnitHelper.isDistance(unit)) {\n            this.estimatedDistanceInMiles = DurationUnitHelper.getDistanceMiles(unit, value);\n        }\n        else {\n            this.estimatedDistanceInMiles = estimatedDistanceInMiles;\n        }\n        if (estimatedDurationInSeconds == 0 && DurationUnitHelper.isTime(unit)) {\n            this.estimatedDurationInSeconds = DurationUnitHelper.getDurationSeconds(unit, value);\n        }\n        else {\n            this.estimatedDurationInSeconds = estimatedDurationInSeconds;\n        }\n    }\n    getUnit() {\n        return this.unit;\n    }\n    getValue() {\n        return this.value;\n    }\n    getSeconds() {\n        if (isNaN(this.estimatedDurationInSeconds) || !isFinite(this.estimatedDurationInSeconds)) {\n            return 0;\n        }\n        return this.estimatedDurationInSeconds;\n    }\n    getDistanceInMiles() {\n        return this.estimatedDistanceInMiles;\n    }\n    getValueInUnit(unitTo) {\n        PreconditionsCheck.assertTrue(unitTo != DistanceUnit.Unknown);\n        if (unitTo == DistanceUnit.Unknown) {\n            return MyMath.round10(this.value, -1);\n        }\n        else {\n            if (DurationUnitHelper.isDistance(unitTo)) {\n                var value = DistanceUnitHelper.convertTo(this.getDistanceInMiles(), DistanceUnit.Miles, unitTo);\n                return MyMath.round10(value, -1);\n            }\n            else {\n                return MyMath.round10(this.value, -1);\n            }\n        }\n    }\n    toStringDistance(unitTo) {\n        return this.getValueInUnit(unitTo) + DurationUnitHelper.toString(unitTo);\n    }\n    getTimeComponents() {\n        var hours = (this.estimatedDurationInSeconds / 3600) | 0;\n        return {\n            hours: hours,\n            minutes: ((this.estimatedDurationInSeconds - hours * 3600) / 60) | 0,\n            seconds: (this.estimatedDurationInSeconds % 60) | 0\n        };\n    }\n    toTimeStringLong() {\n        var result = \"\";\n        var time = this.getTimeComponents();\n        let unit = \"\";\n        if (time.hours != 0) {\n            result += time.hours;\n            unit = \"hr\";\n        }\n        if (time.minutes != 0) {\n            if (result.length > 0) {\n                result += \":\";\n            }\n            else {\n                unit = \"min\";\n            }\n            result += time.minutes;\n        }\n        if (time.seconds != 0) {\n            if (result.length > 0) {\n                result += \":\";\n            }\n            else {\n                unit = \"sec\";\n            }\n            result += time.seconds;\n        }\n        return result + unit;\n    }\n    toTimeStringShort() {\n        var result = \"\";\n        var time = this.getTimeComponents();\n        if (time.hours != 0) {\n            return this.toTimeStringLong();\n        }\n        if (time.minutes != 0) {\n            result += time.minutes + \"'\";\n        }\n        if (time.seconds != 0) {\n            result += FormatterHelper.enforceDigits(time.seconds, 2) + \"''\";\n        }\n        return result;\n    }\n    toStringShort(omitUnit) {\n        if (!DurationUnitHelper.isTime(this.unit)) {\n            if (omitUnit) {\n                return this.getValueInUnit(this.unit) + \"\";\n            }\n            else {\n                return this.toStringDistance(this.unit);\n            }\n        }\n        return this.toTimeStringShort();\n    }\n    toString() {\n        if (DurationUnitHelper.isTime(this.unit)) {\n            return this.toTimeStringLong();\n        }\n        else {\n            return this.toStringDistance(this.unit);\n        }\n    }\n    static combine(dur1, dur2) {\n        var estTime = dur1.getSeconds() + dur2.getSeconds();\n        var estDistance = dur1.getDistanceInMiles() + dur2.getDistanceInMiles();\n        if (dur1.getUnit() == dur2.getUnit()) {\n            return new Duration(dur1.getUnit(), dur1.getValue() + dur2.getValue(), estTime, estDistance);\n        }\n        if (dur1.getValue() == 0) {\n            return dur2;\n        }\n        if (dur2.getValue() == 0) {\n            return dur1;\n        }\n        if (DurationUnitHelper.isTime(dur1.getUnit())) {\n            if (DurationUnitHelper.isTime(dur2.getUnit())) {\n                var time1 = DurationUnitHelper.getDurationSeconds(dur1.getUnit(), dur1.getValue());\n                var time2 = DurationUnitHelper.getDurationSeconds(dur2.getUnit(), dur2.getValue());\n                return new Duration(TimeUnit.Seconds, time1 + time2, estTime, estDistance);\n            }\n            else {\n                var time_sum = dur1.getSeconds() + dur2.getSeconds();\n                return new Duration(TimeUnit.Seconds, time_sum, estTime, estDistance);\n            }\n        }\n        else {\n            if (DurationUnitHelper.isTime(dur2.getUnit())) {\n                var time_sum = dur1.getSeconds() + dur2.getSeconds();\n                return new Duration(TimeUnit.Seconds, time_sum, estTime, estDistance);\n            }\n            else {\n                var distance1 = DurationUnitHelper.getDistanceMiles(dur1.getUnit(), dur1.getValue());\n                var distance2 = DurationUnitHelper.getDistanceMiles(dur2.getUnit(), dur2.getValue());\n                return new Duration(DistanceUnit.Miles, distance1 + distance2, estTime, estDistance);\n            }\n        }\n    }\n    static combineArray(durations) {\n        return durations.reduce(function (prev, cur) {\n            return Duration.combine(prev, cur);\n        });\n    }\n}\nexports.Duration = Duration;\nDuration.ZeroDuration = new Duration(TimeUnit.Seconds, 0, 0, 0);\nclass Intensity {\n    constructor(ifValue = 0, value = 0, unit = IntensityUnit.IF) {\n        PreconditionsCheck.assertIsNumber(ifValue, \"ifValue\");\n        PreconditionsCheck.assertIsNumber(value, \"value\");\n        PreconditionsCheck.assertIsNumber(unit, \"unit\");\n        if (ifValue > 10) {\n            ifValue = ifValue / 100;\n        }\n        console.assert(ifValue <= 2 && ifValue >= 0, stringFormat(\"Invalid if {0}\", ifValue));\n        if (unit == IntensityUnit.IF) {\n            if (value > 10) {\n                value = value / 100;\n            }\n            if (value == 0) {\n                value = ifValue;\n            }\n            this.ifValue = ifValue;\n            this.originalUnit = IntensityUnit.IF;\n            this.originalValue = value;\n        }\n        else {\n            this.ifValue = ifValue;\n            this.originalUnit = unit;\n            this.originalValue = value;\n        }\n    }\n    getValue() {\n        return this.ifValue;\n    }\n    toString() {\n        if (this.originalUnit == IntensityUnit.IF) {\n            return MyMath.round10(100 * this.originalValue, -1) + \"%\";\n        }\n        else {\n            if (this.originalUnit == IntensityUnit.MinMi) {\n                return FormatterHelper.formatNumber(this.originalValue, 60, \":\", IntensityUnitHelper.toString(IntensityUnit.MinMi));\n            }\n            else if (this.originalUnit == IntensityUnit.Per100Yards || this.originalUnit == IntensityUnit.Per100Meters || this.originalUnit == IntensityUnit.Per400Meters || this.originalUnit == IntensityUnit.Per25Yards) {\n                return FormatterHelper.formatNumber(this.originalValue, 60, \":\", IntensityUnitHelper.toString(this.originalUnit));\n            }\n            else {\n                if (this.originalUnit == IntensityUnit.OffsetSeconds) {\n                    if (this.originalValue > 0) {\n                        return stringFormat(\"CSS+{0}\", this.originalValue);\n                    }\n                    else if (this.originalValue < 0) {\n                        return stringFormat(\"CSS{0}\", this.originalValue);\n                    }\n                    else {\n                        return \"CSS\";\n                    }\n                }\n                else if (this.originalUnit == IntensityUnit.FreeRide) {\n                    return \"*\";\n                }\n                else {\n                    return MyMath.round10(this.originalValue, -1) + IntensityUnitHelper.toString(this.originalUnit);\n                }\n            }\n        }\n    }\n    getOriginalUnit() {\n        return this.originalUnit;\n    }\n    getOriginalValue() {\n        return this.originalValue;\n    }\n    static combine(intensities, weights) {\n        if (weights.length != intensities.length) {\n            console.assert(false, \"The size of intensities and weights should be the same\");\n            throw new Error(\"The size of intensities and weights should be the same\");\n        }\n        var sum1 = 0;\n        var sum2 = 0;\n        for (var i = 0; i < intensities.length; i++) {\n            sum1 += Math.pow(intensities[i].ifValue, 2) * weights[i];\n            sum2 += weights[i];\n        }\n        if (sum1 == 0) {\n            return Intensity.ZeroIntensity;\n        }\n        return new Intensity(Math.sqrt(sum1 / sum2));\n    }\n    isEasy() {\n        return Intensity.equals(this, Intensity.EasyIntensity);\n    }\n    static equals(i1, i2) {\n        return (i1.ifValue == i2.ifValue\n            && i1.originalValue == i2.originalValue\n            && i1.originalUnit == i2.originalUnit);\n    }\n}\nexports.Intensity = Intensity;\nIntensity.ZeroIntensity = new Intensity(0, 0, IntensityUnit.IF);\nIntensity.EasyIntensity = new Intensity(0.01, -1, IntensityUnit.IF);\nclass BaseInterval {\n    constructor(title) {\n        this.title = title;\n    }\n    getTitle() {\n        return this.title;\n    }\n    getRestDuration() {\n        return Duration.ZeroDuration;\n    }\n    getTotalDuration() {\n        return Duration.combine(this.getWorkDuration(), this.getRestDuration());\n    }\n}\nexports.BaseInterval = BaseInterval;\nclass ArrayInterval {\n    constructor(title, intervals) {\n        this.title = title;\n        this.intervals = intervals;\n    }\n    getIntensity() {\n        var intensities = this.intervals.map(function (value) {\n            return value.getIntensity();\n        });\n        var weights = this.intervals.map(function (value) {\n            return value.getWorkDuration().getSeconds();\n        });\n        return Intensity.combine(intensities, weights);\n    }\n    getWorkDuration() {\n        if (this.intervals.length == 0) {\n            return Duration.ZeroDuration;\n        }\n        var res = this.intervals.reduce(function (previousValue, currentValue) {\n            var duration = Duration.combine(previousValue.getWorkDuration(), currentValue.getWorkDuration());\n            return new SimpleInterval(\"\", Intensity.ZeroIntensity, duration, Duration.ZeroDuration);\n        });\n        return res.getWorkDuration();\n    }\n    getRestDuration() {\n        let durations = this.intervals.map(function (cur) {\n            return cur.getRestDuration();\n        });\n        return Duration.combineArray(durations);\n    }\n    getTotalDuration() {\n        return Duration.combine(this.getWorkDuration(), this.getRestDuration());\n    }\n    getTitle() {\n        return this.title;\n    }\n    getIntervals() {\n        return this.intervals;\n    }\n}\nexports.ArrayInterval = ArrayInterval;\nclass RepeatInterval extends ArrayInterval {\n    constructor(title, mainInterval, restInterval, repeatCount) {\n        var intervals = [];\n        if (mainInterval != null) {\n            intervals.push(mainInterval);\n        }\n        if (restInterval != null) {\n            intervals.push(restInterval);\n        }\n        super(title, intervals);\n        this.repeatCount = repeatCount;\n    }\n    getWorkDuration() {\n        var baseDuration = super.getWorkDuration();\n        var durationRaw = baseDuration.getValue() * this.repeatCount;\n        var durationSecs = baseDuration.getSeconds() * this.repeatCount;\n        var durationMiles = baseDuration.getDistanceInMiles() * this.repeatCount;\n        return new Duration(baseDuration.getUnit(), durationRaw, durationSecs, durationMiles);\n    }\n    getRestDuration() {\n        var baseDuration = super.getRestDuration();\n        var durationRaw = baseDuration.getValue() * this.repeatCount;\n        var durationSecs = baseDuration.getSeconds() * this.repeatCount;\n        var durationMiles = baseDuration.getDistanceInMiles() * this.repeatCount;\n        return new Duration(baseDuration.getUnit(), durationRaw, durationSecs, durationMiles);\n    }\n    getRepeatCount() {\n        return this.repeatCount;\n    }\n}\nexports.RepeatInterval = RepeatInterval;\nclass CommentInterval extends BaseInterval {\n    constructor(title) {\n        super(title);\n    }\n    getIntensity() {\n        return Intensity.ZeroIntensity;\n    }\n    getWorkDuration() {\n        return Duration.ZeroDuration;\n    }\n}\nexports.CommentInterval = CommentInterval;\nclass SimpleInterval extends BaseInterval {\n    constructor(title, intensity, duration, restDuration) {\n        super(title);\n        this.intensity = intensity;\n        this.duration = duration;\n        this.restDuration = restDuration;\n    }\n    getIntensity() {\n        return this.intensity;\n    }\n    getWorkDuration() {\n        return this.duration;\n    }\n    getRestDuration() {\n        return this.restDuration;\n    }\n}\nexports.SimpleInterval = SimpleInterval;\nclass RampBuildInterval extends BaseInterval {\n    constructor(title, startIntensity, endIntensity, work_duration, rest_duration) {\n        super(title);\n        this.startIntensity = startIntensity;\n        this.endIntensity = endIntensity;\n        this.work_duration = work_duration;\n        this.rest_duration = rest_duration;\n    }\n    getIntensity() {\n        return RampBuildInterval.computeAverageIntensity(this.startIntensity, this.endIntensity);\n    }\n    getWorkDuration() {\n        return this.work_duration;\n    }\n    getRestDuration() {\n        return this.rest_duration;\n    }\n    getStartIntensity() {\n        return this.startIntensity;\n    }\n    getEndIntensity() {\n        return this.endIntensity;\n    }\n    static computeAverageIntensity(intensity1, intensity2) {\n        return Intensity.combine([intensity1, intensity2], [1, 1]);\n    }\n}\nexports.RampBuildInterval = RampBuildInterval;\nclass DistanceUnitHelper {\n    static convertTo(value, unitFrom, unitTo) {\n        var distanceInMeters = 0;\n        if (unitFrom == DistanceUnit.Kilometers) {\n            distanceInMeters = value * 1000;\n        }\n        else if (unitFrom == DistanceUnit.Meters) {\n            distanceInMeters = value;\n        }\n        else if (unitFrom == DistanceUnit.Miles) {\n            distanceInMeters = value * 1609.344;\n        }\n        else if (unitFrom == DistanceUnit.Yards) {\n            distanceInMeters = value * 0.9144;\n        }\n        else {\n            console.assert(false, stringFormat(\"Unknown unitFrom {0}\", unitFrom));\n            throw new Error(\"Unknown distance unit\");\n        }\n        if (unitTo == DistanceUnit.Kilometers) {\n            return distanceInMeters / 1000;\n        }\n        else if (unitTo == DistanceUnit.Meters) {\n            return distanceInMeters;\n        }\n        else if (unitTo == DistanceUnit.Miles) {\n            return distanceInMeters / 1609.344;\n        }\n        else if (unitTo == DistanceUnit.Yards) {\n            return distanceInMeters / 0.9144;\n        }\n        else {\n            return -1;\n        }\n    }\n}\nexports.DistanceUnitHelper = DistanceUnitHelper;\nclass IntensityUnitHelper {\n    static convertTo(value, unitFrom, unitTo) {\n        var invalidUnitsForConversion = [\n            IntensityUnit.Unknown,\n            IntensityUnit.IF,\n            IntensityUnit.Watts\n        ];\n        if (invalidUnitsForConversion.indexOf(unitFrom) != -1\n            || invalidUnitsForConversion.indexOf(unitTo) != -1) {\n            var msg = stringFormat(\"Invalid unitFrom({0}) or unitTo({1}) for conversion\", unitFrom, unitTo);\n            console.assert(false, msg);\n            throw new Error(msg);\n        }\n        var speedMph = 0;\n        if (unitFrom == IntensityUnit.Mph) {\n            speedMph = value;\n        }\n        else if (unitFrom == IntensityUnit.MinMi) {\n            speedMph = 60 / value;\n        }\n        else if (unitFrom == IntensityUnit.Kmh) {\n            speedMph = DistanceUnitHelper.convertTo(value, DistanceUnit.Kilometers, DistanceUnit.Miles);\n        }\n        else if (unitFrom == IntensityUnit.MinKm) {\n            speedMph = DistanceUnitHelper.convertTo(60 / value, DistanceUnit.Kilometers, DistanceUnit.Miles);\n        }\n        else if (unitFrom == IntensityUnit.Per25Yards) {\n            speedMph = DistanceUnitHelper.convertTo(1500 / value, DistanceUnit.Yards, DistanceUnit.Miles);\n        }\n        else if (unitFrom == IntensityUnit.Per100Yards) {\n            speedMph = DistanceUnitHelper.convertTo(6000 / value, DistanceUnit.Yards, DistanceUnit.Miles);\n        }\n        else if (unitFrom == IntensityUnit.Per100Meters) {\n            speedMph = DistanceUnitHelper.convertTo(6000 / value, DistanceUnit.Meters, DistanceUnit.Miles);\n        }\n        else if (unitFrom == IntensityUnit.Per400Meters) {\n            speedMph = DistanceUnitHelper.convertTo((4 * 6000) / value, DistanceUnit.Meters, DistanceUnit.Miles);\n        }\n        else {\n            console.assert(false, stringFormat(\"Unknown intensity unit {0}\", unitFrom));\n            throw new Error(\"Unknown IntensityUnit!\");\n        }\n        var result = 0;\n        if (unitTo == IntensityUnit.Mph) {\n            result = speedMph;\n        }\n        else if (unitTo == IntensityUnit.MinMi) {\n            result = 60 / speedMph;\n        }\n        else if (unitTo == IntensityUnit.Kmh) {\n            result = DistanceUnitHelper.convertTo(speedMph, DistanceUnit.Miles, DistanceUnit.Kilometers);\n        }\n        else if (unitTo == IntensityUnit.MinKm) {\n            result = 60 / DistanceUnitHelper.convertTo(speedMph, DistanceUnit.Miles, DistanceUnit.Kilometers);\n        }\n        else if (unitTo == IntensityUnit.Per25Yards) {\n            result = 1500 / DistanceUnitHelper.convertTo(speedMph, DistanceUnit.Miles, DistanceUnit.Yards);\n        }\n        else if (unitTo == IntensityUnit.Per100Yards) {\n            result = 6000 / DistanceUnitHelper.convertTo(speedMph, DistanceUnit.Miles, DistanceUnit.Yards);\n        }\n        else if (unitTo == IntensityUnit.Per100Meters) {\n            result = 6000 / DistanceUnitHelper.convertTo(speedMph, DistanceUnit.Miles, DistanceUnit.Meters);\n        }\n        else if (unitTo == IntensityUnit.Per400Meters) {\n            result = 400 / (DistanceUnitHelper.convertTo(speedMph, DistanceUnit.Miles, DistanceUnit.Meters) / 60);\n        }\n        else {\n            console.assert(false, stringFormat(\"Unknown intensity unit {0}\", unitTo));\n            throw new Error(\"Unknown IntensityUnit!\");\n        }\n        return result;\n    }\n    static toString(unit) {\n        if (unit == null) {\n            return \"null\";\n        }\n        PreconditionsCheck.assertIsNumber(unit, \"unit\");\n        switch (unit) {\n            case IntensityUnit.Unknown:\n                return \"Unknown\";\n            case IntensityUnit.IF:\n                return \"%\";\n            case IntensityUnit.Watts:\n                return \"w\";\n            case IntensityUnit.MinMi:\n                return \"min/mi\";\n            case IntensityUnit.Mph:\n                return \"mi/h\";\n            case IntensityUnit.Kmh:\n                return \"km/h\";\n            case IntensityUnit.MinKm:\n                return \"min/km\";\n            case IntensityUnit.Per25Yards:\n                return \"/25yards\";\n            case IntensityUnit.Per100Yards:\n                return \"/100yards\";\n            case IntensityUnit.Per100Meters:\n                return \"/100meters\";\n            case IntensityUnit.Per400Meters:\n                return \"/400meters\";\n            case IntensityUnit.OffsetSeconds:\n                return \"offset-seconds\";\n            case IntensityUnit.HeartRate:\n                return \"hr\";\n            case IntensityUnit.FreeRide:\n                return \"free-ride\";\n        }\n    }\n    static toIntensityUnit(unit) {\n        var conversionMap = {\n            \"w\": IntensityUnit.Watts,\n            \"watts\": IntensityUnit.Watts,\n            \"%\": IntensityUnit.IF,\n            \"min/mi\": IntensityUnit.MinMi,\n            \"mi/hr\": IntensityUnit.Mph,\n            \"mph\": IntensityUnit.Mph,\n            \"km/hr\": IntensityUnit.Kmh,\n            \"min/km\": IntensityUnit.MinKm,\n            \"/25yards\": IntensityUnit.Per25Yards,\n            \"/100yards\": IntensityUnit.Per100Yards,\n            \"/100meters\": IntensityUnit.Per100Meters,\n            \"/400meters\": IntensityUnit.Per400Meters,\n            \"/400m\": IntensityUnit.Per400Meters,\n            \"offset\": IntensityUnit.OffsetSeconds,\n            \"hr\": IntensityUnit.HeartRate,\n            \"heart rate\": IntensityUnit.HeartRate,\n            \"bpm\": IntensityUnit.HeartRate,\n            \"free-ride\": IntensityUnit.FreeRide,\n            \"fr\": IntensityUnit.FreeRide,\n        };\n        if (unit in conversionMap) {\n            return conversionMap[unit];\n        }\n        else {\n            return IntensityUnit.Unknown;\n        }\n    }\n    static isIntensityUnit(unit) {\n        return IntensityUnitHelper.toIntensityUnit(unit) != IntensityUnit.Unknown;\n    }\n}\nexports.IntensityUnitHelper = IntensityUnitHelper;\n;\nclass TimeUnitHelper {\n    static convertTo(value, unitFrom, unitTo) {\n        var timeInSeconds = 0;\n        if (unitFrom == TimeUnit.Seconds) {\n            timeInSeconds = value;\n        }\n        else if (unitFrom == TimeUnit.Minutes) {\n            timeInSeconds = value * 60;\n        }\n        else if (unitFrom == TimeUnit.Hours) {\n            timeInSeconds = value * 3600;\n        }\n        else {\n            console.assert(false, \"Unknown unitFrom {0}\", unitFrom);\n            throw new Error(\"Unknown time unit\");\n        }\n        if (unitTo == TimeUnit.Seconds) {\n            return timeInSeconds;\n        }\n        else if (unitTo == TimeUnit.Minutes) {\n            return timeInSeconds / 60;\n        }\n        else if (unitTo == TimeUnit.Hours) {\n            return timeInSeconds / 3600;\n        }\n        else {\n            return -1;\n        }\n    }\n}\nexports.TimeUnitHelper = TimeUnitHelper;\nclass FormatterHelper {\n    static roundNumberUp(value, round_val = 0) {\n        if (round_val != 0) {\n            var mod = value % round_val;\n            if (mod != 0) {\n                value += round_val - mod;\n            }\n        }\n        return value;\n    }\n    static roundNumberDown(value, round_val = 0) {\n        if (round_val != 0) {\n            var mod = value % round_val;\n            if (mod != 0) {\n                value -= mod;\n            }\n        }\n        return value;\n    }\n    static formatNumber(value, decimalMultiplier, separator, unit, round_val = 0) {\n        var integerPart = Math.floor(value);\n        var fractionPart = FormatterHelper.roundNumberDown(Math.round(decimalMultiplier * (value - integerPart)), round_val);\n        return integerPart + separator + FormatterHelper.enforceDigits(fractionPart, 2) + unit;\n    }\n    static enforceDigits(value, digits) {\n        var result = value + \"\";\n        if (result.length > digits) {\n            return result.substring(0, digits);\n        }\n        else {\n            while (result.length < digits) {\n                result = \"0\" + result;\n            }\n            return result;\n        }\n    }\n    static formatTime(milliseconds) {\n        var hours = ((milliseconds / 3600000) % 60) | 0;\n        var minutes = ((milliseconds / 60000) % 60) | 0;\n        var seconds = ((milliseconds % 60000) / 1000) | 0;\n        var ms = (milliseconds % 1000) | 0;\n        if (ms > 500) {\n            seconds++;\n        }\n        if (hours != 0) {\n            return FormatterHelper.enforceDigits(hours, 2) + \":\" + FormatterHelper.enforceDigits(minutes, 2) + \":\" + FormatterHelper.enforceDigits(seconds, 2);\n        }\n        else {\n            if (minutes != 0) {\n                return FormatterHelper.enforceDigits(minutes, 2) + \"m\" + FormatterHelper.enforceDigits(seconds, 2) + \"s\";\n            }\n            else {\n                return seconds + \"s\";\n            }\n        }\n    }\n}\nexports.FormatterHelper = FormatterHelper;\nfunction stringFormat(format, ...args) {\n    return format.replace(/{(\\d+)}/g, function (match, number) {\n        return typeof args[number] != 'undefined'\n            ? args[number]\n            : match;\n    });\n}\nclass MyMath {\n    static decimalAdjust(type, value, exp) {\n        if (typeof exp === 'undefined' || +exp === 0) {\n            return Math[type](value);\n        }\n        value = +value;\n        exp = +exp;\n        if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n            return NaN;\n        }\n        let values = value.toString().split('e');\n        value = Math[type](+(values[0] + 'e' + (values[1] ? (+values[1] - exp) : -exp)));\n        values = value.toString().split('e');\n        return +(values[0] + 'e' + (values[1] ? (+values[1] + exp) : exp));\n    }\n    static round10(value, exp) {\n        return MyMath.decimalAdjust('round', value, exp);\n    }\n    static floor10(value, exp) {\n        return MyMath.decimalAdjust('floor', value, exp);\n    }\n    static ceil10(value, exp) {\n        return MyMath.decimalAdjust('ceil', value, exp);\n    }\n}\nexports.MyMath = MyMath;\nclass SpeedParser {\n    static getSpeedInMph(speed) {\n        var res = null;\n        try {\n            if (speed.indexOf(\"min/mi\") != -1) {\n                res = 60 / this._extractNumber(speed, 60, \":\", \"min/mi\");\n            }\n            else if (speed.indexOf(\"km/h\") != -1) {\n                res = this._extractNumber(speed, 100, \".\", \"km/h\") / 1.609344;\n            }\n            else if (speed.indexOf(\"mi/h\") != -1) {\n                res = this._extractNumber(speed, 100, \".\", \"mi/h\");\n            }\n            else if (speed.indexOf(\"min/km\") != -1) {\n                res = (60 / (this._extractNumber(speed, 60, \":\", \"min/km\") * 1.609344));\n            }\n            else if (speed.indexOf(\"/400meters\") != -1 || speed.indexOf(\"/400m\") != -1) {\n                let suffix = \"/400meters\";\n                if (speed.indexOf(\"/400m\") != -1) {\n                    suffix = \"/400m\";\n                }\n                res = (60 / (this._extractNumber(speed, 60, \":\", suffix) * 2.5 * 1.609344));\n            }\n            else if (speed.indexOf(\"/25yards\") != -1) {\n                var pace_per_25_yards = this._extractNumber(speed, 60, \":\", \"/25yards\");\n                res = IntensityUnitHelper.convertTo(pace_per_25_yards, IntensityUnit.Per25Yards, IntensityUnit.Mph);\n            }\n            else if (speed.indexOf(\"/100yards\") != -1) {\n                var pace_per_100_yards = this._extractNumber(speed, 60, \":\", \"/100yards\");\n                res = IntensityUnitHelper.convertTo(pace_per_100_yards, IntensityUnit.Per100Yards, IntensityUnit.Mph);\n            }\n            else if (speed.indexOf(\"/100meters\") != -1) {\n                var pace_per_100_meters = this._extractNumber(speed, 60, \":\", \"/100meters\");\n                res = IntensityUnitHelper.convertTo(pace_per_100_meters, IntensityUnit.Per100Meters, IntensityUnit.Mph);\n            }\n            else {\n                console.assert(false);\n            }\n        }\n        catch (e) {\n        }\n        return res;\n    }\n    static _extractNumber(numberString, decimalMultiplier, strSeparator, strSuffix) {\n        var indexSuffix = numberString.indexOf(strSuffix);\n        var indexSeparator = numberString.indexOf(strSeparator);\n        if (indexSuffix < 0) {\n            return null;\n        }\n        var fractionPart;\n        if (indexSeparator < 0) {\n            indexSeparator = indexSuffix;\n            fractionPart = 0;\n        }\n        else {\n            fractionPart = parseInt(numberString.substr(indexSeparator + 1, indexSuffix - indexSeparator - 1));\n        }\n        var integerPart = parseInt(numberString.substr(0, indexSeparator));\n        return integerPart + fractionPart / decimalMultiplier;\n    }\n}\nexports.SpeedParser = SpeedParser;\n\n\n//# sourceURL=webpack://workout_planner/./src/core.ts?\n}");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst client_1 = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\nconst workout_1 = __webpack_require__(/*! ./app/workout */ \"./src/app/workout.tsx\");\nconst workout_views_1 = __webpack_require__(/*! ./app/workout_views */ \"./src/app/workout_views.tsx\");\nconst player_1 = __webpack_require__(/*! ./app/player */ \"./src/app/player.tsx\");\nconst ui_1 = __webpack_require__(/*! ./ui */ \"./src/ui.ts\");\nfunction _init() {\n    const container = document.getElementById('main');\n    const root = (0, client_1.createRoot)(container);\n    let params = new ui_1.QueryParamsWorkoutView();\n    var params_wrapper = Object.assign(new Object(), params);\n    if (params.page.value == 'list') {\n        root.render(React.createElement(workout_views_1.default));\n    }\n    else if (params.page.value == 'player') {\n        root.render(React.createElement(player_1.default, params_wrapper));\n    }\n    else {\n        root.render(React.createElement(workout_1.default, params_wrapper));\n    }\n}\nwindow.onload = _init;\n\n\n//# sourceURL=webpack://workout_planner/./src/index.ts?\n}");

/***/ }),

/***/ "./src/parser.ts":
/*!***********************!*\
  !*** ./src/parser.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IntervalParser = exports.NumberAndUnitParser = exports.TokenParser = exports.NumberParser = void 0;\nconst core_1 = __webpack_require__(/*! ./core */ \"./src/core.ts\");\nconst visitor_1 = __webpack_require__(/*! ./visitor */ \"./src/visitor.ts\");\nclass NumberParser {\n    evaluate(input, i) {\n        this.value = 0;\n        for (; i < input.length; i++) {\n            var ch = input[i];\n            if (IntervalParser.isDigit(ch)) {\n                this.value = this.value * 10 + IntervalParser.getCharVal(ch) - IntervalParser.getCharVal(\"0\");\n            }\n            else if (ch == \".\") {\n                i++;\n                var base = 10;\n                for (; i < input.length; i++) {\n                    var ch = input[i];\n                    if (IntervalParser.isDigit(ch)) {\n                        this.value = this.value + (IntervalParser.getCharVal(ch) - IntervalParser.getCharVal(\"0\")) / base;\n                        base = base * 10;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                break;\n            }\n            else {\n                break;\n            }\n        }\n        return i - 1;\n    }\n    getValue() {\n        return this.value;\n    }\n}\nexports.NumberParser = NumberParser;\nclass TokenParser {\n    constructor(delimiters) {\n        this.delimiters = delimiters;\n    }\n    evaluate(input, i) {\n        this.value = \"\";\n        while (input[i] == ',' || input[i] == ' ') {\n            i++;\n        }\n        for (; i < input.length; i++) {\n            var ch = input[i];\n            if (this.delimiters.indexOf(ch) != -1) {\n                break;\n            }\n            this.value += ch;\n        }\n        return i - 1;\n    }\n    getValue() {\n        return this.value;\n    }\n}\nexports.TokenParser = TokenParser;\nclass NumberAndUnitParser {\n    evaluate(input, i) {\n        var num_parser = new NumberParser();\n        i = num_parser.evaluate(input, i);\n        this.value = num_parser.getValue();\n        let original_i = i;\n        if (i + 1 < input.length && input[i + 1] == \":\") {\n            i = i + 2;\n            var res_temp = IntervalParser.parseDouble(input, i);\n            i = res_temp.i;\n            this.value = this.value + res_temp.value / 60;\n            i++;\n            while (i < input.length && input[i] == ' ') {\n                i++;\n            }\n            i--;\n        }\n        var unitMap = {\n            \"w\": 1,\n            \"watts\": 1,\n            \"%\": 1,\n            \"min/mi\": 1,\n            \"mi/hr\": 1,\n            \"mph\": 1,\n            \"km/hr\": 1,\n            \"min/km\": 1,\n            \"/25yards\": 1,\n            \"/100yards\": 1,\n            \"/100meters\": 1,\n            \"/100m\": 1,\n            \"/400meters\": 1,\n            \"/400m\": 1,\n            \"hr\": 1,\n            \"heart rate\": 1,\n            \"bpm\": 1,\n            \"min\": 1,\n            \"m\": 1,\n            \"sec\": 1,\n            \"s\": 1,\n            \"km\": 1,\n            \"meters\": 1,\n            \"miles\": 1,\n            \"yards\": 1,\n            \"yrs\": 1,\n            \"y\": 1,\n            \"mi\": 1,\n            \"\": 1,\n        };\n        let nextToken = \"\";\n        for (i++; i < input.length; i++) {\n            if (input[i] == ',' || input[i] == \")\") {\n                break;\n            }\n            else {\n                if (IntervalParser.isWhitespace(input[i])) {\n                    nextToken = \"<<invalid>>\";\n                    break;\n                }\n                nextToken += input[i];\n            }\n        }\n        if (unitMap[nextToken] == undefined) {\n            this.value = null;\n            this.unit = \"\";\n            i = original_i;\n        }\n        else {\n            this.unit = nextToken;\n        }\n        return i - 1;\n    }\n    getValue() {\n        return this.value;\n    }\n    getUnit() {\n        return this.unit;\n    }\n}\nexports.NumberAndUnitParser = NumberAndUnitParser;\nclass IntervalParser {\n    static getCharVal(ch) {\n        if (ch.length == 1) {\n            return ch.charCodeAt(0);\n        }\n        else {\n            return 0;\n        }\n    }\n    static isDigit(ch) {\n        return ch.length == 1 &&\n            IntervalParser.getCharVal(ch) >= IntervalParser.getCharVal(\"0\") &&\n            IntervalParser.getCharVal(ch) <= IntervalParser.getCharVal(\"9\");\n    }\n    static isLetter(ch) {\n        return ch.length == 1 &&\n            IntervalParser.getCharVal(ch) >= IntervalParser.getCharVal(\"a\") &&\n            IntervalParser.getCharVal(ch) <= IntervalParser.getCharVal(\"z\");\n    }\n    static parseDouble(input, i) {\n        var p = new NumberParser();\n        var pos = p.evaluate(input, i);\n        return { i: pos, value: p.getValue() };\n    }\n    static isWhitespace(ch) {\n        return ch.length == 1 && (ch == \" \" || ch == \"\\t\" || ch == \"\\n\");\n    }\n    static throwParserError(column, msg) {\n        throw Error(\"Error while parsing input on column \" + column + \"-  Error: \" + msg);\n    }\n    static parse(factory, input) {\n        var result = new core_1.ArrayInterval(\"Workout\", []);\n        var stack = [];\n        stack.push(result);\n        let step_build_set = new Set();\n        for (var i = 0; i < input.length; i++) {\n            var ch = input[i];\n            if (ch == \"(\") {\n                i++;\n                var nums = {};\n                var units = {};\n                var title = \"\";\n                var numIndex = 0;\n                for (; i < input.length; i++) {\n                    ch = input[i];\n                    if (ch == \")\") {\n                        var interval;\n                        var durationValues = [];\n                        var durationUnits = [];\n                        var intensities = [];\n                        for (let ki = 0; ki < Object.keys(units).length; ki++) {\n                            let k = Object.keys(units)[ki];\n                            if (nums[k] >= 0 && units[k] == \"\") {\n                                units[k] = \"%\";\n                            }\n                        }\n                        for (let ki = 0; ki < Object.keys(units).length; ki++) {\n                            let k = Object.keys(units)[ki];\n                            if (core_1.DurationUnitHelper.isDurationUnit(units[k])) {\n                                durationUnits.push(core_1.DurationUnitHelper.toDurationUnit(units[k]));\n                                durationValues.push(nums[k]);\n                            }\n                            else {\n                                var unit = core_1.IntensityUnitHelper.toIntensityUnit(units[k]);\n                                if (unit != core_1.IntensityUnit.Unknown) {\n                                    if (unit == core_1.IntensityUnit.FreeRide) {\n                                        intensities.push(factory.createIntensity(0.50, core_1.IntensityUnit.FreeRide));\n                                    }\n                                    else {\n                                        intensities.push(factory.createIntensity(nums[k], unit));\n                                    }\n                                }\n                            }\n                        }\n                        if (stack[stack.length - 1] instanceof core_1.RepeatInterval) {\n                            var repeatInterval = (stack[stack.length - 1]);\n                            if (repeatInterval.getRepeatCount() > 1 &&\n                                intensities.length > 0 && durationValues.length > 0 &&\n                                (intensities.length == repeatInterval.getRepeatCount() && durationValues.length == 1 ||\n                                    core_1.DurationUnitHelper.areDurationUnitsSame(durationUnits) && durationValues.length == repeatInterval.getRepeatCount() && intensities.length == 1)) {\n                                stack.pop();\n                                stack[stack.length - 1].getIntervals().pop();\n                                let step_intervals = [];\n                                if (intensities.length == 1) {\n                                    console.assert(durationValues.length == repeatInterval.getRepeatCount());\n                                    console.assert(durationUnits.length == repeatInterval.getRepeatCount());\n                                    for (let k = 0; k < repeatInterval.getRepeatCount(); k++) {\n                                        var durationUnit = durationUnits[k];\n                                        var durationValue = durationValues[k];\n                                        var intensity = intensities[0];\n                                        var step_duration = factory.createDuration(intensity, durationUnit, durationValue);\n                                        step_intervals.push(new core_1.SimpleInterval(title.trim(), intensity, step_duration, core_1.Duration.ZeroDuration));\n                                    }\n                                }\n                                else if (durationValues.length == 1) {\n                                    console.assert(intensities.length == repeatInterval.getRepeatCount());\n                                    for (let k = 0; k < repeatInterval.getRepeatCount(); k++) {\n                                        var durationUnit = durationUnits[0];\n                                        var durationValue = durationValues[0];\n                                        var intensity = intensities[k];\n                                        var step_duration = factory.createDuration(intensity, durationUnit, durationValue);\n                                        step_intervals.push(new core_1.SimpleInterval(title.trim(), intensity, step_duration, core_1.Duration.ZeroDuration));\n                                    }\n                                }\n                                else {\n                                    console.assert(false);\n                                }\n                                var bsi = new core_1.ArrayInterval(title.trim(), step_intervals);\n                                stack[stack.length - 1].getIntervals().push(bsi);\n                                stack.push(bsi);\n                                step_build_set.add(bsi);\n                                break;\n                            }\n                        }\n                        console.assert(durationValues.length >= 1);\n                        console.assert(durationUnits.length >= 1);\n                        let restDuration = core_1.Duration.ZeroDuration;\n                        let zeroIntensity = core_1.Intensity.ZeroIntensity;\n                        if (intensities.length == 2) {\n                            let startIntensity = intensities[0];\n                            let endIntensity = intensities[1];\n                            let intensity = core_1.RampBuildInterval.computeAverageIntensity(startIntensity, endIntensity);\n                            let work_duration = factory.createDuration(intensity, durationUnits[0], durationValues[0]);\n                            let rest_duration = core_1.Duration.ZeroDuration;\n                            if (durationUnits.length > 1 && durationValues.length > 1) {\n                                rest_duration = factory.createDuration(intensity, durationUnits[1], durationValues[1]);\n                            }\n                            interval = new core_1.RampBuildInterval(title.trim(), startIntensity, endIntensity, work_duration, rest_duration);\n                        }\n                        else if (intensities.length == 1) {\n                            let intensity = intensities[0];\n                            let duration = factory.createDuration(intensity, durationUnits[0], durationValues[0]);\n                            if (durationUnits.length == 2 && durationValues.length == 2) {\n                                restDuration = factory.createDuration(zeroIntensity, durationUnits[1], durationValues[1]);\n                            }\n                            interval = new core_1.SimpleInterval(title.trim(), intensity, duration, restDuration);\n                        }\n                        else {\n                            let intensity = core_1.Intensity.EasyIntensity;\n                            let duration = factory.createDuration(intensity, durationUnits[0], durationValues[0]);\n                            if (durationUnits.length == 2 && durationValues.length == 2) {\n                                restDuration = factory.createDuration(zeroIntensity, durationUnits[1], durationValues[1]);\n                            }\n                            interval = new core_1.SimpleInterval(title.trim(), intensity, duration, restDuration);\n                        }\n                        let parent = (stack[stack.length - 1]);\n                        if (step_build_set.has(parent)) {\n                            let old_intervals = [...parent.getIntervals()];\n                            parent.getIntervals().length = 0;\n                            for (let i = 0; i < old_intervals.length; i += 1) {\n                                parent.getIntervals().push(old_intervals[i]);\n                                parent.getIntervals().push(interval);\n                            }\n                        }\n                        else {\n                            stack[stack.length - 1].getIntervals().push(interval);\n                        }\n                        break;\n                    }\n                    else if (ch == \",\") {\n                        numIndex++;\n                    }\n                    else {\n                        var string_parser = new TokenParser([',', ')']);\n                        i = string_parser.evaluate(input, i);\n                        var value = string_parser.getValue();\n                        if (IntervalParser.isDigit(value[0])) {\n                            var intensity_parser = new NumberAndUnitParser();\n                            intensity_parser.evaluate(value, 0);\n                            let unit = intensity_parser.getUnit().trim();\n                            let intensity_value = intensity_parser.getValue();\n                            if (intensity_value != null &&\n                                (unit.length == 0 || core_1.IntensityUnitHelper.isIntensityUnit(unit) || core_1.DurationUnitHelper.isDurationUnit(unit))) {\n                                nums[numIndex] = intensity_value;\n                                units[numIndex] = unit;\n                            }\n                            else {\n                                title = value;\n                                units[numIndex] = \"\";\n                            }\n                        }\n                        else if (value[0] == \"+\" || value[0] == \"-\") {\n                            var integer_parser = new NumberParser();\n                            integer_parser.evaluate(value, 1);\n                            nums[numIndex] = integer_parser.getValue();\n                            if (value[0] == \"-\") {\n                                nums[numIndex] = -1 * nums[numIndex];\n                            }\n                            units[numIndex] = \"offset\";\n                        }\n                        else {\n                            if (value == \"*\") {\n                                units[numIndex] = \"free-ride\";\n                            }\n                            else {\n                                title = value;\n                            }\n                        }\n                    }\n                }\n            }\n            else if (ch == \"[\") {\n                var ai = new core_1.ArrayInterval(\"\", []);\n                stack[stack.length - 1].getIntervals().push(ai);\n                stack.push(ai);\n            }\n            else if (ch == \"]\") {\n                stack.pop();\n            }\n            else if (IntervalParser.isDigit(ch)) {\n                var res = IntervalParser.parseDouble(input, i);\n                i = res.i;\n                var ri = new core_1.RepeatInterval(\"\", null, null, res.value);\n                stack[stack.length - 1].getIntervals().push(ri);\n                stack.push(ri);\n                while (i < input.length && input[i] != \"[\") {\n                    i++;\n                }\n            }\n            else if (ch == \"\\\"\") {\n                var scp = new TokenParser([\"\\\"\"]);\n                i = scp.evaluate(input, i + 1) + 2;\n                stack[stack.length - 1].getIntervals().push(new core_1.CommentInterval(scp.getValue()));\n            }\n        }\n        if (result.getIntervals().length == 0) {\n            IntervalParser.throwParserError(0, \"Invalid interval\");\n        }\n        return result;\n    }\n    static normalize(factory, input) {\n        let interval = IntervalParser.parse(factory, input);\n        let visitor = new visitor_1.UnparserVisitor();\n        visitor_1.VisitorHelper.visitAndFinalize(visitor, interval);\n        return visitor.output;\n    }\n}\nexports.IntervalParser = IntervalParser;\n\n\n//# sourceURL=webpack://workout_planner/./src/parser.ts?\n}");

/***/ }),

/***/ "./src/player.ts":
/*!***********************!*\
  !*** ./src/player.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PlayerHelper = exports.StopWatch = void 0;\nconst visitor_1 = __webpack_require__(/*! ./visitor */ \"./src/visitor.ts\");\nclass StopWatch {\n    constructor() {\n        this.startTimeMillis = null;\n        this.stoppedDurationMillis = null;\n    }\n    start() {\n        if (this.startTimeMillis === null) {\n            this.startTimeMillis = Date.now();\n        }\n    }\n    stop() {\n        if (this.startTimeMillis !== null) {\n            this.stoppedDurationMillis += Date.now() - this.startTimeMillis;\n            this.startTimeMillis = null;\n        }\n    }\n    reset() {\n        this.startTimeMillis = null;\n        this.stoppedDurationMillis = 0;\n    }\n    getIsStarted() {\n        return this.startTimeMillis !== null;\n    }\n    getElapsedTimeMillis() {\n        if (this.startTimeMillis !== null) {\n            return (Date.now() - this.startTimeMillis) + this.stoppedDurationMillis;\n        }\n        else {\n            return this.stoppedDurationMillis;\n        }\n    }\n    moveStartTime(durationMillis) {\n        if (this.startTimeMillis != null) {\n            this.startTimeMillis = Date.now() - durationMillis;\n        }\n        else {\n            this.stoppedDurationMillis = durationMillis;\n        }\n    }\n}\nexports.StopWatch = StopWatch;\nclass PlayerHelper {\n    constructor(of, interval) {\n        this.data_ = [];\n        this.durationTotalSeconds_ = 0;\n        var pv = new visitor_1.AbsoluteTimeIntervalVisitor(of);\n        visitor_1.VisitorHelper.visitAndFinalize(pv, interval);\n        this.data_ = pv.getIntervalArray();\n        this.durationTotalSeconds_ = interval.getTotalDuration().getSeconds();\n    }\n    get(ts) {\n        for (let i = 0; i < this.data_.length; i++) {\n            let bei = this.data_[i];\n            if (ts >= bei.getBeginSeconds() && ts <= bei.getEndSeconds()) {\n                return bei;\n            }\n        }\n        return null;\n    }\n    getNext(ts) {\n        for (let i = 0; i < this.data_.length; i++) {\n            let bei = this.data_[i];\n            if (ts >= bei.getBeginSeconds() && ts <= bei.getEndSeconds()) {\n                if (i < this.data_.length - 1) {\n                    return this.data_[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    getDurationTotalSeconds() {\n        return this.durationTotalSeconds_;\n    }\n}\nexports.PlayerHelper = PlayerHelper;\n\n\n//# sourceURL=webpack://workout_planner/./src/player.ts?\n}");

/***/ }),

/***/ "./src/preprocessor.ts":
/*!*****************************!*\
  !*** ./src/preprocessor.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextPreprocessor = exports.TextPreprocessorContext = void 0;\nconst core_1 = __webpack_require__(/*! ./core */ \"./src/core.ts\");\nvar ArgType;\n(function (ArgType) {\n    ArgType[ArgType[\"Number\"] = 0] = \"Number\";\n    ArgType[ArgType[\"String\"] = 1] = \"String\";\n})(ArgType || (ArgType = {}));\n;\nclass TextPreprocessorContext {\n    constructor(sport_type, is_indoor) {\n        this.sport_type_ = sport_type;\n        this.is_indoor_ = is_indoor;\n    }\n    get sport_type() { return this.sport_type_; }\n    get is_indoor() { return this.is_indoor_; }\n}\nexports.TextPreprocessorContext = TextPreprocessorContext;\nclass TextPreprocessor {\n    constructor(context) {\n        this.context_ = context;\n    }\n    _rand(min, max) {\n        return Math.floor(Math.random() * (max - min) + min);\n    }\n    _randElement(array) {\n        if (array.length > 0) {\n            return array[this._rand(0, array.length)] + \"\\n\";\n        }\n        else {\n            return \"\";\n        }\n    }\n    _warmup() {\n        let warmup_text = \"\";\n        let warmup_groups = [];\n        if (this.context_.sport_type == core_1.SportType.Bike) {\n            if (this._rand(0, 5) == 0) {\n                warmup_text = `(5min, *, 90rpm - Smooth pedaling)\n(2min, *, 95rpm - Smooth pedaling)\n(2min, *, 100rpm - Smooth pedaling)\n(2min, *, 105rpm - Smooth pedaling)\n(1:30min, *, 110rpm - Smooth pedaling)\n(30sec, *, 120-130rpm - Maintain form)\n(2min, *, 90rpm - Relax and recover)\n(6sec, *, Max rev out)\n(1min, *, 90rpm - Smooth pedaling)\n(6sec, *, Max rev out)\n(1min, *, 90rpm - Smooth pedaling)\n(6sec, *, Max rev out)\n(2:42min, *, 90 rpm - Relax and recover)\n`;\n            }\n            else {\n                warmup_groups = [\n                    [\n                        \"(3min, 55), (3min, 65), (3min, 75)\",\n                        \"(9min, 55, 70)\",\n                        \"(4min, 55), (3min, 65), (2min, 75)\",\n                    ],\n                    [\n                        \"2[(45s, 45, Single leg - left), (15s, 45, both), (45s, 45, Single leg - right), (15s, 45, both)]\",\n                        \"8[(15s, 55, Spin ups), (15s, 55)]\",\n                        \"[(30s, 55, cadence 80), (30s, 55), (30s, 55, Cadence 90), (30s, 55), (30s, 55, Cadence 100), (30s, 55), (30s, 55, Cadence 110), (30s, 55)]\"\n                    ],\n                    [\n                        \"4[(15s, *, Sprints), (45s, 55)]\",\n                        \"4[(10sec, *, Max sprints), (50sec, 55, easy riding)]\",\n                        \"4[(5s, *, MAX), (55s, 55)]\",\n                        \"4[(45s, 75, 100), (15s, 55)]\",\n                        \"3[(30sec, *, FAST), (1min, 55, easy)]\",\n                        \"4[(30s, 85, 90, 95, 100), (30s, 55)]\",\n                        \"4[(15s, 100, FTP), (45s, 55)]\",\n                    ],\n                    [\"(3min, 55)\"]\n                ];\n                for (let i = 0; i < warmup_groups.length; i++) {\n                    warmup_text += this._randElement(warmup_groups[i]);\n                }\n            }\n        }\n        else if (this.context_.sport_type == core_1.SportType.Run) {\n            warmup_groups = [\n                [\n                    \"3[(10s, 0, arm swings)]\",\n                    \"3[(10s, 0, high knees)]\",\n                    \"3[(10s, 0, ham kicks)]\",\n                    \"3[(10s, 0, a-skips)]\",\n                    \"3[(10s, 0, crossover side to sides)]\",\n                ],\n                [\n                    \"3[(10s, 0, 10 lunges - 5 each side)]\",\n                    \"3[(10s, 0, 10 reverse lunges - 5 each side)]\",\n                    \"3[(10s, 0, 10 lunges with rotation - 5 each side)]\",\n                    \"3[(10s, 0, sumo squat)]\",\n                ]\n            ];\n            for (let i = 0; i < warmup_groups.length; i++) {\n                warmup_text += this._randElement(warmup_groups[i]);\n            }\n        }\n        else if (this.context_.sport_type == core_1.SportType.Swim) {\n            if (this.context_.is_indoor_) {\n                warmup_groups = [\n                    [\n                        \"2[(2min, alternate arm pull, 30s)]\",\n                        \"(5min, alternate arm pull)\",\n                    ],\n                    [\n                        \"(10s, Change to DD3), 6[(30s, double arm, 15s)]\",\n                        \"(10s, Change to DD5), 8[(15s, double arm pull, 15s)]\"\n                    ],\n                    [\n                        \"(10s, Change to DD4), 4[(20s, 80% of 1 min power), (40s, easy)]\"\n                    ],\n                ];\n            }\n            else {\n                warmup_groups = [\n                    [\n                        \"(300y, +10, free)\",\n                        \"(400y, +10, free)\",\n                        \"(500y, +10, free)\"\n                    ],\n                    [\n                        \"(200y, kick, +10)\",\n                        \"(300yards, as 50 kick w/ board - 50 free)\",\n                        \"3[(100y, Butterfly on the back)]\",\n                        \"(200y, Butterfly Kick with fins on your back)\",\n                        \"6[(50, Streamline kick on left/side)]\"\n                    ],\n                    [\n                        \"8[(50yards, Drill on first 25, free, build on second 50)]\",\n                        \"4[(50yards, Swim GOLF - Descend each one), \\\"10s rest\\\"]\",\n                        \"3[(100y, single arm freestyle right side, free, single arm freestyle left side, free)]\",\n                        \"4[(75y, unco left; swim; unco right)]\",\n                        \"4[(50yards, scull and free by 25)]\",\n                        \"(200y, +10, pull)\"\n                    ],\n                    [\n                        \"4[(25yards, sprint)]\",\n                        \"\"\n                    ],\n                    [\n                        \"8[(50y, +0, build 1-4)]\",\n                        \"6[(50yards, 100, build)]\",\n                        \"4[(50yards, Swim descend 1-4), \\\"10s rest\\\"]\",\n                        \"4[(100yards, add 25yards of hard swimming on every 100)]\",\n                        \"4[(100y, descend 1-4)]\"\n                    ]\n                ];\n            }\n            for (let i = 0; i < warmup_groups.length; i++) {\n                warmup_text += this._randElement(warmup_groups[i]);\n            }\n        }\n        console.assert(warmup_text.length > 0);\n        return warmup_text.substring(0, warmup_text.length - 1);\n    }\n    _single_leg(number_repeats, single_leg_duration_secs) {\n        console.assert(single_leg_duration_secs >= 0);\n        console.assert(single_leg_duration_secs <= 90);\n        return number_repeats + \"[(\" + single_leg_duration_secs + \"s,45,Left Leg), (15s,45,Both), (\" + single_leg_duration_secs + \"s,45,Right Leg), (15s,45,Both)]\";\n    }\n    _open_intervals(number_repeats, work_duration_sec) {\n        console.assert(work_duration_sec >= 0);\n        console.assert(work_duration_sec <= 60);\n        let title = work_duration_sec <= 10 ? \"Max efforts\" : \"Build\";\n        let rest_duration_sec = work_duration_sec <= 30 ? 60 - work_duration_sec : work_duration_sec;\n        return number_repeats + \"[(\" + work_duration_sec + \"s,*,\" + title + \"), (\" + rest_duration_sec + \"s,55,Relaxed)]\";\n    }\n    _change_dd(dd_door) {\n        return (0, core_1.stringFormat)(\"(10s, Change to DD{0})\", dd_door);\n    }\n    _alternate_arm_pull(duration) {\n        return (0, core_1.stringFormat)(\"({0}, Alternate arm pull)\", duration);\n    }\n    _double_arm_pull(duration) {\n        return (0, core_1.stringFormat)(\"({0}, Double arm pull)\", duration);\n    }\n    _back_pull(duration) {\n        return (0, core_1.stringFormat)(\"({0}, Back pull)\", duration);\n    }\n    processOne(input) {\n        let funcs = [\n            { regex: /#wu/, callback: this._warmup, params: [], description: \"Warm up\" },\n            { regex: /#sl\\((\\d*),(\\d*)\\)/, callback: this._single_leg, params: [ArgType.Number, ArgType.Number], description: \"Single Leg Drills.\" },\n            { regex: /#o\\((\\d*),(\\d*)\\)/, callback: this._open_intervals, params: [ArgType.Number, ArgType.Number], description: \"Open Power Intervals.\" },\n            { regex: /#dd(\\d+)/, callback: this._change_dd, params: [ArgType.Number], description: \"Change DD configuration.\" },\n            { regex: /#alt(\\d+\\w+)/, callback: this._alternate_arm_pull, params: [ArgType.String], description: \"Alternate arm pull.\" },\n            { regex: /#dbl(\\d+\\w+)/, callback: this._double_arm_pull, params: [ArgType.String], description: \"Double arm pull.\" },\n            { regex: /#back(\\d+\\w+)/, callback: this._back_pull, params: [ArgType.String], description: \"Back pull.\" },\n        ];\n        for (let i = 0; i < funcs.length; i++) {\n            let regex = funcs[i].regex;\n            if (regex.test(input)) {\n                var instance_params = input.match(regex);\n                var func_params = [];\n                if (instance_params.length - 1 != funcs[i].params.length) {\n                    console.assert(\"Function call \" + input + \" is not matching definition.\");\n                }\n                for (let j = 1; j < instance_params.length; j++) {\n                    let instance_param = instance_params[j];\n                    if (funcs[i].params[j - 1] == ArgType.Number) {\n                        func_params.push(parseInt(instance_param));\n                    }\n                    else {\n                        func_params.push(instance_param);\n                    }\n                }\n                return funcs[i].callback.apply(this, func_params);\n            }\n            else {\n            }\n        }\n        return input;\n    }\n    process(input) {\n        let main_regexes = [/(#\\w+\\(\\d*(?:,\\d*)*\\)())/, /(#\\w+)/];\n        for (let i = 0; i < main_regexes.length; i++) {\n            input = input.replace(new RegExp(main_regexes[i], \"g\"), this.processOne.bind(this));\n        }\n        return input;\n    }\n}\nexports.TextPreprocessor = TextPreprocessor;\n\n\n//# sourceURL=webpack://workout_planner/./src/preprocessor.ts?\n}");

/***/ }),

/***/ "./src/ui.ts":
/*!*******************!*\
  !*** ./src/ui.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SportTypeHelper = exports.ClipboardHelper = exports.FieldValidator = exports.QueryParamsWorkoutView = exports.QueryParamsList = exports.ParamArg = void 0;\nconst Core = __webpack_require__(/*! ./core */ \"./src/core.ts\");\nconst User = __webpack_require__(/*! ./user */ \"./src/user.ts\");\nconst Builder = __webpack_require__(/*! ./builder */ \"./src/builder.ts\");\nfunction loadPersistedValue(id) {\n    if (window.localStorage) {\n        var result = window.localStorage.getItem(id);\n        return result ? result.trim() : \"\";\n    }\n    else {\n        return null;\n    }\n}\nfunction setPersistedValue(id, value) {\n    if (window.localStorage) {\n        window.localStorage.setItem(id, value);\n    }\n}\nclass ParamArg {\n    constructor(property_name, url_name, required, persist) {\n        this.property_name = property_name;\n        this.url_name = url_name;\n        this.required = required;\n        this.persist = persist;\n        this.value = \"\";\n    }\n    hasValue() {\n        return typeof (this.value) != 'undefined' && (this.value != \"\" && this.value.trim().length > 0);\n    }\n    validate() {\n        return !this.required || this.hasValue();\n    }\n    getValue() {\n        if (this.hasValue()) {\n            return this.value;\n        }\n        else {\n            return null;\n        }\n    }\n    encodeUrl() {\n        return `${this.url_name}=${encodeURIComponent(this.value)}`;\n    }\n}\nexports.ParamArg = ParamArg;\nclass BaseQueryParams {\n    getParams() {\n        return [];\n    }\n    validate() {\n        for (let i = 0; i < this.getParams().length; i++) {\n            let qp = this.getParams()[i];\n            if (!qp.validate()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    loadFromStorage() {\n        for (let i = 0; i < this.getParams().length; i++) {\n            let qp = this.getParams()[i];\n            if (!qp.persist) {\n                continue;\n            }\n            let value = loadPersistedValue(qp.property_name);\n            if (value != null && value.trim().length != 0) {\n                qp.value = value;\n            }\n        }\n    }\n    loadFromURL() {\n        var query_params = getQueryParams();\n        for (let key in query_params) {\n            let value = query_params[key];\n            if (value != 'undefined' && typeof (value) != 'undefined') {\n                this.setUrlParamValue(key, value);\n            }\n        }\n    }\n    setUrlParamValue(url_name, value) {\n        for (let i = 0; i < this.getParams().length; i++) {\n            let qp = this.getParams()[i];\n            if (qp.url_name == url_name) {\n                qp.value = value;\n            }\n        }\n    }\n    setPropParamValue(property_name, value) {\n        for (let i = 0; i < this.getParams().length; i++) {\n            let qp = this.getParams()[i];\n            if (qp.property_name == property_name) {\n                qp.value = value;\n            }\n        }\n    }\n    getURL() {\n        let params_string = this.getParams().map(function (value) {\n            return value.hasValue() ? value.encodeUrl() : null;\n        });\n        params_string = params_string.filter(v => v != null);\n        return \"?\" + params_string.join(\"&\");\n    }\n}\nclass QueryParamsList extends BaseQueryParams {\n    constructor() {\n        super();\n        this.sport_type_ = new ParamArg(\"sport_type\", \"st\", true, true);\n        this.title_ = new ParamArg(\"title\", \"title\", false, false);\n        this.page_ = new ParamArg(\"page\", \"p\", false, false);\n        this.loadFromStorage();\n        this.loadFromURL();\n    }\n    getParams() {\n        return [\n            this.sport_type_,\n            this.title_,\n            this.page_\n        ];\n    }\n    get sport_type() {\n        return this.sport_type_;\n    }\n    get title() {\n        return this.title_;\n    }\n    pushToHistory() {\n        window.history.pushState('Object', 'Title', this.getURL());\n    }\n}\nexports.QueryParamsList = QueryParamsList;\nclass QueryParamsWorkoutView extends BaseQueryParams {\n    getParams() {\n        return [\n            this.ftp_watts_,\n            this.t_pace_,\n            this.swim_ftp_,\n            this.swim_css_,\n            this.email_,\n            this.efficiency_factor_,\n            this.workout_title_,\n            this.workout_text_,\n            this.sport_type_,\n            this.output_unit_,\n            this.page_,\n            this.should_round_,\n        ];\n    }\n    get ftp_watts() {\n        return this.ftp_watts_;\n    }\n    get t_pace() {\n        return this.t_pace_;\n    }\n    get swim_ftp() {\n        return this.swim_ftp_;\n    }\n    get swim_css() {\n        return this.swim_css_;\n    }\n    get email() {\n        return this.email_;\n    }\n    get efficiency_factor() {\n        return this.efficiency_factor_;\n    }\n    get workout_title() {\n        return this.workout_title_;\n    }\n    get workout_text() {\n        return this.workout_text_;\n    }\n    get sport_type() {\n        return this.sport_type_;\n    }\n    get output_unit() {\n        return this.output_unit_;\n    }\n    get page() {\n        return this.page_;\n    }\n    get should_round() {\n        return this.should_round_;\n    }\n    constructor() {\n        super();\n        this.ftp_watts_ = new ParamArg(\"ftp_watts\", \"ftp\", true, true);\n        this.t_pace_ = new ParamArg(\"t_pace\", \"tpace\", true, true);\n        this.swim_ftp_ = new ParamArg(\"swim_ftp\", \"swim_ftp\", true, true);\n        this.swim_css_ = new ParamArg(\"swim_css\", \"css\", true, true);\n        this.email_ = new ParamArg(\"email\", \"email\", true, true);\n        this.efficiency_factor_ = new ParamArg(\"efficiency_factor\", \"ef\", true, true);\n        this.workout_title_ = new ParamArg(\"workout_title\", \"t\", false, true);\n        this.workout_text_ = new ParamArg(\"workout_text\", \"w\", false, true);\n        this.sport_type_ = new ParamArg(\"sport_type\", \"st\", true, true);\n        this.output_unit_ = new ParamArg(\"output_unit\", \"ou\", true, true);\n        this.page_ = new ParamArg(\"page\", \"p\", false, false);\n        this.should_round_ = new ParamArg(\"should_round\", \"sr\", false, true);\n        this.loadFromStorage();\n        this.loadFromURL();\n    }\n    static createCopy(other) {\n        let ret = new QueryParamsWorkoutView();\n        for (let param_arg of Object.values(other)) {\n            ret.setPropParamValue(param_arg.property_name, param_arg.value);\n        }\n        return ret;\n    }\n    saveToStorage() {\n        for (let i = 0; i < this.getParams().length; i++) {\n            let qp = this.getParams()[i];\n            if (qp.persist && qp.hasValue()) {\n                setPersistedValue(qp.property_name, qp.value);\n            }\n        }\n    }\n    createUserProfile() {\n        if (this.validate()) {\n            let result = new User.UserProfile(parseInt(this.ftp_watts.value), this.t_pace.value, parseInt(this.swim_ftp.value), this.swim_css.value, this.email.value);\n            result.efficiency_factor = parseFloat(this.efficiency_factor.value);\n            return result;\n        }\n        else {\n            return null;\n        }\n    }\n    createWorkoutBuilder() {\n        if (this.validate()) {\n            let result = new Builder.WorkoutBuilder(this.createUserProfile(), parseInt(this.sport_type.value), parseInt(this.output_unit.value));\n            result.withDefinition(this.workout_title.value, this.workout_text.value);\n            return result;\n        }\n        else {\n            return null;\n        }\n    }\n}\nexports.QueryParamsWorkoutView = QueryParamsWorkoutView;\nfunction getQueryParams() {\n    var qs = document.location.search;\n    qs = qs.split(\"+\").join(\" \");\n    var params = {}, tokens, re = /[?&]?([^=]+)=([^&]*)/g;\n    while (tokens = re.exec(qs)) {\n        params[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n    }\n    return params;\n}\nclass FieldValidator {\n    static validateEmail(email) {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n    }\n    static validateNumber(num) {\n        if (num == null || num.trim().length == 0) {\n            return false;\n        }\n        else {\n            var num_val = parseFloat(num);\n            return !isNaN(num_val);\n        }\n    }\n}\nexports.FieldValidator = FieldValidator;\nclass ClipboardHelper {\n    static copyText(text) {\n        var textArea = document.createElement(\"textarea\");\n        textArea.style.position = 'fixed';\n        textArea.style.top = \"0\";\n        textArea.style.left = \"0\";\n        textArea.style.width = '2em';\n        textArea.style.height = '2em';\n        textArea.style.padding = \"0\";\n        textArea.style.border = 'none';\n        textArea.style.outline = 'none';\n        textArea.style.boxShadow = 'none';\n        textArea.style.background = 'transparent';\n        textArea.value = text;\n        document.body.appendChild(textArea);\n        textArea.select();\n        try {\n            var successful = document.execCommand('copy');\n            var msg = successful ? 'successful' : 'unsuccessful';\n            console.log('Copying text command was ' + msg);\n        }\n        catch (err) {\n            console.log('Oops, unable to copy');\n        }\n        document.body.removeChild(textArea);\n    }\n}\nexports.ClipboardHelper = ClipboardHelper;\nclass SportTypeHelper {\n    static convertToString(sportType) {\n        if (sportType == Core.SportType.Bike) {\n            return \"Bike\";\n        }\n        else if (sportType == Core.SportType.Run) {\n            return \"Run\";\n        }\n        else if (sportType == Core.SportType.Swim) {\n            return \"Swim\";\n        }\n        else if (sportType == Core.SportType.Other) {\n            return \"Other\";\n        }\n        else {\n            console.assert(false);\n            return \"\";\n        }\n    }\n}\nexports.SportTypeHelper = SportTypeHelper;\n\n\n//# sourceURL=webpack://workout_planner/./src/ui.ts?\n}");

/***/ }),

/***/ "./src/user.ts":
/*!*********************!*\
  !*** ./src/user.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ObjectFactory = exports.UserProfile = void 0;\nconst core_1 = __webpack_require__(/*! ./core */ \"./src/core.ts\");\nclass UserProfile {\n    constructor(bikeFTPWatts, runningTPace, swimmingFTP, swimCSS, email) {\n        this.bikeFTP_ = bikeFTPWatts;\n        var speed_mph = core_1.SpeedParser.getSpeedInMph(runningTPace);\n        this.runningTPaceMinMi_ = core_1.IntensityUnitHelper.convertTo(speed_mph, core_1.IntensityUnit.Mph, core_1.IntensityUnit.MinMi);\n        this.swimFTP_ = swimmingFTP;\n        var swim_css_mph = core_1.SpeedParser.getSpeedInMph(swimCSS);\n        this.swimmingCSSMinPer100Yards_ = core_1.IntensityUnitHelper.convertTo(swim_css_mph, core_1.IntensityUnit.Mph, core_1.IntensityUnit.Per100Yards);\n        this.email_ = email;\n    }\n    set efficiency_factor(value) {\n        this.efficiencyFactor_ = value;\n    }\n    get efficiency_factor() {\n        return this.efficiencyFactor_;\n    }\n    get bike_ftp() {\n        return this.bikeFTP_;\n    }\n    get running_tpace_min_mi() {\n        return this.runningTPaceMinMi_;\n    }\n    get swim_ftp() {\n        return this.swimFTP_;\n    }\n    get email() {\n        return this.email_;\n    }\n    getRunningTPaceMph() {\n        return core_1.IntensityUnitHelper.convertTo(this.running_tpace_min_mi, core_1.IntensityUnit.MinMi, core_1.IntensityUnit.Mph);\n    }\n    getRunningPaceMph(intensity) {\n        var estPaceMinMi = this.getRunningPaceMinMi(intensity);\n        return 60 / estPaceMinMi;\n    }\n    getRunningPace(intensity, outputUnit) {\n        let pace_mph = this.getRunningPaceMph(intensity);\n        return core_1.IntensityUnitHelper.convertTo(pace_mph, core_1.IntensityUnit.Mph, outputUnit);\n    }\n    getRunningPaceMinMi(intensity) {\n        var pace_mph = core_1.IntensityUnitHelper.convertTo(this.running_tpace_min_mi, core_1.IntensityUnit.MinMi, core_1.IntensityUnit.Mph) * intensity.getValue();\n        return core_1.IntensityUnitHelper.convertTo(pace_mph, core_1.IntensityUnit.Mph, core_1.IntensityUnit.MinMi);\n    }\n    getSwimCSSMph() {\n        var css_mph = core_1.IntensityUnitHelper.convertTo(this.swimmingCSSMinPer100Yards_, core_1.IntensityUnit.Per100Yards, core_1.IntensityUnit.Mph);\n        return css_mph;\n    }\n    getSwimPaceMph(intensity) {\n        var css_mph = core_1.IntensityUnitHelper.convertTo(this.swimmingCSSMinPer100Yards_, core_1.IntensityUnit.Per100Yards, core_1.IntensityUnit.Mph);\n        return css_mph * intensity.getValue();\n    }\n    getSwimPace(intensity_unit_result, intensity) {\n        var pace_mph = this.getSwimCSSMph() * intensity.getValue();\n        return core_1.IntensityUnitHelper.convertTo(pace_mph, core_1.IntensityUnit.Mph, intensity_unit_result);\n    }\n}\nexports.UserProfile = UserProfile;\nclass ObjectFactory {\n    constructor(userProfile, sportType) {\n        this.userProfile_ = userProfile;\n        this.sportType_ = sportType;\n    }\n    get sport_type() {\n        return this.sportType_;\n    }\n    get user_profile() {\n        return this.userProfile_;\n    }\n    createIntensity(value, unit) {\n        var ifValue = 0;\n        if (unit == core_1.IntensityUnit.FreeRide) {\n            return new core_1.Intensity(value, 0, core_1.IntensityUnit.FreeRide);\n        }\n        if (this.sportType_ == core_1.SportType.Bike) {\n            if (unit == core_1.IntensityUnit.Watts) {\n                ifValue = value / this.userProfile_.bike_ftp;\n            }\n            else if (unit == core_1.IntensityUnit.IF) {\n                ifValue = value;\n            }\n            else {\n                console.assert(false, (0, core_1.stringFormat)(\"Invalid unit {0}\", unit));\n                throw new Error(\"Invalid unit : \" + unit);\n            }\n        }\n        else if (this.sportType_ == core_1.SportType.Run) {\n            var running_tpace_mph = core_1.IntensityUnitHelper.convertTo(this.userProfile_.running_tpace_min_mi, core_1.IntensityUnit.MinMi, core_1.IntensityUnit.Mph);\n            if (unit == core_1.IntensityUnit.IF) {\n                ifValue = value;\n            }\n            else if (unit == core_1.IntensityUnit.MinMi) {\n                var running_mph = core_1.IntensityUnitHelper.convertTo(value, core_1.IntensityUnit.MinMi, core_1.IntensityUnit.Mph);\n                ifValue = running_mph / running_tpace_mph;\n            }\n            else if (unit == core_1.IntensityUnit.Mph) {\n                ifValue = value / running_tpace_mph;\n            }\n            else if (unit == core_1.IntensityUnit.MinKm) {\n                var running_mph = core_1.IntensityUnitHelper.convertTo(value, core_1.IntensityUnit.MinKm, core_1.IntensityUnit.Mph);\n                ifValue = running_mph / running_tpace_mph;\n            }\n            else if (unit == core_1.IntensityUnit.Per400Meters) {\n                var running_mph = core_1.IntensityUnitHelper.convertTo(value, core_1.IntensityUnit.Per400Meters, core_1.IntensityUnit.Mph);\n                ifValue = running_mph / running_tpace_mph;\n            }\n            else {\n                console.assert(false, (0, core_1.stringFormat)(\"Unit {0} is not implemented\"));\n                throw new Error(\"Not implemented\");\n            }\n        }\n        else if (this.sportType_ == core_1.SportType.Swim) {\n            if (unit == core_1.IntensityUnit.Watts) {\n                ifValue = value / this.userProfile_.swim_ftp;\n            }\n            else if (unit == core_1.IntensityUnit.IF) {\n                ifValue = value;\n            }\n            else if (unit == core_1.IntensityUnit.Per100Yards || unit == core_1.IntensityUnit.Per100Meters || unit == core_1.IntensityUnit.Per25Yards) {\n                var swimming_mph = core_1.IntensityUnitHelper.convertTo(value, unit, core_1.IntensityUnit.Mph);\n                var swimming_mph_css = this.userProfile_.getSwimCSSMph();\n                ifValue = swimming_mph / swimming_mph_css;\n            }\n            else if (unit == core_1.IntensityUnit.Mph) {\n                ifValue = value / this.userProfile_.getSwimCSSMph();\n            }\n            else if (unit == core_1.IntensityUnit.OffsetSeconds) {\n                var speed_per_100_yards = this.userProfile_.getSwimPace(core_1.IntensityUnit.Per100Yards, new core_1.Intensity(1));\n                speed_per_100_yards += value / 60;\n                var speed_mph = core_1.IntensityUnitHelper.convertTo(speed_per_100_yards, core_1.IntensityUnit.Per100Yards, core_1.IntensityUnit.Mph);\n                ifValue = speed_mph / this.userProfile_.getSwimCSSMph();\n            }\n            else {\n                console.assert(false, (0, core_1.stringFormat)(\"Invalid intensity unit {0}\", unit));\n            }\n        }\n        else {\n            console.assert(this.sportType_ == core_1.SportType.Other);\n            console.assert(unit == core_1.IntensityUnit.IF);\n            ifValue = value;\n        }\n        return new core_1.Intensity(ifValue, value, unit);\n    }\n    createDuration(intensity, unit, value) {\n        core_1.PreconditionsCheck.assertTrue(typeof (intensity) != 'undefined');\n        core_1.PreconditionsCheck.assertIsNumber(value, \"value\");\n        var estimatedDistanceInMiles = 0;\n        var estimatedTimeInSeconds = 0;\n        var estimatedSpeedMph;\n        if (this.sportType_ == core_1.SportType.Bike) {\n            estimatedSpeedMph = ObjectFactory.getBikeSpeedMphForIntensity(intensity);\n        }\n        else if (this.sportType_ == core_1.SportType.Run) {\n            estimatedSpeedMph = this.userProfile_.getRunningPaceMph(intensity);\n        }\n        else if (this.sportType_ == core_1.SportType.Swim) {\n            estimatedSpeedMph = this.userProfile_.getSwimPaceMph(intensity);\n        }\n        else {\n            console.assert(this.sportType_ == core_1.SportType.Other);\n            estimatedSpeedMph = 0;\n        }\n        if (core_1.DurationUnitHelper.isTime(unit)) {\n            estimatedTimeInSeconds = core_1.DurationUnitHelper.getDurationSeconds(unit, value);\n            estimatedDistanceInMiles = estimatedSpeedMph * (estimatedTimeInSeconds / 3600);\n        }\n        else {\n            estimatedDistanceInMiles = core_1.DurationUnitHelper.getDistanceMiles(unit, value);\n            estimatedTimeInSeconds = 3600 * (estimatedDistanceInMiles / estimatedSpeedMph);\n        }\n        return new core_1.Duration(unit, value, estimatedTimeInSeconds, estimatedDistanceInMiles);\n    }\n    static getBikeSpeedMphForIntensity(intensity) {\n        var actualSpeedMph = 0;\n        if (intensity.getValue() < 0.65) {\n            actualSpeedMph = 15;\n        }\n        else {\n            actualSpeedMph = 20;\n        }\n        return actualSpeedMph;\n    }\n}\nexports.ObjectFactory = ObjectFactory;\n\n\n//# sourceURL=webpack://workout_planner/./src/user.ts?\n}");

/***/ }),

/***/ "./src/visitor.ts":
/*!************************!*\
  !*** ./src/visitor.ts ***!
  \************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WorkoutFileGenerator = exports.TSSCalculator = exports.AbsoluteTimeIntervalVisitor = exports.AbsoluteTimeInterval = exports.UnparserVisitor = exports.WorkoutTextVisitor = exports.PPSMRXCourseDataVisitor = exports.MRCCourseDataVisitor = exports.ZwiftDataVisitor = exports.DataPointVisitor = exports.Point = exports.ZonesVisitor = exports.ZonesMap = exports.DominantUnitVisitor = exports.NPVisitor = exports.FTP = exports.MovingAverage = exports.BaseVisitor = exports.TreePrinterVisitor = exports.VisitorHelper = void 0;\nconst core_1 = __webpack_require__(/*! ./core */ \"./src/core.ts\");\nclass VisitorHelper {\n    static visitAndFinalize(visitor, interval) {\n        this.visit(visitor, interval);\n        visitor.finalize();\n    }\n    static visit(visitor, interval) {\n        if (interval instanceof core_1.SimpleInterval) {\n            return visitor.visitSimpleInterval(interval);\n        }\n        else if (interval instanceof core_1.RampBuildInterval) {\n            return visitor.visitRampBuildInterval(interval);\n        }\n        else if (interval instanceof core_1.RepeatInterval) {\n            return visitor.visitRepeatInterval(interval);\n        }\n        else if (interval instanceof core_1.ArrayInterval) {\n            return visitor.visitArrayInterval(interval);\n        }\n        else if (interval instanceof core_1.CommentInterval) {\n            return visitor.visitCommentInterval(interval);\n        }\n        else {\n            console.assert(false, \"invalid type!\");\n            return null;\n        }\n    }\n}\nexports.VisitorHelper = VisitorHelper;\nclass TreePrinterVisitor {\n    constructor() {\n        this.output = \"\";\n        this.indentation = 0;\n    }\n    visitCommentInterval(interval) {\n        this.indent();\n        this.output += (0, core_1.stringFormat)(\"Comment({0})\\n\", interval.getTitle());\n    }\n    visitSimpleInterval(interval) {\n        this.indent();\n        if (interval.getRestDuration().getValue() > 0) {\n            this.output += (0, core_1.stringFormat)(\"SimpleInterval({0}, {1}, {2}, {3})\\n\", interval.getWorkDuration().toString(), TreePrinterVisitor.getIntensityPretty(interval.getIntensity()), interval.getTitle(), interval.getRestDuration().toString());\n        }\n        else {\n            this.output += (0, core_1.stringFormat)(\"SimpleInterval({0}, {1}, {2})\\n\", interval.getWorkDuration().toString(), TreePrinterVisitor.getIntensityPretty(interval.getIntensity()), interval.getTitle());\n        }\n    }\n    visitRampBuildInterval(interval) {\n        this.indent();\n        this.output += (0, core_1.stringFormat)(\"RampBuildInterval({0}, {1}, {2}, {3}, {4})\\n\", interval.getWorkDuration().toString(), TreePrinterVisitor.getIntensityPretty(interval.getStartIntensity()), TreePrinterVisitor.getIntensityPretty(interval.getEndIntensity()), interval.getTitle(), interval.getRestDuration().toString());\n    }\n    visitRepeatInterval(interval) {\n        this.indent();\n        this.output += (0, core_1.stringFormat)(\"RepeatInterval(count={0}, {1}\\n\", interval.getRepeatCount(), interval.getTitle());\n        this.indentation++;\n        for (var i = 0; i < interval.getIntervals().length; i++) {\n            VisitorHelper.visit(this, interval.getIntervals()[i]);\n        }\n        this.indentation--;\n        this.indent();\n        this.output += \")\\n\";\n    }\n    visitArrayInterval(interval) {\n        this.indent();\n        this.indentation++;\n        this.output += \"ArrayInterval(\\n\";\n        for (var i = 0; i < interval.getIntervals().length; i++) {\n            VisitorHelper.visit(this, interval.getIntervals()[i]);\n        }\n        this.indentation--;\n        this.indent();\n        this.output += \")\\n\";\n    }\n    finalize() {\n    }\n    indent() {\n        for (let i = 0; i < this.indentation; i++) {\n            this.output += \"\\t\";\n        }\n    }\n    getOutput() {\n        return this.output;\n    }\n    static getIntensityPretty(intensity) {\n        if (intensity.isEasy()) {\n            return \"\";\n        }\n        else {\n            return intensity.toString();\n        }\n    }\n    static Print(interval) {\n        let tree_printer = new TreePrinterVisitor();\n        VisitorHelper.visitAndFinalize(tree_printer, interval);\n        return tree_printer.getOutput();\n    }\n}\nexports.TreePrinterVisitor = TreePrinterVisitor;\nclass BaseVisitor {\n    visitCommentInterval() {\n    }\n    visitRepeatInterval(interval) {\n        for (var i = 0; i < interval.getRepeatCount(); i++) {\n            this.visitArrayInterval(interval);\n        }\n    }\n    visitArrayInterval(interval) {\n        for (var i = 0; i < interval.getIntervals().length; i++) {\n            VisitorHelper.visit(this, interval.getIntervals()[i]);\n        }\n    }\n    finalize() {\n    }\n}\nexports.BaseVisitor = BaseVisitor;\nclass MovingAverage {\n    constructor(window_size) {\n        this.values = [];\n        this.window_size = 0;\n        this.end = 0;\n        core_1.PreconditionsCheck.assertTrue(window_size > 0);\n        this.window_size = window_size;\n    }\n    insert(v) {\n        if (this.values.length < this.window_size) {\n            this.values.push(v);\n        }\n        else {\n            this.values[this.end] = v;\n            this.end = (this.end + 1) % this.values.length;\n        }\n    }\n    get_moving_average() {\n        if (this.values.length == 0) {\n            return null;\n        }\n        let sum = 0;\n        for (let i = 0; i < this.values.length; i++) {\n            sum += this.values[i];\n        }\n        return sum / this.values.length;\n    }\n    is_full() {\n        return this.values.length == this.window_size;\n    }\n}\nexports.MovingAverage = MovingAverage;\nexports.FTP = 256;\nclass NPVisitor extends BaseVisitor {\n    constructor() {\n        super(...arguments);\n        this.sum = 0;\n        this.count = 0;\n        this.ma = new MovingAverage(30);\n        this.np = 0;\n    }\n    visitSimpleInterval(interval) {\n        var duration = interval.getWorkDuration().getSeconds();\n        var watts_pow_4 = Math.pow(interval.getIntensity().getValue() * exports.FTP, 4);\n        for (let t = 0; t < duration; t++) {\n            this._insert_and_flush(watts_pow_4);\n        }\n    }\n    visitRampBuildInterval(interval) {\n        var start_watts = interval.getStartIntensity().getValue() * exports.FTP;\n        var end_watts = interval.getEndIntensity().getValue() * exports.FTP;\n        var duration = interval.getWorkDuration().getSeconds();\n        for (var t = 0; t < duration; t++) {\n            var current_watts = start_watts + (end_watts - start_watts) * (t / duration);\n            var current_watts_pow_4 = 1 * Math.pow(current_watts, 4);\n            this._insert_and_flush(current_watts_pow_4);\n        }\n    }\n    _insert_and_flush(value) {\n        this.ma.insert(value);\n        if (this.ma.is_full()) {\n            this.sum += this.ma.get_moving_average();\n            this.count += 1;\n        }\n    }\n    finalize() {\n        if (!this.ma.is_full()) {\n            this.sum += this.ma.get_moving_average();\n            this.count += 1;\n        }\n        this.np = core_1.MyMath.round10(Math.sqrt(Math.sqrt(this.sum / this.count)), -1);\n    }\n    getIF() {\n        return core_1.MyMath.round10(this.np / exports.FTP, -1);\n    }\n}\nexports.NPVisitor = NPVisitor;\nclass DominantUnitVisitor extends BaseVisitor {\n    constructor() {\n        super(...arguments);\n        this.intensity_unit = null;\n        this.duration_unit = null;\n    }\n    visitSimpleInterval(interval) {\n        this.updateIntensity(interval.getIntensity());\n        this.updateDuration(interval.getWorkDuration());\n    }\n    visitRampBuildInterval(interval) {\n        this.updateIntensity(interval.getStartIntensity());\n        this.updateIntensity(interval.getEndIntensity());\n        this.updateDuration(interval.getWorkDuration());\n    }\n    updateIntensity(intensity) {\n        if (this.intensity_unit == null) {\n            this.intensity_unit = intensity.getOriginalUnit();\n        }\n        else {\n            if (this.intensity_unit != intensity.getOriginalUnit()) {\n                this.intensity_unit = core_1.IntensityUnit.Unknown;\n            }\n        }\n    }\n    updateDuration(duration) {\n        if (this.duration_unit == null) {\n            this.duration_unit = duration.getUnit();\n        }\n        else {\n            if (this.duration_unit != duration.getUnit()) {\n                this.duration_unit = core_1.DistanceUnit.Unknown;\n            }\n        }\n    }\n    static computeIntensity(interval) {\n        let dominant = new DominantUnitVisitor();\n        VisitorHelper.visit(dominant, interval);\n        return dominant.intensity_unit == null ? core_1.IntensityUnit.Unknown : dominant.intensity_unit;\n    }\n    static computeDuration(interval) {\n        let dominant = new DominantUnitVisitor();\n        VisitorHelper.visit(dominant, interval);\n        return dominant.duration_unit == null ? core_1.DistanceUnit.Unknown : dominant.duration_unit;\n    }\n}\nexports.DominantUnitVisitor = DominantUnitVisitor;\nclass ZonesMap {\n    static getZoneMap(sportType) {\n        if (sportType == core_1.SportType.Bike || sportType == core_1.SportType.Other) {\n            return {\n                1: { name: \"z1\", low: 0.00, high: 0.55 },\n                2: { name: \"z2\", low: 0.55, high: 0.75 },\n                3: { name: \"z3\", low: 0.75, high: 0.90 },\n                4: { name: \"z4\", low: 0.90, high: 1.05 },\n                5: { name: \"z5\", low: 1.05, high: 1.2 },\n                6: { name: \"z6\", low: 1.20, high: 10 },\n            };\n        }\n        else if (sportType == core_1.SportType.Run) {\n            return {\n                1: { name: \"z1\", low: 0.00, high: 0.76 },\n                2: { name: \"z2\", low: 0.76, high: 0.87 },\n                3: { name: \"z3\", low: 0.87, high: 0.94 },\n                4: { name: \"z4\", low: 0.94, high: 1.01 },\n                5: { name: \"z5\", low: 1.01, high: 1.10 },\n                6: { name: \"z6\", low: 1.10, high: 10 },\n            };\n        }\n        else if (sportType == core_1.SportType.Swim) {\n            return {\n                1: { name: \"z1\", low: 0.00, high: 0.84 },\n                2: { name: \"z2\", low: 0.84, high: 0.89 },\n                3: { name: \"z3\", low: 0.89, high: 0.95 },\n                4: { name: \"z4\", low: 0.95, high: 1.01 },\n                5: { name: \"z5\", low: 1.01, high: 1.05 },\n                6: { name: \"z6\", low: 1.05, high: 10 },\n            };\n        }\n        else {\n            return {};\n        }\n    }\n}\nexports.ZonesMap = ZonesMap;\nclass ZonesVisitor extends BaseVisitor {\n    constructor(sportType) {\n        super();\n        this.zones = {};\n        this.zones = {};\n        this.sportType = sportType;\n        var zone_map = ZonesMap.getZoneMap(this.sportType);\n        for (var zone = 1; zone <= 6; zone++) {\n            var zone_obj = zone_map[zone];\n            this.zones[zone] = {\n                name: zone_obj.name,\n                range: \"[\" + Math.floor(zone_obj.low * 100) + \"%;\" + Math.floor(zone_obj.high * 100) + \"%)\",\n                value: 0,\n            };\n        }\n    }\n    static getZone(sportType, intensity) {\n        var zone_map = ZonesMap.getZoneMap(sportType);\n        for (var zone = 1; zone <= 5; zone++) {\n            var zone_obj = zone_map[zone];\n            if (intensity >= zone_obj.low && intensity < zone_obj.high) {\n                return zone;\n            }\n        }\n        return 6;\n    }\n    incrementZoneTime(intensity, numberOfSeconds) {\n        var zone = ZonesVisitor.getZone(this.sportType, intensity);\n        this.zones[zone].value += numberOfSeconds;\n    }\n    visitSimpleInterval(interval) {\n        this.incrementZoneTime(interval.getIntensity().getValue(), interval.getWorkDuration().getSeconds());\n    }\n    visitRampBuildInterval(interval) {\n        var startIntensity = interval.getStartIntensity().getValue();\n        var endIntensity = interval.getEndIntensity().getValue();\n        var duration = interval.getWorkDuration().getSeconds();\n        var intensity = startIntensity;\n        var intensityIncrement = (endIntensity - startIntensity) / duration;\n        for (var t = 0; t < duration; t++) {\n            this.incrementZoneTime(intensity, 1);\n            intensity += intensityIncrement;\n        }\n    }\n    getTimeInZones() {\n        var result = [];\n        for (var key in this.zones) {\n            var zone = this.zones[key];\n            if (zone.value > 0) {\n                result.push({\n                    name: zone.name,\n                    range: zone.range,\n                    duration: new core_1.Duration(core_1.TimeUnit.Seconds, zone.value, 0, 0)\n                });\n            }\n        }\n        return result;\n    }\n}\nexports.ZonesVisitor = ZonesVisitor;\nclass Point {\n    constructor(x, y, label, tag) {\n        this.x = x;\n        this.y = y;\n        this.label = label;\n        this.tag = tag;\n    }\n}\nexports.Point = Point;\nclass DataPointVisitor extends BaseVisitor {\n    constructor() {\n        super(...arguments);\n        this.x = null;\n        this.data = [];\n    }\n    initX(duration) {\n        if (this.x == null) {\n            this.x = new core_1.Duration(duration.getUnit(), 0, 0, 0);\n        }\n    }\n    incrementX(duration) {\n        this.x = core_1.Duration.combine(this.x, duration);\n    }\n    getIntervalTag(interval) {\n        if (interval.getIntensity().getOriginalUnit() == core_1.IntensityUnit.FreeRide) {\n            return \"free-ride\";\n        }\n        else {\n            return \"if\";\n        }\n    }\n    visitSimpleInterval(interval) {\n        var title = WorkoutTextVisitor.getIntervalTitle(interval);\n        this.initX(interval.getWorkDuration());\n        this.data.push(new Point(this.x, interval.getIntensity(), title, this.getIntervalTag(interval)));\n        this.incrementX(interval.getWorkDuration());\n        this.data.push(new Point(this.x, interval.getIntensity(), title, this.getIntervalTag(interval)));\n        this.visitRestPart(interval, title);\n    }\n    visitRampBuildInterval(interval) {\n        var title = WorkoutTextVisitor.getIntervalTitle(interval);\n        this.initX(interval.getWorkDuration());\n        this.data.push(new Point(this.x, interval.getStartIntensity(), title, this.getIntervalTag(interval)));\n        this.incrementX(interval.getWorkDuration());\n        this.data.push(new Point(this.x, interval.getEndIntensity(), title, this.getIntervalTag(interval)));\n        this.visitRestPart(interval, title);\n    }\n    visitRestPart(interval, title) {\n        if (interval.getRestDuration().getValue() > 0) {\n            this.initX(interval.getRestDuration());\n            this.data.push(new Point(this.x, core_1.Intensity.ZeroIntensity, title, \"rest\"));\n            this.incrementX(interval.getRestDuration());\n            this.data.push(new Point(this.x, core_1.Intensity.ZeroIntensity, title, \"rest\"));\n        }\n    }\n}\nexports.DataPointVisitor = DataPointVisitor;\nclass ZwiftDataVisitor extends BaseVisitor {\n    constructor(name) {\n        super();\n        this.content = \"\";\n        this.content = `<workout_file>\n\\t<author>Workout Planner Author</author>\n\\t<name>${name}</name>\n\\t<description>Auto generated by https://github.com/sergioclemente/WorkoutPlanner</description>\n\\t<tags>\n\\t\\t<tag name=\"INTERVALS\"/>\n\\t</tags>\n\\t<workout>\\n`;\n    }\n    finalize() {\n        this.content += `\\t</workout>\n</workout_file>`;\n    }\n    getIntervalTitle(interval) {\n        var title = interval.getTitle();\n        if (title.length == 0) {\n            title = WorkoutTextVisitor.getIntervalTitle(interval);\n        }\n        return title;\n    }\n    escapeString(input) {\n        return input.replace(/\"/g, \"\");\n    }\n    visitSimpleInterval(interval) {\n        var duration = interval.getWorkDuration().getSeconds();\n        var title = this.escapeString(this.getIntervalTitle(interval));\n        if (interval.getIntensity().getOriginalUnit() == core_1.IntensityUnit.FreeRide) {\n            this.content += `\\t\\t<FreeRide Duration=\"${duration}\">\\n`;\n            this.content += `\\t\\t\\t<textevent timeoffset=\"0\" message=\"${title}\"/>\\n`;\n            this.content += `\\t\\t</FreeRide>\\n`;\n        }\n        else {\n            var intensity = interval.getIntensity().getValue();\n            this.content += `\\t\\t<SteadyState Duration=\"${duration}\" Power=\"${intensity}\">\\n`;\n            this.content += `\\t\\t\\t<textevent timeoffset=\"0\" message=\"${title}\"/>\\n`;\n            this.content += `\\t\\t</SteadyState>\\n`;\n        }\n    }\n    visitRampBuildInterval(interval) {\n        var duration = interval.getWorkDuration().getSeconds();\n        var intensityStart = interval.getStartIntensity().getValue();\n        var intensityEnd = interval.getEndIntensity().getValue();\n        if (intensityStart < intensityEnd) {\n            this.content += `\\t\\t<Warmup Duration=\"${duration}\" PowerLow=\"${intensityStart}\" PowerHigh=\"${intensityEnd}\"/>\\n`;\n        }\n        else {\n            this.content += `\\t\\t<Cooldown Duration=\"${duration}\" PowerLow=\"${intensityStart}\" PowerHigh=\"${intensityEnd}\"/>\\n`;\n        }\n    }\n    visitRepeatInterval(interval) {\n        if (interval.getIntervals().length == 2 &&\n            interval.getIntervals()[0].getIntensity().getValue() > interval.getIntervals()[1].getIntensity().getValue()) {\n            let repeat_count = interval.getRepeatCount();\n            let on_duration = interval.getIntervals()[0].getWorkDuration().getSeconds();\n            let off_duration = interval.getIntervals()[1].getWorkDuration().getSeconds();\n            let on_power = interval.getIntervals()[0].getIntensity().getValue();\n            let off_power = interval.getIntervals()[1].getIntensity().getValue();\n            this.content += `\\t\\t<IntervalsT Repeat=\"${repeat_count}\" OnDuration=\"${on_duration}\" OffDuration=\"${off_duration}\" OnPower=\"${on_power}\" OffPower=\"${off_power}\" />\\n`;\n        }\n        else {\n            super.visitRepeatInterval(interval);\n        }\n    }\n    getContent() {\n        return this.content;\n    }\n}\nexports.ZwiftDataVisitor = ZwiftDataVisitor;\nclass MRCCourseDataVisitor extends BaseVisitor {\n    constructor(fileName) {\n        super();\n        this.courseData = \"\";\n        this.time = 0;\n        this.idx = 0;\n        this.fileName = \"\";\n        this.perfPRODescription = \"\";\n        this.content = \"\";\n        this.repeatIntervals = [];\n        this.repeatIteration = [];\n        this.fileName = fileName;\n    }\n    processCourseData(intensity, durationInSeconds) {\n        this.time += durationInSeconds;\n        this.courseData += (this.time / 60) + \"\\t\" + Math.round(intensity.getValue() * 100) + \"\\n\";\n    }\n    processTitle(interval) {\n        var title = interval.getTitle();\n        if (title.length == 0) {\n            title = WorkoutTextVisitor.getIntervalTitle(interval);\n        }\n        var suffix = \"\";\n        if (this.repeatIntervals.length > 0) {\n            console.assert(this.repeatIteration.length > 0);\n            var iteration = 1 + this.repeatIteration[this.repeatIteration.length - 1];\n            var total = this.repeatIntervals[this.repeatIntervals.length - 1].getRepeatCount();\n            suffix = \" | \" + iteration + \" of \" + total;\n        }\n        this.perfPRODescription += \"Desc\" + this.idx++ + \"=\" + title + suffix + \"\\n\";\n    }\n    visitSimpleInterval(interval) {\n        this.processCourseData(interval.getIntensity(), 0);\n        this.processCourseData(interval.getIntensity(), interval.getWorkDuration().getSeconds());\n        this.processTitle(interval);\n    }\n    visitRampBuildInterval(interval) {\n        this.processCourseData(interval.getStartIntensity(), 0);\n        this.processCourseData(interval.getEndIntensity(), interval.getWorkDuration().getSeconds());\n        this.processTitle(interval);\n    }\n    visitRepeatInterval(interval) {\n        this.repeatIntervals.push(interval);\n        for (var i = 0; i < interval.getRepeatCount(); i++) {\n            this.repeatIteration.push(i);\n            this.visitArrayInterval(interval);\n            this.repeatIteration.pop();\n        }\n        this.repeatIntervals.pop();\n    }\n    finalize() {\n        this.content = \"\";\n        this.content += \"[COURSE HEADER]\\n\";\n        this.content += \"VERSION=2\\n\";\n        this.content += \"UNITS=ENGLISH\\n\";\n        this.content += (0, core_1.stringFormat)(\"FILE NAME={0}\\n\", this.fileName);\n        this.content += \"MINUTES\\tPERCENT\\n\";\n        this.content += \"[END COURSE HEADER]\\n\";\n        this.content += \"[COURSE DATA]\\n\";\n        this.content += this.courseData;\n        this.content += \"[END COURSE DATA]\\n\";\n        this.content += \"[PERFPRO DESCRIPTIONS]\\n\";\n        this.content += this.perfPRODescription;\n        this.content += \"[END PERFPRO DESCRIPTIONS]\\n\";\n    }\n    getContent() {\n        return this.content;\n    }\n}\nexports.MRCCourseDataVisitor = MRCCourseDataVisitor;\nclass PPSMRXCourseDataVisitor extends BaseVisitor {\n    constructor(title) {\n        super();\n        this.title = \"\";\n        this.content = \"\";\n        this.groupId = 1;\n        this.currentRepeatIteration = [];\n        this.repeatCountMax = [];\n        this.title = title;\n    }\n    getTitlePretty(interval) {\n        var title = interval.getTitle();\n        if (title.length == 0) {\n            title = WorkoutTextVisitor.getIntervalTitle(interval);\n        }\n        if (this.isGroupActive()) {\n            title += \" (\" + (this.currentRepeatIteration[this.currentRepeatIteration.length - 1] + 1) + \"/\" + this.repeatCountMax[this.repeatCountMax.length - 1] + \")\";\n        }\n        return title;\n    }\n    getGroupId() {\n        if (this.isGroupActive()) {\n            return this.groupId;\n        }\n        else {\n            return 0;\n        }\n    }\n    getMode(interval) {\n        if (interval.getIntensity().getOriginalUnit() == core_1.IntensityUnit.FreeRide) {\n            return \"T\";\n        }\n        else {\n            return \"M\";\n        }\n    }\n    getIntensity(interval) {\n        if (interval.getIntensity().getOriginalUnit() == core_1.IntensityUnit.FreeRide) {\n            return 0;\n        }\n        else {\n            return Math.round(interval.getIntensity().getValue() * 100);\n        }\n    }\n    visitSimpleInterval(interval) {\n        this.content += (0, core_1.stringFormat)(`\\t\\t[\"{0}\",{1},{2},{2},\"{3}\",1,{4},0,90],\\n`, this.getTitlePretty(interval), interval.getWorkDuration().getSeconds(), this.getIntensity(interval), this.getMode(interval), this.getGroupId());\n    }\n    visitRampBuildInterval(interval) {\n        this.content += (0, core_1.stringFormat)(`\\t\\t[\"{0}\",{1},{2},{3},\"M\",1,{3},0,90],\\n`, this.getTitlePretty(interval), interval.getWorkDuration().getSeconds(), Math.round(interval.getStartIntensity().getValue() * 100), Math.round(interval.getEndIntensity().getValue() * 100), this.getGroupId());\n    }\n    visitRepeatInterval(interval) {\n        this.repeatCountMax.push(interval.getRepeatCount());\n        for (var i = 0; i < interval.getRepeatCount(); i++) {\n            this.currentRepeatIteration.push(i);\n            this.visitArrayInterval(interval);\n            this.currentRepeatIteration.pop();\n        }\n        this.repeatCountMax.pop();\n        this.groupId++;\n    }\n    isGroupActive() {\n        return this.repeatCountMax.length > 0;\n    }\n    finalize() {\n        if (this.content.length > 0) {\n            this.content = this.content.substr(0, this.content.length - 2);\n            this.content += \"\\n\";\n        }\n        this.content = (0, core_1.stringFormat)(`{\n\"type\":\"json\",\n\"createdby\":\"PerfPRO Studio v5.80.25\",\n\"version\":5.00,\n\"name\":\"{0}\",\n\"workoutType\":\"\",\n\"comments\":\"\",\n\"isLocked\":0,\n\"videoFile\":\"\",\n\"showCountDown\":0,\n\"showStep\":0,\n\"movieMode\":0,\n\"startMinute\":0,\n\"set_fields\":[\"description\",\"seconds\",\"start\",\"finish\",\"mode\",\"intervals\",\"group\",\"autolap\",\"targetcad\"],\n\"sets\":[\n`, this.title) + this.content +\n            `\t]\n}`;\n    }\n    getContent() {\n        return this.content;\n    }\n}\nexports.PPSMRXCourseDataVisitor = PPSMRXCourseDataVisitor;\nclass WorkoutTextVisitor {\n    constructor(userProfile, sportType, outputUnit, roundValues) {\n        this.result = \"\";\n        this.userProfile = null;\n        this.sportType = core_1.SportType.Unknown;\n        this.outputUnit = core_1.IntensityUnit.Unknown;\n        this.disableEasyTitle = false;\n        this.roundValues = false;\n        core_1.PreconditionsCheck.assertIsNumber(sportType, \"sportType\");\n        core_1.PreconditionsCheck.assertIsNumber(outputUnit, \"outputUnit\");\n        this.userProfile = userProfile;\n        this.sportType = sportType;\n        this.outputUnit = outputUnit;\n        this.roundValues = roundValues;\n    }\n    static getIntervalTitle(interval, userProfile = null, sportType = core_1.SportType.Unknown, outputUnit = core_1.IntensityUnit.Unknown, roundValues = true) {\n        var f = new WorkoutTextVisitor(userProfile, sportType, outputUnit, roundValues);\n        VisitorHelper.visitAndFinalize(f, interval);\n        return f.result;\n    }\n    visitCommentInterval(interval) {\n        this.result += this.getIntervalTitle(interval);\n    }\n    visitRestInterval(interval) {\n        if (interval.getIntensity().isEasy()) {\n            let title = this.getIntervalTitle(interval);\n            if (title == null || title.trim().length == 0) {\n                title = \"easy\";\n            }\n            this.result += interval.getWorkDuration().toStringShort(this.sportType == core_1.SportType.Swim) + \" \" + title;\n        }\n        else {\n            this.result += interval.getWorkDuration().toStringShort(this.sportType == core_1.SportType.Swim) + \" @ \" + this.getIntensityPretty(interval.getIntensity());\n        }\n    }\n    visitArrayInterval(interval) {\n        this.visitArrayIntervalInternal(interval, false);\n    }\n    visitArrayIntervalInternal(interval, always_add_parenthesis) {\n        var length = interval.getIntervals().length;\n        var firstInterval = interval.getIntervals()[0];\n        var lastInterval = interval.getIntervals()[length - 1];\n        var isRestIncluded = lastInterval.getIntensity().getValue() <\n            firstInterval.getIntensity().getValue() &&\n            !(lastInterval instanceof core_1.CommentInterval);\n        if (length == 2) {\n            if (isRestIncluded) {\n                var oldFlag = this.disableEasyTitle;\n                this.disableEasyTitle = true;\n                VisitorHelper.visit(this, firstInterval);\n                this.disableEasyTitle = oldFlag;\n                this.result += \" - \";\n                this.visitRestInterval(lastInterval);\n            }\n            else {\n                if (always_add_parenthesis) {\n                    this.result += \"(\";\n                }\n                VisitorHelper.visit(this, firstInterval);\n                this.result += \" - \";\n                VisitorHelper.visit(this, lastInterval);\n                if (always_add_parenthesis) {\n                    this.result += \")\";\n                }\n            }\n        }\n        else {\n            if (isRestIncluded) {\n                this.result += \"(\";\n                for (var i = 0; i < length - 1; i++) {\n                    var subInterval = interval.getIntervals()[i];\n                    VisitorHelper.visit(this, subInterval);\n                    this.result += \", \";\n                }\n                this.result = this.result.slice(0, this.result.length - 2);\n                this.result += \") - w/ \";\n                this.visitRestInterval(lastInterval);\n            }\n            else {\n                if (length >= 2) {\n                    this.result += \"(\";\n                }\n                for (var i = 0; i < length; i++) {\n                    var subInterval = interval.getIntervals()[i];\n                    VisitorHelper.visit(this, subInterval);\n                    this.result += \", \";\n                }\n                this.result = this.result.slice(0, this.result.length - 2);\n                if (length >= 2) {\n                    this.result += \")\";\n                }\n            }\n        }\n    }\n    visitRepeatInterval(interval) {\n        this.result += interval.getRepeatCount() + \" x \";\n        this.visitArrayIntervalInternal(interval, true);\n    }\n    visitRampBuildInterval(interval) {\n        if (interval.getStartIntensity().isEasy()) {\n            this.result += interval.getWorkDuration().toStringShort(this.sportType == core_1.SportType.Swim) + \" warm up to \" + this.getIntensityPretty(interval.getEndIntensity());\n        }\n        else {\n            if (interval.getStartIntensity().getValue() < interval.getEndIntensity().getValue()) {\n                this.result += interval.getWorkDuration().toStringShort(this.sportType == core_1.SportType.Swim) + \" build from \" + this.getIntensityPretty(interval.getStartIntensity()) + \" to \" + this.getIntensityPretty(interval.getEndIntensity());\n            }\n            else {\n                this.result += interval.getWorkDuration().toStringShort(this.sportType == core_1.SportType.Swim) + \" warm down from \" + this.getIntensityPretty(interval.getStartIntensity()) + \" to \" + this.getIntensityPretty(interval.getEndIntensity());\n            }\n        }\n    }\n    visitSimpleInterval(interval) {\n        this.result += interval.getWorkDuration().toStringShort(this.sportType == core_1.SportType.Swim);\n        let title = this.getIntervalTitle(interval);\n        if (title != null && title.length > 0) {\n            this.result += \" \" + title;\n        }\n        if (interval.getIntensity().getOriginalUnit() == core_1.IntensityUnit.FreeRide) {\n            return;\n        }\n        let handled = false;\n        if (core_1.Intensity.equals(interval.getIntensity(), core_1.Intensity.ZeroIntensity)) {\n            if (title == null) {\n                this.result += \" rest\";\n            }\n            handled = true;\n        }\n        else if (core_1.Intensity.equals(interval.getIntensity(), core_1.Intensity.EasyIntensity)) {\n            if (title == null) {\n                this.result += \" easy\";\n            }\n            handled = true;\n        }\n        if (handled && interval.getRestDuration().getSeconds() > 0) {\n            this.result += \" w/ \" + interval.getRestDuration().toStringShort(this.sportType == core_1.SportType.Swim) + \" rest\";\n        }\n        if (!handled) {\n            if (this.sportType == core_1.SportType.Swim && this.outputUnit != core_1.IntensityUnit.Watts) {\n                var total_duration = interval.getTotalDuration();\n                if (total_duration.getSeconds() != interval.getWorkDuration().getSeconds()) {\n                    this.result += \" on \" + interval.getWorkDuration().toTimeStringShort() + \" off \" + total_duration.toTimeStringShort();\n                }\n                else {\n                    this.result += \" on \" + interval.getWorkDuration().toTimeStringShort();\n                }\n                if (!((interval.getWorkDuration().getUnit() == core_1.DistanceUnit.Yards ||\n                    interval.getWorkDuration().getUnit() == core_1.DistanceUnit.Meters) &&\n                    interval.getWorkDuration().getValue() == 100) &&\n                    this.outputUnit != core_1.IntensityUnit.IF) {\n                    this.result += \" (\" + this.getIntensityPretty(interval.getIntensity()) + \")\";\n                }\n            }\n            else {\n                this.result += \" @ \" + this.getIntensityPretty(interval.getIntensity());\n                if (interval.getRestDuration().getSeconds() > 0) {\n                    this.result += \" w/ \" + interval.getRestDuration().toStringShort(false) + \" rest\";\n                    return;\n                }\n            }\n        }\n    }\n    getIntensityPretty(intensity) {\n        if (core_1.Intensity.equals(intensity, core_1.Intensity.ZeroIntensity)) {\n            return \"rest\";\n        }\n        else if (core_1.Intensity.equals(intensity, core_1.Intensity.EasyIntensity)) {\n            return \"easy\";\n        }\n        if (this.outputUnit == core_1.IntensityUnit.HeartRate) {\n            var bpm = 0;\n            if (this.sportType == core_1.SportType.Bike) {\n                bpm = this.userProfile.bike_ftp / this.userProfile.efficiency_factor;\n            }\n            else if (this.sportType == core_1.SportType.Run) {\n                bpm = (1760 * this.userProfile.getRunningTPaceMph()) / (60 * this.userProfile.efficiency_factor);\n            }\n            return Math.round(intensity.getValue() * bpm) + \"bpm\";\n        }\n        if (this.outputUnit == core_1.IntensityUnit.FreeRide) {\n            return \"Free Ride\";\n        }\n        if (this.outputUnit == core_1.IntensityUnit.Unknown ||\n            this.sportType == core_1.SportType.Unknown ||\n            this.outputUnit == core_1.IntensityUnit.IF) {\n            return intensity.toString();\n        }\n        if (this.outputUnit == core_1.IntensityUnit.Watts) {\n            let ftp = 0;\n            if (this.sportType == core_1.SportType.Bike) {\n                ftp = this.userProfile.bike_ftp;\n            }\n            else if (this.sportType == core_1.SportType.Swim) {\n                ftp = this.userProfile.swim_ftp;\n            }\n            else {\n                console.assert(false, (0, core_1.stringFormat)(\"Invalid sportType {0}\", this.sportType));\n            }\n            let value = Math.round(ftp * intensity.getValue());\n            if (this.roundValues) {\n                return core_1.FormatterHelper.roundNumberUp(value, 5) + \"w\";\n            }\n            else {\n                return value + \"w\";\n            }\n        }\n        if (this.sportType == core_1.SportType.Bike) {\n            return intensity.toString();\n        }\n        else if (this.sportType == core_1.SportType.Run) {\n            var minMi = this.userProfile.getRunningPaceMinMi(intensity);\n            var outputValue = core_1.IntensityUnitHelper.convertTo(minMi, core_1.IntensityUnit.MinMi, this.outputUnit);\n            if (this.outputUnit == core_1.IntensityUnit.Kmh || this.outputUnit == core_1.IntensityUnit.Mph) {\n                return core_1.MyMath.round10(outputValue, -1) + core_1.IntensityUnitHelper.toString(this.outputUnit);\n            }\n            else {\n                if (this.outputUnit == core_1.IntensityUnit.MinMi || this.outputUnit == core_1.IntensityUnit.MinKm) {\n                    let roundIncrement = 5;\n                    if (!this.roundValues) {\n                        roundIncrement = 0;\n                    }\n                    return core_1.FormatterHelper.formatNumber(outputValue, 60, \":\", core_1.IntensityUnitHelper.toString(this.outputUnit), roundIncrement);\n                }\n                else {\n                    let pace_per_400m = this.userProfile.getRunningPace(intensity, this.outputUnit);\n                    return core_1.FormatterHelper.formatNumber(pace_per_400m, 60, \":\", \"\") + core_1.IntensityUnitHelper.toString(this.outputUnit);\n                }\n            }\n        }\n        else if (this.sportType == core_1.SportType.Swim) {\n            if (this.outputUnit == core_1.IntensityUnit.Mph) {\n                return core_1.MyMath.round10(this.userProfile.getSwimPaceMph(intensity), -1) + core_1.IntensityUnitHelper.toString(this.outputUnit);\n            }\n            else if (this.outputUnit == core_1.IntensityUnit.Per100Yards || this.outputUnit == core_1.IntensityUnit.Per100Meters || this.outputUnit == core_1.IntensityUnit.Per25Yards) {\n                var swim_pace_per_100 = this.userProfile.getSwimPace(this.outputUnit, intensity);\n                return core_1.FormatterHelper.formatNumber(swim_pace_per_100, 60, \":\", \"\") + core_1.IntensityUnitHelper.toString(this.outputUnit);\n            }\n            else if (this.outputUnit == core_1.IntensityUnit.OffsetSeconds) {\n                console.assert(intensity.getOriginalUnit() == core_1.IntensityUnit.OffsetSeconds);\n                if (intensity.getOriginalValue() > 0) {\n                    return \"+\" + intensity.getOriginalValue();\n                }\n                else {\n                    return \"\" + intensity.getOriginalValue();\n                }\n            }\n            else {\n                console.assert(false, (0, core_1.stringFormat)(\"Invalid output unit {0}\", this.outputUnit));\n                return \"\";\n            }\n        }\n        else {\n            console.assert(this.sportType == core_1.SportType.Other);\n            return \"\";\n        }\n    }\n    getIntervalTitle(interval) {\n        let title = interval.getTitle();\n        if (title == null || title.length == 0) {\n            return null;\n        }\n        return title;\n    }\n    finalize() {\n    }\n}\nexports.WorkoutTextVisitor = WorkoutTextVisitor;\nclass UnparserVisitor {\n    constructor() {\n        this.output = \"\";\n        this.level = 0;\n    }\n    getDurationPretty(d) {\n        if (core_1.DurationUnitHelper.isDistance(d.getUnit())) {\n            return d.toString();\n        }\n        return d.toTimeStringLong();\n    }\n    getIntensityPretty(i) {\n        if (i.getOriginalUnit() == core_1.IntensityUnit.OffsetSeconds) {\n            return \"+\" + i.getOriginalValue() + \"s\";\n        }\n        else if (i.getOriginalUnit() == core_1.IntensityUnit.FreeRide) {\n            return \"*\";\n        }\n        else {\n            return core_1.MyMath.round10(i.getValue() * 100, -1).toString();\n        }\n    }\n    getTitlePretty(i) {\n        if (i.getTitle().length != 0) {\n            return \", \" + i.getTitle();\n        }\n        else {\n            return \"\";\n        }\n    }\n    visitCommentInterval(interval) {\n        this.output += (0, core_1.stringFormat)(\"\\\"{0}\\\"\", interval.getTitle());\n        this.addSeparator();\n    }\n    visitSimpleInterval(interval) {\n        let params = [];\n        let duration_pretty = this.getDurationPretty(interval.getWorkDuration());\n        console.assert(duration_pretty.length > 0, \"\" + interval.getWorkDuration());\n        params.push(duration_pretty);\n        if (!interval.getIntensity().isEasy()) {\n            let intensity_pretty = this.getIntensityPretty(interval.getIntensity());\n            params.push(intensity_pretty);\n            console.assert(intensity_pretty.length > 0, \"\" + interval.getIntensity());\n        }\n        if (interval.getTitle().length != 0) {\n            params.push(interval.getTitle());\n        }\n        if (interval.getRestDuration().getValue() != 0) {\n            let duration_rest_pretty = this.getDurationPretty(interval.getRestDuration());\n            console.assert(duration_rest_pretty.length > 0, \"\" + interval.getRestDuration());\n            params.push(duration_rest_pretty);\n        }\n        this.output += (0, core_1.stringFormat)(\"({0})\", params.join(\", \"));\n        this.addSeparator();\n    }\n    visitRampBuildInterval(interval) {\n        this.level++;\n        let params = [];\n        params.push(this.getDurationPretty(interval.getWorkDuration()));\n        params.push(this.getIntensityPretty(interval.getStartIntensity()));\n        params.push(this.getIntensityPretty(interval.getEndIntensity()));\n        if (interval.getTitle().length != 0) {\n            params.push(interval.getTitle());\n        }\n        if (interval.getRestDuration().getValue() != 0) {\n            let duration_rest_pretty = this.getDurationPretty(interval.getRestDuration());\n            console.assert(duration_rest_pretty.length > 0, \"\" + interval.getRestDuration());\n            params.push(duration_rest_pretty);\n        }\n        this.output += (0, core_1.stringFormat)(\"({0})\", params.join(\", \"));\n        this.level--;\n        this.addSeparator();\n    }\n    visitRepeatInterval(interval) {\n        this.level++;\n        this.output += interval.getRepeatCount().toString();\n        this.output += \"[\";\n        for (let i = 0; i < interval.getIntervals().length; i++) {\n            VisitorHelper.visit(this, interval.getIntervals()[i]);\n        }\n        this.trimSeparator();\n        this.output += \"]\";\n        this.level--;\n        this.addSeparator();\n    }\n    visitArrayInterval(interval) {\n        this.level++;\n        if (this.level > 1) {\n            this.output += \"[\";\n        }\n        for (var i = 0; i < interval.getIntervals().length; i++) {\n            VisitorHelper.visit(this, interval.getIntervals()[i]);\n        }\n        this.trimSeparator();\n        if (this.level > 1) {\n            this.output += \"]\";\n        }\n        this.level--;\n        this.addSeparator();\n    }\n    finalize() {\n        this.trimNewLine();\n        this.trimSeparator();\n        this.trimNewLine();\n        if (this.output[0] == \"[\" && this.output[this.output.length - 1] == \"]\") {\n            this.output = this.output.slice(1, this.output.length - 1);\n        }\n    }\n    addSeparator() {\n        if (this.level == 1) {\n            this.output += \"\\n\";\n            return;\n        }\n        this.output += \", \";\n    }\n    trimSeparator() {\n        while (this.output.endsWith(\", \")) {\n            this.output = this.output.slice(0, this.output.length - 2);\n        }\n        while (this.output.endsWith(\",\")) {\n            this.output = this.output.slice(0, this.output.length - 1);\n        }\n    }\n    trimNewLine() {\n        while (this.output.endsWith(\"\\n\")) {\n            this.output = this.output.slice(0, this.output.length - 1);\n        }\n    }\n}\nexports.UnparserVisitor = UnparserVisitor;\nclass AbsoluteTimeInterval {\n    constructor(begin, end, interval, title) {\n        this.begin_ = begin;\n        this.end_ = end;\n        this.interval_ = interval;\n        this.title_ = title;\n    }\n    getBeginSeconds() {\n        return this.begin_;\n    }\n    getEndSeconds() {\n        return this.end_;\n    }\n    getDurationSeconds() {\n        return this.end_ - this.begin_;\n    }\n    getInterval() {\n        return this.interval_;\n    }\n    getTitle() {\n        return this.title_;\n    }\n}\nexports.AbsoluteTimeInterval = AbsoluteTimeInterval;\nclass AbsoluteTimeIntervalVisitor extends BaseVisitor {\n    constructor(of) {\n        super();\n        this.time_ = 0;\n        this.data_ = [];\n        this.repeat_stack_ = [];\n        this.iteration_stack_ = [];\n        this.of_ = of;\n    }\n    round(value) {\n        return core_1.MyMath.round10(value, -1);\n    }\n    getTitle(title, intensities) {\n        let intensity_pretty = intensities.map(function (intensity) {\n            if (this.of_.sport_type == core_1.SportType.Swim) {\n                return this.round(intensity.getValue() * this.of_.user_profile.swim_ftp) + \"w\";\n            }\n            else if (this.of_.sport_type == core_1.SportType.Bike) {\n                return this.round(intensity.getValue() * this.of_.user_profile.bike_ftp) + \"w\";\n            }\n            else if (this.of_.sport_type == core_1.SportType.Run) {\n                return this.round(intensity.getValue() * this.of_.user_profile.getRunnintTPaceMph()) + \"mph\";\n            }\n            else {\n                return intensity.toString();\n            }\n        }.bind(this));\n        if (core_1.Intensity.equals(intensities[0], core_1.Intensity.EasyIntensity)) {\n            title += \" easy\";\n        }\n        else if (core_1.Intensity.equals(intensities[0], core_1.Intensity.ZeroIntensity)) {\n            title += \" rest\";\n        }\n        else {\n            title += \" \" + intensity_pretty.join(\" - \");\n        }\n        if (this.repeat_stack_.length > 0) {\n            console.assert(this.repeat_stack_.length == this.iteration_stack_.length);\n            title += \" \" + this.iteration_stack_[this.iteration_stack_.length - 1] + \"/\" + this.repeat_stack_[this.repeat_stack_.length - 1];\n        }\n        return title.trim();\n    }\n    visitSimpleInterval(interval) {\n        var duration_seconds = interval.getWorkDuration().getSeconds();\n        this.data_.push(new AbsoluteTimeInterval(this.time_, this.time_ + duration_seconds, interval, this.getTitle(interval.getTitle(), [interval.getIntensity()])));\n        this.time_ += duration_seconds;\n        this.visitRestInterval(interval);\n    }\n    visitRampBuildInterval(interval) {\n        var duration_seconds = interval.getWorkDuration().getSeconds();\n        this.data_.push(new AbsoluteTimeInterval(this.time_, this.time_ + duration_seconds, interval, this.getTitle(interval.getTitle(), [interval.getStartIntensity(), interval.getEndIntensity()])));\n        this.time_ += duration_seconds;\n        this.visitRestInterval(interval);\n    }\n    visitRestInterval(interval) {\n        if (interval.getRestDuration().getSeconds() > 0) {\n            let rest_seconds = interval.getRestDuration().getSeconds();\n            this.data_.push(new AbsoluteTimeInterval(this.time_, this.time_ + rest_seconds, interval, this.getTitle(\"\", [core_1.Intensity.ZeroIntensity])));\n            this.time_ += rest_seconds;\n        }\n    }\n    getIntervalArray() {\n        return this.data_;\n    }\n    visitRepeatInterval(interval) {\n        this.repeat_stack_.push(interval.getRepeatCount());\n        for (let i = 0; i < interval.getRepeatCount(); i++) {\n            this.iteration_stack_.push(i + 1);\n            for (let j = 0; j < interval.getIntervals().length; j++) {\n                VisitorHelper.visit(this, interval.getIntervals()[j]);\n            }\n            this.iteration_stack_.pop();\n        }\n        this.repeat_stack_.pop();\n    }\n}\nexports.AbsoluteTimeIntervalVisitor = AbsoluteTimeIntervalVisitor;\nclass TSSCalculator {\n    static compute(interval) {\n        let np = new NPVisitor();\n        VisitorHelper.visitAndFinalize(np, interval);\n        let avg = interval.getIntensity().getValue() * exports.FTP;\n        let s = interval.getTotalDuration().getSeconds();\n        return core_1.MyMath.round10((s * np.getIF() * exports.FTP * avg) / (36 * exports.FTP * exports.FTP), -1);\n    }\n}\nexports.TSSCalculator = TSSCalculator;\nclass WorkoutFileGenerator {\n    constructor(workoutTitle, intervals) {\n        this.workoutTitle = workoutTitle;\n        this.intervals = intervals;\n    }\n    getMRCFile() {\n        var dataVisitor = new MRCCourseDataVisitor(this.getMRCFileName());\n        VisitorHelper.visitAndFinalize(dataVisitor, this.intervals);\n        return dataVisitor.getContent();\n    }\n    getZWOFile() {\n        var zwift = new ZwiftDataVisitor(this.getBaseFileName());\n        VisitorHelper.visitAndFinalize(zwift, this.intervals);\n        return zwift.getContent();\n    }\n    getPPSMRXFile() {\n        var zwift = new PPSMRXCourseDataVisitor(this.getBaseFileName());\n        VisitorHelper.visitAndFinalize(zwift, this.intervals);\n        return zwift.getContent();\n    }\n    getZWOFileName() {\n        return this.getBaseFileName() + \".zwo\";\n    }\n    getMRCFileName() {\n        return this.getBaseFileName() + \".mrc\";\n    }\n    getPPSMRXFileName() {\n        return this.getBaseFileName() + \".ppsmrx\";\n    }\n    getBaseFileName() {\n        if (typeof (this.workoutTitle) != 'undefined' && this.workoutTitle.length != 0) {\n            return this.workoutTitle;\n        }\n        return \"Untitled\";\n    }\n}\nexports.WorkoutFileGenerator = WorkoutFileGenerator;\n\n\n//# sourceURL=webpack://workout_planner/./src/visitor.ts?\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;